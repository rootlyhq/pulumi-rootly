{
    "name": "rootly",
    "displayName": "Rootly",
    "description": "A Pulumi package for creating and managing Rootly cloud resources.",
    "keywords": [
        "pulumi",
        "rootly",
        "category/cloud"
    ],
    "homepage": "https://rootly.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`rootly` Terraform Provider](https://github.com/rootlyhq/terraform-provider-rootly).",
    "repository": "https://github.com/rootlyhq/pulumi-rootly",
    "logoUrl": "https://raw.githubusercontent.com/rootlyhq/pulumi-rootly/v0.0.3/rootly.svg",
    "pluginDownloadURL": "https://github.com/rootlyhq/pulumi-rootly/releases/v${VERSION}",
    "publisher": "Rootly",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiHost": {
                "type": "string",
                "description": "The Rootly API host. Defaults to https://api.rootly.com\n"
            },
            "apiToken": {
                "type": "string",
                "description": "The Rootly API Token. Generate it from your account at https://rootly.com/account\n"
            }
        }
    },
    "types": {
        "rootly:index/DashboardPanelParams:DashboardPanelParams": {
            "properties": {
                "datasets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/DashboardPanelParamsDataset:DashboardPanelParamsDataset"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "display": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "display"
            ]
        },
        "rootly:index/DashboardPanelParamsDataset:DashboardPanelParamsDataset": {
            "properties": {
                "aggregate": {
                    "$ref": "#/types/rootly:index/DashboardPanelParamsDatasetAggregate:DashboardPanelParamsDatasetAggregate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "collection": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/DashboardPanelParamsDatasetFilter:DashboardPanelParamsDatasetFilter"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "collection"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "collection",
                        "groupBy",
                        "name"
                    ]
                }
            }
        },
        "rootly:index/DashboardPanelParamsDatasetAggregate:DashboardPanelParamsDatasetAggregate": {
            "properties": {
                "cumulative": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cumulative",
                "key",
                "operation"
            ]
        },
        "rootly:index/DashboardPanelParamsDatasetFilter:DashboardPanelParamsDatasetFilter": {
            "properties": {
                "operation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/DashboardPanelParamsDatasetFilterRule:DashboardPanelParamsDatasetFilterRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operation"
            ]
        },
        "rootly:index/DashboardPanelParamsDatasetFilterRule:DashboardPanelParamsDatasetFilterRule": {
            "properties": {
                "condition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "condition",
                "key",
                "operation",
                "value"
            ]
        },
        "rootly:index/WorkflowActionItemTriggerParams:WorkflowActionItemTriggerParams": {
            "properties": {
                "incidentActionItemCondition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentActionItemConditionGroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentActionItemConditionKind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentActionItemConditionPriority": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentActionItemConditionStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentActionItemKinds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentActionItemPriorities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentActionItemStatuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentCondition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionAcknowledgedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionDetectedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionEnvironment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionFunctionality": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionGroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionIncidentRoles": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionIncidentType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionKind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionMitigatedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionResolvedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionService": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionSeverity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionStartedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionSummary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionVisibility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionalInactivity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentKinds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentStatuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentVisibilities": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggerType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowAlertTriggerParams:WorkflowAlertTriggerParams": {
            "properties": {
                "alertCondition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertConditionLabel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertConditionLabelUseRegexp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertConditionPayload": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertConditionPayloadUseRegexp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertConditionSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertConditionSourceUseRegexp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertLabels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertPayloads": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertQueryPayload": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggerType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowIncidentTriggerParams:WorkflowIncidentTriggerParams": {
            "properties": {
                "incidentCondition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionAcknowledgedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionDetectedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionEnvironment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionFunctionality": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionGroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionIncidentRoles": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionIncidentType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionKind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionMitigatedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionResolvedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionService": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionSeverity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionStartedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionSummary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionVisibility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionalInactivity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentKinds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentStatuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentVisibilities": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggerType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowPostMortemTriggerParams:WorkflowPostMortemTriggerParams": {
            "properties": {
                "incidentCondition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionEnvironment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionFunctionality": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionGroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionIncidentType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionKind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionService": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionSeverity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionVisibility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentKinds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentPostMortemCondition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentPostMortemConditionCause": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentPostMortemConditionStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentStatuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentVisibilities": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggerType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowPulseTriggerParams:WorkflowPulseTriggerParams": {
            "properties": {
                "pulseCondition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulseConditionLabel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulseConditionLabelUseRegexp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulseConditionPayload": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulseConditionPayloadUseRegexp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulseConditionSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulseConditionSourceUseRegexp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulseLabels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulsePayloads": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulseQueryPayload": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulseSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggerType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowTaskAddActionItemTaskParams:WorkflowTaskAddActionItemTaskParams": {
            "properties": {
                "assignedToUserId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToIncidentTimeline": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAddActionItemTaskParamsPostToSlackChannel:WorkflowTaskAddActionItemTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "priority",
                "status",
                "summary"
            ]
        },
        "rootly:index/WorkflowTaskAddActionItemTaskParamsPostToSlackChannel:WorkflowTaskAddActionItemTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskAddRoleTaskParams:WorkflowTaskAddRoleTaskParams": {
            "properties": {
                "assignedToUserId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentRoleId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "incidentRoleId"
            ]
        },
        "rootly:index/WorkflowTaskAddSlackBookmarkTaskParams:WorkflowTaskAddSlackBookmarkTaskParams": {
            "properties": {
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emoji": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "playbookId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "channel"
            ]
        },
        "rootly:index/WorkflowTaskAddTeamTaskParams:WorkflowTaskAddTeamTaskParams": {
            "properties": {
                "groupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "groupId"
            ]
        },
        "rootly:index/WorkflowTaskAddToTimelineTaskParams:WorkflowTaskAddToTimelineTaskParams": {
            "properties": {
                "event": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel:WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "event"
            ]
        },
        "rootly:index/WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel:WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskArchiveSlackChannelsTaskParams:WorkflowTaskArchiveSlackChannelsTaskParams": {
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskArchiveSlackChannelsTaskParamsChannel:WorkflowTaskArchiveSlackChannelsTaskParamsChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "channels"
            ]
        },
        "rootly:index/WorkflowTaskArchiveSlackChannelsTaskParamsChannel:WorkflowTaskArchiveSlackChannelsTaskParamsChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskAttachDatadogDashboardsTaskParams:WorkflowTaskAttachDatadogDashboardsTaskParams": {
            "properties": {
                "dashboards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard:WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel:WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dashboards"
            ]
        },
        "rootly:index/WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard:WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel:WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskAutoAssignRoleOpsgenieTaskParams:WorkflowTaskAutoAssignRoleOpsgenieTaskParams": {
            "properties": {
                "incidentRoleId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schedule": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "incidentRoleId",
                "schedule"
            ]
        },
        "rootly:index/WorkflowTaskAutoAssignRolePagerdutyTaskParams:WorkflowTaskAutoAssignRolePagerdutyTaskParams": {
            "properties": {
                "escalationPolicy": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentRoleId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schedule": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "incidentRoleId"
            ]
        },
        "rootly:index/WorkflowTaskAutoAssignRoleVictorOpsTaskParams:WorkflowTaskAutoAssignRoleVictorOpsTaskParams": {
            "properties": {
                "incidentRoleId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schedule": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "incidentRoleId",
                "schedule"
            ]
        },
        "rootly:index/WorkflowTaskCallPeopleTaskParams:WorkflowTaskCallPeopleTaskParams": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "phoneNumbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content",
                "name",
                "phoneNumbers"
            ]
        },
        "rootly:index/WorkflowTaskCreateAirtableTableRecordTaskParams:WorkflowTaskCreateAirtableTableRecordTaskParams": {
            "properties": {
                "baseKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tableName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "baseKey",
                "tableName"
            ]
        },
        "rootly:index/WorkflowTaskCreateAsanaSubtaskTaskParams:WorkflowTaskCreateAsanaSubtaskTaskParams": {
            "properties": {
                "assignUserEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "notes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentTaskId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "completion",
                "parentTaskId",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateAsanaTaskTaskParams:WorkflowTaskCreateAsanaTaskTaskParams": {
            "properties": {
                "assignUserEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateAsanaTaskTaskParamsProject:WorkflowTaskCreateAsanaTaskTaskParamsProject"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workspace": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "completion",
                "projects",
                "title",
                "workspace"
            ]
        },
        "rootly:index/WorkflowTaskCreateAsanaTaskTaskParamsProject:WorkflowTaskCreateAsanaTaskTaskParamsProject": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskCreateConfluencePageTaskParams:WorkflowTaskCreateConfluencePageTaskParams": {
            "properties": {
                "ancestor": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postMortemTemplateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "space": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "space",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateDatadogNotebookTaskParams:WorkflowTaskCreateDatadogNotebookTaskParams": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postMortemTemplateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "kind",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateDropboxPaperPageTaskParams:WorkflowTaskCreateDropboxPaperPageTaskParams": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentFolder": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postMortemTemplateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateGithubIssueTaskParams:WorkflowTaskCreateGithubIssueTaskParams": {
            "properties": {
                "body": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repository": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "repository",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateGoogleCalendarEventTaskParams:WorkflowTaskCreateGoogleCalendarEventTaskParams": {
            "properties": {
                "attendees": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "canGuestsInviteOthers": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "canGuestsModifyEvent": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "canGuestsSeeOtherGuests": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conferenceSolutionKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "daysUntilMeeting": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludeWeekends": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "meetingDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToIncidentTimeline": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sendUpdates": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeOfMeeting": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attendees",
                "daysUntilMeeting",
                "description",
                "meetingDuration",
                "summary",
                "timeOfMeeting"
            ]
        },
        "rootly:index/WorkflowTaskCreateGoogleDocsPageTaskParams:WorkflowTaskCreateGoogleDocsPageTaskParams": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "drive": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentFolder": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postMortemTemplateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateGoogleMeetingTaskParams:WorkflowTaskCreateGoogleMeetingTaskParams": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToIncidentTimeline": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel:WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "summary"
            ]
        },
        "rootly:index/WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel:WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskCreateIncidentTaskParams:WorkflowTaskCreateIncidentTaskParams": {
            "properties": {
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "functionalityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "private": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "severityId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateJiraIssueTaskParams:WorkflowTaskCreateJiraIssueTaskParams": {
            "properties": {
                "assignUserEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dueDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issueType": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reporterUserEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "issueType",
                "projectKey",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateJiraSubtaskTaskParams:WorkflowTaskCreateJiraSubtaskTaskParams": {
            "properties": {
                "assignUserEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dueDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentIssueId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reporterUserEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subtaskIssueType": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "parentIssueId",
                "projectKey",
                "subtaskIssueType",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateLinearIssueTaskParams:WorkflowTaskCreateLinearIssueTaskParams": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "state": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "team": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "state",
                "team",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateLinearSubtaskIssueTaskParams:WorkflowTaskCreateLinearSubtaskIssueTaskParams": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentIssueId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "state": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "parentIssueId",
                "state",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams:WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToIncidentTimeline": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel:WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "subject"
            ]
        },
        "rootly:index/WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel:WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskCreateNotionPageTaskParams:WorkflowTaskCreateNotionPageTaskParams": {
            "properties": {
                "parentPage": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postMortemTemplateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "parentPage"
            ]
        },
        "rootly:index/WorkflowTaskCreateServiceNowIncidentTaskParams:WorkflowTaskCreateServiceNowIncidentTaskParams": {
            "properties": {
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateShortcutStoryTaskParams:WorkflowTaskCreateShortcutStoryTaskParams": {
            "properties": {
                "archivation": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dueDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "project": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "archivation",
                "kind",
                "project",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateShortcutTaskTaskParams:WorkflowTaskCreateShortcutTaskTaskParams": {
            "properties": {
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentStoryId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "completion",
                "description",
                "parentStoryId"
            ]
        },
        "rootly:index/WorkflowTaskCreateTrelloCardTaskParams:WorkflowTaskCreateTrelloCardTaskParams": {
            "properties": {
                "archivation": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "board": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dueDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateTrelloCardTaskParamsLabel:WorkflowTaskCreateTrelloCardTaskParamsLabel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "list": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "board",
                "list",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateTrelloCardTaskParamsLabel:WorkflowTaskCreateTrelloCardTaskParamsLabel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskCreateWebexMeetingTaskParams:WorkflowTaskCreateWebexMeetingTaskParams": {
            "properties": {
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToIncidentTimeline": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel:WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "topic"
            ]
        },
        "rootly:index/WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel:WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskCreateZendeskTicketTaskParams:WorkflowTaskCreateZendeskTicketTaskParams": {
            "properties": {
                "comment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "kind",
                "subject"
            ]
        },
        "rootly:index/WorkflowTaskCreateZoomMeetingTaskParams:WorkflowTaskCreateZoomMeetingTaskParams": {
            "properties": {
                "autoRecording": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "createAsEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToIncidentTimeline": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel:WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "topic"
            ]
        },
        "rootly:index/WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel:WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskGetGithubCommitsTaskParams:WorkflowTaskGetGithubCommitsTaskParams": {
            "properties": {
                "branch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "githubRepositoryNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pastDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel:WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "branch",
                "pastDuration"
            ]
        },
        "rootly:index/WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel:WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskGetGitlabCommitsTaskParams:WorkflowTaskGetGitlabCommitsTaskParams": {
            "properties": {
                "branch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gitlabRepositoryNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pastDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel:WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "branch",
                "pastDuration"
            ]
        },
        "rootly:index/WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel:WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskGetPulsesTaskParams:WorkflowTaskGetPulsesTaskParams": {
            "properties": {
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pastDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskGetPulsesTaskParamsPostToSlackChannel:WorkflowTaskGetPulsesTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "pastDuration"
            ]
        },
        "rootly:index/WorkflowTaskGetPulsesTaskParamsPostToSlackChannel:WorkflowTaskGetPulsesTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskHTTPClientTaskParams:WorkflowTaskHTTPClientTaskParams": {
            "properties": {
                "body": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "params": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskHTTPClientTaskParamsPostToSlackChannel:WorkflowTaskHTTPClientTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "succeedOnStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "succeedOnStatus"
            ]
        },
        "rootly:index/WorkflowTaskHTTPClientTaskParamsPostToSlackChannel:WorkflowTaskHTTPClientTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskInviteToSlackChannelOpsgenieTaskParams:WorkflowTaskInviteToSlackChannelOpsgenieTaskParams": {
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schedule": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "schedule"
            ]
        },
        "rootly:index/WorkflowTaskInviteToSlackChannelPagerdutyTaskParams:WorkflowTaskInviteToSlackChannelPagerdutyTaskParams": {
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "escalationPolicy": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schedule": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowTaskInviteToSlackChannelTaskParams:WorkflowTaskInviteToSlackChannelTaskParams": {
            "properties": {
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slackUserGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup:WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slackUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelTaskParamsSlackUser:WorkflowTaskInviteToSlackChannelTaskParamsSlackUser"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "channel"
            ]
        },
        "rootly:index/WorkflowTaskInviteToSlackChannelTaskParamsSlackUser:WorkflowTaskInviteToSlackChannelTaskParamsSlackUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup:WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskInviteToSlackChannelVictorOpsTaskParams:WorkflowTaskInviteToSlackChannelVictorOpsTaskParams": {
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schedule": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "schedule"
            ]
        },
        "rootly:index/WorkflowTaskPageOpsgenieOnCallRespondersTaskParams:WorkflowTaskPageOpsgenieOnCallRespondersTaskParams": {
            "properties": {
                "priority": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam:WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser:WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam:WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser:WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskPagePagerdutyOnCallRespondersTaskParams:WorkflowTaskPagePagerdutyOnCallRespondersTaskParams": {
            "properties": {
                "escalationPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy:WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urgency": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser:WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "service"
            ]
        },
        "rootly:index/WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy:WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser:WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskPageVictorOpsOnCallRespondersTaskParams:WorkflowTaskPageVictorOpsOnCallRespondersTaskParams": {
            "properties": {
                "escalationPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy:WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser:WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy:WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser:WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskPrintTaskParams:WorkflowTaskPrintTaskParams": {
            "properties": {
                "message": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "message"
            ]
        },
        "rootly:index/WorkflowTaskPublishIncidentTaskParams:WorkflowTaskPublishIncidentTaskParams": {
            "properties": {
                "event": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incident": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicTitle": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusPageId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "event",
                "incident",
                "publicTitle",
                "status",
                "statusPageId"
            ]
        },
        "rootly:index/WorkflowTaskRedisClientTaskParams:WorkflowTaskRedisClientTaskParams": {
            "properties": {
                "commands": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventMessage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskRedisClientTaskParamsPostToSlackChannel:WorkflowTaskRedisClientTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "commands",
                "url"
            ]
        },
        "rootly:index/WorkflowTaskRedisClientTaskParamsPostToSlackChannel:WorkflowTaskRedisClientTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskRenameSlackChannelTaskParams:WorkflowTaskRenameSlackChannelTaskParams": {
            "properties": {
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "title"
            ]
        },
        "rootly:index/WorkflowTaskRunCommandHerokuTaskParams:WorkflowTaskRunCommandHerokuTaskParams": {
            "properties": {
                "appName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "command": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel:WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "appName",
                "command",
                "size"
            ]
        },
        "rootly:index/WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel:WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSendEmailTaskParams:WorkflowTaskSendEmailTaskParams": {
            "properties": {
                "body": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "from": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preheader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "body",
                "subject",
                "tos"
            ]
        },
        "rootly:index/WorkflowTaskSendSlackMessageTaskParams:WorkflowTaskSendSlackMessageTaskParams": {
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSendSlackMessageTaskParamsChannel:WorkflowTaskSendSlackMessageTaskParamsChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sendAsEphemeral": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slackUserGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup:WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slackUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSendSlackMessageTaskParamsSlackUser:WorkflowTaskSendSlackMessageTaskParamsSlackUser"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "text"
            ]
        },
        "rootly:index/WorkflowTaskSendSlackMessageTaskParamsChannel:WorkflowTaskSendSlackMessageTaskParamsChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSendSlackMessageTaskParamsSlackUser:WorkflowTaskSendSlackMessageTaskParamsSlackUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup:WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSendSmsTaskParams:WorkflowTaskSendSmsTaskParams": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "phoneNumbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content",
                "name",
                "phoneNumbers"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotDatadogGraphTaskParams:WorkflowTaskSnapshotDatadogGraphTaskParams": {
            "properties": {
                "dashboards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard:WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQueries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pastDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel:WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "pastDuration"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard:WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel:WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotGrafanaDashboardTaskParams:WorkflowTaskSnapshotGrafanaDashboardTaskParams": {
            "properties": {
                "dashboards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard:WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel:WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dashboards"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard:WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel:WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotLookerLookTaskParams:WorkflowTaskSnapshotLookerLookTaskParams": {
            "properties": {
                "dashboards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotLookerLookTaskParamsDashboard:WorkflowTaskSnapshotLookerLookTaskParamsDashboard"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel:WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dashboards"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotLookerLookTaskParamsDashboard:WorkflowTaskSnapshotLookerLookTaskParamsDashboard": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel:WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotNewRelicGraphTaskParams:WorkflowTaskSnapshotNewRelicGraphTaskParams": {
            "properties": {
                "metricQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel:WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricQuery",
                "metricType"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel:WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskTweetTwitterMessageTaskParams:WorkflowTaskTweetTwitterMessageTaskParams": {
            "properties": {
                "message": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "message"
            ]
        },
        "rootly:index/WorkflowTaskUpdateAirtableTableRecordTaskParams:WorkflowTaskUpdateAirtableTableRecordTaskParams": {
            "properties": {
                "baseKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recordId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tableName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "baseKey",
                "recordId",
                "tableName"
            ]
        },
        "rootly:index/WorkflowTaskUpdateAsanaTaskTaskParams:WorkflowTaskUpdateAsanaTaskTaskParams": {
            "properties": {
                "assignUserEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "completion",
                "taskId"
            ]
        },
        "rootly:index/WorkflowTaskUpdateGithubIssueTaskParams:WorkflowTaskUpdateGithubIssueTaskParams": {
            "properties": {
                "body": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issueId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "completion",
                "issueId"
            ]
        },
        "rootly:index/WorkflowTaskUpdateGoogleCalendarEventTaskParams:WorkflowTaskUpdateGoogleCalendarEventTaskParams": {
            "properties": {
                "adjustmentDays": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attendees": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "canGuestsInviteOthers": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "canGuestsModifyEvent": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "canGuestsSeeOtherGuests": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conferenceSolutionKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "meetingDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToIncidentTimeline": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replaceAttendees": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sendUpdates": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeOfMeeting": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "eventId"
            ]
        },
        "rootly:index/WorkflowTaskUpdateIncidentTaskParams:WorkflowTaskUpdateIncidentTaskParams": {
            "properties": {
                "acknowledgedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detectedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "functionalityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mitigatedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "private": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resolvedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "severityId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowTaskUpdateJiraIssueTaskParams:WorkflowTaskUpdateJiraIssueTaskParams": {
            "properties": {
                "assignUserEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issueId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reporterUserEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "issueId",
                "projectKey"
            ]
        },
        "rootly:index/WorkflowTaskUpdateLinearIssueTaskParams:WorkflowTaskUpdateLinearIssueTaskParams": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issueId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "state": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "issueId"
            ]
        },
        "rootly:index/WorkflowTaskUpdateServiceNowIncidentTaskParams:WorkflowTaskUpdateServiceNowIncidentTaskParams": {
            "properties": {
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "incidentId"
            ]
        },
        "rootly:index/WorkflowTaskUpdateShortcutStoryTaskParams:WorkflowTaskUpdateShortcutStoryTaskParams": {
            "properties": {
                "archivation": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dueDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storyId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "archivation",
                "storyId"
            ]
        },
        "rootly:index/WorkflowTaskUpdateShortcutTaskTaskParams:WorkflowTaskUpdateShortcutTaskTaskParams": {
            "properties": {
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentStoryId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "completion",
                "parentStoryId",
                "taskId"
            ]
        },
        "rootly:index/WorkflowTaskUpdateSlackChannelTopicTaskParams:WorkflowTaskUpdateSlackChannelTopicTaskParams": {
            "properties": {
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "channel",
                "topic"
            ]
        },
        "rootly:index/WorkflowTaskUpdateStatusTaskParams:WorkflowTaskUpdateStatusTaskParams": {
            "properties": {
                "inactivityTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "status"
            ]
        },
        "rootly:index/WorkflowTaskUpdateTrelloCardTaskParams:WorkflowTaskUpdateTrelloCardTaskParams": {
            "properties": {
                "archivation": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "board": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cardId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dueDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateTrelloCardTaskParamsLabel:WorkflowTaskUpdateTrelloCardTaskParamsLabel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "list": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "archivation",
                "cardId"
            ]
        },
        "rootly:index/WorkflowTaskUpdateTrelloCardTaskParamsLabel:WorkflowTaskUpdateTrelloCardTaskParamsLabel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskUpdateZendeskTicketTaskParams:WorkflowTaskUpdateZendeskTicketTaskParams": {
            "properties": {
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ticketId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ticketId"
            ]
        },
        "rootly:index/getCausesCause:getCausesCause": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "slug"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "rootly:index/getCustomFieldOptionsCustomFieldOption:getCustomFieldOptionsCustomFieldOption": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "position": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "color",
                "customFieldId",
                "id",
                "position",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "rootly:index/getCustomFieldsCustomField:getCustomFieldsCustomField": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requireds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "enabled",
                "id",
                "kind",
                "label",
                "requireds",
                "showns",
                "slug"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "rootly:index/getEnvironmentsEnvironment:getEnvironmentsEnvironment": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "color",
                "description",
                "id",
                "name",
                "slug"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "rootly:index/getFunctionalitiesFunctionality:getFunctionalitiesFunctionality": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "color",
                "description",
                "id",
                "name",
                "slug"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "rootly:index/getIncidentRolesIncidentRole:getIncidentRolesIncidentRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "enabled",
                "id",
                "name",
                "slug",
                "summary"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "rootly:index/getIncidentTypesIncidentType:getIncidentTypesIncidentType": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "slug"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "rootly:index/getServicesService:getServicesService": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicDescription": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "color",
                "description",
                "id",
                "name",
                "publicDescription",
                "slug"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "rootly:index/getSeveritiesSeverity:getSeveritiesSeverity": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "severity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "color",
                "description",
                "id",
                "name",
                "severity",
                "slug"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "rootly:index/getTeamsTeam:getTeamsTeam": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "color",
                "description",
                "id",
                "name",
                "slug"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the rootly package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiHost": {
                "type": "string",
                "description": "The Rootly API host. Defaults to https://api.rootly.com\n"
            },
            "apiToken": {
                "type": "string",
                "description": "The Rootly API Token. Generate it from your account at https://rootly.com/account\n"
            }
        },
        "inputProperties": {
            "apiHost": {
                "type": "string",
                "description": "The Rootly API host. Defaults to https://api.rootly.com\n"
            },
            "apiToken": {
                "type": "string",
                "description": "The Rootly API Token. Generate it from your account at https://rootly.com/account\n"
            }
        }
    },
    "resources": {
        "rootly:index/cause:Cause": {
            "description": "Manages incident causes (e.g Bug, Load, Human Error, 3rd party Outage, Configuration Change).\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the cause\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cause\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the cause\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cause\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cause resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the cause\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the cause\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/customField:CustomField": {
            "description": "Manages custom fields.\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the custom field\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the custom field is enabled or not\n"
                },
                "kind": {
                    "type": "string",
                    "description": "The kind of the custom field\n"
                },
                "label": {
                    "type": "string",
                    "description": "The name of the custom field\n"
                },
                "requireds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Where the custom field is required.\n"
                },
                "showns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Where the custom field is shown.\n"
                }
            },
            "required": [
                "enabled",
                "kind",
                "label"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the custom field\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the custom field is enabled or not\n"
                },
                "kind": {
                    "type": "string",
                    "description": "The kind of the custom field\n"
                },
                "label": {
                    "type": "string",
                    "description": "The name of the custom field\n"
                },
                "requireds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Where the custom field is required.\n"
                },
                "showns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Where the custom field is shown.\n"
                }
            },
            "requiredInputs": [
                "kind",
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomField resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the custom field\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the custom field is enabled or not\n"
                    },
                    "kind": {
                        "type": "string",
                        "description": "The kind of the custom field\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The name of the custom field\n"
                    },
                    "requireds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Where the custom field is required.\n"
                    },
                    "showns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Where the custom field is shown.\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/customFieldOption:CustomFieldOption": {
            "description": "Manages custom field options.\n",
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The color of the custom field option\n"
                },
                "customFieldId": {
                    "type": "integer",
                    "description": "The ID of the parent custom field\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the custom field option\n"
                }
            },
            "required": [
                "customFieldId",
                "value"
            ],
            "inputProperties": {
                "color": {
                    "type": "string",
                    "description": "The color of the custom field option\n"
                },
                "customFieldId": {
                    "type": "integer",
                    "description": "The ID of the parent custom field\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the custom field option\n"
                }
            },
            "requiredInputs": [
                "customFieldId",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomFieldOption resources.\n",
                "properties": {
                    "color": {
                        "type": "string",
                        "description": "The color of the custom field option\n"
                    },
                    "customFieldId": {
                        "type": "integer",
                        "description": "The ID of the parent custom field\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the custom field option\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/dashboard:Dashboard": {
            "description": "Manages dashboards.\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the dashboard\n"
                },
                "owner": {
                    "type": "string",
                    "description": "Whether the dashboard is owned by organization or user.\n"
                },
                "public": {
                    "type": "boolean",
                    "description": "Whether the dashboard is public\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the dashboard\n"
                },
                "userId": {
                    "type": "integer",
                    "description": "The user_id of the dashboard, for dashboards with owner == user\n"
                }
            },
            "required": [
                "name",
                "slug",
                "userId"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the dashboard\n"
                },
                "owner": {
                    "type": "string",
                    "description": "Whether the dashboard is owned by organization or user.\n"
                },
                "public": {
                    "type": "boolean",
                    "description": "Whether the dashboard is public\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dashboard resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the dashboard\n"
                    },
                    "owner": {
                        "type": "string",
                        "description": "Whether the dashboard is owned by organization or user.\n"
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Whether the dashboard is public\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The slug of the dashboard\n"
                    },
                    "userId": {
                        "type": "integer",
                        "description": "The user_id of the dashboard, for dashboards with owner == user\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/dashboardPanel:DashboardPanel": {
            "description": "Manages dashboard_panels.\n",
            "properties": {
                "dashboardId": {
                    "type": "string",
                    "description": "The id of the parent dashboard\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the dashboard_panel\n"
                },
                "params": {
                    "$ref": "#/types/rootly:index/DashboardPanelParams:DashboardPanelParams",
                    "description": "The params JSON of the dashboard_panel. See rootly API docs for schema.\n"
                }
            },
            "required": [
                "dashboardId",
                "name",
                "params"
            ],
            "inputProperties": {
                "dashboardId": {
                    "type": "string",
                    "description": "The id of the parent dashboard\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the dashboard_panel\n"
                },
                "params": {
                    "$ref": "#/types/rootly:index/DashboardPanelParams:DashboardPanelParams",
                    "description": "The params JSON of the dashboard_panel. See rootly API docs for schema.\n"
                }
            },
            "requiredInputs": [
                "dashboardId",
                "params"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DashboardPanel resources.\n",
                "properties": {
                    "dashboardId": {
                        "type": "string",
                        "description": "The id of the parent dashboard\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the dashboard_panel\n"
                    },
                    "params": {
                        "$ref": "#/types/rootly:index/DashboardPanelParams:DashboardPanelParams",
                        "description": "The params JSON of the dashboard_panel. See rootly API docs for schema.\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/environment:Environment": {
            "description": "Manages incident environments (e.g production, development).\n",
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The color of the environment\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the environment\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the environment\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the environment\n"
                }
            },
            "required": [
                "name",
                "slug"
            ],
            "inputProperties": {
                "color": {
                    "type": "string",
                    "description": "The color of the environment\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the environment\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the environment\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the environment\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Environment resources.\n",
                "properties": {
                    "color": {
                        "type": "string",
                        "description": "The color of the environment\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the environment\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the environment\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The slug of the environment\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/functionality:Functionality": {
            "description": "Manages functionalities (e.g Logging In, Search, Adds items to Cart).\n",
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The color of the severity\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the functionality\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the functionality\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the severity\n"
                }
            },
            "required": [
                "name",
                "slug"
            ],
            "inputProperties": {
                "color": {
                    "type": "string",
                    "description": "The color of the severity\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the functionality\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the functionality\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the severity\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Functionality resources.\n",
                "properties": {
                    "color": {
                        "type": "string",
                        "description": "The color of the severity\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the functionality\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the functionality\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The slug of the severity\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/incidentRole:IncidentRole": {
            "description": "Manages Incident Roles (e.g Commander, Ops Lead, Communication).\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the incident role\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the incident role is enabled or not\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the incident role\n"
                },
                "summary": {
                    "type": "string",
                    "description": "The summary of the incident role\n"
                }
            },
            "required": [
                "enabled",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the incident role\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the incident role is enabled or not\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the incident role\n"
                },
                "summary": {
                    "type": "string",
                    "description": "The summary of the incident role\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IncidentRole resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the incident role\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the incident role is enabled or not\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the incident role\n"
                    },
                    "summary": {
                        "type": "string",
                        "description": "The summary of the incident role\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/incidentType:IncidentType": {
            "description": "Manages incident types (e.g Cloud, Customer Facing, Security, Training).\n",
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The cikir of the incident type\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the incident type\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the incident type\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "color": {
                    "type": "string",
                    "description": "The cikir of the incident type\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the incident type\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the incident type\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IncidentType resources.\n",
                "properties": {
                    "color": {
                        "type": "string",
                        "description": "The cikir of the incident type\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the incident type\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the incident type\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/service:Service": {
            "description": "Manages Services (e.g elasticsearch-prod, redis-preprod, customer-postgresql-prod).\n",
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The color chosen for the service\n"
                },
                "description": {
                    "type": "string",
                    "description": "For internal use only\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service\n"
                },
                "publicDescription": {
                    "type": "string",
                    "description": "This will be displayed on your status pages to explain to your customer the use of this service.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the service\n"
                }
            },
            "required": [
                "name",
                "slug"
            ],
            "inputProperties": {
                "color": {
                    "type": "string",
                    "description": "The color chosen for the service\n"
                },
                "description": {
                    "type": "string",
                    "description": "For internal use only\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service\n"
                },
                "publicDescription": {
                    "type": "string",
                    "description": "This will be displayed on your status pages to explain to your customer the use of this service.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the service\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Service resources.\n",
                "properties": {
                    "color": {
                        "type": "string",
                        "description": "The color chosen for the service\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "For internal use only\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the service\n"
                    },
                    "publicDescription": {
                        "type": "string",
                        "description": "This will be displayed on your status pages to explain to your customer the use of this service.\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The slug of the service\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/severity:Severity": {
            "description": "Manages Severities (e.g SEV0, SEV1, SEV2, SEV3).\n",
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The color of the severity\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the severity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the severity\n"
                },
                "severity": {
                    "type": "string",
                    "description": "The description of the severity\n",
                    "language": {
                        "csharp": {
                            "name": "rootly_severity"
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the severity\n"
                }
            },
            "required": [
                "name",
                "slug"
            ],
            "inputProperties": {
                "color": {
                    "type": "string",
                    "description": "The color of the severity\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the severity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the severity\n"
                },
                "severity": {
                    "type": "string",
                    "description": "The description of the severity\n",
                    "language": {
                        "csharp": {
                            "name": "rootly_severity"
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the severity\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Severity resources.\n",
                "properties": {
                    "color": {
                        "type": "string",
                        "description": "The color of the severity\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the severity\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the severity\n"
                    },
                    "severity": {
                        "type": "string",
                        "description": "The description of the severity\n",
                        "language": {
                            "csharp": {
                                "name": "rootly_severity"
                            }
                        }
                    },
                    "slug": {
                        "type": "string",
                        "description": "The slug of the severity\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/team:Team": {
            "description": "Manages Teams (e.g Infrastructure, Security, Search).\n",
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The color chosen for the team\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the team\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the team\n"
                }
            },
            "required": [
                "color",
                "name"
            ],
            "inputProperties": {
                "color": {
                    "type": "string",
                    "description": "The color chosen for the team\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the team\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the team\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Team resources.\n",
                "properties": {
                    "color": {
                        "type": "string",
                        "description": "The color chosen for the team\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the team\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the team\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowActionItem:WorkflowActionItem": {
            "description": "Manages workflows.\n",
            "properties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow (1 being top of list)\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowActionItemTriggerParams:WorkflowActionItemTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                },
                "workflowGroupId": {
                    "type": "string",
                    "description": "The workflow group this workflow belongs to.\n"
                }
            },
            "required": [
                "command",
                "enabled",
                "name",
                "position",
                "repeatOns",
                "triggerParams",
                "workflowGroupId"
            ],
            "inputProperties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow (1 being top of list)\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowActionItemTriggerParams:WorkflowActionItemTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                },
                "workflowGroupId": {
                    "type": "string",
                    "description": "The workflow group this workflow belongs to.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowActionItem resources.\n",
                "properties": {
                    "command": {
                        "type": "string",
                        "description": "The workflow command.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the workflow\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the workflow is enabled or not\n"
                    },
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Environment IDs required to trigger workflow.\n"
                    },
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group IDs required to trigger workflow.\n"
                    },
                    "incidentTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Incident type IDs required to trigger workflow.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workflow\n"
                    },
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow (1 being top of list)\n"
                    },
                    "repeatEveryDuration": {
                        "type": "string",
                        "description": "Repeat workflow every duration.\n"
                    },
                    "repeatOns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Repeat workflow on days.\n"
                    },
                    "serviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Service IDs required to trigger workflow.\n"
                    },
                    "severityIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Severity IDs required to trigger workflow.\n"
                    },
                    "triggerParams": {
                        "$ref": "#/types/rootly:index/WorkflowActionItemTriggerParams:WorkflowActionItemTriggerParams",
                        "description": "The conditions for triggering this workflow.\n"
                    },
                    "wait": {
                        "type": "string",
                        "description": "Wait before running workflow.\n"
                    },
                    "workflowGroupId": {
                        "type": "string",
                        "description": "The workflow group this workflow belongs to.\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowAlert:WorkflowAlert": {
            "description": "Manages workflows.\n",
            "properties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow (1 being top of list)\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowAlertTriggerParams:WorkflowAlertTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                },
                "workflowGroupId": {
                    "type": "string",
                    "description": "The workflow group this workflow belongs to.\n"
                }
            },
            "required": [
                "command",
                "enabled",
                "name",
                "position",
                "repeatOns",
                "triggerParams",
                "workflowGroupId"
            ],
            "inputProperties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow (1 being top of list)\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowAlertTriggerParams:WorkflowAlertTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                },
                "workflowGroupId": {
                    "type": "string",
                    "description": "The workflow group this workflow belongs to.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowAlert resources.\n",
                "properties": {
                    "command": {
                        "type": "string",
                        "description": "The workflow command.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the workflow\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the workflow is enabled or not\n"
                    },
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Environment IDs required to trigger workflow.\n"
                    },
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group IDs required to trigger workflow.\n"
                    },
                    "incidentTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Incident type IDs required to trigger workflow.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workflow\n"
                    },
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow (1 being top of list)\n"
                    },
                    "repeatEveryDuration": {
                        "type": "string",
                        "description": "Repeat workflow every duration.\n"
                    },
                    "repeatOns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Repeat workflow on days.\n"
                    },
                    "serviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Service IDs required to trigger workflow.\n"
                    },
                    "severityIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Severity IDs required to trigger workflow.\n"
                    },
                    "triggerParams": {
                        "$ref": "#/types/rootly:index/WorkflowAlertTriggerParams:WorkflowAlertTriggerParams",
                        "description": "The conditions for triggering this workflow.\n"
                    },
                    "wait": {
                        "type": "string",
                        "description": "Wait before running workflow.\n"
                    },
                    "workflowGroupId": {
                        "type": "string",
                        "description": "The workflow group this workflow belongs to.\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowCustomFieldSelection:WorkflowCustomFieldSelection": {
            "description": "Manages workflow custom field selections (triggers).\n",
            "properties": {
                "customFieldId": {
                    "type": "integer",
                    "description": "The ID of the custom field\n"
                },
                "incidentCondition": {
                    "type": "string",
                    "description": "The trigger condition\n"
                },
                "selectedOptionIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Custom field options to associate with this custom field trigger\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom field values to associate with this custom field trigger\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the workflow\n"
                }
            },
            "required": [
                "customFieldId",
                "selectedOptionIds",
                "values",
                "workflowId"
            ],
            "inputProperties": {
                "customFieldId": {
                    "type": "integer",
                    "description": "The ID of the custom field\n"
                },
                "incidentCondition": {
                    "type": "string",
                    "description": "The trigger condition\n"
                },
                "selectedOptionIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Custom field options to associate with this custom field trigger\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom field values to associate with this custom field trigger\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the workflow\n"
                }
            },
            "requiredInputs": [
                "customFieldId",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowCustomFieldSelection resources.\n",
                "properties": {
                    "customFieldId": {
                        "type": "integer",
                        "description": "The ID of the custom field\n"
                    },
                    "incidentCondition": {
                        "type": "string",
                        "description": "The trigger condition\n"
                    },
                    "selectedOptionIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Custom field options to associate with this custom field trigger\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Custom field values to associate with this custom field trigger\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowGroup:WorkflowGroup": {
            "description": "Manages workflow groups.\n",
            "properties": {
                "expanded": {
                    "type": "boolean",
                    "description": "Whether the workflow group is expanded or not\n"
                },
                "kind": {
                    "type": "string",
                    "description": "The kind of the workflow group\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow group\n"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow group (1 being top of list)\n"
                }
            },
            "required": [
                "expanded",
                "kind",
                "name",
                "position"
            ],
            "inputProperties": {
                "expanded": {
                    "type": "boolean",
                    "description": "Whether the workflow group is expanded or not\n"
                },
                "kind": {
                    "type": "string",
                    "description": "The kind of the workflow group\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow group\n"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow group (1 being top of list)\n"
                }
            },
            "requiredInputs": [
                "kind"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowGroup resources.\n",
                "properties": {
                    "expanded": {
                        "type": "boolean",
                        "description": "Whether the workflow group is expanded or not\n"
                    },
                    "kind": {
                        "type": "string",
                        "description": "The kind of the workflow group\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workflow group\n"
                    },
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow group (1 being top of list)\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowIncident:WorkflowIncident": {
            "description": "Manages workflows.\n",
            "properties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow (1 being top of list)\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowIncidentTriggerParams:WorkflowIncidentTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                },
                "workflowGroupId": {
                    "type": "string",
                    "description": "The workflow group this workflow belongs to.\n"
                }
            },
            "required": [
                "command",
                "enabled",
                "name",
                "position",
                "repeatOns",
                "triggerParams",
                "workflowGroupId"
            ],
            "inputProperties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow (1 being top of list)\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowIncidentTriggerParams:WorkflowIncidentTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                },
                "workflowGroupId": {
                    "type": "string",
                    "description": "The workflow group this workflow belongs to.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowIncident resources.\n",
                "properties": {
                    "command": {
                        "type": "string",
                        "description": "The workflow command.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the workflow\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the workflow is enabled or not\n"
                    },
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Environment IDs required to trigger workflow.\n"
                    },
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group IDs required to trigger workflow.\n"
                    },
                    "incidentTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Incident type IDs required to trigger workflow.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workflow\n"
                    },
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow (1 being top of list)\n"
                    },
                    "repeatEveryDuration": {
                        "type": "string",
                        "description": "Repeat workflow every duration.\n"
                    },
                    "repeatOns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Repeat workflow on days.\n"
                    },
                    "serviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Service IDs required to trigger workflow.\n"
                    },
                    "severityIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Severity IDs required to trigger workflow.\n"
                    },
                    "triggerParams": {
                        "$ref": "#/types/rootly:index/WorkflowIncidentTriggerParams:WorkflowIncidentTriggerParams",
                        "description": "The conditions for triggering this workflow.\n"
                    },
                    "wait": {
                        "type": "string",
                        "description": "Wait before running workflow.\n"
                    },
                    "workflowGroupId": {
                        "type": "string",
                        "description": "The workflow group this workflow belongs to.\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowPostMortem:WorkflowPostMortem": {
            "description": "Manages workflows.\n",
            "properties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow (1 being top of list)\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowPostMortemTriggerParams:WorkflowPostMortemTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                },
                "workflowGroupId": {
                    "type": "string",
                    "description": "The workflow group this workflow belongs to.\n"
                }
            },
            "required": [
                "command",
                "enabled",
                "name",
                "position",
                "repeatOns",
                "triggerParams",
                "workflowGroupId"
            ],
            "inputProperties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow (1 being top of list)\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowPostMortemTriggerParams:WorkflowPostMortemTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                },
                "workflowGroupId": {
                    "type": "string",
                    "description": "The workflow group this workflow belongs to.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowPostMortem resources.\n",
                "properties": {
                    "command": {
                        "type": "string",
                        "description": "The workflow command.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the workflow\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the workflow is enabled or not\n"
                    },
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Environment IDs required to trigger workflow.\n"
                    },
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group IDs required to trigger workflow.\n"
                    },
                    "incidentTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Incident type IDs required to trigger workflow.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workflow\n"
                    },
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow (1 being top of list)\n"
                    },
                    "repeatEveryDuration": {
                        "type": "string",
                        "description": "Repeat workflow every duration.\n"
                    },
                    "repeatOns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Repeat workflow on days.\n"
                    },
                    "serviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Service IDs required to trigger workflow.\n"
                    },
                    "severityIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Severity IDs required to trigger workflow.\n"
                    },
                    "triggerParams": {
                        "$ref": "#/types/rootly:index/WorkflowPostMortemTriggerParams:WorkflowPostMortemTriggerParams",
                        "description": "The conditions for triggering this workflow.\n"
                    },
                    "wait": {
                        "type": "string",
                        "description": "Wait before running workflow.\n"
                    },
                    "workflowGroupId": {
                        "type": "string",
                        "description": "The workflow group this workflow belongs to.\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowPulse:WorkflowPulse": {
            "description": "Manages workflows.\n",
            "properties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow (1 being top of list)\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowPulseTriggerParams:WorkflowPulseTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                },
                "workflowGroupId": {
                    "type": "string",
                    "description": "The workflow group this workflow belongs to.\n"
                }
            },
            "required": [
                "command",
                "enabled",
                "name",
                "position",
                "repeatOns",
                "triggerParams",
                "workflowGroupId"
            ],
            "inputProperties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow (1 being top of list)\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowPulseTriggerParams:WorkflowPulseTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                },
                "workflowGroupId": {
                    "type": "string",
                    "description": "The workflow group this workflow belongs to.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowPulse resources.\n",
                "properties": {
                    "command": {
                        "type": "string",
                        "description": "The workflow command.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the workflow\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the workflow is enabled or not\n"
                    },
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Environment IDs required to trigger workflow.\n"
                    },
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group IDs required to trigger workflow.\n"
                    },
                    "incidentTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Incident type IDs required to trigger workflow.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workflow\n"
                    },
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow (1 being top of list)\n"
                    },
                    "repeatEveryDuration": {
                        "type": "string",
                        "description": "Repeat workflow every duration.\n"
                    },
                    "repeatOns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Repeat workflow on days.\n"
                    },
                    "serviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Service IDs required to trigger workflow.\n"
                    },
                    "severityIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Severity IDs required to trigger workflow.\n"
                    },
                    "triggerParams": {
                        "$ref": "#/types/rootly:index/WorkflowPulseTriggerParams:WorkflowPulseTriggerParams",
                        "description": "The conditions for triggering this workflow.\n"
                    },
                    "wait": {
                        "type": "string",
                        "description": "Wait before running workflow.\n"
                    },
                    "workflowGroupId": {
                        "type": "string",
                        "description": "The workflow group this workflow belongs to.\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAddActionItem:WorkflowTaskAddActionItem": {
            "description": "Manages workflow add_action_item task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddActionItemTaskParams:WorkflowTaskAddActionItemTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddActionItemTaskParams:WorkflowTaskAddActionItemTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAddActionItem resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAddActionItemTaskParams:WorkflowTaskAddActionItemTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAddRole:WorkflowTaskAddRole": {
            "description": "Manages workflow add_role task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddRoleTaskParams:WorkflowTaskAddRoleTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddRoleTaskParams:WorkflowTaskAddRoleTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAddRole resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAddRoleTaskParams:WorkflowTaskAddRoleTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAddSlackBookmark:WorkflowTaskAddSlackBookmark": {
            "description": "Manages workflow add_slack_bookmark task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddSlackBookmarkTaskParams:WorkflowTaskAddSlackBookmarkTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddSlackBookmarkTaskParams:WorkflowTaskAddSlackBookmarkTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAddSlackBookmark resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAddSlackBookmarkTaskParams:WorkflowTaskAddSlackBookmarkTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAddTeam:WorkflowTaskAddTeam": {
            "description": "Manages workflow add_team task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddTeamTaskParams:WorkflowTaskAddTeamTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddTeamTaskParams:WorkflowTaskAddTeamTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAddTeam resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAddTeamTaskParams:WorkflowTaskAddTeamTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAddToTimeline:WorkflowTaskAddToTimeline": {
            "description": "Manages workflow add_to_timeline task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddToTimelineTaskParams:WorkflowTaskAddToTimelineTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddToTimelineTaskParams:WorkflowTaskAddToTimelineTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAddToTimeline resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAddToTimelineTaskParams:WorkflowTaskAddToTimelineTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskArchiveSlackChannels:WorkflowTaskArchiveSlackChannels": {
            "description": "Manages workflow archive_slack_channels task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskArchiveSlackChannelsTaskParams:WorkflowTaskArchiveSlackChannelsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskArchiveSlackChannelsTaskParams:WorkflowTaskArchiveSlackChannelsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskArchiveSlackChannels resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskArchiveSlackChannelsTaskParams:WorkflowTaskArchiveSlackChannelsTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAttachDatadogDashboards:WorkflowTaskAttachDatadogDashboards": {
            "description": "Manages workflow attach_datadog_dashboards task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAttachDatadogDashboardsTaskParams:WorkflowTaskAttachDatadogDashboardsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAttachDatadogDashboardsTaskParams:WorkflowTaskAttachDatadogDashboardsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAttachDatadogDashboards resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAttachDatadogDashboardsTaskParams:WorkflowTaskAttachDatadogDashboardsTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAutoAssignRoleOpsgenie:WorkflowTaskAutoAssignRoleOpsgenie": {
            "description": "Manages workflow auto_assign_role_opsgenie task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRoleOpsgenieTaskParams:WorkflowTaskAutoAssignRoleOpsgenieTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRoleOpsgenieTaskParams:WorkflowTaskAutoAssignRoleOpsgenieTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAutoAssignRoleOpsgenie resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRoleOpsgenieTaskParams:WorkflowTaskAutoAssignRoleOpsgenieTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAutoAssignRolePagerduty:WorkflowTaskAutoAssignRolePagerduty": {
            "description": "Manages workflow auto_assign_role_pagerduty task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRolePagerdutyTaskParams:WorkflowTaskAutoAssignRolePagerdutyTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRolePagerdutyTaskParams:WorkflowTaskAutoAssignRolePagerdutyTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAutoAssignRolePagerduty resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRolePagerdutyTaskParams:WorkflowTaskAutoAssignRolePagerdutyTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAutoAssignRoleVictorOps:WorkflowTaskAutoAssignRoleVictorOps": {
            "description": "Manages workflow auto_assign_role_victor_ops task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRoleVictorOpsTaskParams:WorkflowTaskAutoAssignRoleVictorOpsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRoleVictorOpsTaskParams:WorkflowTaskAutoAssignRoleVictorOpsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAutoAssignRoleVictorOps resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRoleVictorOpsTaskParams:WorkflowTaskAutoAssignRoleVictorOpsTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCallPeople:WorkflowTaskCallPeople": {
            "description": "Manages workflow call_people task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCallPeopleTaskParams:WorkflowTaskCallPeopleTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCallPeopleTaskParams:WorkflowTaskCallPeopleTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCallPeople resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCallPeopleTaskParams:WorkflowTaskCallPeopleTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateAirtableTableRecord:WorkflowTaskCreateAirtableTableRecord": {
            "description": "Manages workflow create_airtable_table_record task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateAirtableTableRecordTaskParams:WorkflowTaskCreateAirtableTableRecordTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateAirtableTableRecordTaskParams:WorkflowTaskCreateAirtableTableRecordTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateAirtableTableRecord resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateAirtableTableRecordTaskParams:WorkflowTaskCreateAirtableTableRecordTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateAsanaSubtask:WorkflowTaskCreateAsanaSubtask": {
            "description": "Manages workflow create_asana_subtask task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateAsanaSubtaskTaskParams:WorkflowTaskCreateAsanaSubtaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateAsanaSubtaskTaskParams:WorkflowTaskCreateAsanaSubtaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateAsanaSubtask resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateAsanaSubtaskTaskParams:WorkflowTaskCreateAsanaSubtaskTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateAsanaTask:WorkflowTaskCreateAsanaTask": {
            "description": "Manages workflow create_asana_task task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateAsanaTaskTaskParams:WorkflowTaskCreateAsanaTaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateAsanaTaskTaskParams:WorkflowTaskCreateAsanaTaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateAsanaTask resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateAsanaTaskTaskParams:WorkflowTaskCreateAsanaTaskTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateConfluencePage:WorkflowTaskCreateConfluencePage": {
            "description": "Manages workflow create_confluence_page task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateConfluencePageTaskParams:WorkflowTaskCreateConfluencePageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateConfluencePageTaskParams:WorkflowTaskCreateConfluencePageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateConfluencePage resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateConfluencePageTaskParams:WorkflowTaskCreateConfluencePageTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateDatadogNotebook:WorkflowTaskCreateDatadogNotebook": {
            "description": "Manages workflow create_datadog_notebook task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateDatadogNotebookTaskParams:WorkflowTaskCreateDatadogNotebookTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateDatadogNotebookTaskParams:WorkflowTaskCreateDatadogNotebookTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateDatadogNotebook resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateDatadogNotebookTaskParams:WorkflowTaskCreateDatadogNotebookTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateDropboxPaperPage:WorkflowTaskCreateDropboxPaperPage": {
            "description": "Manages workflow create_dropbox_paper_page task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateDropboxPaperPageTaskParams:WorkflowTaskCreateDropboxPaperPageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateDropboxPaperPageTaskParams:WorkflowTaskCreateDropboxPaperPageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateDropboxPaperPage resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateDropboxPaperPageTaskParams:WorkflowTaskCreateDropboxPaperPageTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateGithubIssue:WorkflowTaskCreateGithubIssue": {
            "description": "Manages workflow create_github_issue task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateGithubIssueTaskParams:WorkflowTaskCreateGithubIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateGithubIssueTaskParams:WorkflowTaskCreateGithubIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateGithubIssue resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateGithubIssueTaskParams:WorkflowTaskCreateGithubIssueTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateGoogleCalendarEvent:WorkflowTaskCreateGoogleCalendarEvent": {
            "description": "Manages workflow create_google_calendar_event task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleCalendarEventTaskParams:WorkflowTaskCreateGoogleCalendarEventTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleCalendarEventTaskParams:WorkflowTaskCreateGoogleCalendarEventTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateGoogleCalendarEvent resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleCalendarEventTaskParams:WorkflowTaskCreateGoogleCalendarEventTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateGoogleDocsPage:WorkflowTaskCreateGoogleDocsPage": {
            "description": "Manages workflow create_google_docs_page task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleDocsPageTaskParams:WorkflowTaskCreateGoogleDocsPageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleDocsPageTaskParams:WorkflowTaskCreateGoogleDocsPageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateGoogleDocsPage resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleDocsPageTaskParams:WorkflowTaskCreateGoogleDocsPageTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateGoogleMeeting:WorkflowTaskCreateGoogleMeeting": {
            "description": "Manages workflow create_google_meeting task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleMeetingTaskParams:WorkflowTaskCreateGoogleMeetingTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleMeetingTaskParams:WorkflowTaskCreateGoogleMeetingTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateGoogleMeeting resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleMeetingTaskParams:WorkflowTaskCreateGoogleMeetingTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateIncident:WorkflowTaskCreateIncident": {
            "description": "Manages workflow create_incident task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateIncidentTaskParams:WorkflowTaskCreateIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateIncidentTaskParams:WorkflowTaskCreateIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateIncident resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateIncidentTaskParams:WorkflowTaskCreateIncidentTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateJiraIssue:WorkflowTaskCreateJiraIssue": {
            "description": "Manages workflow create_jira_issue task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateJiraIssueTaskParams:WorkflowTaskCreateJiraIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateJiraIssueTaskParams:WorkflowTaskCreateJiraIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateJiraIssue resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateJiraIssueTaskParams:WorkflowTaskCreateJiraIssueTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateJiraSubtask:WorkflowTaskCreateJiraSubtask": {
            "description": "Manages workflow create_jira_subtask task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateJiraSubtaskTaskParams:WorkflowTaskCreateJiraSubtaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateJiraSubtaskTaskParams:WorkflowTaskCreateJiraSubtaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateJiraSubtask resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateJiraSubtaskTaskParams:WorkflowTaskCreateJiraSubtaskTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateLinearIssue:WorkflowTaskCreateLinearIssue": {
            "description": "Manages workflow create_linear_issue task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateLinearIssueTaskParams:WorkflowTaskCreateLinearIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateLinearIssueTaskParams:WorkflowTaskCreateLinearIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateLinearIssue resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateLinearIssueTaskParams:WorkflowTaskCreateLinearIssueTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateLinearSubtaskIssue:WorkflowTaskCreateLinearSubtaskIssue": {
            "description": "Manages workflow create_linear_subtask_issue task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateLinearSubtaskIssueTaskParams:WorkflowTaskCreateLinearSubtaskIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateLinearSubtaskIssueTaskParams:WorkflowTaskCreateLinearSubtaskIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateLinearSubtaskIssue resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateLinearSubtaskIssueTaskParams:WorkflowTaskCreateLinearSubtaskIssueTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateMicrosoftTeamsMeeting:WorkflowTaskCreateMicrosoftTeamsMeeting": {
            "description": "Manages workflow create_microsoft_teams_meeting task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams:WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams:WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateMicrosoftTeamsMeeting resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams:WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateNotionPage:WorkflowTaskCreateNotionPage": {
            "description": "Manages workflow create_notion_page task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateNotionPageTaskParams:WorkflowTaskCreateNotionPageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateNotionPageTaskParams:WorkflowTaskCreateNotionPageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateNotionPage resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateNotionPageTaskParams:WorkflowTaskCreateNotionPageTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateServiceNowIncident:WorkflowTaskCreateServiceNowIncident": {
            "description": "Manages workflow create_service_now_incident task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateServiceNowIncidentTaskParams:WorkflowTaskCreateServiceNowIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateServiceNowIncidentTaskParams:WorkflowTaskCreateServiceNowIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateServiceNowIncident resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateServiceNowIncidentTaskParams:WorkflowTaskCreateServiceNowIncidentTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateShortcutStory:WorkflowTaskCreateShortcutStory": {
            "description": "Manages workflow create_shortcut_story task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateShortcutStoryTaskParams:WorkflowTaskCreateShortcutStoryTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateShortcutStoryTaskParams:WorkflowTaskCreateShortcutStoryTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateShortcutStory resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateShortcutStoryTaskParams:WorkflowTaskCreateShortcutStoryTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateShortcutTask:WorkflowTaskCreateShortcutTask": {
            "description": "Manages workflow create_shortcut_task task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateShortcutTaskTaskParams:WorkflowTaskCreateShortcutTaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateShortcutTaskTaskParams:WorkflowTaskCreateShortcutTaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateShortcutTask resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateShortcutTaskTaskParams:WorkflowTaskCreateShortcutTaskTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateTrelloCard:WorkflowTaskCreateTrelloCard": {
            "description": "Manages workflow create_trello_card task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateTrelloCardTaskParams:WorkflowTaskCreateTrelloCardTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateTrelloCardTaskParams:WorkflowTaskCreateTrelloCardTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateTrelloCard resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateTrelloCardTaskParams:WorkflowTaskCreateTrelloCardTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateWebexMeeting:WorkflowTaskCreateWebexMeeting": {
            "description": "Manages workflow create_webex_meeting task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateWebexMeetingTaskParams:WorkflowTaskCreateWebexMeetingTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateWebexMeetingTaskParams:WorkflowTaskCreateWebexMeetingTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateWebexMeeting resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateWebexMeetingTaskParams:WorkflowTaskCreateWebexMeetingTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateZendeskTicket:WorkflowTaskCreateZendeskTicket": {
            "description": "Manages workflow create_zendesk_ticket task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateZendeskTicketTaskParams:WorkflowTaskCreateZendeskTicketTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateZendeskTicketTaskParams:WorkflowTaskCreateZendeskTicketTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateZendeskTicket resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateZendeskTicketTaskParams:WorkflowTaskCreateZendeskTicketTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateZoomMeeting:WorkflowTaskCreateZoomMeeting": {
            "description": "Manages workflow create_zoom_meeting task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateZoomMeetingTaskParams:WorkflowTaskCreateZoomMeetingTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateZoomMeetingTaskParams:WorkflowTaskCreateZoomMeetingTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateZoomMeeting resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateZoomMeetingTaskParams:WorkflowTaskCreateZoomMeetingTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskGetGithubCommits:WorkflowTaskGetGithubCommits": {
            "description": "Manages workflow get_github_commits task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskGetGithubCommitsTaskParams:WorkflowTaskGetGithubCommitsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskGetGithubCommitsTaskParams:WorkflowTaskGetGithubCommitsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskGetGithubCommits resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskGetGithubCommitsTaskParams:WorkflowTaskGetGithubCommitsTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskGetGitlabCommits:WorkflowTaskGetGitlabCommits": {
            "description": "Manages workflow get_gitlab_commits task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskGetGitlabCommitsTaskParams:WorkflowTaskGetGitlabCommitsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskGetGitlabCommitsTaskParams:WorkflowTaskGetGitlabCommitsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskGetGitlabCommits resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskGetGitlabCommitsTaskParams:WorkflowTaskGetGitlabCommitsTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskGetPulses:WorkflowTaskGetPulses": {
            "description": "Manages workflow get_pulses task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskGetPulsesTaskParams:WorkflowTaskGetPulsesTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskGetPulsesTaskParams:WorkflowTaskGetPulsesTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskGetPulses resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskGetPulsesTaskParams:WorkflowTaskGetPulsesTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskHTTPClient:WorkflowTaskHTTPClient": {
            "description": "Manages workflow http_client task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskHTTPClientTaskParams:WorkflowTaskHTTPClientTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskHTTPClientTaskParams:WorkflowTaskHTTPClientTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskHTTPClient resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskHTTPClientTaskParams:WorkflowTaskHTTPClientTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskInviteToSlackChannel:WorkflowTaskInviteToSlackChannel": {
            "description": "Manages workflow invite_to_slack_channel task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelTaskParams:WorkflowTaskInviteToSlackChannelTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelTaskParams:WorkflowTaskInviteToSlackChannelTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskInviteToSlackChannel resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelTaskParams:WorkflowTaskInviteToSlackChannelTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskInviteToSlackChannelOpsgenie:WorkflowTaskInviteToSlackChannelOpsgenie": {
            "description": "Manages workflow invite_to_slack_channel_opsgenie task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelOpsgenieTaskParams:WorkflowTaskInviteToSlackChannelOpsgenieTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelOpsgenieTaskParams:WorkflowTaskInviteToSlackChannelOpsgenieTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskInviteToSlackChannelOpsgenie resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelOpsgenieTaskParams:WorkflowTaskInviteToSlackChannelOpsgenieTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskInviteToSlackChannelPagerduty:WorkflowTaskInviteToSlackChannelPagerduty": {
            "description": "Manages workflow invite_to_slack_channel_pagerduty task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelPagerdutyTaskParams:WorkflowTaskInviteToSlackChannelPagerdutyTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelPagerdutyTaskParams:WorkflowTaskInviteToSlackChannelPagerdutyTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskInviteToSlackChannelPagerduty resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelPagerdutyTaskParams:WorkflowTaskInviteToSlackChannelPagerdutyTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskInviteToSlackChannelVictorOps:WorkflowTaskInviteToSlackChannelVictorOps": {
            "description": "Manages workflow invite_to_slack_channel_victor_ops task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelVictorOpsTaskParams:WorkflowTaskInviteToSlackChannelVictorOpsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelVictorOpsTaskParams:WorkflowTaskInviteToSlackChannelVictorOpsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskInviteToSlackChannelVictorOps resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelVictorOpsTaskParams:WorkflowTaskInviteToSlackChannelVictorOpsTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskPageOpsgenieOnCallResponders:WorkflowTaskPageOpsgenieOnCallResponders": {
            "description": "Manages workflow page_opsgenie_on_call_responders task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPageOpsgenieOnCallRespondersTaskParams:WorkflowTaskPageOpsgenieOnCallRespondersTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPageOpsgenieOnCallRespondersTaskParams:WorkflowTaskPageOpsgenieOnCallRespondersTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskPageOpsgenieOnCallResponders resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPageOpsgenieOnCallRespondersTaskParams:WorkflowTaskPageOpsgenieOnCallRespondersTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskPagePagerdutyOnCallResponders:WorkflowTaskPagePagerdutyOnCallResponders": {
            "description": "Manages workflow page_pagerduty_on_call_responders task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPagePagerdutyOnCallRespondersTaskParams:WorkflowTaskPagePagerdutyOnCallRespondersTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPagePagerdutyOnCallRespondersTaskParams:WorkflowTaskPagePagerdutyOnCallRespondersTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskPagePagerdutyOnCallResponders resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPagePagerdutyOnCallRespondersTaskParams:WorkflowTaskPagePagerdutyOnCallRespondersTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskPageVictorOpsOnCallResponders:WorkflowTaskPageVictorOpsOnCallResponders": {
            "description": "Manages workflow page_victor_ops_on_call_responders task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPageVictorOpsOnCallRespondersTaskParams:WorkflowTaskPageVictorOpsOnCallRespondersTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPageVictorOpsOnCallRespondersTaskParams:WorkflowTaskPageVictorOpsOnCallRespondersTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskPageVictorOpsOnCallResponders resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPageVictorOpsOnCallRespondersTaskParams:WorkflowTaskPageVictorOpsOnCallRespondersTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskPrint:WorkflowTaskPrint": {
            "description": "Manages workflow print task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPrintTaskParams:WorkflowTaskPrintTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPrintTaskParams:WorkflowTaskPrintTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskPrint resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPrintTaskParams:WorkflowTaskPrintTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskPublishIncident:WorkflowTaskPublishIncident": {
            "description": "Manages workflow publish_incident task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPublishIncidentTaskParams:WorkflowTaskPublishIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPublishIncidentTaskParams:WorkflowTaskPublishIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskPublishIncident resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPublishIncidentTaskParams:WorkflowTaskPublishIncidentTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskRedisClient:WorkflowTaskRedisClient": {
            "description": "Manages workflow redis_client task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskRedisClientTaskParams:WorkflowTaskRedisClientTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskRedisClientTaskParams:WorkflowTaskRedisClientTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskRedisClient resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskRedisClientTaskParams:WorkflowTaskRedisClientTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskRenameSlackChannel:WorkflowTaskRenameSlackChannel": {
            "description": "Manages workflow rename_slack_channel task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskRenameSlackChannelTaskParams:WorkflowTaskRenameSlackChannelTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskRenameSlackChannelTaskParams:WorkflowTaskRenameSlackChannelTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskRenameSlackChannel resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskRenameSlackChannelTaskParams:WorkflowTaskRenameSlackChannelTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskRunCommandHeroku:WorkflowTaskRunCommandHeroku": {
            "description": "Manages workflow run_command_heroku task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskRunCommandHerokuTaskParams:WorkflowTaskRunCommandHerokuTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskRunCommandHerokuTaskParams:WorkflowTaskRunCommandHerokuTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskRunCommandHeroku resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskRunCommandHerokuTaskParams:WorkflowTaskRunCommandHerokuTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskSendEmail:WorkflowTaskSendEmail": {
            "description": "Manages workflow send_email task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSendEmailTaskParams:WorkflowTaskSendEmailTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSendEmailTaskParams:WorkflowTaskSendEmailTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskSendEmail resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSendEmailTaskParams:WorkflowTaskSendEmailTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskSendSlackMessage:WorkflowTaskSendSlackMessage": {
            "description": "Manages workflow send_slack_message task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSendSlackMessageTaskParams:WorkflowTaskSendSlackMessageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSendSlackMessageTaskParams:WorkflowTaskSendSlackMessageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskSendSlackMessage resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSendSlackMessageTaskParams:WorkflowTaskSendSlackMessageTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskSendSms:WorkflowTaskSendSms": {
            "description": "Manages workflow send_sms task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSendSmsTaskParams:WorkflowTaskSendSmsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSendSmsTaskParams:WorkflowTaskSendSmsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskSendSms resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSendSmsTaskParams:WorkflowTaskSendSmsTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskSnapshotDatadogGraph:WorkflowTaskSnapshotDatadogGraph": {
            "description": "Manages workflow snapshot_datadog_graph task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSnapshotDatadogGraphTaskParams:WorkflowTaskSnapshotDatadogGraphTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSnapshotDatadogGraphTaskParams:WorkflowTaskSnapshotDatadogGraphTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskSnapshotDatadogGraph resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotDatadogGraphTaskParams:WorkflowTaskSnapshotDatadogGraphTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskSnapshotGrafanaDashboard:WorkflowTaskSnapshotGrafanaDashboard": {
            "description": "Manages workflow snapshot_grafana_dashboard task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSnapshotGrafanaDashboardTaskParams:WorkflowTaskSnapshotGrafanaDashboardTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSnapshotGrafanaDashboardTaskParams:WorkflowTaskSnapshotGrafanaDashboardTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskSnapshotGrafanaDashboard resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotGrafanaDashboardTaskParams:WorkflowTaskSnapshotGrafanaDashboardTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskSnapshotLookerLook:WorkflowTaskSnapshotLookerLook": {
            "description": "Manages workflow snapshot_looker_look task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSnapshotLookerLookTaskParams:WorkflowTaskSnapshotLookerLookTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSnapshotLookerLookTaskParams:WorkflowTaskSnapshotLookerLookTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskSnapshotLookerLook resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotLookerLookTaskParams:WorkflowTaskSnapshotLookerLookTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskSnapshotNewRelicGraph:WorkflowTaskSnapshotNewRelicGraph": {
            "description": "Manages workflow snapshot_new_relic_graph task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSnapshotNewRelicGraphTaskParams:WorkflowTaskSnapshotNewRelicGraphTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSnapshotNewRelicGraphTaskParams:WorkflowTaskSnapshotNewRelicGraphTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskSnapshotNewRelicGraph resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotNewRelicGraphTaskParams:WorkflowTaskSnapshotNewRelicGraphTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskTweetTwitterMessage:WorkflowTaskTweetTwitterMessage": {
            "description": "Manages workflow tweet_twitter_message task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskTweetTwitterMessageTaskParams:WorkflowTaskTweetTwitterMessageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskTweetTwitterMessageTaskParams:WorkflowTaskTweetTwitterMessageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskTweetTwitterMessage resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskTweetTwitterMessageTaskParams:WorkflowTaskTweetTwitterMessageTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateAirtableTableRecord:WorkflowTaskUpdateAirtableTableRecord": {
            "description": "Manages workflow update_airtable_table_record task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateAirtableTableRecordTaskParams:WorkflowTaskUpdateAirtableTableRecordTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateAirtableTableRecordTaskParams:WorkflowTaskUpdateAirtableTableRecordTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateAirtableTableRecord resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateAirtableTableRecordTaskParams:WorkflowTaskUpdateAirtableTableRecordTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateAsanaTask:WorkflowTaskUpdateAsanaTask": {
            "description": "Manages workflow update_asana_task task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateAsanaTaskTaskParams:WorkflowTaskUpdateAsanaTaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateAsanaTaskTaskParams:WorkflowTaskUpdateAsanaTaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateAsanaTask resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateAsanaTaskTaskParams:WorkflowTaskUpdateAsanaTaskTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateGithubIssue:WorkflowTaskUpdateGithubIssue": {
            "description": "Manages workflow update_github_issue task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateGithubIssueTaskParams:WorkflowTaskUpdateGithubIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateGithubIssueTaskParams:WorkflowTaskUpdateGithubIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateGithubIssue resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateGithubIssueTaskParams:WorkflowTaskUpdateGithubIssueTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateGoogleCalendarEvent:WorkflowTaskUpdateGoogleCalendarEvent": {
            "description": "Manages workflow update_google_calendar_event task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateGoogleCalendarEventTaskParams:WorkflowTaskUpdateGoogleCalendarEventTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateGoogleCalendarEventTaskParams:WorkflowTaskUpdateGoogleCalendarEventTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateGoogleCalendarEvent resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateGoogleCalendarEventTaskParams:WorkflowTaskUpdateGoogleCalendarEventTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateIncident:WorkflowTaskUpdateIncident": {
            "description": "Manages workflow update_incident task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateIncidentTaskParams:WorkflowTaskUpdateIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateIncidentTaskParams:WorkflowTaskUpdateIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateIncident resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateIncidentTaskParams:WorkflowTaskUpdateIncidentTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateJiraIssue:WorkflowTaskUpdateJiraIssue": {
            "description": "Manages workflow update_jira_issue task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateJiraIssueTaskParams:WorkflowTaskUpdateJiraIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateJiraIssueTaskParams:WorkflowTaskUpdateJiraIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateJiraIssue resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateJiraIssueTaskParams:WorkflowTaskUpdateJiraIssueTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateLinearIssue:WorkflowTaskUpdateLinearIssue": {
            "description": "Manages workflow update_linear_issue task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateLinearIssueTaskParams:WorkflowTaskUpdateLinearIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateLinearIssueTaskParams:WorkflowTaskUpdateLinearIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateLinearIssue resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateLinearIssueTaskParams:WorkflowTaskUpdateLinearIssueTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateServiceNowIncident:WorkflowTaskUpdateServiceNowIncident": {
            "description": "Manages workflow update_service_now_incident task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateServiceNowIncidentTaskParams:WorkflowTaskUpdateServiceNowIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateServiceNowIncidentTaskParams:WorkflowTaskUpdateServiceNowIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateServiceNowIncident resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateServiceNowIncidentTaskParams:WorkflowTaskUpdateServiceNowIncidentTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateShortcutStory:WorkflowTaskUpdateShortcutStory": {
            "description": "Manages workflow update_shortcut_story task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateShortcutStoryTaskParams:WorkflowTaskUpdateShortcutStoryTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateShortcutStoryTaskParams:WorkflowTaskUpdateShortcutStoryTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateShortcutStory resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateShortcutStoryTaskParams:WorkflowTaskUpdateShortcutStoryTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateShortcutTask:WorkflowTaskUpdateShortcutTask": {
            "description": "Manages workflow update_shortcut_task task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateShortcutTaskTaskParams:WorkflowTaskUpdateShortcutTaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateShortcutTaskTaskParams:WorkflowTaskUpdateShortcutTaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateShortcutTask resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateShortcutTaskTaskParams:WorkflowTaskUpdateShortcutTaskTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateSlackChannelTopic:WorkflowTaskUpdateSlackChannelTopic": {
            "description": "Manages workflow update_slack_channel_topic task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateSlackChannelTopicTaskParams:WorkflowTaskUpdateSlackChannelTopicTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateSlackChannelTopicTaskParams:WorkflowTaskUpdateSlackChannelTopicTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateSlackChannelTopic resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateSlackChannelTopicTaskParams:WorkflowTaskUpdateSlackChannelTopicTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateStatus:WorkflowTaskUpdateStatus": {
            "description": "Manages workflow update_status task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateStatusTaskParams:WorkflowTaskUpdateStatusTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateStatusTaskParams:WorkflowTaskUpdateStatusTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateStatus resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateStatusTaskParams:WorkflowTaskUpdateStatusTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateTrelloCard:WorkflowTaskUpdateTrelloCard": {
            "description": "Manages workflow update_trello_card task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateTrelloCardTaskParams:WorkflowTaskUpdateTrelloCardTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateTrelloCardTaskParams:WorkflowTaskUpdateTrelloCardTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateTrelloCard resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateTrelloCardTaskParams:WorkflowTaskUpdateTrelloCardTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateZendeskTicket:WorkflowTaskUpdateZendeskTicket": {
            "description": "Manages workflow update_zendesk_ticket task.\n",
            "properties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateZendeskTicketTaskParams:WorkflowTaskUpdateZendeskTicketTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "position",
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "position": {
                    "type": "integer",
                    "description": "The position of the workflow task (1 being top of list)\n"
                },
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateZendeskTicketTaskParams:WorkflowTaskUpdateZendeskTicketTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateZendeskTicket resources.\n",
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "The position of the workflow task (1 being top of list)\n"
                    },
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateZendeskTicketTaskParams:WorkflowTaskUpdateZendeskTicketTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "rootly:index/getCauses:getCauses": {
            "inputs": {
                "description": "A collection of arguments for invoking getCauses.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCauses.\n",
                "properties": {
                    "causes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/rootly:index/getCausesCause:getCausesCause"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "causes",
                    "id"
                ]
            }
        },
        "rootly:index/getCustomFieldOptions:getCustomFieldOptions": {
            "inputs": {
                "description": "A collection of arguments for invoking getCustomFieldOptions.\n",
                "properties": {
                    "color": {
                        "type": "string"
                    },
                    "customFieldId": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "customFieldId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCustomFieldOptions.\n",
                "properties": {
                    "color": {
                        "type": "string"
                    },
                    "customFieldId": {
                        "type": "integer"
                    },
                    "customFieldOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/rootly:index/getCustomFieldOptionsCustomFieldOption:getCustomFieldOptionsCustomFieldOption"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "customFieldId",
                    "customFieldOptions",
                    "id"
                ]
            }
        },
        "rootly:index/getCustomFields:getCustomFields": {
            "inputs": {
                "description": "A collection of arguments for invoking getCustomFields.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCustomFields.\n",
                "properties": {
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/rootly:index/getCustomFieldsCustomField:getCustomFieldsCustomField"
                        }
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "customFields",
                    "id"
                ]
            }
        },
        "rootly:index/getEnvironments:getEnvironments": {
            "inputs": {
                "description": "A collection of arguments for invoking getEnvironments.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEnvironments.\n",
                "properties": {
                    "environments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/rootly:index/getEnvironmentsEnvironment:getEnvironmentsEnvironment"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "environments",
                    "id"
                ]
            }
        },
        "rootly:index/getFunctionalities:getFunctionalities": {
            "inputs": {
                "description": "A collection of arguments for invoking getFunctionalities.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "opsgenieId": {
                        "type": "string"
                    },
                    "pagerdutyId": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFunctionalities.\n",
                "properties": {
                    "functionalities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/rootly:index/getFunctionalitiesFunctionality:getFunctionalitiesFunctionality"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "opsgenieId": {
                        "type": "string"
                    },
                    "pagerdutyId": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "functionalities",
                    "id"
                ]
            }
        },
        "rootly:index/getIncidentRoles:getIncidentRoles": {
            "inputs": {
                "description": "A collection of arguments for invoking getIncidentRoles.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIncidentRoles.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "incidentRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/rootly:index/getIncidentRolesIncidentRole:getIncidentRolesIncidentRole"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "incidentRoles",
                    "id"
                ]
            }
        },
        "rootly:index/getIncidentTypes:getIncidentTypes": {
            "inputs": {
                "description": "A collection of arguments for invoking getIncidentTypes.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIncidentTypes.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "incidentTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/rootly:index/getIncidentTypesIncidentType:getIncidentTypesIncidentType"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "incidentTypes",
                    "id"
                ]
            }
        },
        "rootly:index/getServices:getServices": {
            "inputs": {
                "description": "A collection of arguments for invoking getServices.\n",
                "properties": {
                    "backstageId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "opsgenieId": {
                        "type": "string"
                    },
                    "pagerdutyId": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getServices.\n",
                "properties": {
                    "backstageId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "opsgenieId": {
                        "type": "string"
                    },
                    "pagerdutyId": {
                        "type": "string"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/rootly:index/getServicesService:getServicesService"
                        }
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "services",
                    "id"
                ]
            }
        },
        "rootly:index/getSeverities:getSeverities": {
            "inputs": {
                "description": "A collection of arguments for invoking getSeverities.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSeverities.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "severities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/rootly:index/getSeveritiesSeverity:getSeveritiesSeverity"
                        }
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "severities",
                    "id"
                ]
            }
        },
        "rootly:index/getTeams:getTeams": {
            "inputs": {
                "description": "A collection of arguments for invoking getTeams.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTeams.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "teams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/rootly:index/getTeamsTeam:getTeamsTeam"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "teams",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-rootly/sdk/go/rootly"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Rootly cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/rootlyhq/terraform-provider-rootly)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-rootly` repo](https://github.com/pulumi/pulumi-rootly/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`rootlyhq/terraform-provider-rootly` repo](https://github.com/rootlyhq/terraform-provider-rootly/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/rootlyhq/terraform-provider-rootly)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-rootly` repo](https://github.com/pulumi/pulumi-rootly/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`rootlyhq/terraform-provider-rootly` repo](https://github.com/rootlyhq/terraform-provider-rootly/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}