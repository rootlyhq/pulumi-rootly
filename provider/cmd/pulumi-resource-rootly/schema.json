{
    "name": "rootly",
    "displayName": "Rootly",
    "description": "A Pulumi package for creating and managing Rootly cloud resources.",
    "keywords": [
        "pulumi",
        "rootly",
        "category/cloud"
    ],
    "homepage": "https://rootly.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`rootly` Terraform Provider](https://github.com/rootlyhq/terraform-provider-rootly).",
    "repository": "https://github.com/rootlyhq/pulumi-rootly",
    "logoUrl": "https://raw.githubusercontent.com/rootlyhq/pulumi-rootly/v0.0.3/rootly.svg",
    "pluginDownloadURL": "https://github.com/rootlyhq/pulumi-rootly/releases/v${VERSION}",
    "publisher": "Rootly",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiHost": {
                "type": "string",
                "description": "The Rootly API host. Defaults to https://api.rootly.com\n"
            },
            "apiToken": {
                "type": "string",
                "description": "The Rootly API Token. Generate it from your account at https://rootly.com/account\n"
            }
        }
    },
    "types": {
        "rootly:index/WorkflowActionItemTriggerParams:WorkflowActionItemTriggerParams": {
            "properties": {
                "incidentActionItemCondition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentActionItemConditionGroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentActionItemConditionKind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentActionItemConditionPriority": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentActionItemConditionStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentActionItemKinds": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentActionItemPriorities": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentActionItemStatuses": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentCondition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionAcknowledgedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionDetectedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionEnvironment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionFunctionality": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionGroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionIncidentRoles": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionIncidentType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionKind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionMitigatedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionResolvedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionService": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionSeverity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionStartedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionSummary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionVisibility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionalInactivity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentKinds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentStatuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentVisibilities": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggerType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowAlertTriggerParams:WorkflowAlertTriggerParams": {
            "properties": {
                "alertCondition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertConditionLabel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertConditionPayload": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertConditionSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertLabels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertPayloads": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertQueryPayload": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggerType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowIncidentTriggerParams:WorkflowIncidentTriggerParams": {
            "properties": {
                "incidentCondition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionAcknowledgedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionDetectedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionEnvironment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionFunctionality": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionGroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionIncidentRoles": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionIncidentType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionKind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionMitigatedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionResolvedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionService": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionSeverity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionStartedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionSummary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionVisibility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionalInactivity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentKinds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentStatuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentVisibilities": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggerType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowPostMortemTriggerParams:WorkflowPostMortemTriggerParams": {
            "properties": {
                "incidentCondition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionEnvironment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionFunctionality": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionGroup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionIncidentType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionKind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionService": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionSeverity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentConditionVisibility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentKinds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentPostMortemCondition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentPostMortemConditionCause": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentPostMortemConditionStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentStatuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentVisibilities": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggerType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowPulseTriggerParams:WorkflowPulseTriggerParams": {
            "properties": {
                "pulseCondition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulseConditionLabel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulseConditionPayload": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulseConditionSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulseLabels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulsePayloads": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulseQueryPayload": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pulseSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggerType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowTaskAddActionItemTaskParams:WorkflowTaskAddActionItemTaskParams": {
            "properties": {
                "assignedToUserId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToIncidentTimeline": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAddActionItemTaskParamsPostToSlackChannel:WorkflowTaskAddActionItemTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "priority",
                "status",
                "summary"
            ]
        },
        "rootly:index/WorkflowTaskAddActionItemTaskParamsPostToSlackChannel:WorkflowTaskAddActionItemTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskAddRoleTaskParams:WorkflowTaskAddRoleTaskParams": {
            "properties": {
                "assignedToUserId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentRoleId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "incidentRoleId"
            ]
        },
        "rootly:index/WorkflowTaskAddSlackBookmarkTaskParams:WorkflowTaskAddSlackBookmarkTaskParams": {
            "properties": {
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emoji": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "playbookId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "channel"
            ]
        },
        "rootly:index/WorkflowTaskAddTeamTaskParams:WorkflowTaskAddTeamTaskParams": {
            "properties": {
                "groupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "groupId"
            ]
        },
        "rootly:index/WorkflowTaskAddToTimelineTaskParams:WorkflowTaskAddToTimelineTaskParams": {
            "properties": {
                "event": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel:WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "event"
            ]
        },
        "rootly:index/WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel:WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskArchiveSlackChannelsTaskParams:WorkflowTaskArchiveSlackChannelsTaskParams": {
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskArchiveSlackChannelsTaskParamsChannel:WorkflowTaskArchiveSlackChannelsTaskParamsChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "channels"
            ]
        },
        "rootly:index/WorkflowTaskArchiveSlackChannelsTaskParamsChannel:WorkflowTaskArchiveSlackChannelsTaskParamsChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskAttachDatadogDashboardsTaskParams:WorkflowTaskAttachDatadogDashboardsTaskParams": {
            "properties": {
                "dashboards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard:WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel:WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dashboards"
            ]
        },
        "rootly:index/WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard:WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel:WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskAutoAssignRoleOpsgenieTaskParams:WorkflowTaskAutoAssignRoleOpsgenieTaskParams": {
            "properties": {
                "incidentRoleId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schedule": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "incidentRoleId",
                "schedule"
            ]
        },
        "rootly:index/WorkflowTaskAutoAssignRolePagerdutyTaskParams:WorkflowTaskAutoAssignRolePagerdutyTaskParams": {
            "properties": {
                "escalationPolicy": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentRoleId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schedule": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "incidentRoleId"
            ]
        },
        "rootly:index/WorkflowTaskAutoAssignRoleVictorOpsTaskParams:WorkflowTaskAutoAssignRoleVictorOpsTaskParams": {
            "properties": {
                "incidentRoleId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schedule": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "incidentRoleId",
                "schedule"
            ]
        },
        "rootly:index/WorkflowTaskCallPeopleTaskParams:WorkflowTaskCallPeopleTaskParams": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "phoneNumbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content",
                "name",
                "phoneNumbers"
            ]
        },
        "rootly:index/WorkflowTaskCreateAirtableTableRecordTaskParams:WorkflowTaskCreateAirtableTableRecordTaskParams": {
            "properties": {
                "baseKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tableName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "baseKey",
                "tableName"
            ]
        },
        "rootly:index/WorkflowTaskCreateAsanaSubtaskTaskParams:WorkflowTaskCreateAsanaSubtaskTaskParams": {
            "properties": {
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "notes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentTaskId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "completion",
                "parentTaskId",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateAsanaTaskTaskParams:WorkflowTaskCreateAsanaTaskTaskParams": {
            "properties": {
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateAsanaTaskTaskParamsProject:WorkflowTaskCreateAsanaTaskTaskParamsProject"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workspace": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "completion",
                "projects",
                "title",
                "workspace"
            ]
        },
        "rootly:index/WorkflowTaskCreateAsanaTaskTaskParamsProject:WorkflowTaskCreateAsanaTaskTaskParamsProject": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskCreateConfluencePageTaskParams:WorkflowTaskCreateConfluencePageTaskParams": {
            "properties": {
                "ancestors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateConfluencePageTaskParamsAncestor:WorkflowTaskCreateConfluencePageTaskParamsAncestor"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postMortemTemplateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "space": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "space",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateConfluencePageTaskParamsAncestor:WorkflowTaskCreateConfluencePageTaskParamsAncestor": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskCreateDatadogNotebookTaskParams:WorkflowTaskCreateDatadogNotebookTaskParams": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postMortemTemplateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "kind",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateDropboxPaperPageTaskParams:WorkflowTaskCreateDropboxPaperPageTaskParams": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentFolder": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postMortemTemplateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateGithubIssueTaskParams:WorkflowTaskCreateGithubIssueTaskParams": {
            "properties": {
                "body": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repository": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "repository",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateGoogleCalendarEventTaskParams:WorkflowTaskCreateGoogleCalendarEventTaskParams": {
            "properties": {
                "attendees": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "canGuestsInviteOthers": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "canGuestsModifyEvent": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "canGuestsSeeOtherGuests": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "daysUntilMeeting": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludeWeekends": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "meetingDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToIncidentTimeline": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sendUpdates": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeOfMeeting": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attendees",
                "daysUntilMeeting",
                "description",
                "meetingDuration",
                "summary",
                "timeOfMeeting"
            ]
        },
        "rootly:index/WorkflowTaskCreateGoogleDocsPageTaskParams:WorkflowTaskCreateGoogleDocsPageTaskParams": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "drive": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentFolder": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postMortemTemplateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateGoogleMeetingTaskParams:WorkflowTaskCreateGoogleMeetingTaskParams": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToIncidentTimeline": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel:WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "summary"
            ]
        },
        "rootly:index/WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel:WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskCreateIncidentTaskParams:WorkflowTaskCreateIncidentTaskParams": {
            "properties": {
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "functionalityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "private": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "severityId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateJiraIssueTaskParams:WorkflowTaskCreateJiraIssueTaskParams": {
            "properties": {
                "assignUserEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dueDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issueType": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reporterUserEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "issueType",
                "projectKey",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateJiraSubtaskTaskParams:WorkflowTaskCreateJiraSubtaskTaskParams": {
            "properties": {
                "assignUserEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dueDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentIssueId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reporterUserEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subtaskIssueType": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "parentIssueId",
                "projectKey",
                "subtaskIssueType",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateLinearIssueTaskParams:WorkflowTaskCreateLinearIssueTaskParams": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "state": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "team": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "state",
                "team",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateLinearSubtaskIssueTaskParams:WorkflowTaskCreateLinearSubtaskIssueTaskParams": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentIssueId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "state": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "parentIssueId",
                "state",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams:WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToIncidentTimeline": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel:WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "subject"
            ]
        },
        "rootly:index/WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel:WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskCreateNotionPageTaskParams:WorkflowTaskCreateNotionPageTaskParams": {
            "properties": {
                "parentPage": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postMortemTemplateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "parentPage"
            ]
        },
        "rootly:index/WorkflowTaskCreateServiceNowIncidentTaskParams:WorkflowTaskCreateServiceNowIncidentTaskParams": {
            "properties": {
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateShortcutStoryTaskParams:WorkflowTaskCreateShortcutStoryTaskParams": {
            "properties": {
                "archivation": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dueDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "project": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "archivation",
                "kind",
                "project",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateShortcutTaskTaskParams:WorkflowTaskCreateShortcutTaskTaskParams": {
            "properties": {
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentStoryId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "completion",
                "description",
                "parentStoryId"
            ]
        },
        "rootly:index/WorkflowTaskCreateTrelloCardTaskParams:WorkflowTaskCreateTrelloCardTaskParams": {
            "properties": {
                "archivation": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "board": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dueDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateTrelloCardTaskParamsLabel:WorkflowTaskCreateTrelloCardTaskParamsLabel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "list": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "board",
                "list",
                "title"
            ]
        },
        "rootly:index/WorkflowTaskCreateTrelloCardTaskParamsLabel:WorkflowTaskCreateTrelloCardTaskParamsLabel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskCreateWebexMeetingTaskParams:WorkflowTaskCreateWebexMeetingTaskParams": {
            "properties": {
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToIncidentTimeline": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel:WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "topic"
            ]
        },
        "rootly:index/WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel:WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskCreateZendeskTicketTaskParams:WorkflowTaskCreateZendeskTicketTaskParams": {
            "properties": {
                "comment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "kind",
                "subject"
            ]
        },
        "rootly:index/WorkflowTaskCreateZoomMeetingTaskParams:WorkflowTaskCreateZoomMeetingTaskParams": {
            "properties": {
                "autoRecording": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "createAsEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToIncidentTimeline": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel:WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "topic"
            ]
        },
        "rootly:index/WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel:WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskGetGithubCommitsTaskParams:WorkflowTaskGetGithubCommitsTaskParams": {
            "properties": {
                "branch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "githubRepositoryNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pastDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel:WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "branch",
                "pastDuration"
            ]
        },
        "rootly:index/WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel:WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskGetGitlabCommitsTaskParams:WorkflowTaskGetGitlabCommitsTaskParams": {
            "properties": {
                "branch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gitlabRepositoryNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pastDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel:WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "branch",
                "pastDuration"
            ]
        },
        "rootly:index/WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel:WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskGetPulsesTaskParams:WorkflowTaskGetPulsesTaskParams": {
            "properties": {
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pastDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskGetPulsesTaskParamsPostToSlackChannel:WorkflowTaskGetPulsesTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "pastDuration"
            ]
        },
        "rootly:index/WorkflowTaskGetPulsesTaskParamsPostToSlackChannel:WorkflowTaskGetPulsesTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskHttpClientTaskParams:WorkflowTaskHttpClientTaskParams": {
            "properties": {
                "body": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "params": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskHttpClientTaskParamsPostToSlackChannel:WorkflowTaskHttpClientTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "succeedOnStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "succeedOnStatus"
            ]
        },
        "rootly:index/WorkflowTaskHttpClientTaskParamsPostToSlackChannel:WorkflowTaskHttpClientTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskInviteToSlackChannelOpsgenieTaskParams:WorkflowTaskInviteToSlackChannelOpsgenieTaskParams": {
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schedule": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "schedule"
            ]
        },
        "rootly:index/WorkflowTaskInviteToSlackChannelPagerdutyTaskParams:WorkflowTaskInviteToSlackChannelPagerdutyTaskParams": {
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "escalationPolicy": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schedule": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowTaskInviteToSlackChannelTaskParams:WorkflowTaskInviteToSlackChannelTaskParams": {
            "properties": {
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slackUserGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup:WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slackUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelTaskParamsSlackUser:WorkflowTaskInviteToSlackChannelTaskParamsSlackUser"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "channel"
            ]
        },
        "rootly:index/WorkflowTaskInviteToSlackChannelTaskParamsSlackUser:WorkflowTaskInviteToSlackChannelTaskParamsSlackUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup:WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskInviteToSlackChannelVictorOpsTaskParams:WorkflowTaskInviteToSlackChannelVictorOpsTaskParams": {
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schedule": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "schedule"
            ]
        },
        "rootly:index/WorkflowTaskPageOpsgenieOnCallRespondersTaskParams:WorkflowTaskPageOpsgenieOnCallRespondersTaskParams": {
            "properties": {
                "priority": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam:WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser:WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam:WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser:WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskPagePagerdutyOnCallRespondersTaskParams:WorkflowTaskPagePagerdutyOnCallRespondersTaskParams": {
            "properties": {
                "escalationPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy:WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urgency": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser:WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "service"
            ]
        },
        "rootly:index/WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy:WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser:WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskPageVictorOpsOnCallRespondersTaskParams:WorkflowTaskPageVictorOpsOnCallRespondersTaskParams": {
            "properties": {
                "escalationPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy:WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser:WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy:WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser:WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskPrintTaskParams:WorkflowTaskPrintTaskParams": {
            "properties": {
                "message": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "message"
            ]
        },
        "rootly:index/WorkflowTaskPublishIncidentTaskParams:WorkflowTaskPublishIncidentTaskParams": {
            "properties": {
                "event": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incident": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicTitle": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusPageIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "event",
                "incident",
                "publicTitle",
                "status",
                "statusPageIds"
            ]
        },
        "rootly:index/WorkflowTaskRedisClientTaskParams:WorkflowTaskRedisClientTaskParams": {
            "properties": {
                "commands": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventMessage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskRedisClientTaskParamsPostToSlackChannel:WorkflowTaskRedisClientTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "commands",
                "url"
            ]
        },
        "rootly:index/WorkflowTaskRedisClientTaskParamsPostToSlackChannel:WorkflowTaskRedisClientTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskRenameSlackChannelTaskParams:WorkflowTaskRenameSlackChannelTaskParams": {
            "properties": {
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "title"
            ]
        },
        "rootly:index/WorkflowTaskRunCommandHerokuTaskParams:WorkflowTaskRunCommandHerokuTaskParams": {
            "properties": {
                "appName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "command": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel:WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "appName",
                "command",
                "size"
            ]
        },
        "rootly:index/WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel:WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSendEmailTaskParams:WorkflowTaskSendEmailTaskParams": {
            "properties": {
                "body": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preheader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "body",
                "subject",
                "tos"
            ]
        },
        "rootly:index/WorkflowTaskSendSlackMessageTaskParams:WorkflowTaskSendSlackMessageTaskParams": {
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSendSlackMessageTaskParamsChannel:WorkflowTaskSendSlackMessageTaskParamsChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slackUserGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup:WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slackUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSendSlackMessageTaskParamsSlackUser:WorkflowTaskSendSlackMessageTaskParamsSlackUser"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "text"
            ]
        },
        "rootly:index/WorkflowTaskSendSlackMessageTaskParamsChannel:WorkflowTaskSendSlackMessageTaskParamsChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSendSlackMessageTaskParamsSlackUser:WorkflowTaskSendSlackMessageTaskParamsSlackUser": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup:WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSendSmsTaskParams:WorkflowTaskSendSmsTaskParams": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "phoneNumbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content",
                "name",
                "phoneNumbers"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotDatadogGraphTaskParams:WorkflowTaskSnapshotDatadogGraphTaskParams": {
            "properties": {
                "dashboards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard:WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQueries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pastDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel:WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dashboards",
                "pastDuration"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard:WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel:WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotGrafanaDashboardTaskParams:WorkflowTaskSnapshotGrafanaDashboardTaskParams": {
            "properties": {
                "dashboards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard:WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel:WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dashboards"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard:WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel:WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotLookerLookTaskParams:WorkflowTaskSnapshotLookerLookTaskParams": {
            "properties": {
                "dashboards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotLookerLookTaskParamsDashboard:WorkflowTaskSnapshotLookerLookTaskParamsDashboard"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel:WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dashboards"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotLookerLookTaskParamsDashboard:WorkflowTaskSnapshotLookerLookTaskParamsDashboard": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel:WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotNewRelicGraphTaskParams:WorkflowTaskSnapshotNewRelicGraphTaskParams": {
            "properties": {
                "metricQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToSlackChannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel:WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricQuery",
                "metricType"
            ]
        },
        "rootly:index/WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel:WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskTweetTwitterMessageTaskParams:WorkflowTaskTweetTwitterMessageTaskParams": {
            "properties": {
                "message": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "message"
            ]
        },
        "rootly:index/WorkflowTaskUpdateAirtableTableRecordTaskParams:WorkflowTaskUpdateAirtableTableRecordTaskParams": {
            "properties": {
                "baseKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recordId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tableName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "baseKey",
                "recordId",
                "tableName"
            ]
        },
        "rootly:index/WorkflowTaskUpdateAsanaTaskTaskParams:WorkflowTaskUpdateAsanaTaskTaskParams": {
            "properties": {
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "completion",
                "taskId"
            ]
        },
        "rootly:index/WorkflowTaskUpdateGithubIssueTaskParams:WorkflowTaskUpdateGithubIssueTaskParams": {
            "properties": {
                "body": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issueId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "completion",
                "issueId"
            ]
        },
        "rootly:index/WorkflowTaskUpdateGoogleCalendarEventTaskParams:WorkflowTaskUpdateGoogleCalendarEventTaskParams": {
            "properties": {
                "adjustmentDays": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attendees": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "canGuestsInviteOthers": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "canGuestsModifyEvent": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "canGuestsSeeOtherGuests": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "meetingDuration": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postToIncidentTimeline": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replaceAttendees": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sendUpdates": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeOfMeeting": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "eventId"
            ]
        },
        "rootly:index/WorkflowTaskUpdateIncidentTaskParams:WorkflowTaskUpdateIncidentTaskParams": {
            "properties": {
                "acknowledgedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detectedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "functionalityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mitigatedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "private": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resolvedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "severityId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summary": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "rootly:index/WorkflowTaskUpdateJiraIssueTaskParams:WorkflowTaskUpdateJiraIssueTaskParams": {
            "properties": {
                "assignUserEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issueId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reporterUserEmail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "issueId",
                "projectKey"
            ]
        },
        "rootly:index/WorkflowTaskUpdateLinearIssueTaskParams:WorkflowTaskUpdateLinearIssueTaskParams": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issueId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "state": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "issueId"
            ]
        },
        "rootly:index/WorkflowTaskUpdateServiceNowIncidentTaskParams:WorkflowTaskUpdateServiceNowIncidentTaskParams": {
            "properties": {
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFieldsMapping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incidentId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "incidentId"
            ]
        },
        "rootly:index/WorkflowTaskUpdateShortcutStoryTaskParams:WorkflowTaskUpdateShortcutStoryTaskParams": {
            "properties": {
                "archivation": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dueDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storyId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "archivation",
                "storyId"
            ]
        },
        "rootly:index/WorkflowTaskUpdateShortcutTaskTaskParams:WorkflowTaskUpdateShortcutTaskTaskParams": {
            "properties": {
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentStoryId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "completion",
                "parentStoryId",
                "taskId"
            ]
        },
        "rootly:index/WorkflowTaskUpdateSlackChannelTopicTaskParams:WorkflowTaskUpdateSlackChannelTopicTaskParams": {
            "properties": {
                "channel": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "channel",
                "topic"
            ]
        },
        "rootly:index/WorkflowTaskUpdateStatusTaskParams:WorkflowTaskUpdateStatusTaskParams": {
            "properties": {
                "inactivityTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "status"
            ]
        },
        "rootly:index/WorkflowTaskUpdateTrelloCardTaskParams:WorkflowTaskUpdateTrelloCardTaskParams": {
            "properties": {
                "archivation": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "board": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cardId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dueDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateTrelloCardTaskParamsLabel:WorkflowTaskUpdateTrelloCardTaskParamsLabel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "list": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "archivation",
                "cardId"
            ]
        },
        "rootly:index/WorkflowTaskUpdateTrelloCardTaskParamsLabel:WorkflowTaskUpdateTrelloCardTaskParamsLabel": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ]
        },
        "rootly:index/WorkflowTaskUpdateZendeskTicketTaskParams:WorkflowTaskUpdateZendeskTicketTaskParams": {
            "properties": {
                "completion": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ticketId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ticketId"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the rootly package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiHost": {
                "type": "string",
                "description": "The Rootly API host. Defaults to https://api.rootly.com\n"
            },
            "apiToken": {
                "type": "string",
                "description": "The Rootly API Token. Generate it from your account at https://rootly.com/account\n"
            }
        },
        "inputProperties": {
            "apiHost": {
                "type": "string",
                "description": "The Rootly API host. Defaults to https://api.rootly.com\n"
            },
            "apiToken": {
                "type": "string",
                "description": "The Rootly API Token. Generate it from your account at https://rootly.com/account\n"
            }
        }
    },
    "resources": {
        "rootly:index/cause:Cause": {
            "description": "Manages incident causes (e.g Bug, Load, Human Error, 3rd party Outage, Configuration Change).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.Cause(\"foo\", {});\n```\n```python\nimport pulumi\nimport pulumi_rootly as rootly\n\nfoo = rootly.Cause(\"foo\")\n```\n```csharp\nusing Pulumi;\nusing Rootly = Pulumi.Rootly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Rootly.Cause(\"foo\", new Rootly.CauseArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-rootly/sdk/go/rootly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := rootly.NewCause(ctx, \"foo\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/cause:Cause foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the cause\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cause\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the cause\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cause\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cause resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the cause\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the cause\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/customField:CustomField": {
            "description": "Manages custom fields.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.CustomField(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/customField:CustomField foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the custom field\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the custom field is enabled or not\n"
                },
                "kind": {
                    "type": "string",
                    "description": "The kind of the custom field\n"
                },
                "label": {
                    "type": "string",
                    "description": "The name of the custom field\n"
                },
                "requireds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Where the custom field is required.\n"
                },
                "showns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Where the custom field is shown.\n"
                }
            },
            "required": [
                "enabled",
                "kind",
                "label"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the custom field\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the custom field is enabled or not\n"
                },
                "kind": {
                    "type": "string",
                    "description": "The kind of the custom field\n"
                },
                "label": {
                    "type": "string",
                    "description": "The name of the custom field\n"
                },
                "requireds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Where the custom field is required.\n"
                },
                "showns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Where the custom field is shown.\n"
                }
            },
            "requiredInputs": [
                "kind",
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomField resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the custom field\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the custom field is enabled or not\n"
                    },
                    "kind": {
                        "type": "string",
                        "description": "The kind of the custom field\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The name of the custom field\n"
                    },
                    "requireds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Where the custom field is required.\n"
                    },
                    "showns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Where the custom field is shown.\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/customFieldOption:CustomFieldOption": {
            "description": "Manages custom field options.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.CustomFieldOption(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/customFieldOption:CustomFieldOption foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The color of the custom field option\n"
                },
                "customFieldId": {
                    "type": "integer",
                    "description": "The ID of the parent custom field\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the custom field option\n"
                }
            },
            "required": [
                "customFieldId",
                "value"
            ],
            "inputProperties": {
                "color": {
                    "type": "string",
                    "description": "The color of the custom field option\n"
                },
                "customFieldId": {
                    "type": "integer",
                    "description": "The ID of the parent custom field\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the custom field option\n"
                }
            },
            "requiredInputs": [
                "customFieldId",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomFieldOption resources.\n",
                "properties": {
                    "color": {
                        "type": "string",
                        "description": "The color of the custom field option\n"
                    },
                    "customFieldId": {
                        "type": "integer",
                        "description": "The ID of the parent custom field\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the custom field option\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/environment:Environment": {
            "description": "Manages incident environments (e.g production, development).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.Environment(\"foo\", {});\n```\n```python\nimport pulumi\nimport pulumi_rootly as rootly\n\nfoo = rootly.Environment(\"foo\")\n```\n```csharp\nusing Pulumi;\nusing Rootly = Pulumi.Rootly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Rootly.Environment(\"foo\", new Rootly.EnvironmentArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-rootly/sdk/go/rootly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := rootly.NewEnvironment(ctx, \"foo\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/environment:Environment foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The color of the environment\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the environment\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the environment\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the environment\n"
                }
            },
            "required": [
                "name",
                "slug"
            ],
            "inputProperties": {
                "color": {
                    "type": "string",
                    "description": "The color of the environment\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the environment\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the environment\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the environment\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Environment resources.\n",
                "properties": {
                    "color": {
                        "type": "string",
                        "description": "The color of the environment\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the environment\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the environment\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The slug of the environment\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/functionality:Functionality": {
            "description": "Manages functionalities (e.g Logging In, Search, Adds items to Cart).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.Functionality(\"foo\", {});\n```\n```python\nimport pulumi\nimport pulumi_rootly as rootly\n\nfoo = rootly.Functionality(\"foo\")\n```\n```csharp\nusing Pulumi;\nusing Rootly = Pulumi.Rootly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Rootly.Functionality(\"foo\", new Rootly.FunctionalityArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-rootly/sdk/go/rootly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := rootly.NewFunctionality(ctx, \"foo\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/functionality:Functionality foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The color of the severity\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the functionality\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the functionality\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the severity\n"
                }
            },
            "required": [
                "name",
                "slug"
            ],
            "inputProperties": {
                "color": {
                    "type": "string",
                    "description": "The color of the severity\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the functionality\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the functionality\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the severity\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Functionality resources.\n",
                "properties": {
                    "color": {
                        "type": "string",
                        "description": "The color of the severity\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the functionality\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the functionality\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The slug of the severity\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/incidentRole:IncidentRole": {
            "description": "Manages Incident Roles (e.g Commander, Ops Lead, Communication).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.IncidentRole(\"foo\", {});\n```\n```python\nimport pulumi\nimport pulumi_rootly as rootly\n\nfoo = rootly.IncidentRole(\"foo\")\n```\n```csharp\nusing Pulumi;\nusing Rootly = Pulumi.Rootly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Rootly.IncidentRole(\"foo\", new Rootly.IncidentRoleArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-rootly/sdk/go/rootly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := rootly.NewIncidentRole(ctx, \"foo\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/incidentRole:IncidentRole foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the incident role\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the incident role is enabled or not\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the incident role\n"
                },
                "summary": {
                    "type": "string",
                    "description": "The summary of the incident role\n"
                }
            },
            "required": [
                "enabled",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the incident role\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the incident role is enabled or not\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the incident role\n"
                },
                "summary": {
                    "type": "string",
                    "description": "The summary of the incident role\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IncidentRole resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the incident role\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the incident role is enabled or not\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the incident role\n"
                    },
                    "summary": {
                        "type": "string",
                        "description": "The summary of the incident role\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/incidentType:IncidentType": {
            "description": "Manages incident types (e.g Cloud, Customer Facing, Security, Training).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.IncidentType(\"foo\", {});\n```\n```python\nimport pulumi\nimport pulumi_rootly as rootly\n\nfoo = rootly.IncidentType(\"foo\")\n```\n```csharp\nusing Pulumi;\nusing Rootly = Pulumi.Rootly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Rootly.IncidentType(\"foo\", new Rootly.IncidentTypeArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-rootly/sdk/go/rootly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := rootly.NewIncidentType(ctx, \"foo\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/incidentType:IncidentType foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The cikir of the incident type\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the incident type\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the incident type\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "color": {
                    "type": "string",
                    "description": "The cikir of the incident type\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the incident type\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the incident type\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IncidentType resources.\n",
                "properties": {
                    "color": {
                        "type": "string",
                        "description": "The cikir of the incident type\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the incident type\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the incident type\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/service:Service": {
            "description": "Manages Services (e.g elasticsearch-prod, redis-preprod, customer-postgresql-prod).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.Service(\"foo\", {});\n```\n```python\nimport pulumi\nimport pulumi_rootly as rootly\n\nfoo = rootly.Service(\"foo\")\n```\n```csharp\nusing Pulumi;\nusing Rootly = Pulumi.Rootly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Rootly.Service(\"foo\", new Rootly.ServiceArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-rootly/sdk/go/rootly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := rootly.NewService(ctx, \"foo\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/service:Service foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The color chosen for the service\n"
                },
                "description": {
                    "type": "string",
                    "description": "For internal use only\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service\n"
                },
                "publicDescription": {
                    "type": "string",
                    "description": "This will be displayed on your status pages to explain to your customer the use of this service.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the service\n"
                }
            },
            "required": [
                "name",
                "slug"
            ],
            "inputProperties": {
                "color": {
                    "type": "string",
                    "description": "The color chosen for the service\n"
                },
                "description": {
                    "type": "string",
                    "description": "For internal use only\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service\n"
                },
                "publicDescription": {
                    "type": "string",
                    "description": "This will be displayed on your status pages to explain to your customer the use of this service.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the service\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Service resources.\n",
                "properties": {
                    "color": {
                        "type": "string",
                        "description": "The color chosen for the service\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "For internal use only\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the service\n"
                    },
                    "publicDescription": {
                        "type": "string",
                        "description": "This will be displayed on your status pages to explain to your customer the use of this service.\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The slug of the service\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/severity:Severity": {
            "description": "Manages Severities (e.g SEV0, SEV1, SEV2, SEV3).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.Severity(\"foo\", {});\n```\n```python\nimport pulumi\nimport pulumi_rootly as rootly\n\nfoo = rootly.Severity(\"foo\")\n```\n```csharp\nusing Pulumi;\nusing Rootly = Pulumi.Rootly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Rootly.Severity(\"foo\", new Rootly.SeverityArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-rootly/sdk/go/rootly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := rootly.NewSeverity(ctx, \"foo\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/severity:Severity foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The color of the severity\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the severity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the severity\n"
                },
                "severity": {
                    "type": "string",
                    "description": "The description of the severity\n",
                    "language": {
                        "csharp": {
                            "name": "rootly_severity"
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the severity\n"
                }
            },
            "required": [
                "name",
                "slug"
            ],
            "inputProperties": {
                "color": {
                    "type": "string",
                    "description": "The color of the severity\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the severity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the severity\n"
                },
                "severity": {
                    "type": "string",
                    "description": "The description of the severity\n",
                    "language": {
                        "csharp": {
                            "name": "rootly_severity"
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the severity\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Severity resources.\n",
                "properties": {
                    "color": {
                        "type": "string",
                        "description": "The color of the severity\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the severity\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the severity\n"
                    },
                    "severity": {
                        "type": "string",
                        "description": "The description of the severity\n",
                        "language": {
                            "csharp": {
                                "name": "rootly_severity"
                            }
                        }
                    },
                    "slug": {
                        "type": "string",
                        "description": "The slug of the severity\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/team:Team": {
            "description": "Manages Teams (e.g Infrastructure, Security, Search).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.Team(\"foo\", {});\n```\n```python\nimport pulumi\nimport pulumi_rootly as rootly\n\nfoo = rootly.Team(\"foo\")\n```\n```csharp\nusing Pulumi;\nusing Rootly = Pulumi.Rootly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Rootly.Team(\"foo\", new Rootly.TeamArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-rootly/sdk/go/rootly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := rootly.NewTeam(ctx, \"foo\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/team:Team foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The color chosen for the team\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the team\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the team\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "color": {
                    "type": "string",
                    "description": "The color chosen for the team\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the team\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the team\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Team resources.\n",
                "properties": {
                    "color": {
                        "type": "string",
                        "description": "The color chosen for the team\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the team\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the team\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowActionItem:WorkflowActionItem": {
            "description": "Manages workflows.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowActionItem(\"foo\", {});\n```\n```python\nimport pulumi\nimport pulumi_rootly as rootly\n\nfoo = rootly.WorkflowActionItem(\"foo\")\n```\n```csharp\nusing Pulumi;\nusing Rootly = Pulumi.Rootly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Rootly.WorkflowActionItem(\"foo\", new Rootly.WorkflowActionItemArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-rootly/sdk/go/rootly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := rootly.NewWorkflowActionItem(ctx, \"foo\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowActionItem:WorkflowActionItem foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowActionItemTriggerParams:WorkflowActionItemTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                }
            },
            "required": [
                "command",
                "enabled",
                "name",
                "repeatOns",
                "triggerParams"
            ],
            "inputProperties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowActionItemTriggerParams:WorkflowActionItemTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowActionItem resources.\n",
                "properties": {
                    "command": {
                        "type": "string",
                        "description": "The workflow command.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the workflow\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the workflow is enabled or not\n"
                    },
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Environment IDs required to trigger workflow.\n"
                    },
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group IDs required to trigger workflow.\n"
                    },
                    "incidentTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Incident type IDs required to trigger workflow.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workflow\n"
                    },
                    "repeatEveryDuration": {
                        "type": "string",
                        "description": "Repeat workflow every duration.\n"
                    },
                    "repeatOns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Repeat workflow on days.\n"
                    },
                    "serviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Service IDs required to trigger workflow.\n"
                    },
                    "severityIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Severity IDs required to trigger workflow.\n"
                    },
                    "triggerParams": {
                        "$ref": "#/types/rootly:index/WorkflowActionItemTriggerParams:WorkflowActionItemTriggerParams",
                        "description": "The conditions for triggering this workflow.\n"
                    },
                    "wait": {
                        "type": "string",
                        "description": "Wait before running workflow.\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowAlert:WorkflowAlert": {
            "description": "Manages workflows.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowAlert(\"foo\", {});\n```\n```python\nimport pulumi\nimport pulumi_rootly as rootly\n\nfoo = rootly.WorkflowAlert(\"foo\")\n```\n```csharp\nusing Pulumi;\nusing Rootly = Pulumi.Rootly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Rootly.WorkflowAlert(\"foo\", new Rootly.WorkflowAlertArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-rootly/sdk/go/rootly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := rootly.NewWorkflowAlert(ctx, \"foo\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowAlert:WorkflowAlert foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowAlertTriggerParams:WorkflowAlertTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                }
            },
            "required": [
                "command",
                "enabled",
                "name",
                "repeatOns",
                "triggerParams"
            ],
            "inputProperties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowAlertTriggerParams:WorkflowAlertTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowAlert resources.\n",
                "properties": {
                    "command": {
                        "type": "string",
                        "description": "The workflow command.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the workflow\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the workflow is enabled or not\n"
                    },
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Environment IDs required to trigger workflow.\n"
                    },
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group IDs required to trigger workflow.\n"
                    },
                    "incidentTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Incident type IDs required to trigger workflow.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workflow\n"
                    },
                    "repeatEveryDuration": {
                        "type": "string",
                        "description": "Repeat workflow every duration.\n"
                    },
                    "repeatOns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Repeat workflow on days.\n"
                    },
                    "serviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Service IDs required to trigger workflow.\n"
                    },
                    "severityIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Severity IDs required to trigger workflow.\n"
                    },
                    "triggerParams": {
                        "$ref": "#/types/rootly:index/WorkflowAlertTriggerParams:WorkflowAlertTriggerParams",
                        "description": "The conditions for triggering this workflow.\n"
                    },
                    "wait": {
                        "type": "string",
                        "description": "Wait before running workflow.\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowIncident:WorkflowIncident": {
            "description": "Manages workflows.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowIncident(\"foo\", {});\n```\n```python\nimport pulumi\nimport pulumi_rootly as rootly\n\nfoo = rootly.WorkflowIncident(\"foo\")\n```\n```csharp\nusing Pulumi;\nusing Rootly = Pulumi.Rootly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Rootly.WorkflowIncident(\"foo\", new Rootly.WorkflowIncidentArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-rootly/sdk/go/rootly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := rootly.NewWorkflowIncident(ctx, \"foo\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowIncident:WorkflowIncident foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowIncidentTriggerParams:WorkflowIncidentTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                }
            },
            "required": [
                "command",
                "enabled",
                "name",
                "repeatOns",
                "triggerParams"
            ],
            "inputProperties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowIncidentTriggerParams:WorkflowIncidentTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowIncident resources.\n",
                "properties": {
                    "command": {
                        "type": "string",
                        "description": "The workflow command.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the workflow\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the workflow is enabled or not\n"
                    },
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Environment IDs required to trigger workflow.\n"
                    },
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group IDs required to trigger workflow.\n"
                    },
                    "incidentTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Incident type IDs required to trigger workflow.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workflow\n"
                    },
                    "repeatEveryDuration": {
                        "type": "string",
                        "description": "Repeat workflow every duration.\n"
                    },
                    "repeatOns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Repeat workflow on days.\n"
                    },
                    "serviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Service IDs required to trigger workflow.\n"
                    },
                    "severityIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Severity IDs required to trigger workflow.\n"
                    },
                    "triggerParams": {
                        "$ref": "#/types/rootly:index/WorkflowIncidentTriggerParams:WorkflowIncidentTriggerParams",
                        "description": "The conditions for triggering this workflow.\n"
                    },
                    "wait": {
                        "type": "string",
                        "description": "Wait before running workflow.\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowPostMortem:WorkflowPostMortem": {
            "description": "Manages workflows.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowPostMortem(\"foo\", {});\n```\n```python\nimport pulumi\nimport pulumi_rootly as rootly\n\nfoo = rootly.WorkflowPostMortem(\"foo\")\n```\n```csharp\nusing Pulumi;\nusing Rootly = Pulumi.Rootly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Rootly.WorkflowPostMortem(\"foo\", new Rootly.WorkflowPostMortemArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-rootly/sdk/go/rootly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := rootly.NewWorkflowPostMortem(ctx, \"foo\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowPostMortem:WorkflowPostMortem foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowPostMortemTriggerParams:WorkflowPostMortemTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                }
            },
            "required": [
                "command",
                "enabled",
                "name",
                "repeatOns",
                "triggerParams"
            ],
            "inputProperties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowPostMortemTriggerParams:WorkflowPostMortemTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowPostMortem resources.\n",
                "properties": {
                    "command": {
                        "type": "string",
                        "description": "The workflow command.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the workflow\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the workflow is enabled or not\n"
                    },
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Environment IDs required to trigger workflow.\n"
                    },
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group IDs required to trigger workflow.\n"
                    },
                    "incidentTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Incident type IDs required to trigger workflow.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workflow\n"
                    },
                    "repeatEveryDuration": {
                        "type": "string",
                        "description": "Repeat workflow every duration.\n"
                    },
                    "repeatOns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Repeat workflow on days.\n"
                    },
                    "serviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Service IDs required to trigger workflow.\n"
                    },
                    "severityIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Severity IDs required to trigger workflow.\n"
                    },
                    "triggerParams": {
                        "$ref": "#/types/rootly:index/WorkflowPostMortemTriggerParams:WorkflowPostMortemTriggerParams",
                        "description": "The conditions for triggering this workflow.\n"
                    },
                    "wait": {
                        "type": "string",
                        "description": "Wait before running workflow.\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowPulse:WorkflowPulse": {
            "description": "Manages workflows.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowPulse(\"foo\", {});\n```\n```python\nimport pulumi\nimport pulumi_rootly as rootly\n\nfoo = rootly.WorkflowPulse(\"foo\")\n```\n```csharp\nusing Pulumi;\nusing Rootly = Pulumi.Rootly;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Rootly.WorkflowPulse(\"foo\", new Rootly.WorkflowPulseArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-rootly/sdk/go/rootly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := rootly.NewWorkflowPulse(ctx, \"foo\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowPulse:WorkflowPulse foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowPulseTriggerParams:WorkflowPulseTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                }
            },
            "required": [
                "command",
                "enabled",
                "name",
                "repeatOns",
                "triggerParams"
            ],
            "inputProperties": {
                "command": {
                    "type": "string",
                    "description": "The workflow command.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the workflow\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the workflow is enabled or not\n"
                },
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs required to trigger workflow.\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group IDs required to trigger workflow.\n"
                },
                "incidentTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Incident type IDs required to trigger workflow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workflow\n"
                },
                "repeatEveryDuration": {
                    "type": "string",
                    "description": "Repeat workflow every duration.\n"
                },
                "repeatOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Repeat workflow on days.\n"
                },
                "serviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service IDs required to trigger workflow.\n"
                },
                "severityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Severity IDs required to trigger workflow.\n"
                },
                "triggerParams": {
                    "$ref": "#/types/rootly:index/WorkflowPulseTriggerParams:WorkflowPulseTriggerParams",
                    "description": "The conditions for triggering this workflow.\n"
                },
                "wait": {
                    "type": "string",
                    "description": "Wait before running workflow.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowPulse resources.\n",
                "properties": {
                    "command": {
                        "type": "string",
                        "description": "The workflow command.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the workflow\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the workflow is enabled or not\n"
                    },
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Environment IDs required to trigger workflow.\n"
                    },
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group IDs required to trigger workflow.\n"
                    },
                    "incidentTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Incident type IDs required to trigger workflow.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workflow\n"
                    },
                    "repeatEveryDuration": {
                        "type": "string",
                        "description": "Repeat workflow every duration.\n"
                    },
                    "repeatOns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Repeat workflow on days.\n"
                    },
                    "serviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Service IDs required to trigger workflow.\n"
                    },
                    "severityIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Severity IDs required to trigger workflow.\n"
                    },
                    "triggerParams": {
                        "$ref": "#/types/rootly:index/WorkflowPulseTriggerParams:WorkflowPulseTriggerParams",
                        "description": "The conditions for triggering this workflow.\n"
                    },
                    "wait": {
                        "type": "string",
                        "description": "Wait before running workflow.\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAddActionItem:WorkflowTaskAddActionItem": {
            "description": "Manages workflow add_action_item task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskAddActionItem(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskAddActionItem:WorkflowTaskAddActionItem foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddActionItemTaskParams:WorkflowTaskAddActionItemTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddActionItemTaskParams:WorkflowTaskAddActionItemTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAddActionItem resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAddActionItemTaskParams:WorkflowTaskAddActionItemTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAddRole:WorkflowTaskAddRole": {
            "description": "Manages workflow add_role task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskAddRole(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskAddRole:WorkflowTaskAddRole foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddRoleTaskParams:WorkflowTaskAddRoleTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddRoleTaskParams:WorkflowTaskAddRoleTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAddRole resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAddRoleTaskParams:WorkflowTaskAddRoleTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAddSlackBookmark:WorkflowTaskAddSlackBookmark": {
            "description": "Manages workflow add_slack_bookmark task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskAddSlackBookmark(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskAddSlackBookmark:WorkflowTaskAddSlackBookmark foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddSlackBookmarkTaskParams:WorkflowTaskAddSlackBookmarkTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddSlackBookmarkTaskParams:WorkflowTaskAddSlackBookmarkTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAddSlackBookmark resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAddSlackBookmarkTaskParams:WorkflowTaskAddSlackBookmarkTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAddTeam:WorkflowTaskAddTeam": {
            "description": "Manages workflow add_team task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskAddTeam(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskAddTeam:WorkflowTaskAddTeam foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddTeamTaskParams:WorkflowTaskAddTeamTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddTeamTaskParams:WorkflowTaskAddTeamTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAddTeam resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAddTeamTaskParams:WorkflowTaskAddTeamTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAddToTimeline:WorkflowTaskAddToTimeline": {
            "description": "Manages workflow add_to_timeline task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskAddToTimeline(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskAddToTimeline:WorkflowTaskAddToTimeline foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddToTimelineTaskParams:WorkflowTaskAddToTimelineTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAddToTimelineTaskParams:WorkflowTaskAddToTimelineTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAddToTimeline resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAddToTimelineTaskParams:WorkflowTaskAddToTimelineTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskArchiveSlackChannels:WorkflowTaskArchiveSlackChannels": {
            "description": "Manages workflow archive_slack_channels task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskArchiveSlackChannels(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskArchiveSlackChannels:WorkflowTaskArchiveSlackChannels foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskArchiveSlackChannelsTaskParams:WorkflowTaskArchiveSlackChannelsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskArchiveSlackChannelsTaskParams:WorkflowTaskArchiveSlackChannelsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskArchiveSlackChannels resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskArchiveSlackChannelsTaskParams:WorkflowTaskArchiveSlackChannelsTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAttachDatadogDashboards:WorkflowTaskAttachDatadogDashboards": {
            "description": "Manages workflow attach_datadog_dashboards task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskAttachDatadogDashboards(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskAttachDatadogDashboards:WorkflowTaskAttachDatadogDashboards foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAttachDatadogDashboardsTaskParams:WorkflowTaskAttachDatadogDashboardsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAttachDatadogDashboardsTaskParams:WorkflowTaskAttachDatadogDashboardsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAttachDatadogDashboards resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAttachDatadogDashboardsTaskParams:WorkflowTaskAttachDatadogDashboardsTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAutoAssignRoleOpsgenie:WorkflowTaskAutoAssignRoleOpsgenie": {
            "description": "Manages workflow auto_assign_role_opsgenie task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskAutoAssignRoleOpsgenie(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskAutoAssignRoleOpsgenie:WorkflowTaskAutoAssignRoleOpsgenie foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRoleOpsgenieTaskParams:WorkflowTaskAutoAssignRoleOpsgenieTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRoleOpsgenieTaskParams:WorkflowTaskAutoAssignRoleOpsgenieTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAutoAssignRoleOpsgenie resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRoleOpsgenieTaskParams:WorkflowTaskAutoAssignRoleOpsgenieTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAutoAssignRolePagerduty:WorkflowTaskAutoAssignRolePagerduty": {
            "description": "Manages workflow auto_assign_role_pagerduty task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskAutoAssignRolePagerduty(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskAutoAssignRolePagerduty:WorkflowTaskAutoAssignRolePagerduty foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRolePagerdutyTaskParams:WorkflowTaskAutoAssignRolePagerdutyTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRolePagerdutyTaskParams:WorkflowTaskAutoAssignRolePagerdutyTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAutoAssignRolePagerduty resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRolePagerdutyTaskParams:WorkflowTaskAutoAssignRolePagerdutyTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskAutoAssignRoleVictorOps:WorkflowTaskAutoAssignRoleVictorOps": {
            "description": "Manages workflow auto_assign_role_victor_ops task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskAutoAssignRoleVictorOps(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskAutoAssignRoleVictorOps:WorkflowTaskAutoAssignRoleVictorOps foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRoleVictorOpsTaskParams:WorkflowTaskAutoAssignRoleVictorOpsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRoleVictorOpsTaskParams:WorkflowTaskAutoAssignRoleVictorOpsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskAutoAssignRoleVictorOps resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskAutoAssignRoleVictorOpsTaskParams:WorkflowTaskAutoAssignRoleVictorOpsTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCallPeople:WorkflowTaskCallPeople": {
            "description": "Manages workflow call_people task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCallPeople(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCallPeople:WorkflowTaskCallPeople foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCallPeopleTaskParams:WorkflowTaskCallPeopleTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCallPeopleTaskParams:WorkflowTaskCallPeopleTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCallPeople resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCallPeopleTaskParams:WorkflowTaskCallPeopleTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateAirtableTableRecord:WorkflowTaskCreateAirtableTableRecord": {
            "description": "Manages workflow create_airtable_table_record task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateAirtableTableRecord(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateAirtableTableRecord:WorkflowTaskCreateAirtableTableRecord foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateAirtableTableRecordTaskParams:WorkflowTaskCreateAirtableTableRecordTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateAirtableTableRecordTaskParams:WorkflowTaskCreateAirtableTableRecordTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateAirtableTableRecord resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateAirtableTableRecordTaskParams:WorkflowTaskCreateAirtableTableRecordTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateAsanaSubtask:WorkflowTaskCreateAsanaSubtask": {
            "description": "Manages workflow create_asana_subtask task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateAsanaSubtask(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateAsanaSubtask:WorkflowTaskCreateAsanaSubtask foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateAsanaSubtaskTaskParams:WorkflowTaskCreateAsanaSubtaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateAsanaSubtaskTaskParams:WorkflowTaskCreateAsanaSubtaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateAsanaSubtask resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateAsanaSubtaskTaskParams:WorkflowTaskCreateAsanaSubtaskTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateAsanaTask:WorkflowTaskCreateAsanaTask": {
            "description": "Manages workflow create_asana_task task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateAsanaTask(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateAsanaTask:WorkflowTaskCreateAsanaTask foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateAsanaTaskTaskParams:WorkflowTaskCreateAsanaTaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateAsanaTaskTaskParams:WorkflowTaskCreateAsanaTaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateAsanaTask resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateAsanaTaskTaskParams:WorkflowTaskCreateAsanaTaskTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateConfluencePage:WorkflowTaskCreateConfluencePage": {
            "description": "Manages workflow create_confluence_page task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateConfluencePage(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateConfluencePage:WorkflowTaskCreateConfluencePage foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateConfluencePageTaskParams:WorkflowTaskCreateConfluencePageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateConfluencePageTaskParams:WorkflowTaskCreateConfluencePageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateConfluencePage resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateConfluencePageTaskParams:WorkflowTaskCreateConfluencePageTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateDatadogNotebook:WorkflowTaskCreateDatadogNotebook": {
            "description": "Manages workflow create_datadog_notebook task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateDatadogNotebook(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateDatadogNotebook:WorkflowTaskCreateDatadogNotebook foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateDatadogNotebookTaskParams:WorkflowTaskCreateDatadogNotebookTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateDatadogNotebookTaskParams:WorkflowTaskCreateDatadogNotebookTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateDatadogNotebook resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateDatadogNotebookTaskParams:WorkflowTaskCreateDatadogNotebookTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateDropboxPaperPage:WorkflowTaskCreateDropboxPaperPage": {
            "description": "Manages workflow create_dropbox_paper_page task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateDropboxPaperPage(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateDropboxPaperPage:WorkflowTaskCreateDropboxPaperPage foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateDropboxPaperPageTaskParams:WorkflowTaskCreateDropboxPaperPageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateDropboxPaperPageTaskParams:WorkflowTaskCreateDropboxPaperPageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateDropboxPaperPage resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateDropboxPaperPageTaskParams:WorkflowTaskCreateDropboxPaperPageTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateGithubIssue:WorkflowTaskCreateGithubIssue": {
            "description": "Manages workflow create_github_issue task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateGithubIssue(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateGithubIssue:WorkflowTaskCreateGithubIssue foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateGithubIssueTaskParams:WorkflowTaskCreateGithubIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateGithubIssueTaskParams:WorkflowTaskCreateGithubIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateGithubIssue resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateGithubIssueTaskParams:WorkflowTaskCreateGithubIssueTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateGoogleCalendarEvent:WorkflowTaskCreateGoogleCalendarEvent": {
            "description": "Manages workflow create_google_calendar_event task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateGoogleCalendarEvent(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateGoogleCalendarEvent:WorkflowTaskCreateGoogleCalendarEvent foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleCalendarEventTaskParams:WorkflowTaskCreateGoogleCalendarEventTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleCalendarEventTaskParams:WorkflowTaskCreateGoogleCalendarEventTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateGoogleCalendarEvent resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleCalendarEventTaskParams:WorkflowTaskCreateGoogleCalendarEventTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateGoogleDocsPage:WorkflowTaskCreateGoogleDocsPage": {
            "description": "Manages workflow create_google_docs_page task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateGoogleDocsPage(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateGoogleDocsPage:WorkflowTaskCreateGoogleDocsPage foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleDocsPageTaskParams:WorkflowTaskCreateGoogleDocsPageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleDocsPageTaskParams:WorkflowTaskCreateGoogleDocsPageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateGoogleDocsPage resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleDocsPageTaskParams:WorkflowTaskCreateGoogleDocsPageTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateGoogleMeeting:WorkflowTaskCreateGoogleMeeting": {
            "description": "Manages workflow create_google_meeting task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateGoogleMeeting(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateGoogleMeeting:WorkflowTaskCreateGoogleMeeting foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleMeetingTaskParams:WorkflowTaskCreateGoogleMeetingTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleMeetingTaskParams:WorkflowTaskCreateGoogleMeetingTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateGoogleMeeting resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateGoogleMeetingTaskParams:WorkflowTaskCreateGoogleMeetingTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateIncident:WorkflowTaskCreateIncident": {
            "description": "Manages workflow create_incident task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateIncident(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateIncident:WorkflowTaskCreateIncident foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateIncidentTaskParams:WorkflowTaskCreateIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateIncidentTaskParams:WorkflowTaskCreateIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateIncident resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateIncidentTaskParams:WorkflowTaskCreateIncidentTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateJiraIssue:WorkflowTaskCreateJiraIssue": {
            "description": "Manages workflow create_jira_issue task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateJiraIssue(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateJiraIssue:WorkflowTaskCreateJiraIssue foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateJiraIssueTaskParams:WorkflowTaskCreateJiraIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateJiraIssueTaskParams:WorkflowTaskCreateJiraIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateJiraIssue resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateJiraIssueTaskParams:WorkflowTaskCreateJiraIssueTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateJiraSubtask:WorkflowTaskCreateJiraSubtask": {
            "description": "Manages workflow create_jira_subtask task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateJiraSubtask(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateJiraSubtask:WorkflowTaskCreateJiraSubtask foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateJiraSubtaskTaskParams:WorkflowTaskCreateJiraSubtaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateJiraSubtaskTaskParams:WorkflowTaskCreateJiraSubtaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateJiraSubtask resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateJiraSubtaskTaskParams:WorkflowTaskCreateJiraSubtaskTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateLinearIssue:WorkflowTaskCreateLinearIssue": {
            "description": "Manages workflow create_linear_issue task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateLinearIssue(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateLinearIssue:WorkflowTaskCreateLinearIssue foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateLinearIssueTaskParams:WorkflowTaskCreateLinearIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateLinearIssueTaskParams:WorkflowTaskCreateLinearIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateLinearIssue resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateLinearIssueTaskParams:WorkflowTaskCreateLinearIssueTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateLinearSubtaskIssue:WorkflowTaskCreateLinearSubtaskIssue": {
            "description": "Manages workflow create_linear_subtask_issue task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateLinearSubtaskIssue(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateLinearSubtaskIssue:WorkflowTaskCreateLinearSubtaskIssue foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateLinearSubtaskIssueTaskParams:WorkflowTaskCreateLinearSubtaskIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateLinearSubtaskIssueTaskParams:WorkflowTaskCreateLinearSubtaskIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateLinearSubtaskIssue resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateLinearSubtaskIssueTaskParams:WorkflowTaskCreateLinearSubtaskIssueTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateMicrosoftTeamsMeeting:WorkflowTaskCreateMicrosoftTeamsMeeting": {
            "description": "Manages workflow create_microsoft_teams_meeting task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateMicrosoftTeamsMeeting(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateMicrosoftTeamsMeeting:WorkflowTaskCreateMicrosoftTeamsMeeting foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams:WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams:WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateMicrosoftTeamsMeeting resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams:WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateNotionPage:WorkflowTaskCreateNotionPage": {
            "description": "Manages workflow create_notion_page task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateNotionPage(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateNotionPage:WorkflowTaskCreateNotionPage foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateNotionPageTaskParams:WorkflowTaskCreateNotionPageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateNotionPageTaskParams:WorkflowTaskCreateNotionPageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateNotionPage resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateNotionPageTaskParams:WorkflowTaskCreateNotionPageTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateServiceNowIncident:WorkflowTaskCreateServiceNowIncident": {
            "description": "Manages workflow create_service_now_incident task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateServiceNowIncident(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateServiceNowIncident:WorkflowTaskCreateServiceNowIncident foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateServiceNowIncidentTaskParams:WorkflowTaskCreateServiceNowIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateServiceNowIncidentTaskParams:WorkflowTaskCreateServiceNowIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateServiceNowIncident resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateServiceNowIncidentTaskParams:WorkflowTaskCreateServiceNowIncidentTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateShortcutStory:WorkflowTaskCreateShortcutStory": {
            "description": "Manages workflow create_shortcut_story task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateShortcutStory(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateShortcutStory:WorkflowTaskCreateShortcutStory foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateShortcutStoryTaskParams:WorkflowTaskCreateShortcutStoryTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateShortcutStoryTaskParams:WorkflowTaskCreateShortcutStoryTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateShortcutStory resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateShortcutStoryTaskParams:WorkflowTaskCreateShortcutStoryTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateShortcutTask:WorkflowTaskCreateShortcutTask": {
            "description": "Manages workflow create_shortcut_task task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateShortcutTask(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateShortcutTask:WorkflowTaskCreateShortcutTask foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateShortcutTaskTaskParams:WorkflowTaskCreateShortcutTaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateShortcutTaskTaskParams:WorkflowTaskCreateShortcutTaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateShortcutTask resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateShortcutTaskTaskParams:WorkflowTaskCreateShortcutTaskTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateTrelloCard:WorkflowTaskCreateTrelloCard": {
            "description": "Manages workflow create_trello_card task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateTrelloCard(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateTrelloCard:WorkflowTaskCreateTrelloCard foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateTrelloCardTaskParams:WorkflowTaskCreateTrelloCardTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateTrelloCardTaskParams:WorkflowTaskCreateTrelloCardTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateTrelloCard resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateTrelloCardTaskParams:WorkflowTaskCreateTrelloCardTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateWebexMeeting:WorkflowTaskCreateWebexMeeting": {
            "description": "Manages workflow create_webex_meeting task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateWebexMeeting(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateWebexMeeting:WorkflowTaskCreateWebexMeeting foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateWebexMeetingTaskParams:WorkflowTaskCreateWebexMeetingTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateWebexMeetingTaskParams:WorkflowTaskCreateWebexMeetingTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateWebexMeeting resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateWebexMeetingTaskParams:WorkflowTaskCreateWebexMeetingTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateZendeskTicket:WorkflowTaskCreateZendeskTicket": {
            "description": "Manages workflow create_zendesk_ticket task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateZendeskTicket(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateZendeskTicket:WorkflowTaskCreateZendeskTicket foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateZendeskTicketTaskParams:WorkflowTaskCreateZendeskTicketTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateZendeskTicketTaskParams:WorkflowTaskCreateZendeskTicketTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateZendeskTicket resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateZendeskTicketTaskParams:WorkflowTaskCreateZendeskTicketTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskCreateZoomMeeting:WorkflowTaskCreateZoomMeeting": {
            "description": "Manages workflow create_zoom_meeting task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskCreateZoomMeeting(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskCreateZoomMeeting:WorkflowTaskCreateZoomMeeting foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateZoomMeetingTaskParams:WorkflowTaskCreateZoomMeetingTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskCreateZoomMeetingTaskParams:WorkflowTaskCreateZoomMeetingTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskCreateZoomMeeting resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskCreateZoomMeetingTaskParams:WorkflowTaskCreateZoomMeetingTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskGetGithubCommits:WorkflowTaskGetGithubCommits": {
            "description": "Manages workflow get_github_commits task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskGetGithubCommits(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskGetGithubCommits:WorkflowTaskGetGithubCommits foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskGetGithubCommitsTaskParams:WorkflowTaskGetGithubCommitsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskGetGithubCommitsTaskParams:WorkflowTaskGetGithubCommitsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskGetGithubCommits resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskGetGithubCommitsTaskParams:WorkflowTaskGetGithubCommitsTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskGetGitlabCommits:WorkflowTaskGetGitlabCommits": {
            "description": "Manages workflow get_gitlab_commits task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskGetGitlabCommits(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskGetGitlabCommits:WorkflowTaskGetGitlabCommits foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskGetGitlabCommitsTaskParams:WorkflowTaskGetGitlabCommitsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskGetGitlabCommitsTaskParams:WorkflowTaskGetGitlabCommitsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskGetGitlabCommits resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskGetGitlabCommitsTaskParams:WorkflowTaskGetGitlabCommitsTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskGetPulses:WorkflowTaskGetPulses": {
            "description": "Manages workflow get_pulses task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskGetPulses(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskGetPulses:WorkflowTaskGetPulses foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskGetPulsesTaskParams:WorkflowTaskGetPulsesTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskGetPulsesTaskParams:WorkflowTaskGetPulsesTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskGetPulses resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskGetPulsesTaskParams:WorkflowTaskGetPulsesTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskHttpClient:WorkflowTaskHttpClient": {
            "description": "Manages workflow http_client task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskHttpClient(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskHttpClient:WorkflowTaskHttpClient foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskHttpClientTaskParams:WorkflowTaskHttpClientTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskHttpClientTaskParams:WorkflowTaskHttpClientTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskHttpClient resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskHttpClientTaskParams:WorkflowTaskHttpClientTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskInviteToSlackChannel:WorkflowTaskInviteToSlackChannel": {
            "description": "Manages workflow invite_to_slack_channel task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskInviteToSlackChannel(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskInviteToSlackChannel:WorkflowTaskInviteToSlackChannel foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelTaskParams:WorkflowTaskInviteToSlackChannelTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelTaskParams:WorkflowTaskInviteToSlackChannelTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskInviteToSlackChannel resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelTaskParams:WorkflowTaskInviteToSlackChannelTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskInviteToSlackChannelOpsgenie:WorkflowTaskInviteToSlackChannelOpsgenie": {
            "description": "Manages workflow invite_to_slack_channel_opsgenie task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskInviteToSlackChannelOpsgenie(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskInviteToSlackChannelOpsgenie:WorkflowTaskInviteToSlackChannelOpsgenie foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelOpsgenieTaskParams:WorkflowTaskInviteToSlackChannelOpsgenieTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelOpsgenieTaskParams:WorkflowTaskInviteToSlackChannelOpsgenieTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskInviteToSlackChannelOpsgenie resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelOpsgenieTaskParams:WorkflowTaskInviteToSlackChannelOpsgenieTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskInviteToSlackChannelPagerduty:WorkflowTaskInviteToSlackChannelPagerduty": {
            "description": "Manages workflow invite_to_slack_channel_pagerduty task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskInviteToSlackChannelPagerduty(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskInviteToSlackChannelPagerduty:WorkflowTaskInviteToSlackChannelPagerduty foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelPagerdutyTaskParams:WorkflowTaskInviteToSlackChannelPagerdutyTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelPagerdutyTaskParams:WorkflowTaskInviteToSlackChannelPagerdutyTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskInviteToSlackChannelPagerduty resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelPagerdutyTaskParams:WorkflowTaskInviteToSlackChannelPagerdutyTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskInviteToSlackChannelVictorOps:WorkflowTaskInviteToSlackChannelVictorOps": {
            "description": "Manages workflow invite_to_slack_channel_victor_ops task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskInviteToSlackChannelVictorOps(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskInviteToSlackChannelVictorOps:WorkflowTaskInviteToSlackChannelVictorOps foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelVictorOpsTaskParams:WorkflowTaskInviteToSlackChannelVictorOpsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelVictorOpsTaskParams:WorkflowTaskInviteToSlackChannelVictorOpsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskInviteToSlackChannelVictorOps resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskInviteToSlackChannelVictorOpsTaskParams:WorkflowTaskInviteToSlackChannelVictorOpsTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskPageOpsgenieOnCallResponders:WorkflowTaskPageOpsgenieOnCallResponders": {
            "description": "Manages workflow page_opsgenie_on_call_responders task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskPageOpsgenieOnCallResponders(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskPageOpsgenieOnCallResponders:WorkflowTaskPageOpsgenieOnCallResponders foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPageOpsgenieOnCallRespondersTaskParams:WorkflowTaskPageOpsgenieOnCallRespondersTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPageOpsgenieOnCallRespondersTaskParams:WorkflowTaskPageOpsgenieOnCallRespondersTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskPageOpsgenieOnCallResponders resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPageOpsgenieOnCallRespondersTaskParams:WorkflowTaskPageOpsgenieOnCallRespondersTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskPagePagerdutyOnCallResponders:WorkflowTaskPagePagerdutyOnCallResponders": {
            "description": "Manages workflow page_pagerduty_on_call_responders task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskPagePagerdutyOnCallResponders(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskPagePagerdutyOnCallResponders:WorkflowTaskPagePagerdutyOnCallResponders foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPagePagerdutyOnCallRespondersTaskParams:WorkflowTaskPagePagerdutyOnCallRespondersTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPagePagerdutyOnCallRespondersTaskParams:WorkflowTaskPagePagerdutyOnCallRespondersTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskPagePagerdutyOnCallResponders resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPagePagerdutyOnCallRespondersTaskParams:WorkflowTaskPagePagerdutyOnCallRespondersTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskPageVictorOpsOnCallResponders:WorkflowTaskPageVictorOpsOnCallResponders": {
            "description": "Manages workflow page_victor_ops_on_call_responders task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskPageVictorOpsOnCallResponders(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskPageVictorOpsOnCallResponders:WorkflowTaskPageVictorOpsOnCallResponders foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPageVictorOpsOnCallRespondersTaskParams:WorkflowTaskPageVictorOpsOnCallRespondersTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPageVictorOpsOnCallRespondersTaskParams:WorkflowTaskPageVictorOpsOnCallRespondersTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskPageVictorOpsOnCallResponders resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPageVictorOpsOnCallRespondersTaskParams:WorkflowTaskPageVictorOpsOnCallRespondersTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskPrint:WorkflowTaskPrint": {
            "description": "Manages workflow print task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskPrint(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskPrint:WorkflowTaskPrint foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPrintTaskParams:WorkflowTaskPrintTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPrintTaskParams:WorkflowTaskPrintTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskPrint resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPrintTaskParams:WorkflowTaskPrintTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskPublishIncident:WorkflowTaskPublishIncident": {
            "description": "Manages workflow publish_incident task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskPublishIncident(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskPublishIncident:WorkflowTaskPublishIncident foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPublishIncidentTaskParams:WorkflowTaskPublishIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskPublishIncidentTaskParams:WorkflowTaskPublishIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskPublishIncident resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskPublishIncidentTaskParams:WorkflowTaskPublishIncidentTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskRedisClient:WorkflowTaskRedisClient": {
            "description": "Manages workflow redis_client task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskRedisClient(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskRedisClient:WorkflowTaskRedisClient foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskRedisClientTaskParams:WorkflowTaskRedisClientTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskRedisClientTaskParams:WorkflowTaskRedisClientTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskRedisClient resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskRedisClientTaskParams:WorkflowTaskRedisClientTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskRenameSlackChannel:WorkflowTaskRenameSlackChannel": {
            "description": "Manages workflow rename_slack_channel task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskRenameSlackChannel(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskRenameSlackChannel:WorkflowTaskRenameSlackChannel foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskRenameSlackChannelTaskParams:WorkflowTaskRenameSlackChannelTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskRenameSlackChannelTaskParams:WorkflowTaskRenameSlackChannelTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskRenameSlackChannel resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskRenameSlackChannelTaskParams:WorkflowTaskRenameSlackChannelTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskRunCommandHeroku:WorkflowTaskRunCommandHeroku": {
            "description": "Manages workflow run_command_heroku task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskRunCommandHeroku(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskRunCommandHeroku:WorkflowTaskRunCommandHeroku foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskRunCommandHerokuTaskParams:WorkflowTaskRunCommandHerokuTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskRunCommandHerokuTaskParams:WorkflowTaskRunCommandHerokuTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskRunCommandHeroku resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskRunCommandHerokuTaskParams:WorkflowTaskRunCommandHerokuTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskSendEmail:WorkflowTaskSendEmail": {
            "description": "Manages workflow send_email task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskSendEmail(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskSendEmail:WorkflowTaskSendEmail foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSendEmailTaskParams:WorkflowTaskSendEmailTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSendEmailTaskParams:WorkflowTaskSendEmailTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskSendEmail resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSendEmailTaskParams:WorkflowTaskSendEmailTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskSendSlackMessage:WorkflowTaskSendSlackMessage": {
            "description": "Manages workflow send_slack_message task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskSendSlackMessage(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskSendSlackMessage:WorkflowTaskSendSlackMessage foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSendSlackMessageTaskParams:WorkflowTaskSendSlackMessageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSendSlackMessageTaskParams:WorkflowTaskSendSlackMessageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskSendSlackMessage resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSendSlackMessageTaskParams:WorkflowTaskSendSlackMessageTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskSendSms:WorkflowTaskSendSms": {
            "description": "Manages workflow send_sms task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskSendSms(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskSendSms:WorkflowTaskSendSms foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSendSmsTaskParams:WorkflowTaskSendSmsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSendSmsTaskParams:WorkflowTaskSendSmsTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskSendSms resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSendSmsTaskParams:WorkflowTaskSendSmsTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskSnapshotDatadogGraph:WorkflowTaskSnapshotDatadogGraph": {
            "description": "Manages workflow snapshot_datadog_graph task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskSnapshotDatadogGraph(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskSnapshotDatadogGraph:WorkflowTaskSnapshotDatadogGraph foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSnapshotDatadogGraphTaskParams:WorkflowTaskSnapshotDatadogGraphTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSnapshotDatadogGraphTaskParams:WorkflowTaskSnapshotDatadogGraphTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskSnapshotDatadogGraph resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotDatadogGraphTaskParams:WorkflowTaskSnapshotDatadogGraphTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskSnapshotGrafanaDashboard:WorkflowTaskSnapshotGrafanaDashboard": {
            "description": "Manages workflow snapshot_grafana_dashboard task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskSnapshotGrafanaDashboard(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskSnapshotGrafanaDashboard:WorkflowTaskSnapshotGrafanaDashboard foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSnapshotGrafanaDashboardTaskParams:WorkflowTaskSnapshotGrafanaDashboardTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSnapshotGrafanaDashboardTaskParams:WorkflowTaskSnapshotGrafanaDashboardTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskSnapshotGrafanaDashboard resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotGrafanaDashboardTaskParams:WorkflowTaskSnapshotGrafanaDashboardTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskSnapshotLookerLook:WorkflowTaskSnapshotLookerLook": {
            "description": "Manages workflow snapshot_looker_look task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskSnapshotLookerLook(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskSnapshotLookerLook:WorkflowTaskSnapshotLookerLook foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSnapshotLookerLookTaskParams:WorkflowTaskSnapshotLookerLookTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSnapshotLookerLookTaskParams:WorkflowTaskSnapshotLookerLookTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskSnapshotLookerLook resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotLookerLookTaskParams:WorkflowTaskSnapshotLookerLookTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskSnapshotNewRelicGraph:WorkflowTaskSnapshotNewRelicGraph": {
            "description": "Manages workflow snapshot_new_relic_graph task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskSnapshotNewRelicGraph(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskSnapshotNewRelicGraph:WorkflowTaskSnapshotNewRelicGraph foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSnapshotNewRelicGraphTaskParams:WorkflowTaskSnapshotNewRelicGraphTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskSnapshotNewRelicGraphTaskParams:WorkflowTaskSnapshotNewRelicGraphTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskSnapshotNewRelicGraph resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskSnapshotNewRelicGraphTaskParams:WorkflowTaskSnapshotNewRelicGraphTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskTweetTwitterMessage:WorkflowTaskTweetTwitterMessage": {
            "description": "Manages workflow tweet_twitter_message task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskTweetTwitterMessage(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskTweetTwitterMessage:WorkflowTaskTweetTwitterMessage foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskTweetTwitterMessageTaskParams:WorkflowTaskTweetTwitterMessageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskTweetTwitterMessageTaskParams:WorkflowTaskTweetTwitterMessageTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskTweetTwitterMessage resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskTweetTwitterMessageTaskParams:WorkflowTaskTweetTwitterMessageTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateAirtableTableRecord:WorkflowTaskUpdateAirtableTableRecord": {
            "description": "Manages workflow update_airtable_table_record task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskUpdateAirtableTableRecord(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskUpdateAirtableTableRecord:WorkflowTaskUpdateAirtableTableRecord foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateAirtableTableRecordTaskParams:WorkflowTaskUpdateAirtableTableRecordTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateAirtableTableRecordTaskParams:WorkflowTaskUpdateAirtableTableRecordTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateAirtableTableRecord resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateAirtableTableRecordTaskParams:WorkflowTaskUpdateAirtableTableRecordTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateAsanaTask:WorkflowTaskUpdateAsanaTask": {
            "description": "Manages workflow update_asana_task task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskUpdateAsanaTask(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskUpdateAsanaTask:WorkflowTaskUpdateAsanaTask foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateAsanaTaskTaskParams:WorkflowTaskUpdateAsanaTaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateAsanaTaskTaskParams:WorkflowTaskUpdateAsanaTaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateAsanaTask resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateAsanaTaskTaskParams:WorkflowTaskUpdateAsanaTaskTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateGithubIssue:WorkflowTaskUpdateGithubIssue": {
            "description": "Manages workflow update_github_issue task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskUpdateGithubIssue(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskUpdateGithubIssue:WorkflowTaskUpdateGithubIssue foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateGithubIssueTaskParams:WorkflowTaskUpdateGithubIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateGithubIssueTaskParams:WorkflowTaskUpdateGithubIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateGithubIssue resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateGithubIssueTaskParams:WorkflowTaskUpdateGithubIssueTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateGoogleCalendarEvent:WorkflowTaskUpdateGoogleCalendarEvent": {
            "description": "Manages workflow update_google_calendar_event task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskUpdateGoogleCalendarEvent(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskUpdateGoogleCalendarEvent:WorkflowTaskUpdateGoogleCalendarEvent foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateGoogleCalendarEventTaskParams:WorkflowTaskUpdateGoogleCalendarEventTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateGoogleCalendarEventTaskParams:WorkflowTaskUpdateGoogleCalendarEventTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateGoogleCalendarEvent resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateGoogleCalendarEventTaskParams:WorkflowTaskUpdateGoogleCalendarEventTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateIncident:WorkflowTaskUpdateIncident": {
            "description": "Manages workflow update_incident task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskUpdateIncident(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskUpdateIncident:WorkflowTaskUpdateIncident foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateIncidentTaskParams:WorkflowTaskUpdateIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateIncidentTaskParams:WorkflowTaskUpdateIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateIncident resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateIncidentTaskParams:WorkflowTaskUpdateIncidentTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateJiraIssue:WorkflowTaskUpdateJiraIssue": {
            "description": "Manages workflow update_jira_issue task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskUpdateJiraIssue(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskUpdateJiraIssue:WorkflowTaskUpdateJiraIssue foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateJiraIssueTaskParams:WorkflowTaskUpdateJiraIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateJiraIssueTaskParams:WorkflowTaskUpdateJiraIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateJiraIssue resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateJiraIssueTaskParams:WorkflowTaskUpdateJiraIssueTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateLinearIssue:WorkflowTaskUpdateLinearIssue": {
            "description": "Manages workflow update_linear_issue task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskUpdateLinearIssue(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskUpdateLinearIssue:WorkflowTaskUpdateLinearIssue foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateLinearIssueTaskParams:WorkflowTaskUpdateLinearIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateLinearIssueTaskParams:WorkflowTaskUpdateLinearIssueTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateLinearIssue resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateLinearIssueTaskParams:WorkflowTaskUpdateLinearIssueTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateServiceNowIncident:WorkflowTaskUpdateServiceNowIncident": {
            "description": "Manages workflow update_service_now_incident task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskUpdateServiceNowIncident(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskUpdateServiceNowIncident:WorkflowTaskUpdateServiceNowIncident foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateServiceNowIncidentTaskParams:WorkflowTaskUpdateServiceNowIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateServiceNowIncidentTaskParams:WorkflowTaskUpdateServiceNowIncidentTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateServiceNowIncident resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateServiceNowIncidentTaskParams:WorkflowTaskUpdateServiceNowIncidentTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateShortcutStory:WorkflowTaskUpdateShortcutStory": {
            "description": "Manages workflow update_shortcut_story task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskUpdateShortcutStory(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskUpdateShortcutStory:WorkflowTaskUpdateShortcutStory foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateShortcutStoryTaskParams:WorkflowTaskUpdateShortcutStoryTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateShortcutStoryTaskParams:WorkflowTaskUpdateShortcutStoryTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateShortcutStory resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateShortcutStoryTaskParams:WorkflowTaskUpdateShortcutStoryTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateShortcutTask:WorkflowTaskUpdateShortcutTask": {
            "description": "Manages workflow update_shortcut_task task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskUpdateShortcutTask(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskUpdateShortcutTask:WorkflowTaskUpdateShortcutTask foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateShortcutTaskTaskParams:WorkflowTaskUpdateShortcutTaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateShortcutTaskTaskParams:WorkflowTaskUpdateShortcutTaskTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateShortcutTask resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateShortcutTaskTaskParams:WorkflowTaskUpdateShortcutTaskTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateSlackChannelTopic:WorkflowTaskUpdateSlackChannelTopic": {
            "description": "Manages workflow update_slack_channel_topic task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskUpdateSlackChannelTopic(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskUpdateSlackChannelTopic:WorkflowTaskUpdateSlackChannelTopic foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateSlackChannelTopicTaskParams:WorkflowTaskUpdateSlackChannelTopicTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateSlackChannelTopicTaskParams:WorkflowTaskUpdateSlackChannelTopicTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateSlackChannelTopic resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateSlackChannelTopicTaskParams:WorkflowTaskUpdateSlackChannelTopicTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateStatus:WorkflowTaskUpdateStatus": {
            "description": "Manages workflow update_status task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskUpdateStatus(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskUpdateStatus:WorkflowTaskUpdateStatus foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateStatusTaskParams:WorkflowTaskUpdateStatusTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateStatusTaskParams:WorkflowTaskUpdateStatusTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateStatus resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateStatusTaskParams:WorkflowTaskUpdateStatusTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateTrelloCard:WorkflowTaskUpdateTrelloCard": {
            "description": "Manages workflow update_trello_card task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskUpdateTrelloCard(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskUpdateTrelloCard:WorkflowTaskUpdateTrelloCard foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateTrelloCardTaskParams:WorkflowTaskUpdateTrelloCardTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateTrelloCardTaskParams:WorkflowTaskUpdateTrelloCardTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateTrelloCard resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateTrelloCardTaskParams:WorkflowTaskUpdateTrelloCardTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        },
        "rootly:index/workflowTaskUpdateZendeskTicket:WorkflowTaskUpdateZendeskTicket": {
            "description": "Manages workflow update_zendesk_ticket task.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as rootly from \"@pulumi/rootly\";\n\nconst foo = new rootly.WorkflowTaskUpdateZendeskTicket(\"foo\", {\n    name: \"bar\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import rootly:index/workflowTaskUpdateZendeskTicket:WorkflowTaskUpdateZendeskTicket foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateZendeskTicketTaskParams:WorkflowTaskUpdateZendeskTicketTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "required": [
                "taskParams",
                "workflowId"
            ],
            "inputProperties": {
                "taskParams": {
                    "$ref": "#/types/rootly:index/WorkflowTaskUpdateZendeskTicketTaskParams:WorkflowTaskUpdateZendeskTicketTaskParams",
                    "description": "The parameters for this workflow task.\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "The ID of the parent workflow\n"
                }
            },
            "requiredInputs": [
                "taskParams",
                "workflowId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowTaskUpdateZendeskTicket resources.\n",
                "properties": {
                    "taskParams": {
                        "$ref": "#/types/rootly:index/WorkflowTaskUpdateZendeskTicketTaskParams:WorkflowTaskUpdateZendeskTicketTaskParams",
                        "description": "The parameters for this workflow task.\n"
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "The ID of the parent workflow\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-rootly/sdk/go/rootly"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Rootly cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/rootlyhq/terraform-provider-rootly)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-rootly` repo](https://github.com/pulumi/pulumi-rootly/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`rootlyhq/terraform-provider-rootly` repo](https://github.com/rootlyhq/terraform-provider-rootly/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/rootlyhq/terraform-provider-rootly)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-rootly` repo](https://github.com/pulumi/pulumi-rootly/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`rootlyhq/terraform-provider-rootly` repo](https://github.com/rootlyhq/terraform-provider-rootly/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}