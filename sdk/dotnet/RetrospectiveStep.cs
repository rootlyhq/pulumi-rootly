// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly
{
    [RootlyResourceType("rootly:index/retrospectiveStep:RetrospectiveStep")]
    public partial class RetrospectiveStep : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the step
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Due date in days
        /// </summary>
        [Output("dueAfterDays")]
        public Output<int> DueAfterDays { get; private set; } = null!;

        /// <summary>
        /// Users assigned to the selected incident role will be the default owners for this step
        /// </summary>
        [Output("incidentRoleId")]
        public Output<string> IncidentRoleId { get; private set; } = null!;

        /// <summary>
        /// Position of the step
        /// </summary>
        [Output("position")]
        public Output<int> Position { get; private set; } = null!;

        [Output("retrospectiveProcessId")]
        public Output<string> RetrospectiveProcessId { get; private set; } = null!;

        /// <summary>
        /// Is the step skippable?. Value must be one of true or false
        /// </summary>
        [Output("skippable")]
        public Output<bool> Skippable { get; private set; } = null!;

        /// <summary>
        /// The slug of the step
        /// </summary>
        [Output("slug")]
        public Output<string> Slug { get; private set; } = null!;

        /// <summary>
        /// The name of the step
        /// </summary>
        [Output("title")]
        public Output<string> Title { get; private set; } = null!;


        /// <summary>
        /// Create a RetrospectiveStep resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RetrospectiveStep(string name, RetrospectiveStepArgs args, CustomResourceOptions? options = null)
            : base("rootly:index/retrospectiveStep:RetrospectiveStep", name, args ?? new RetrospectiveStepArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RetrospectiveStep(string name, Input<string> id, RetrospectiveStepState? state = null, CustomResourceOptions? options = null)
            : base("rootly:index/retrospectiveStep:RetrospectiveStep", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/rootlyhq/pulumi-rootly/releases/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RetrospectiveStep resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RetrospectiveStep Get(string name, Input<string> id, RetrospectiveStepState? state = null, CustomResourceOptions? options = null)
        {
            return new RetrospectiveStep(name, id, state, options);
        }
    }

    public sealed class RetrospectiveStepArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the step
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Due date in days
        /// </summary>
        [Input("dueAfterDays")]
        public Input<int>? DueAfterDays { get; set; }

        /// <summary>
        /// Users assigned to the selected incident role will be the default owners for this step
        /// </summary>
        [Input("incidentRoleId")]
        public Input<string>? IncidentRoleId { get; set; }

        /// <summary>
        /// Position of the step
        /// </summary>
        [Input("position")]
        public Input<int>? Position { get; set; }

        [Input("retrospectiveProcessId")]
        public Input<string>? RetrospectiveProcessId { get; set; }

        /// <summary>
        /// Is the step skippable?. Value must be one of true or false
        /// </summary>
        [Input("skippable")]
        public Input<bool>? Skippable { get; set; }

        /// <summary>
        /// The slug of the step
        /// </summary>
        [Input("slug")]
        public Input<string>? Slug { get; set; }

        /// <summary>
        /// The name of the step
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        public RetrospectiveStepArgs()
        {
        }
        public static new RetrospectiveStepArgs Empty => new RetrospectiveStepArgs();
    }

    public sealed class RetrospectiveStepState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the step
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Due date in days
        /// </summary>
        [Input("dueAfterDays")]
        public Input<int>? DueAfterDays { get; set; }

        /// <summary>
        /// Users assigned to the selected incident role will be the default owners for this step
        /// </summary>
        [Input("incidentRoleId")]
        public Input<string>? IncidentRoleId { get; set; }

        /// <summary>
        /// Position of the step
        /// </summary>
        [Input("position")]
        public Input<int>? Position { get; set; }

        [Input("retrospectiveProcessId")]
        public Input<string>? RetrospectiveProcessId { get; set; }

        /// <summary>
        /// Is the step skippable?. Value must be one of true or false
        /// </summary>
        [Input("skippable")]
        public Input<bool>? Skippable { get; set; }

        /// <summary>
        /// The slug of the step
        /// </summary>
        [Input("slug")]
        public Input<string>? Slug { get; set; }

        /// <summary>
        /// The name of the step
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        public RetrospectiveStepState()
        {
        }
        public static new RetrospectiveStepState Empty => new RetrospectiveStepState();
    }
}
