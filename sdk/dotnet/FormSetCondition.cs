// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly
{
    [RootlyResourceType("rootly:index/formSetCondition:FormSetCondition")]
    public partial class FormSetCondition : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The condition comparison.. Value must be one of `equal`.
        /// </summary>
        [Output("comparison")]
        public Output<string?> Comparison { get; private set; } = null!;

        /// <summary>
        /// The form field this condition applies.
        /// </summary>
        [Output("formFieldId")]
        public Output<string> FormFieldId { get; private set; } = null!;

        /// <summary>
        /// The form set this condition applies.
        /// </summary>
        [Output("formSetId")]
        public Output<string> FormSetId { get; private set; } = null!;

        /// <summary>
        /// The values for comparison.
        /// </summary>
        [Output("values")]
        public Output<ImmutableArray<string>> Values { get; private set; } = null!;


        /// <summary>
        /// Create a FormSetCondition resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FormSetCondition(string name, FormSetConditionArgs args, CustomResourceOptions? options = null)
            : base("rootly:index/formSetCondition:FormSetCondition", name, args ?? new FormSetConditionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FormSetCondition(string name, Input<string> id, FormSetConditionState? state = null, CustomResourceOptions? options = null)
            : base("rootly:index/formSetCondition:FormSetCondition", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/rootlyhq/pulumi-rootly/releases/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FormSetCondition resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FormSetCondition Get(string name, Input<string> id, FormSetConditionState? state = null, CustomResourceOptions? options = null)
        {
            return new FormSetCondition(name, id, state, options);
        }
    }

    public sealed class FormSetConditionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The condition comparison.. Value must be one of `equal`.
        /// </summary>
        [Input("comparison")]
        public Input<string>? Comparison { get; set; }

        /// <summary>
        /// The form field this condition applies.
        /// </summary>
        [Input("formFieldId", required: true)]
        public Input<string> FormFieldId { get; set; } = null!;

        /// <summary>
        /// The form set this condition applies.
        /// </summary>
        [Input("formSetId")]
        public Input<string>? FormSetId { get; set; }

        [Input("values", required: true)]
        private InputList<string>? _values;

        /// <summary>
        /// The values for comparison.
        /// </summary>
        public InputList<string> Values
        {
            get => _values ?? (_values = new InputList<string>());
            set => _values = value;
        }

        public FormSetConditionArgs()
        {
        }
        public static new FormSetConditionArgs Empty => new FormSetConditionArgs();
    }

    public sealed class FormSetConditionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The condition comparison.. Value must be one of `equal`.
        /// </summary>
        [Input("comparison")]
        public Input<string>? Comparison { get; set; }

        /// <summary>
        /// The form field this condition applies.
        /// </summary>
        [Input("formFieldId")]
        public Input<string>? FormFieldId { get; set; }

        /// <summary>
        /// The form set this condition applies.
        /// </summary>
        [Input("formSetId")]
        public Input<string>? FormSetId { get; set; }

        [Input("values")]
        private InputList<string>? _values;

        /// <summary>
        /// The values for comparison.
        /// </summary>
        public InputList<string> Values
        {
            get => _values ?? (_values = new InputList<string>());
            set => _values = value;
        }

        public FormSetConditionState()
        {
        }
        public static new FormSetConditionState Empty => new FormSetConditionState();
    }
}
