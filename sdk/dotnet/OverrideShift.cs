// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly
{
    [RootlyResourceType("rootly:index/overrideShift:OverrideShift")]
    public partial class OverrideShift : global::Pulumi.CustomResource
    {
        /// <summary>
        /// End datetime of shift
        /// </summary>
        [Output("endsAt")]
        public Output<string> EndsAt { get; private set; } = null!;

        /// <summary>
        /// Denotes shift is an override shift. Value must be one of true or false
        /// </summary>
        [Output("isOverride")]
        public Output<bool> IsOverride { get; private set; } = null!;

        /// <summary>
        /// ID of rotation
        /// </summary>
        [Output("rotationId")]
        public Output<string> RotationId { get; private set; } = null!;

        /// <summary>
        /// ID of schedule
        /// </summary>
        [Output("scheduleId")]
        public Output<string> ScheduleId { get; private set; } = null!;

        /// <summary>
        /// Override metadata
        /// </summary>
        [Output("shiftOverride")]
        public Output<ImmutableDictionary<string, string>> ShiftOverride { get; private set; } = null!;

        /// <summary>
        /// Start datetime of shift
        /// </summary>
        [Output("startsAt")]
        public Output<string> StartsAt { get; private set; } = null!;

        /// <summary>
        /// User metadata
        /// </summary>
        [Output("user")]
        public Output<ImmutableDictionary<string, string>> User { get; private set; } = null!;


        /// <summary>
        /// Create a OverrideShift resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OverrideShift(string name, OverrideShiftArgs args, CustomResourceOptions? options = null)
            : base("rootly:index/overrideShift:OverrideShift", name, args ?? new OverrideShiftArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OverrideShift(string name, Input<string> id, OverrideShiftState? state = null, CustomResourceOptions? options = null)
            : base("rootly:index/overrideShift:OverrideShift", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/rootlyhq/pulumi-rootly/releases/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OverrideShift resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OverrideShift Get(string name, Input<string> id, OverrideShiftState? state = null, CustomResourceOptions? options = null)
        {
            return new OverrideShift(name, id, state, options);
        }
    }

    public sealed class OverrideShiftArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// End datetime of shift
        /// </summary>
        [Input("endsAt", required: true)]
        public Input<string> EndsAt { get; set; } = null!;

        /// <summary>
        /// Denotes shift is an override shift. Value must be one of true or false
        /// </summary>
        [Input("isOverride")]
        public Input<bool>? IsOverride { get; set; }

        /// <summary>
        /// ID of rotation
        /// </summary>
        [Input("rotationId")]
        public Input<string>? RotationId { get; set; }

        /// <summary>
        /// ID of schedule
        /// </summary>
        [Input("scheduleId")]
        public Input<string>? ScheduleId { get; set; }

        [Input("shiftOverride")]
        private InputMap<string>? _shiftOverride;

        /// <summary>
        /// Override metadata
        /// </summary>
        public InputMap<string> ShiftOverride
        {
            get => _shiftOverride ?? (_shiftOverride = new InputMap<string>());
            set => _shiftOverride = value;
        }

        /// <summary>
        /// Start datetime of shift
        /// </summary>
        [Input("startsAt", required: true)]
        public Input<string> StartsAt { get; set; } = null!;

        [Input("user")]
        private InputMap<string>? _user;

        /// <summary>
        /// User metadata
        /// </summary>
        public InputMap<string> User
        {
            get => _user ?? (_user = new InputMap<string>());
            set => _user = value;
        }

        public OverrideShiftArgs()
        {
        }
        public static new OverrideShiftArgs Empty => new OverrideShiftArgs();
    }

    public sealed class OverrideShiftState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// End datetime of shift
        /// </summary>
        [Input("endsAt")]
        public Input<string>? EndsAt { get; set; }

        /// <summary>
        /// Denotes shift is an override shift. Value must be one of true or false
        /// </summary>
        [Input("isOverride")]
        public Input<bool>? IsOverride { get; set; }

        /// <summary>
        /// ID of rotation
        /// </summary>
        [Input("rotationId")]
        public Input<string>? RotationId { get; set; }

        /// <summary>
        /// ID of schedule
        /// </summary>
        [Input("scheduleId")]
        public Input<string>? ScheduleId { get; set; }

        [Input("shiftOverride")]
        private InputMap<string>? _shiftOverride;

        /// <summary>
        /// Override metadata
        /// </summary>
        public InputMap<string> ShiftOverride
        {
            get => _shiftOverride ?? (_shiftOverride = new InputMap<string>());
            set => _shiftOverride = value;
        }

        /// <summary>
        /// Start datetime of shift
        /// </summary>
        [Input("startsAt")]
        public Input<string>? StartsAt { get; set; }

        [Input("user")]
        private InputMap<string>? _user;

        /// <summary>
        /// User metadata
        /// </summary>
        public InputMap<string> User
        {
            get => _user ?? (_user = new InputMap<string>());
            set => _user = value;
        }

        public OverrideShiftState()
        {
        }
        public static new OverrideShiftState Empty => new OverrideShiftState();
    }
}
