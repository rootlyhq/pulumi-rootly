// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly
{
    public static class GetIncidentRoles
    {
        public static Task<GetIncidentRolesResult> InvokeAsync(GetIncidentRolesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIncidentRolesResult>("rootly:index/getIncidentRoles:getIncidentRoles", args ?? new GetIncidentRolesArgs(), options.WithDefaults());

        public static Output<GetIncidentRolesResult> Invoke(GetIncidentRolesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIncidentRolesResult>("rootly:index/getIncidentRoles:getIncidentRoles", args ?? new GetIncidentRolesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIncidentRolesArgs : global::Pulumi.InvokeArgs
    {
        [Input("enabled")]
        public bool? Enabled { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("slug")]
        public string? Slug { get; set; }

        public GetIncidentRolesArgs()
        {
        }
        public static new GetIncidentRolesArgs Empty => new GetIncidentRolesArgs();
    }

    public sealed class GetIncidentRolesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        public GetIncidentRolesInvokeArgs()
        {
        }
        public static new GetIncidentRolesInvokeArgs Empty => new GetIncidentRolesInvokeArgs();
    }


    [OutputType]
    public sealed class GetIncidentRolesResult
    {
        public readonly bool? Enabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetIncidentRolesIncidentRoleResult> IncidentRoles;
        public readonly string? Name;
        public readonly string? Slug;

        [OutputConstructor]
        private GetIncidentRolesResult(
            bool? enabled,

            string id,

            ImmutableArray<Outputs.GetIncidentRolesIncidentRoleResult> incidentRoles,

            string? name,

            string? slug)
        {
            Enabled = enabled;
            Id = id;
            IncidentRoles = incidentRoles;
            Name = name;
            Slug = slug;
        }
    }
}
