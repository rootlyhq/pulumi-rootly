// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Inputs
{

    public sealed class WorkflowTaskTriggerWorkflowTaskParamsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ["(incident) kind can only match [:id, :slug, :sequential*id, :pagerduty*incident*id, :opsgenie*incident*id, :victor*ops*incident*id, :jira*issue*id, :asana*task*id, :shortcut*task*id, :linear*issue*id, :zendesk*ticket*id, :trello*card*id, :airtable*record*id, :shortcut*story*id, :github*issue*id, :freshservice*ticket*id, :freshservice*task*id, :clickup*task*id]", "(post*mortem) kind can only match [:id]", "(action*item) kind can only match [:id, :jira*issue*id, :asana*task*id, :shortcut*task*id, :linear*issue*id, :zendesk*ticket*id, :trello*card*id, :airtable*record*id, :shortcut*story*id, :github*issue*id, :freshservice*ticket*id, :freshservice*task*id, :clickup*task*id]", "(pulse) kind can only match [:id]", "(alert) kind can only match [:id]"]. Value must be one of `id`, `slug`, `sequential_id`, `pagerduty_incident_id`, `opsgenie_incident_id`, `victor_ops_incident_id`, `jira_issue_id`, `asana_task_id`, `shortcut_task_id`, `linear_issue_id`, `zendesk_ticket_id`, `trello_card_id`, `airtable_record_id`, `shortcut_story_id`, `github_issue_id`, `freshservice_ticket_id`, `freshservice_task_id`, `clickup_task_id`.
        /// </summary>
        [Input("attributeToQueryBy", required: true)]
        public Input<string> AttributeToQueryBy { get; set; } = null!;

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("checkWorkflowConditions")]
        public Input<bool>? CheckWorkflowConditions { get; set; }

        /// <summary>
        /// Value must be one of `incident`, `post_mortem`, `action_item`, `pulse`, `alert`.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        [Input("resource", required: true)]
        private InputMap<string>? _resource;

        /// <summary>
        /// Map must contain two fields, `id` and `name`.
        /// </summary>
        public InputMap<string> Resource
        {
            get => _resource ?? (_resource = new InputMap<string>());
            set => _resource = value;
        }

        [Input("taskType")]
        public Input<string>? TaskType { get; set; }

        [Input("workflow", required: true)]
        private InputMap<string>? _workflow;

        /// <summary>
        /// Map must contain two fields, `id` and `name`.
        /// </summary>
        public InputMap<string> Workflow
        {
            get => _workflow ?? (_workflow = new InputMap<string>());
            set => _workflow = value;
        }

        public WorkflowTaskTriggerWorkflowTaskParamsArgs()
        {
        }
        public static new WorkflowTaskTriggerWorkflowTaskParamsArgs Empty => new WorkflowTaskTriggerWorkflowTaskParamsArgs();
    }
}
