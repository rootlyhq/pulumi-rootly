// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Inputs
{

    public sealed class WorkflowTaskUpdateActionItemTaskParamsArgs : global::Pulumi.ResourceArgs
    {
        [Input("assignedToUser")]
        private InputMap<string>? _assignedToUser;

        /// <summary>
        /// Map must contain two fields, `id` and `name`.  The user this action item is assigned to
        /// </summary>
        public InputMap<string> AssignedToUser
        {
            get => _assignedToUser ?? (_assignedToUser = new InputMap<string>());
            set => _assignedToUser = value;
        }

        /// <summary>
        /// [DEPRECATED] Use assigned*to*user attribute instead. The user id this action item is assigned to
        /// </summary>
        [Input("assignedToUserId")]
        public Input<string>? AssignedToUserId { get; set; }

        /// <summary>
        /// Attribute of the action item to match against. Value must be one of `id`, `jira_issue_id`, `asana_task_id`, `shortcut_task_id`, `linear_issue_id`, `zendesk_ticket_id`, `trello_card_id`, `airtable_record_id`, `shortcut_story_id`, `github_issue_id`, `gitlab_issue_id`, `freshservice_ticket_id`, `freshservice_task_id`, `clickup_task_id`.
        /// </summary>
        [Input("attributeToQueryBy", required: true)]
        public Input<string> AttributeToQueryBy { get; set; } = null!;

        /// <summary>
        /// Custom field mappings. Can contain liquid markup and need to be valid JSON
        /// </summary>
        [Input("customFieldsMapping")]
        public Input<string>? CustomFieldsMapping { get; set; }

        /// <summary>
        /// The action item description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("groupIds")]
        private InputList<string>? _groupIds;
        public InputList<string> GroupIds
        {
            get => _groupIds ?? (_groupIds = new InputList<string>());
            set => _groupIds = value;
        }

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("postToIncidentTimeline")]
        public Input<bool>? PostToIncidentTimeline { get; set; }

        /// <summary>
        /// The action item priority. Value must be one of `high`, `medium`, `low`.
        /// </summary>
        [Input("priority")]
        public Input<string>? Priority { get; set; }

        /// <summary>
        /// Value that attribute*to*query_by to uses to match against
        /// </summary>
        [Input("queryValue", required: true)]
        public Input<string> QueryValue { get; set; } = null!;

        /// <summary>
        /// The action item status. Value must be one of `open`, `in_progress`, `cancelled`, `done`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Brief description of the action item
        /// </summary>
        [Input("summary")]
        public Input<string>? Summary { get; set; }

        [Input("taskType")]
        public Input<string>? TaskType { get; set; }

        public WorkflowTaskUpdateActionItemTaskParamsArgs()
        {
        }
        public static new WorkflowTaskUpdateActionItemTaskParamsArgs Empty => new WorkflowTaskUpdateActionItemTaskParamsArgs();
    }
}
