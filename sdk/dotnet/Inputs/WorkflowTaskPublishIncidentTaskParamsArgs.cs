// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Inputs
{

    public sealed class WorkflowTaskPublishIncidentTaskParamsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Incident event description
        /// </summary>
        [Input("event")]
        public Input<string>? Event { get; set; }

        [Input("incident", required: true)]
        private InputMap<string>? _incident;

        /// <summary>
        /// Map must contain two fields, `id` and `name`.
        /// </summary>
        public InputMap<string> Incident
        {
            get => _incident ?? (_incident = new InputMap<string>());
            set => _incident = value;
        }

        /// <summary>
        /// Additional API Payload you can pass to statuspage.io for example. Can contain liquid markup and need to be valid JSON
        /// </summary>
        [Input("integrationPayload")]
        public Input<string>? IntegrationPayload { get; set; }

        /// <summary>
        /// When true notifies subscribers of the status page by email/text. Value must be one of true or false
        /// </summary>
        [Input("notifySubscribers")]
        public Input<bool>? NotifySubscribers { get; set; }

        [Input("publicTitle", required: true)]
        public Input<string> PublicTitle { get; set; } = null!;

        /// <summary>
        /// For Statuspage.io integrated pages auto publishes a tweet for your update. Value must be one of true or false
        /// </summary>
        [Input("shouldTweet")]
        public Input<bool>? ShouldTweet { get; set; }

        /// <summary>
        /// Value must be one of `investigating`, `identified`, `monitoring`, `resolved`, `scheduled`, `in_progress`, `verifying`, `completed`.
        /// </summary>
        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        [Input("statusPageId", required: true)]
        public Input<string> StatusPageId { get; set; } = null!;

        [Input("statusPageTemplate")]
        private InputMap<string>? _statusPageTemplate;

        /// <summary>
        /// Map must contain two fields, `id` and `name`.
        /// </summary>
        public InputMap<string> StatusPageTemplate
        {
            get => _statusPageTemplate ?? (_statusPageTemplate = new InputMap<string>());
            set => _statusPageTemplate = value;
        }

        [Input("taskType")]
        public Input<string>? TaskType { get; set; }

        public WorkflowTaskPublishIncidentTaskParamsArgs()
        {
        }
        public static new WorkflowTaskPublishIncidentTaskParamsArgs Empty => new WorkflowTaskPublishIncidentTaskParamsArgs();
    }
}
