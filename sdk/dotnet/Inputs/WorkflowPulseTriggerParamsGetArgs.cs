// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Inputs
{

    public sealed class WorkflowPulseTriggerParamsGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Value must be one off `ALL`, `ANY`, `NONE`.
        /// </summary>
        [Input("pulseCondition")]
        public Input<string>? PulseCondition { get; set; }

        /// <summary>
        /// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
        /// </summary>
        [Input("pulseConditionLabel")]
        public Input<string>? PulseConditionLabel { get; set; }

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("pulseConditionLabelUseRegexp")]
        public Input<bool>? PulseConditionLabelUseRegexp { get; set; }

        /// <summary>
        /// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
        /// </summary>
        [Input("pulseConditionPayload")]
        public Input<string>? PulseConditionPayload { get; set; }

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("pulseConditionPayloadUseRegexp")]
        public Input<bool>? PulseConditionPayloadUseRegexp { get; set; }

        /// <summary>
        /// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
        /// </summary>
        [Input("pulseConditionSource")]
        public Input<string>? PulseConditionSource { get; set; }

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("pulseConditionSourceUseRegexp")]
        public Input<bool>? PulseConditionSourceUseRegexp { get; set; }

        [Input("pulseLabels")]
        private InputList<string>? _pulseLabels;
        public InputList<string> PulseLabels
        {
            get => _pulseLabels ?? (_pulseLabels = new InputList<string>());
            set => _pulseLabels = value;
        }

        [Input("pulsePayloads")]
        private InputList<string>? _pulsePayloads;
        public InputList<string> PulsePayloads
        {
            get => _pulsePayloads ?? (_pulsePayloads = new InputList<string>());
            set => _pulsePayloads = value;
        }

        /// <summary>
        /// You can use jsonpath syntax. eg: $.incident.teams[*]
        /// </summary>
        [Input("pulseQueryPayload")]
        public Input<string>? PulseQueryPayload { get; set; }

        [Input("pulseSources")]
        private InputList<string>? _pulseSources;
        public InputList<string> PulseSources
        {
            get => _pulseSources ?? (_pulseSources = new InputList<string>());
            set => _pulseSources = value;
        }

        /// <summary>
        /// Value must be one off `pulse`.
        /// </summary>
        [Input("triggerType")]
        public Input<string>? TriggerType { get; set; }

        [Input("triggers")]
        private InputList<string>? _triggers;

        /// <summary>
        /// Actions that trigger the workflow. Value must be one of `pulse_created`.
        /// </summary>
        public InputList<string> Triggers
        {
            get => _triggers ?? (_triggers = new InputList<string>());
            set => _triggers = value;
        }

        public WorkflowPulseTriggerParamsGetArgs()
        {
        }
        public static new WorkflowPulseTriggerParamsGetArgs Empty => new WorkflowPulseTriggerParamsGetArgs();
    }
}
