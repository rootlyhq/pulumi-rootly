// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Inputs
{

    public sealed class WorkflowAlertTriggerParamsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Value must be one off `ALL`, `ANY`, `NONE`.
        /// </summary>
        [Input("alertCondition")]
        public Input<string>? AlertCondition { get; set; }

        /// <summary>
        /// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
        /// </summary>
        [Input("alertConditionLabel")]
        public Input<string>? AlertConditionLabel { get; set; }

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("alertConditionLabelUseRegexp")]
        public Input<bool>? AlertConditionLabelUseRegexp { get; set; }

        /// <summary>
        /// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
        /// </summary>
        [Input("alertConditionPayload")]
        public Input<string>? AlertConditionPayload { get; set; }

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("alertConditionPayloadUseRegexp")]
        public Input<bool>? AlertConditionPayloadUseRegexp { get; set; }

        /// <summary>
        /// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
        /// </summary>
        [Input("alertConditionSource")]
        public Input<string>? AlertConditionSource { get; set; }

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("alertConditionSourceUseRegexp")]
        public Input<bool>? AlertConditionSourceUseRegexp { get; set; }

        [Input("alertLabels")]
        private InputList<string>? _alertLabels;
        public InputList<string> AlertLabels
        {
            get => _alertLabels ?? (_alertLabels = new InputList<string>());
            set => _alertLabels = value;
        }

        [Input("alertPayloads")]
        private InputList<string>? _alertPayloads;
        public InputList<string> AlertPayloads
        {
            get => _alertPayloads ?? (_alertPayloads = new InputList<string>());
            set => _alertPayloads = value;
        }

        /// <summary>
        /// You can use jsonpath syntax. eg: $.incident.teams[*]
        /// </summary>
        [Input("alertQueryPayload")]
        public Input<string>? AlertQueryPayload { get; set; }

        [Input("alertSources")]
        private InputList<string>? _alertSources;
        public InputList<string> AlertSources
        {
            get => _alertSources ?? (_alertSources = new InputList<string>());
            set => _alertSources = value;
        }

        /// <summary>
        /// Value must be one off `alert`.
        /// </summary>
        [Input("triggerType")]
        public Input<string>? TriggerType { get; set; }

        [Input("triggers")]
        private InputList<string>? _triggers;

        /// <summary>
        /// Actions that trigger the workflow. Value must be one of `alert_created`.
        /// </summary>
        public InputList<string> Triggers
        {
            get => _triggers ?? (_triggers = new InputList<string>());
            set => _triggers = value;
        }

        public WorkflowAlertTriggerParamsArgs()
        {
        }
        public static new WorkflowAlertTriggerParamsArgs Empty => new WorkflowAlertTriggerParamsArgs();
    }
}
