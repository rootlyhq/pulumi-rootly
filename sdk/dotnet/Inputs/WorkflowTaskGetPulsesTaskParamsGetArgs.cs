// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Inputs
{

    public sealed class WorkflowTaskGetPulsesTaskParamsGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("environmentIds")]
        private InputList<string>? _environmentIds;
        public InputList<string> EnvironmentIds
        {
            get => _environmentIds ?? (_environmentIds = new InputList<string>());
            set => _environmentIds = value;
        }

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("environmentsImpactedByIncident")]
        public Input<bool>? EnvironmentsImpactedByIncident { get; set; }

        [Input("labels")]
        private InputList<string>? _labels;
        public InputList<string> Labels
        {
            get => _labels ?? (_labels = new InputList<string>());
            set => _labels = value;
        }

        [Input("parentMessageThreadTask")]
        private InputMap<string>? _parentMessageThreadTask;

        /// <summary>
        /// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
        /// </summary>
        public InputMap<string> ParentMessageThreadTask
        {
            get => _parentMessageThreadTask ?? (_parentMessageThreadTask = new InputMap<string>());
            set => _parentMessageThreadTask = value;
        }

        /// <summary>
        /// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
        /// </summary>
        [Input("pastDuration", required: true)]
        public Input<string> PastDuration { get; set; } = null!;

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("postToIncidentTimeline")]
        public Input<bool>? PostToIncidentTimeline { get; set; }

        [Input("postToSlackChannels")]
        private InputList<Inputs.WorkflowTaskGetPulsesTaskParamsPostToSlackChannelGetArgs>? _postToSlackChannels;
        public InputList<Inputs.WorkflowTaskGetPulsesTaskParamsPostToSlackChannelGetArgs> PostToSlackChannels
        {
            get => _postToSlackChannels ?? (_postToSlackChannels = new InputList<Inputs.WorkflowTaskGetPulsesTaskParamsPostToSlackChannelGetArgs>());
            set => _postToSlackChannels = value;
        }

        [Input("refs")]
        private InputList<string>? _refs;
        public InputList<string> Refs
        {
            get => _refs ?? (_refs = new InputList<string>());
            set => _refs = value;
        }

        [Input("serviceIds")]
        private InputList<string>? _serviceIds;
        public InputList<string> ServiceIds
        {
            get => _serviceIds ?? (_serviceIds = new InputList<string>());
            set => _serviceIds = value;
        }

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("servicesImpactedByIncident")]
        public Input<bool>? ServicesImpactedByIncident { get; set; }

        [Input("sources")]
        private InputList<string>? _sources;
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        [Input("taskType")]
        public Input<string>? TaskType { get; set; }

        public WorkflowTaskGetPulsesTaskParamsGetArgs()
        {
        }
        public static new WorkflowTaskGetPulsesTaskParamsGetArgs Empty => new WorkflowTaskGetPulsesTaskParamsGetArgs();
    }
}
