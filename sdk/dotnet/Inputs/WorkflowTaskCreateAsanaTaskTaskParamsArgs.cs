// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Inputs
{

    public sealed class WorkflowTaskCreateAsanaTaskTaskParamsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The assigned user's email
        /// </summary>
        [Input("assignUserEmail")]
        public Input<string>? AssignUserEmail { get; set; }

        [Input("completion", required: true)]
        private InputMap<string>? _completion;

        /// <summary>
        /// Map must contain two fields, `id` and `name`.
        /// </summary>
        public InputMap<string> Completion
        {
            get => _completion ?? (_completion = new InputMap<string>());
            set => _completion = value;
        }

        /// <summary>
        /// Custom field mappings. Can contain liquid markup and need to be valid JSON
        /// </summary>
        [Input("customFieldsMapping")]
        public Input<string>? CustomFieldsMapping { get; set; }

        /// <summary>
        /// Value must be one of `blocking`, `blocked_by`.
        /// </summary>
        [Input("dependencyDirection")]
        public Input<string>? DependencyDirection { get; set; }

        [Input("dependentTaskIds")]
        private InputList<string>? _dependentTaskIds;

        /// <summary>
        /// Dependent task ids. Supports liquid syntax
        /// </summary>
        public InputList<string> DependentTaskIds
        {
            get => _dependentTaskIds ?? (_dependentTaskIds = new InputList<string>());
            set => _dependentTaskIds = value;
        }

        /// <summary>
        /// The due date
        /// </summary>
        [Input("dueDate")]
        public Input<string>? DueDate { get; set; }

        [Input("notes")]
        public Input<string>? Notes { get; set; }

        [Input("projects", required: true)]
        private InputList<Inputs.WorkflowTaskCreateAsanaTaskTaskParamsProjectArgs>? _projects;
        public InputList<Inputs.WorkflowTaskCreateAsanaTaskTaskParamsProjectArgs> Projects
        {
            get => _projects ?? (_projects = new InputList<Inputs.WorkflowTaskCreateAsanaTaskTaskParamsProjectArgs>());
            set => _projects = value;
        }

        [Input("taskType")]
        public Input<string>? TaskType { get; set; }

        /// <summary>
        /// The task title
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        [Input("workspace", required: true)]
        private InputMap<string>? _workspace;

        /// <summary>
        /// Map must contain two fields, `id` and `name`.
        /// </summary>
        public InputMap<string> Workspace
        {
            get => _workspace ?? (_workspace = new InputMap<string>());
            set => _workspace = value;
        }

        public WorkflowTaskCreateAsanaTaskTaskParamsArgs()
        {
        }
        public static new WorkflowTaskCreateAsanaTaskTaskParamsArgs Empty => new WorkflowTaskCreateAsanaTaskTaskParamsArgs();
    }
}
