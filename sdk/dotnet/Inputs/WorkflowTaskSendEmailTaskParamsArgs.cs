// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Inputs
{

    public sealed class WorkflowTaskSendEmailTaskParamsArgs : global::Pulumi.ResourceArgs
    {
        [Input("bccs")]
        private InputList<string>? _bccs;
        public InputList<string> Bccs
        {
            get => _bccs ?? (_bccs = new InputList<string>());
            set => _bccs = value;
        }

        /// <summary>
        /// The email body
        /// </summary>
        [Input("body", required: true)]
        public Input<string> Body { get; set; } = null!;

        [Input("ccs")]
        private InputList<string>? _ccs;
        public InputList<string> Ccs
        {
            get => _ccs ?? (_ccs = new InputList<string>());
            set => _ccs = value;
        }

        /// <summary>
        /// URL to your custom email logo
        /// </summary>
        [Input("customLogoUrl")]
        public Input<string>? CustomLogoUrl { get; set; }

        /// <summary>
        /// The from email address. Need to use SMTP integration if different than rootly.com
        /// </summary>
        [Input("from")]
        public Input<string>? From { get; set; }

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("includeFooter")]
        public Input<bool>? IncludeFooter { get; set; }

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("includeHeader")]
        public Input<bool>? IncludeHeader { get; set; }

        /// <summary>
        /// The preheader
        /// </summary>
        [Input("preheader")]
        public Input<string>? Preheader { get; set; }

        /// <summary>
        /// The subject
        /// </summary>
        [Input("subject", required: true)]
        public Input<string> Subject { get; set; } = null!;

        [Input("taskType")]
        public Input<string>? TaskType { get; set; }

        [Input("tos", required: true)]
        private InputList<string>? _tos;
        public InputList<string> Tos
        {
            get => _tos ?? (_tos = new InputList<string>());
            set => _tos = value;
        }

        public WorkflowTaskSendEmailTaskParamsArgs()
        {
        }
        public static new WorkflowTaskSendEmailTaskParamsArgs Empty => new WorkflowTaskSendEmailTaskParamsArgs();
    }
}
