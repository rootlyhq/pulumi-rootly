// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Inputs
{

    public sealed class WorkflowTaskUpdateIncidentTaskParamsArgs : global::Pulumi.ResourceArgs
    {
        [Input("acknowledgedAt")]
        public Input<string>? AcknowledgedAt { get; set; }

        /// <summary>
        /// Value must be one of `id`, `slug`, `sequential_id`, `pagerduty_incident_id`, `opsgenie_incident_id`, `victor_ops_incident_id`, `jira_issue_id`, `asana_task_id`, `shortcut_task_id`, `linear_issue_id`, `zendesk_ticket_id`, `trello_card_id`, `airtable_record_id`, `shortcut_story_id`, `github_issue_id`, `gitlab_issue_id`, `freshservice_ticket_id`, `freshservice_task_id`, `clickup_task_id`.
        /// </summary>
        [Input("attributeToQueryBy")]
        public Input<string>? AttributeToQueryBy { get; set; }

        /// <summary>
        /// Custom field mappings. Can contain liquid markup and need to be valid JSON
        /// </summary>
        [Input("customFieldsMapping")]
        public Input<string>? CustomFieldsMapping { get; set; }

        [Input("detectedAt")]
        public Input<string>? DetectedAt { get; set; }

        [Input("environmentIds")]
        private InputList<string>? _environmentIds;
        public InputList<string> EnvironmentIds
        {
            get => _environmentIds ?? (_environmentIds = new InputList<string>());
            set => _environmentIds = value;
        }

        [Input("functionalityIds")]
        private InputList<string>? _functionalityIds;
        public InputList<string> FunctionalityIds
        {
            get => _functionalityIds ?? (_functionalityIds = new InputList<string>());
            set => _functionalityIds = value;
        }

        [Input("groupIds")]
        private InputList<string>? _groupIds;
        public InputList<string> GroupIds
        {
            get => _groupIds ?? (_groupIds = new InputList<string>());
            set => _groupIds = value;
        }

        /// <summary>
        /// The incident id to update or id of any attribute on the incident
        /// </summary>
        [Input("incidentId", required: true)]
        public Input<string> IncidentId { get; set; } = null!;

        [Input("incidentTypeIds")]
        private InputList<string>? _incidentTypeIds;
        public InputList<string> IncidentTypeIds
        {
            get => _incidentTypeIds ?? (_incidentTypeIds = new InputList<string>());
            set => _incidentTypeIds = value;
        }

        [Input("mitigatedAt")]
        public Input<string>? MitigatedAt { get; set; }

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("private")]
        public Input<bool>? Private { get; set; }

        [Input("resolvedAt")]
        public Input<string>? ResolvedAt { get; set; }

        [Input("serviceIds")]
        private InputList<string>? _serviceIds;
        public InputList<string> ServiceIds
        {
            get => _serviceIds ?? (_serviceIds = new InputList<string>());
            set => _serviceIds = value;
        }

        [Input("severityId")]
        public Input<string>? SeverityId { get; set; }

        [Input("startedAt")]
        public Input<string>? StartedAt { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The incident summary
        /// </summary>
        [Input("summary")]
        public Input<string>? Summary { get; set; }

        [Input("taskType")]
        public Input<string>? TaskType { get; set; }

        /// <summary>
        /// The incident title
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        public WorkflowTaskUpdateIncidentTaskParamsArgs()
        {
        }
        public static new WorkflowTaskUpdateIncidentTaskParamsArgs Empty => new WorkflowTaskUpdateIncidentTaskParamsArgs();
    }
}
