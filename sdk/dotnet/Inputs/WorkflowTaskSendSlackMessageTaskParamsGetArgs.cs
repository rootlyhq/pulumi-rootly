// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Inputs
{

    public sealed class WorkflowTaskSendSlackMessageTaskParamsGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("actionables")]
        private InputList<string>? _actionables;

        /// <summary>
        /// Value must be one of `update_summary`, `update_status`, `archive_channel`, `manage_incident_roles`, `update_incident`, `all_commands`, `leave_feedback`, `manage_form_fields`, `manage_action_items`, `view_tasks`, `add_pagerduty_responders`, `add_opsgenie_responders`, `add_victor_ops_responders`, `snooze_reminder`, `pause_reminder`, `restart_reminder`, `update_status_page`, `cancel_incident`.
        /// </summary>
        public InputList<string> Actionables
        {
            get => _actionables ?? (_actionables = new InputList<string>());
            set => _actionables = value;
        }

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("broadcastThreadReplyToChannel")]
        public Input<bool>? BroadcastThreadReplyToChannel { get; set; }

        [Input("channels")]
        private InputList<Inputs.WorkflowTaskSendSlackMessageTaskParamsChannelGetArgs>? _channels;
        public InputList<Inputs.WorkflowTaskSendSlackMessageTaskParamsChannelGetArgs> Channels
        {
            get => _channels ?? (_channels = new InputList<Inputs.WorkflowTaskSendSlackMessageTaskParamsChannelGetArgs>());
            set => _channels = value;
        }

        /// <summary>
        /// A hex color
        /// </summary>
        [Input("color")]
        public Input<string>? Color { get; set; }

        [Input("parentMessageThreadTask")]
        private InputMap<string>? _parentMessageThreadTask;

        /// <summary>
        /// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
        /// </summary>
        public InputMap<string> ParentMessageThreadTask
        {
            get => _parentMessageThreadTask ?? (_parentMessageThreadTask = new InputMap<string>());
            set => _parentMessageThreadTask = value;
        }

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("pinToChannel")]
        public Input<bool>? PinToChannel { get; set; }

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("sendAsEphemeral")]
        public Input<bool>? SendAsEphemeral { get; set; }

        /// <summary>
        /// When set to true, if the parent for this threaded message cannot be found the message will be skipped.. Value must be one of true or false
        /// </summary>
        [Input("sendOnlyAsThreadedMessage")]
        public Input<bool>? SendOnlyAsThreadedMessage { get; set; }

        [Input("slackUserGroups")]
        private InputList<Inputs.WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupGetArgs>? _slackUserGroups;
        public InputList<Inputs.WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupGetArgs> SlackUserGroups
        {
            get => _slackUserGroups ?? (_slackUserGroups = new InputList<Inputs.WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupGetArgs>());
            set => _slackUserGroups = value;
        }

        [Input("slackUsers")]
        private InputList<Inputs.WorkflowTaskSendSlackMessageTaskParamsSlackUserGetArgs>? _slackUsers;
        public InputList<Inputs.WorkflowTaskSendSlackMessageTaskParamsSlackUserGetArgs> SlackUsers
        {
            get => _slackUsers ?? (_slackUsers = new InputList<Inputs.WorkflowTaskSendSlackMessageTaskParamsSlackUserGetArgs>());
            set => _slackUsers = value;
        }

        [Input("taskType")]
        public Input<string>? TaskType { get; set; }

        /// <summary>
        /// The message text
        /// </summary>
        [Input("text", required: true)]
        public Input<string> Text { get; set; } = null!;

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("updateParentMessage")]
        public Input<bool>? UpdateParentMessage { get; set; }

        public WorkflowTaskSendSlackMessageTaskParamsGetArgs()
        {
        }
        public static new WorkflowTaskSendSlackMessageTaskParamsGetArgs Empty => new WorkflowTaskSendSlackMessageTaskParamsGetArgs();
    }
}
