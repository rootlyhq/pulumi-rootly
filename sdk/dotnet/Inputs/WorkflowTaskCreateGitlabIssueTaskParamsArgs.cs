// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Inputs
{

    public sealed class WorkflowTaskCreateGitlabIssueTaskParamsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The issue description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The due date
        /// </summary>
        [Input("dueDate")]
        public Input<string>? DueDate { get; set; }

        /// <summary>
        /// The issue type. Value must be one of `issue`, `incident`, `test_case`, `task`.
        /// </summary>
        [Input("issueType")]
        public Input<string>? IssueType { get; set; }

        /// <summary>
        /// The issue labels
        /// </summary>
        [Input("labels")]
        public Input<string>? Labels { get; set; }

        [Input("repository", required: true)]
        private InputMap<string>? _repository;

        /// <summary>
        /// Map must contain two fields, `id` and `name`.
        /// </summary>
        public InputMap<string> Repository
        {
            get => _repository ?? (_repository = new InputMap<string>());
            set => _repository = value;
        }

        [Input("taskType")]
        public Input<string>? TaskType { get; set; }

        /// <summary>
        /// The issue title
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        public WorkflowTaskCreateGitlabIssueTaskParamsArgs()
        {
        }
        public static new WorkflowTaskCreateGitlabIssueTaskParamsArgs Empty => new WorkflowTaskCreateGitlabIssueTaskParamsArgs();
    }
}
