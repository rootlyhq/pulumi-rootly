// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Inputs
{

    public sealed class WorkflowTaskCreateZendeskTicketTaskParamsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ticket comment
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("completion")]
        private InputMap<string>? _completion;

        /// <summary>
        /// Map must contain two fields, `id` and `name`. The completion id and display name
        /// </summary>
        public InputMap<string> Completion
        {
            get => _completion ?? (_completion = new InputMap<string>());
            set => _completion = value;
        }

        /// <summary>
        /// Custom field mappings. Can contain liquid markup and need to be valid JSON
        /// </summary>
        [Input("customFieldsMapping")]
        public Input<string>? CustomFieldsMapping { get; set; }

        /// <summary>
        /// Value must be one of `problem`, `incident`, `question`, `task`.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        [Input("priority")]
        private InputMap<string>? _priority;

        /// <summary>
        /// Map must contain two fields, `id` and `name`. The priority id and display name
        /// </summary>
        public InputMap<string> Priority
        {
            get => _priority ?? (_priority = new InputMap<string>());
            set => _priority = value;
        }

        /// <summary>
        /// The ticket subject
        /// </summary>
        [Input("subject", required: true)]
        public Input<string> Subject { get; set; } = null!;

        /// <summary>
        /// The ticket tags
        /// </summary>
        [Input("tags")]
        public Input<string>? Tags { get; set; }

        [Input("taskType")]
        public Input<string>? TaskType { get; set; }

        /// <summary>
        /// Additional Zendesk ticket attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
        /// </summary>
        [Input("ticketPayload")]
        public Input<string>? TicketPayload { get; set; }

        public WorkflowTaskCreateZendeskTicketTaskParamsArgs()
        {
        }
        public static new WorkflowTaskCreateZendeskTicketTaskParamsArgs Empty => new WorkflowTaskCreateZendeskTicketTaskParamsArgs();
    }
}
