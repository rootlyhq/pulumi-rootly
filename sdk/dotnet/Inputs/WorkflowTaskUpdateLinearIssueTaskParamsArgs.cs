// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Inputs
{

    public sealed class WorkflowTaskUpdateLinearIssueTaskParamsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The assigned user's email
        /// </summary>
        [Input("assignUserEmail")]
        public Input<string>? AssignUserEmail { get; set; }

        /// <summary>
        /// The issue description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The issue id
        /// </summary>
        [Input("issueId", required: true)]
        public Input<string> IssueId { get; set; } = null!;

        [Input("labels")]
        private InputList<Inputs.WorkflowTaskUpdateLinearIssueTaskParamsLabelArgs>? _labels;
        public InputList<Inputs.WorkflowTaskUpdateLinearIssueTaskParamsLabelArgs> Labels
        {
            get => _labels ?? (_labels = new InputList<Inputs.WorkflowTaskUpdateLinearIssueTaskParamsLabelArgs>());
            set => _labels = value;
        }

        [Input("priority")]
        private InputMap<string>? _priority;

        /// <summary>
        /// Map must contain two fields, `id` and `name`. The priority id and display name
        /// </summary>
        public InputMap<string> Priority
        {
            get => _priority ?? (_priority = new InputMap<string>());
            set => _priority = value;
        }

        [Input("project")]
        private InputMap<string>? _project;

        /// <summary>
        /// Map must contain two fields, `id` and `name`. The project id and display name
        /// </summary>
        public InputMap<string> Project
        {
            get => _project ?? (_project = new InputMap<string>());
            set => _project = value;
        }

        [Input("state")]
        private InputMap<string>? _state;

        /// <summary>
        /// Map must contain two fields, `id` and `name`. The state id and display name
        /// </summary>
        public InputMap<string> State
        {
            get => _state ?? (_state = new InputMap<string>());
            set => _state = value;
        }

        [Input("taskType")]
        public Input<string>? TaskType { get; set; }

        /// <summary>
        /// The issue title
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        public WorkflowTaskUpdateLinearIssueTaskParamsArgs()
        {
        }
        public static new WorkflowTaskUpdateLinearIssueTaskParamsArgs Empty => new WorkflowTaskUpdateLinearIssueTaskParamsArgs();
    }
}
