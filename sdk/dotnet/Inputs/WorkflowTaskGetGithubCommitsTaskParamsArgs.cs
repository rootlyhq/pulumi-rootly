// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Inputs
{

    public sealed class WorkflowTaskGetGithubCommitsTaskParamsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The branch
        /// </summary>
        [Input("branch", required: true)]
        public Input<string> Branch { get; set; } = null!;

        [Input("githubRepositoryNames")]
        private InputList<string>? _githubRepositoryNames;
        public InputList<string> GithubRepositoryNames
        {
            get => _githubRepositoryNames ?? (_githubRepositoryNames = new InputList<string>());
            set => _githubRepositoryNames = value;
        }

        /// <summary>
        /// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
        /// </summary>
        [Input("pastDuration", required: true)]
        public Input<string> PastDuration { get; set; } = null!;

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("postToIncidentTimeline")]
        public Input<bool>? PostToIncidentTimeline { get; set; }

        [Input("postToSlackChannels")]
        private InputList<Inputs.WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArgs>? _postToSlackChannels;
        public InputList<Inputs.WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArgs> PostToSlackChannels
        {
            get => _postToSlackChannels ?? (_postToSlackChannels = new InputList<Inputs.WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArgs>());
            set => _postToSlackChannels = value;
        }

        [Input("serviceIds")]
        private InputList<string>? _serviceIds;
        public InputList<string> ServiceIds
        {
            get => _serviceIds ?? (_serviceIds = new InputList<string>());
            set => _serviceIds = value;
        }

        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        [Input("servicesImpactedByIncident")]
        public Input<bool>? ServicesImpactedByIncident { get; set; }

        [Input("taskType")]
        public Input<string>? TaskType { get; set; }

        public WorkflowTaskGetGithubCommitsTaskParamsArgs()
        {
        }
        public static new WorkflowTaskGetGithubCommitsTaskParamsArgs Empty => new WorkflowTaskGetGithubCommitsTaskParamsArgs();
    }
}
