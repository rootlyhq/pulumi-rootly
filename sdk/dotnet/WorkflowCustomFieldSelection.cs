// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly
{
    [RootlyResourceType("rootly:index/workflowCustomFieldSelection:WorkflowCustomFieldSelection")]
    public partial class WorkflowCustomFieldSelection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The custom field for this selection
        /// </summary>
        [Output("customFieldId")]
        public Output<int> CustomFieldId { get; private set; } = null!;

        /// <summary>
        /// The trigger condition. Value must be one of `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
        /// </summary>
        [Output("incidentCondition")]
        public Output<string?> IncidentCondition { get; private set; } = null!;

        [Output("selectedOptionIds")]
        public Output<ImmutableArray<int>> SelectedOptionIds { get; private set; } = null!;

        [Output("values")]
        public Output<ImmutableArray<string>> Values { get; private set; } = null!;

        /// <summary>
        /// The workflow for this selection
        /// </summary>
        [Output("workflowId")]
        public Output<string> WorkflowId { get; private set; } = null!;


        /// <summary>
        /// Create a WorkflowCustomFieldSelection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkflowCustomFieldSelection(string name, WorkflowCustomFieldSelectionArgs args, CustomResourceOptions? options = null)
            : base("rootly:index/workflowCustomFieldSelection:WorkflowCustomFieldSelection", name, args ?? new WorkflowCustomFieldSelectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkflowCustomFieldSelection(string name, Input<string> id, WorkflowCustomFieldSelectionState? state = null, CustomResourceOptions? options = null)
            : base("rootly:index/workflowCustomFieldSelection:WorkflowCustomFieldSelection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/rootlyhq/pulumi-rootly/releases/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkflowCustomFieldSelection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkflowCustomFieldSelection Get(string name, Input<string> id, WorkflowCustomFieldSelectionState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkflowCustomFieldSelection(name, id, state, options);
        }
    }

    public sealed class WorkflowCustomFieldSelectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The custom field for this selection
        /// </summary>
        [Input("customFieldId", required: true)]
        public Input<int> CustomFieldId { get; set; } = null!;

        /// <summary>
        /// The trigger condition. Value must be one of `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
        /// </summary>
        [Input("incidentCondition")]
        public Input<string>? IncidentCondition { get; set; }

        [Input("selectedOptionIds")]
        private InputList<int>? _selectedOptionIds;
        public InputList<int> SelectedOptionIds
        {
            get => _selectedOptionIds ?? (_selectedOptionIds = new InputList<int>());
            set => _selectedOptionIds = value;
        }

        [Input("values")]
        private InputList<string>? _values;
        public InputList<string> Values
        {
            get => _values ?? (_values = new InputList<string>());
            set => _values = value;
        }

        /// <summary>
        /// The workflow for this selection
        /// </summary>
        [Input("workflowId")]
        public Input<string>? WorkflowId { get; set; }

        public WorkflowCustomFieldSelectionArgs()
        {
        }
        public static new WorkflowCustomFieldSelectionArgs Empty => new WorkflowCustomFieldSelectionArgs();
    }

    public sealed class WorkflowCustomFieldSelectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The custom field for this selection
        /// </summary>
        [Input("customFieldId")]
        public Input<int>? CustomFieldId { get; set; }

        /// <summary>
        /// The trigger condition. Value must be one of `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
        /// </summary>
        [Input("incidentCondition")]
        public Input<string>? IncidentCondition { get; set; }

        [Input("selectedOptionIds")]
        private InputList<int>? _selectedOptionIds;
        public InputList<int> SelectedOptionIds
        {
            get => _selectedOptionIds ?? (_selectedOptionIds = new InputList<int>());
            set => _selectedOptionIds = value;
        }

        [Input("values")]
        private InputList<string>? _values;
        public InputList<string> Values
        {
            get => _values ?? (_values = new InputList<string>());
            set => _values = value;
        }

        /// <summary>
        /// The workflow for this selection
        /// </summary>
        [Input("workflowId")]
        public Input<string>? WorkflowId { get; set; }

        public WorkflowCustomFieldSelectionState()
        {
        }
        public static new WorkflowCustomFieldSelectionState Empty => new WorkflowCustomFieldSelectionState();
    }
}
