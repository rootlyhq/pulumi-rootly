// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly
{
    public static class GetServices
    {
        public static Task<GetServicesResult> InvokeAsync(GetServicesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServicesResult>("rootly:index/getServices:getServices", args ?? new GetServicesArgs(), options.WithDefaults());

        public static Output<GetServicesResult> Invoke(GetServicesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServicesResult>("rootly:index/getServices:getServices", args ?? new GetServicesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServicesArgs : global::Pulumi.InvokeArgs
    {
        [Input("backstageId")]
        public string? BackstageId { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("opsgenieId")]
        public string? OpsgenieId { get; set; }

        [Input("pagerdutyId")]
        public string? PagerdutyId { get; set; }

        [Input("slug")]
        public string? Slug { get; set; }

        public GetServicesArgs()
        {
        }
        public static new GetServicesArgs Empty => new GetServicesArgs();
    }

    public sealed class GetServicesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("backstageId")]
        public Input<string>? BackstageId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("opsgenieId")]
        public Input<string>? OpsgenieId { get; set; }

        [Input("pagerdutyId")]
        public Input<string>? PagerdutyId { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        public GetServicesInvokeArgs()
        {
        }
        public static new GetServicesInvokeArgs Empty => new GetServicesInvokeArgs();
    }


    [OutputType]
    public sealed class GetServicesResult
    {
        public readonly string? BackstageId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;
        public readonly string? OpsgenieId;
        public readonly string? PagerdutyId;
        public readonly ImmutableArray<Outputs.GetServicesServiceResult> Services;
        public readonly string? Slug;

        [OutputConstructor]
        private GetServicesResult(
            string? backstageId,

            string id,

            string? name,

            string? opsgenieId,

            string? pagerdutyId,

            ImmutableArray<Outputs.GetServicesServiceResult> services,

            string? slug)
        {
            BackstageId = backstageId;
            Id = id;
            Name = name;
            OpsgenieId = opsgenieId;
            PagerdutyId = pagerdutyId;
            Services = services;
            Slug = slug;
        }
    }
}
