// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly
{
    public static class GetCauses
    {
        public static Task<GetCausesResult> InvokeAsync(GetCausesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCausesResult>("rootly:index/getCauses:getCauses", args ?? new GetCausesArgs(), options.WithDefaults());

        public static Output<GetCausesResult> Invoke(GetCausesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCausesResult>("rootly:index/getCauses:getCauses", args ?? new GetCausesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCausesArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public string? Name { get; set; }

        [Input("slug")]
        public string? Slug { get; set; }

        public GetCausesArgs()
        {
        }
        public static new GetCausesArgs Empty => new GetCausesArgs();
    }

    public sealed class GetCausesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        public GetCausesInvokeArgs()
        {
        }
        public static new GetCausesInvokeArgs Empty => new GetCausesInvokeArgs();
    }


    [OutputType]
    public sealed class GetCausesResult
    {
        public readonly ImmutableArray<Outputs.GetCausesCauseResult> Causes;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;
        public readonly string? Slug;

        [OutputConstructor]
        private GetCausesResult(
            ImmutableArray<Outputs.GetCausesCauseResult> causes,

            string id,

            string? name,

            string? slug)
        {
            Causes = causes;
            Id = id;
            Name = name;
            Slug = slug;
        }
    }
}
