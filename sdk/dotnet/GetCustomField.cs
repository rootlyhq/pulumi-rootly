// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly
{
    public static class GetCustomField
    {
        /// <summary>
        /// DEPRECATED: Please use `form_field` data source instead.
        /// 
        /// ## Example Usage
        /// 
        /// ```shell
        /// data "rootly_custom_field" "my-custom-field" {
        ///   slug = "my-custom-field"
        /// }
        /// ```
        /// </summary>
        public static Task<GetCustomFieldResult> InvokeAsync(GetCustomFieldArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCustomFieldResult>("rootly:index/getCustomField:getCustomField", args ?? new GetCustomFieldArgs(), options.WithDefaults());

        /// <summary>
        /// DEPRECATED: Please use `form_field` data source instead.
        /// 
        /// ## Example Usage
        /// 
        /// ```shell
        /// data "rootly_custom_field" "my-custom-field" {
        ///   slug = "my-custom-field"
        /// }
        /// ```
        /// </summary>
        public static Output<GetCustomFieldResult> Invoke(GetCustomFieldInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomFieldResult>("rootly:index/getCustomField:getCustomField", args ?? new GetCustomFieldInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCustomFieldArgs : global::Pulumi.InvokeArgs
    {
        [Input("createdAt")]
        private Dictionary<string, string>? _createdAt;

        /// <summary>
        /// Filter by date range using 'lt' and 'gt'.
        /// </summary>
        public Dictionary<string, string> CreatedAt
        {
            get => _createdAt ?? (_createdAt = new Dictionary<string, string>());
            set => _createdAt = value;
        }

        [Input("enabled")]
        public bool? Enabled { get; set; }

        [Input("kind")]
        public string? Kind { get; set; }

        [Input("label")]
        public string? Label { get; set; }

        [Input("slug")]
        public string? Slug { get; set; }

        public GetCustomFieldArgs()
        {
        }
        public static new GetCustomFieldArgs Empty => new GetCustomFieldArgs();
    }

    public sealed class GetCustomFieldInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("createdAt")]
        private InputMap<string>? _createdAt;

        /// <summary>
        /// Filter by date range using 'lt' and 'gt'.
        /// </summary>
        public InputMap<string> CreatedAt
        {
            get => _createdAt ?? (_createdAt = new InputMap<string>());
            set => _createdAt = value;
        }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("kind")]
        public Input<string>? Kind { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        public GetCustomFieldInvokeArgs()
        {
        }
        public static new GetCustomFieldInvokeArgs Empty => new GetCustomFieldInvokeArgs();
    }


    [OutputType]
    public sealed class GetCustomFieldResult
    {
        /// <summary>
        /// Filter by date range using 'lt' and 'gt'.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? CreatedAt;
        public readonly bool? Enabled;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        public readonly string Kind;
        public readonly string Label;
        public readonly string Slug;

        [OutputConstructor]
        private GetCustomFieldResult(
            ImmutableDictionary<string, string>? createdAt,

            bool? enabled,

            string id,

            string kind,

            string label,

            string slug)
        {
            CreatedAt = createdAt;
            Enabled = enabled;
            Id = id;
            Kind = kind;
            Label = label;
            Slug = slug;
        }
    }
}
