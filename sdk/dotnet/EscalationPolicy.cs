// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly
{
    [RootlyResourceType("rootly:index/escalationPolicy:EscalationPolicy")]
    public partial class EscalationPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// User who created the escalation policy
        /// </summary>
        [Output("createdByUserId")]
        public Output<int> CreatedByUserId { get; private set; } = null!;

        /// <summary>
        /// The description of the escalation policy
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Associated groups (alerting the group will trigger escalation policy)
        /// </summary>
        [Output("groupIds")]
        public Output<ImmutableArray<string>> GroupIds { get; private set; } = null!;

        /// <summary>
        /// User who updated the escalation policy
        /// </summary>
        [Output("lastUpdatedByUserId")]
        public Output<int> LastUpdatedByUserId { get; private set; } = null!;

        /// <summary>
        /// The name of the escalation policy
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The number of times this policy will be executed until someone acknowledges the alert
        /// </summary>
        [Output("repeatCount")]
        public Output<int> RepeatCount { get; private set; } = null!;

        /// <summary>
        /// Associated services (alerting the service will trigger escalation policy)
        /// </summary>
        [Output("serviceIds")]
        public Output<ImmutableArray<string>> ServiceIds { get; private set; } = null!;


        /// <summary>
        /// Create a EscalationPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EscalationPolicy(string name, EscalationPolicyArgs? args = null, CustomResourceOptions? options = null)
            : base("rootly:index/escalationPolicy:EscalationPolicy", name, args ?? new EscalationPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EscalationPolicy(string name, Input<string> id, EscalationPolicyState? state = null, CustomResourceOptions? options = null)
            : base("rootly:index/escalationPolicy:EscalationPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/rootlyhq/pulumi-rootly/releases/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EscalationPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EscalationPolicy Get(string name, Input<string> id, EscalationPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new EscalationPolicy(name, id, state, options);
        }
    }

    public sealed class EscalationPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User who created the escalation policy
        /// </summary>
        [Input("createdByUserId")]
        public Input<int>? CreatedByUserId { get; set; }

        /// <summary>
        /// The description of the escalation policy
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("groupIds")]
        private InputList<string>? _groupIds;

        /// <summary>
        /// Associated groups (alerting the group will trigger escalation policy)
        /// </summary>
        public InputList<string> GroupIds
        {
            get => _groupIds ?? (_groupIds = new InputList<string>());
            set => _groupIds = value;
        }

        /// <summary>
        /// User who updated the escalation policy
        /// </summary>
        [Input("lastUpdatedByUserId")]
        public Input<int>? LastUpdatedByUserId { get; set; }

        /// <summary>
        /// The name of the escalation policy
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The number of times this policy will be executed until someone acknowledges the alert
        /// </summary>
        [Input("repeatCount")]
        public Input<int>? RepeatCount { get; set; }

        [Input("serviceIds")]
        private InputList<string>? _serviceIds;

        /// <summary>
        /// Associated services (alerting the service will trigger escalation policy)
        /// </summary>
        public InputList<string> ServiceIds
        {
            get => _serviceIds ?? (_serviceIds = new InputList<string>());
            set => _serviceIds = value;
        }

        public EscalationPolicyArgs()
        {
        }
        public static new EscalationPolicyArgs Empty => new EscalationPolicyArgs();
    }

    public sealed class EscalationPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User who created the escalation policy
        /// </summary>
        [Input("createdByUserId")]
        public Input<int>? CreatedByUserId { get; set; }

        /// <summary>
        /// The description of the escalation policy
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("groupIds")]
        private InputList<string>? _groupIds;

        /// <summary>
        /// Associated groups (alerting the group will trigger escalation policy)
        /// </summary>
        public InputList<string> GroupIds
        {
            get => _groupIds ?? (_groupIds = new InputList<string>());
            set => _groupIds = value;
        }

        /// <summary>
        /// User who updated the escalation policy
        /// </summary>
        [Input("lastUpdatedByUserId")]
        public Input<int>? LastUpdatedByUserId { get; set; }

        /// <summary>
        /// The name of the escalation policy
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The number of times this policy will be executed until someone acknowledges the alert
        /// </summary>
        [Input("repeatCount")]
        public Input<int>? RepeatCount { get; set; }

        [Input("serviceIds")]
        private InputList<string>? _serviceIds;

        /// <summary>
        /// Associated services (alerting the service will trigger escalation policy)
        /// </summary>
        public InputList<string> ServiceIds
        {
            get => _serviceIds ?? (_serviceIds = new InputList<string>());
            set => _serviceIds = value;
        }

        public EscalationPolicyState()
        {
        }
        public static new EscalationPolicyState Empty => new EscalationPolicyState();
    }
}
