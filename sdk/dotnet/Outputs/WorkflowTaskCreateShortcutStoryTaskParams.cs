// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Outputs
{

    [OutputType]
    public sealed class WorkflowTaskCreateShortcutStoryTaskParams
    {
        /// <summary>
        /// Map must contain two fields, `id` and `name`. The archivation id and display name
        /// </summary>
        public readonly ImmutableDictionary<string, string> Archivation;
        /// <summary>
        /// The incident description
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The due date
        /// </summary>
        public readonly string? DueDate;
        /// <summary>
        /// Value must be one of `bug`, `chore`, `feature`.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The story labels
        /// </summary>
        public readonly string? Labels;
        /// <summary>
        /// Map must contain two fields, `id` and `name`. The project id and display name
        /// </summary>
        public readonly ImmutableDictionary<string, string> Project;
        public readonly string? TaskType;
        /// <summary>
        /// The incident title
        /// </summary>
        public readonly string Title;

        [OutputConstructor]
        private WorkflowTaskCreateShortcutStoryTaskParams(
            ImmutableDictionary<string, string> archivation,

            string? description,

            string? dueDate,

            string kind,

            string? labels,

            ImmutableDictionary<string, string> project,

            string? taskType,

            string title)
        {
            Archivation = archivation;
            Description = description;
            DueDate = dueDate;
            Kind = kind;
            Labels = labels;
            Project = project;
            TaskType = taskType;
            Title = title;
        }
    }
}
