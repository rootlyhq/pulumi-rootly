// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Outputs
{

    [OutputType]
    public sealed class WorkflowAlertTriggerParams
    {
        /// <summary>
        /// Value must be one off `ALL`, `ANY`, `NONE`.
        /// </summary>
        public readonly string? AlertCondition;
        /// <summary>
        /// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
        /// </summary>
        public readonly string? AlertConditionLabel;
        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        public readonly bool? AlertConditionLabelUseRegexp;
        /// <summary>
        /// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
        /// </summary>
        public readonly string? AlertConditionPayload;
        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        public readonly bool? AlertConditionPayloadUseRegexp;
        /// <summary>
        /// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
        /// </summary>
        public readonly string? AlertConditionSource;
        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        public readonly bool? AlertConditionSourceUseRegexp;
        public readonly ImmutableArray<string> AlertLabels;
        public readonly ImmutableArray<string> AlertPayloads;
        /// <summary>
        /// You can use jsonpath syntax. eg: $.incident.teams[*]
        /// </summary>
        public readonly string? AlertQueryPayload;
        public readonly ImmutableArray<string> AlertSources;
        /// <summary>
        /// Value must be one off `alert`.
        /// </summary>
        public readonly string? TriggerType;
        /// <summary>
        /// Actions that trigger the workflow. Value must be one of `alert_created`.
        /// </summary>
        public readonly ImmutableArray<string> Triggers;

        [OutputConstructor]
        private WorkflowAlertTriggerParams(
            string? alertCondition,

            string? alertConditionLabel,

            bool? alertConditionLabelUseRegexp,

            string? alertConditionPayload,

            bool? alertConditionPayloadUseRegexp,

            string? alertConditionSource,

            bool? alertConditionSourceUseRegexp,

            ImmutableArray<string> alertLabels,

            ImmutableArray<string> alertPayloads,

            string? alertQueryPayload,

            ImmutableArray<string> alertSources,

            string? triggerType,

            ImmutableArray<string> triggers)
        {
            AlertCondition = alertCondition;
            AlertConditionLabel = alertConditionLabel;
            AlertConditionLabelUseRegexp = alertConditionLabelUseRegexp;
            AlertConditionPayload = alertConditionPayload;
            AlertConditionPayloadUseRegexp = alertConditionPayloadUseRegexp;
            AlertConditionSource = alertConditionSource;
            AlertConditionSourceUseRegexp = alertConditionSourceUseRegexp;
            AlertLabels = alertLabels;
            AlertPayloads = alertPayloads;
            AlertQueryPayload = alertQueryPayload;
            AlertSources = alertSources;
            TriggerType = triggerType;
            Triggers = triggers;
        }
    }
}
