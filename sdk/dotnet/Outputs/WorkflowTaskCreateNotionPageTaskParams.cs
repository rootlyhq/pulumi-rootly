// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Outputs
{

    [OutputType]
    public sealed class WorkflowTaskCreateNotionPageTaskParams
    {
        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        public readonly bool? MarkPostMortemAsPublished;
        /// <summary>
        /// Map must contain two fields, `id` and `name`. The parent page id and display name
        /// </summary>
        public readonly ImmutableDictionary<string, string> ParentPage;
        /// <summary>
        /// Retrospective template to use when creating page task, if desired
        /// </summary>
        public readonly string? PostMortemTemplateId;
        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        public readonly bool? ShowActionItemsAsTable;
        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        public readonly bool? ShowTimelineAsTable;
        public readonly string? TaskType;
        /// <summary>
        /// The Notion page title
        /// </summary>
        public readonly string Title;

        [OutputConstructor]
        private WorkflowTaskCreateNotionPageTaskParams(
            bool? markPostMortemAsPublished,

            ImmutableDictionary<string, string> parentPage,

            string? postMortemTemplateId,

            bool? showActionItemsAsTable,

            bool? showTimelineAsTable,

            string? taskType,

            string title)
        {
            MarkPostMortemAsPublished = markPostMortemAsPublished;
            ParentPage = parentPage;
            PostMortemTemplateId = postMortemTemplateId;
            ShowActionItemsAsTable = showActionItemsAsTable;
            ShowTimelineAsTable = showTimelineAsTable;
            TaskType = taskType;
            Title = title;
        }
    }
}
