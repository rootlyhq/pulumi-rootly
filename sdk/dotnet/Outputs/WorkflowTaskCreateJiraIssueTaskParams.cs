// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Outputs
{

    [OutputType]
    public sealed class WorkflowTaskCreateJiraIssueTaskParams
    {
        /// <summary>
        /// The assigned user's email
        /// </summary>
        public readonly string? AssignUserEmail;
        /// <summary>
        /// Custom field mappings. Can contain liquid markup and need to be valid JSON
        /// </summary>
        public readonly string? CustomFieldsMapping;
        /// <summary>
        /// The issue description
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The due date
        /// </summary>
        public readonly string? DueDate;
        /// <summary>
        /// Map must contain two fields, `id` and `name`. Specify integration id if you have more than one Jira instance
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Integration;
        /// <summary>
        /// Map must contain two fields, `id` and `name`. The issue type id and display name
        /// </summary>
        public readonly ImmutableDictionary<string, string> IssueType;
        /// <summary>
        /// The issue labels
        /// </summary>
        public readonly string? Labels;
        /// <summary>
        /// Map must contain two fields, `id` and `name`. The priority id and display name
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Priority;
        /// <summary>
        /// The project key
        /// </summary>
        public readonly string ProjectKey;
        /// <summary>
        /// The reporter user's email
        /// </summary>
        public readonly string? ReporterUserEmail;
        /// <summary>
        /// Map must contain two fields, `id` and `name`. The status id and display name
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Status;
        public readonly string? TaskType;
        /// <summary>
        /// The issue title
        /// </summary>
        public readonly string Title;
        /// <summary>
        /// Update payload. Can contain liquid markup and need to be valid JSON
        /// </summary>
        public readonly string? UpdatePayload;

        [OutputConstructor]
        private WorkflowTaskCreateJiraIssueTaskParams(
            string? assignUserEmail,

            string? customFieldsMapping,

            string? description,

            string? dueDate,

            ImmutableDictionary<string, string>? integration,

            ImmutableDictionary<string, string> issueType,

            string? labels,

            ImmutableDictionary<string, string>? priority,

            string projectKey,

            string? reporterUserEmail,

            ImmutableDictionary<string, string>? status,

            string? taskType,

            string title,

            string? updatePayload)
        {
            AssignUserEmail = assignUserEmail;
            CustomFieldsMapping = customFieldsMapping;
            Description = description;
            DueDate = dueDate;
            Integration = integration;
            IssueType = issueType;
            Labels = labels;
            Priority = priority;
            ProjectKey = projectKey;
            ReporterUserEmail = reporterUserEmail;
            Status = status;
            TaskType = taskType;
            Title = title;
            UpdatePayload = updatePayload;
        }
    }
}
