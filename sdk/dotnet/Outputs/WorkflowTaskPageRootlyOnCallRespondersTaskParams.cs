// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Outputs
{

    [OutputType]
    public sealed class WorkflowTaskPageRootlyOnCallRespondersTaskParams
    {
        /// <summary>
        /// Alert urgency ID
        /// </summary>
        public readonly string? AlertUrgencyId;
        public readonly string? EscalationNote;
        /// <summary>
        /// Map must contain two fields, `id` and `name`.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? EscalationPolicyTarget;
        /// <summary>
        /// Map must contain two fields, `id` and `name`.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? GroupTarget;
        /// <summary>
        /// Map must contain two fields, `id` and `name`.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? ServiceTarget;
        public readonly string Summary;
        public readonly string? TaskType;
        /// <summary>
        /// Map must contain two fields, `id` and `name`.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? UserTarget;

        [OutputConstructor]
        private WorkflowTaskPageRootlyOnCallRespondersTaskParams(
            string? alertUrgencyId,

            string? escalationNote,

            ImmutableDictionary<string, string>? escalationPolicyTarget,

            ImmutableDictionary<string, string>? groupTarget,

            ImmutableDictionary<string, string>? serviceTarget,

            string summary,

            string? taskType,

            ImmutableDictionary<string, string>? userTarget)
        {
            AlertUrgencyId = alertUrgencyId;
            EscalationNote = escalationNote;
            EscalationPolicyTarget = escalationPolicyTarget;
            GroupTarget = groupTarget;
            ServiceTarget = serviceTarget;
            Summary = summary;
            TaskType = taskType;
            UserTarget = userTarget;
        }
    }
}
