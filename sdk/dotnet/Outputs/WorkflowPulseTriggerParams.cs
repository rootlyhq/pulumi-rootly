// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rootly.Outputs
{

    [OutputType]
    public sealed class WorkflowPulseTriggerParams
    {
        /// <summary>
        /// Value must be one off `ALL`, `ANY`, `NONE`.
        /// </summary>
        public readonly string? PulseCondition;
        /// <summary>
        /// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
        /// </summary>
        public readonly string? PulseConditionLabel;
        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        public readonly bool? PulseConditionLabelUseRegexp;
        /// <summary>
        /// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
        /// </summary>
        public readonly string? PulseConditionPayload;
        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        public readonly bool? PulseConditionPayloadUseRegexp;
        /// <summary>
        /// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
        /// </summary>
        public readonly string? PulseConditionSource;
        /// <summary>
        /// Value must be one of true or false
        /// </summary>
        public readonly bool? PulseConditionSourceUseRegexp;
        public readonly ImmutableArray<string> PulseLabels;
        public readonly ImmutableArray<string> PulsePayloads;
        /// <summary>
        /// You can use jsonpath syntax. eg: $.incident.teams[*]
        /// </summary>
        public readonly string? PulseQueryPayload;
        public readonly ImmutableArray<string> PulseSources;
        /// <summary>
        /// Value must be one off `pulse`.
        /// </summary>
        public readonly string? TriggerType;
        /// <summary>
        /// Actions that trigger the workflow. Value must be one of `pulse_created`.
        /// </summary>
        public readonly ImmutableArray<string> Triggers;

        [OutputConstructor]
        private WorkflowPulseTriggerParams(
            string? pulseCondition,

            string? pulseConditionLabel,

            bool? pulseConditionLabelUseRegexp,

            string? pulseConditionPayload,

            bool? pulseConditionPayloadUseRegexp,

            string? pulseConditionSource,

            bool? pulseConditionSourceUseRegexp,

            ImmutableArray<string> pulseLabels,

            ImmutableArray<string> pulsePayloads,

            string? pulseQueryPayload,

            ImmutableArray<string> pulseSources,

            string? triggerType,

            ImmutableArray<string> triggers)
        {
            PulseCondition = pulseCondition;
            PulseConditionLabel = pulseConditionLabel;
            PulseConditionLabelUseRegexp = pulseConditionLabelUseRegexp;
            PulseConditionPayload = pulseConditionPayload;
            PulseConditionPayloadUseRegexp = pulseConditionPayloadUseRegexp;
            PulseConditionSource = pulseConditionSource;
            PulseConditionSourceUseRegexp = pulseConditionSourceUseRegexp;
            PulseLabels = pulseLabels;
            PulsePayloads = pulsePayloads;
            PulseQueryPayload = pulseQueryPayload;
            PulseSources = pulseSources;
            TriggerType = triggerType;
            Triggers = triggers;
        }
    }
}
