// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIncidentType(args?: GetIncidentTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetIncidentTypeResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("rootly:index/getIncidentType:getIncidentType", {
        "color": args.color,
        "createdAt": args.createdAt,
        "name": args.name,
        "slug": args.slug,
    }, opts);
}

/**
 * A collection of arguments for invoking getIncidentType.
 */
export interface GetIncidentTypeArgs {
    color?: string;
    createdAt?: {[key: string]: any};
    name?: string;
    slug?: string;
}

/**
 * A collection of values returned by getIncidentType.
 */
export interface GetIncidentTypeResult {
    readonly color: string;
    readonly createdAt?: {[key: string]: any};
    readonly id: string;
    readonly name: string;
    readonly slug: string;
}

export function getIncidentTypeOutput(args?: GetIncidentTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIncidentTypeResult> {
    return pulumi.output(args).apply(a => getIncidentType(a, opts))
}

/**
 * A collection of arguments for invoking getIncidentType.
 */
export interface GetIncidentTypeOutputArgs {
    color?: pulumi.Input<string>;
    createdAt?: pulumi.Input<{[key: string]: any}>;
    name?: pulumi.Input<string>;
    slug?: pulumi.Input<string>;
}
