// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IncidentPermissionSetResource extends pulumi.CustomResource {
    /**
     * Get an existing IncidentPermissionSetResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IncidentPermissionSetResourceState, opts?: pulumi.CustomResourceOptions): IncidentPermissionSetResource {
        return new IncidentPermissionSetResource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rootly:index/incidentPermissionSetResource:IncidentPermissionSetResource';

    /**
     * Returns true if the given object is an instance of IncidentPermissionSetResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IncidentPermissionSetResource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IncidentPermissionSetResource.__pulumiType;
    }

    public readonly incidentPermissionSetId!: pulumi.Output<string>;
    /**
     * Value must be one of `severities`, `incidentTypes`, `statuses`.
     */
    public readonly kind!: pulumi.Output<string | undefined>;
    /**
     * Value must be one of true or false
     */
    public readonly private!: pulumi.Output<boolean>;
    public readonly resourceId!: pulumi.Output<string>;
    public readonly resourceType!: pulumi.Output<string>;

    /**
     * Create a IncidentPermissionSetResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IncidentPermissionSetResourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IncidentPermissionSetResourceArgs | IncidentPermissionSetResourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IncidentPermissionSetResourceState | undefined;
            resourceInputs["incidentPermissionSetId"] = state ? state.incidentPermissionSetId : undefined;
            resourceInputs["kind"] = state ? state.kind : undefined;
            resourceInputs["private"] = state ? state.private : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
        } else {
            const args = argsOrState as IncidentPermissionSetResourceArgs | undefined;
            resourceInputs["incidentPermissionSetId"] = args ? args.incidentPermissionSetId : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["private"] = args ? args.private : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IncidentPermissionSetResource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IncidentPermissionSetResource resources.
 */
export interface IncidentPermissionSetResourceState {
    incidentPermissionSetId?: pulumi.Input<string>;
    /**
     * Value must be one of `severities`, `incidentTypes`, `statuses`.
     */
    kind?: pulumi.Input<string>;
    /**
     * Value must be one of true or false
     */
    private?: pulumi.Input<boolean>;
    resourceId?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IncidentPermissionSetResource resource.
 */
export interface IncidentPermissionSetResourceArgs {
    incidentPermissionSetId?: pulumi.Input<string>;
    /**
     * Value must be one of `severities`, `incidentTypes`, `statuses`.
     */
    kind?: pulumi.Input<string>;
    /**
     * Value must be one of true or false
     */
    private?: pulumi.Input<boolean>;
    resourceId?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
}
