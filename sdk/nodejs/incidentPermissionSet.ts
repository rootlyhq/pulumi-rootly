// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IncidentPermissionSet extends pulumi.CustomResource {
    /**
     * Get an existing IncidentPermissionSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IncidentPermissionSetState, opts?: pulumi.CustomResourceOptions): IncidentPermissionSet {
        return new IncidentPermissionSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rootly:index/incidentPermissionSet:IncidentPermissionSet';

    /**
     * Returns true if the given object is an instance of IncidentPermissionSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IncidentPermissionSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IncidentPermissionSet.__pulumiType;
    }

    /**
     * The incident permission set description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The incident permission set name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly privateIncidentPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly publicIncidentPermissions!: pulumi.Output<string[]>;
    /**
     * The incident permission set slug.
     */
    public readonly slug!: pulumi.Output<string>;

    /**
     * Create a IncidentPermissionSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IncidentPermissionSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IncidentPermissionSetArgs | IncidentPermissionSetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IncidentPermissionSetState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["privateIncidentPermissions"] = state ? state.privateIncidentPermissions : undefined;
            resourceInputs["publicIncidentPermissions"] = state ? state.publicIncidentPermissions : undefined;
            resourceInputs["slug"] = state ? state.slug : undefined;
        } else {
            const args = argsOrState as IncidentPermissionSetArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["privateIncidentPermissions"] = args ? args.privateIncidentPermissions : undefined;
            resourceInputs["publicIncidentPermissions"] = args ? args.publicIncidentPermissions : undefined;
            resourceInputs["slug"] = args ? args.slug : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IncidentPermissionSet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IncidentPermissionSet resources.
 */
export interface IncidentPermissionSetState {
    /**
     * The incident permission set description.
     */
    description?: pulumi.Input<string>;
    /**
     * The incident permission set name.
     */
    name?: pulumi.Input<string>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    privateIncidentPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    publicIncidentPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The incident permission set slug.
     */
    slug?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IncidentPermissionSet resource.
 */
export interface IncidentPermissionSetArgs {
    /**
     * The incident permission set description.
     */
    description?: pulumi.Input<string>;
    /**
     * The incident permission set name.
     */
    name?: pulumi.Input<string>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    privateIncidentPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    publicIncidentPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The incident permission set slug.
     */
    slug?: pulumi.Input<string>;
}
