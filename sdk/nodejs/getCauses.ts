// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getCauses(args?: GetCausesArgs, opts?: pulumi.InvokeOptions): Promise<GetCausesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("rootly:index/getCauses:getCauses", {
        "name": args.name,
        "slug": args.slug,
    }, opts);
}

/**
 * A collection of arguments for invoking getCauses.
 */
export interface GetCausesArgs {
    name?: string;
    slug?: string;
}

/**
 * A collection of values returned by getCauses.
 */
export interface GetCausesResult {
    readonly causes: outputs.GetCausesCause[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly slug?: string;
}

export function getCausesOutput(args?: GetCausesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCausesResult> {
    return pulumi.output(args).apply(a => getCauses(a, opts))
}

/**
 * A collection of arguments for invoking getCauses.
 */
export interface GetCausesOutputArgs {
    name?: pulumi.Input<string>;
    slug?: pulumi.Input<string>;
}
