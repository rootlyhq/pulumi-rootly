// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CustomField extends pulumi.CustomResource {
    /**
     * Get an existing CustomField resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomFieldState, opts?: pulumi.CustomResourceOptions): CustomField {
        return new CustomField(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rootly:index/customField:CustomField';

    /**
     * Returns true if the given object is an instance of CustomField.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomField {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomField.__pulumiType;
    }

    /**
     * The default value for text field kinds.
     */
    public readonly default!: pulumi.Output<string>;
    /**
     * The description of the custom_field
     */
    public readonly description!: pulumi.Output<string>;
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The kind of the custom_field
     */
    public readonly kind!: pulumi.Output<string>;
    /**
     * The name of the custom_field
     */
    public readonly label!: pulumi.Output<string>;
    /**
     * The position of the custom_field
     */
    public readonly position!: pulumi.Output<number>;
    public readonly requireds!: pulumi.Output<string[]>;
    public readonly showns!: pulumi.Output<string[]>;
    /**
     * The slug of the custom_field
     */
    public readonly slug!: pulumi.Output<string>;

    /**
     * Create a CustomField resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomFieldArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomFieldArgs | CustomFieldState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomFieldState | undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["kind"] = state ? state.kind : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["position"] = state ? state.position : undefined;
            resourceInputs["requireds"] = state ? state.requireds : undefined;
            resourceInputs["showns"] = state ? state.showns : undefined;
            resourceInputs["slug"] = state ? state.slug : undefined;
        } else {
            const args = argsOrState as CustomFieldArgs | undefined;
            if ((!args || args.label === undefined) && !opts.urn) {
                throw new Error("Missing required property 'label'");
            }
            resourceInputs["default"] = args ? args.default : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["position"] = args ? args.position : undefined;
            resourceInputs["requireds"] = args ? args.requireds : undefined;
            resourceInputs["showns"] = args ? args.showns : undefined;
            resourceInputs["slug"] = args ? args.slug : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomField.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomField resources.
 */
export interface CustomFieldState {
    /**
     * The default value for text field kinds.
     */
    default?: pulumi.Input<string>;
    /**
     * The description of the custom_field
     */
    description?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    /**
     * The kind of the custom_field
     */
    kind?: pulumi.Input<string>;
    /**
     * The name of the custom_field
     */
    label?: pulumi.Input<string>;
    /**
     * The position of the custom_field
     */
    position?: pulumi.Input<number>;
    requireds?: pulumi.Input<pulumi.Input<string>[]>;
    showns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The slug of the custom_field
     */
    slug?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomField resource.
 */
export interface CustomFieldArgs {
    /**
     * The default value for text field kinds.
     */
    default?: pulumi.Input<string>;
    /**
     * The description of the custom_field
     */
    description?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    /**
     * The kind of the custom_field
     */
    kind?: pulumi.Input<string>;
    /**
     * The name of the custom_field
     */
    label: pulumi.Input<string>;
    /**
     * The position of the custom_field
     */
    position?: pulumi.Input<number>;
    requireds?: pulumi.Input<pulumi.Input<string>[]>;
    showns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The slug of the custom_field
     */
    slug?: pulumi.Input<string>;
}
