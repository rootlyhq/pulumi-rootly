// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class OnCallShadow extends pulumi.CustomResource {
    /**
     * Get an existing OnCallShadow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OnCallShadowState, opts?: pulumi.CustomResourceOptions): OnCallShadow {
        return new OnCallShadow(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rootly:index/onCallShadow:OnCallShadow';

    /**
     * Returns true if the given object is an instance of OnCallShadow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OnCallShadow {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OnCallShadow.__pulumiType;
    }

    /**
     * End datetime for shadow shift
     */
    public readonly endsAt!: pulumi.Output<string>;
    /**
     * ID of schedule the shadow shift belongs to
     */
    public readonly scheduleId!: pulumi.Output<string>;
    /**
     * Which user the shadow shift belongs to.
     */
    public readonly shadowUserId!: pulumi.Output<number>;
    /**
     * ID of schedule or user the shadow user is shadowing
     */
    public readonly shadowableId!: pulumi.Output<string>;
    /**
     * Value must be one of `User`, `Schedule`.
     */
    public readonly shadowableType!: pulumi.Output<string | undefined>;
    /**
     * Start datetime of shadow shift
     */
    public readonly startsAt!: pulumi.Output<string>;

    /**
     * Create a OnCallShadow resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OnCallShadowArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OnCallShadowArgs | OnCallShadowState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OnCallShadowState | undefined;
            resourceInputs["endsAt"] = state ? state.endsAt : undefined;
            resourceInputs["scheduleId"] = state ? state.scheduleId : undefined;
            resourceInputs["shadowUserId"] = state ? state.shadowUserId : undefined;
            resourceInputs["shadowableId"] = state ? state.shadowableId : undefined;
            resourceInputs["shadowableType"] = state ? state.shadowableType : undefined;
            resourceInputs["startsAt"] = state ? state.startsAt : undefined;
        } else {
            const args = argsOrState as OnCallShadowArgs | undefined;
            if ((!args || args.endsAt === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endsAt'");
            }
            if ((!args || args.shadowUserId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shadowUserId'");
            }
            if ((!args || args.shadowableId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shadowableId'");
            }
            if ((!args || args.startsAt === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startsAt'");
            }
            resourceInputs["endsAt"] = args ? args.endsAt : undefined;
            resourceInputs["scheduleId"] = args ? args.scheduleId : undefined;
            resourceInputs["shadowUserId"] = args ? args.shadowUserId : undefined;
            resourceInputs["shadowableId"] = args ? args.shadowableId : undefined;
            resourceInputs["shadowableType"] = args ? args.shadowableType : undefined;
            resourceInputs["startsAt"] = args ? args.startsAt : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OnCallShadow.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OnCallShadow resources.
 */
export interface OnCallShadowState {
    /**
     * End datetime for shadow shift
     */
    endsAt?: pulumi.Input<string>;
    /**
     * ID of schedule the shadow shift belongs to
     */
    scheduleId?: pulumi.Input<string>;
    /**
     * Which user the shadow shift belongs to.
     */
    shadowUserId?: pulumi.Input<number>;
    /**
     * ID of schedule or user the shadow user is shadowing
     */
    shadowableId?: pulumi.Input<string>;
    /**
     * Value must be one of `User`, `Schedule`.
     */
    shadowableType?: pulumi.Input<string>;
    /**
     * Start datetime of shadow shift
     */
    startsAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OnCallShadow resource.
 */
export interface OnCallShadowArgs {
    /**
     * End datetime for shadow shift
     */
    endsAt: pulumi.Input<string>;
    /**
     * ID of schedule the shadow shift belongs to
     */
    scheduleId?: pulumi.Input<string>;
    /**
     * Which user the shadow shift belongs to.
     */
    shadowUserId: pulumi.Input<number>;
    /**
     * ID of schedule or user the shadow user is shadowing
     */
    shadowableId: pulumi.Input<string>;
    /**
     * Value must be one of `User`, `Schedule`.
     */
    shadowableType?: pulumi.Input<string>;
    /**
     * Start datetime of shadow shift
     */
    startsAt: pulumi.Input<string>;
}
