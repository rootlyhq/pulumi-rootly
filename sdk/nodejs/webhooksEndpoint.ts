// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class WebhooksEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing WebhooksEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebhooksEndpointState, opts?: pulumi.CustomResourceOptions): WebhooksEndpoint {
        return new WebhooksEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rootly:index/webhooksEndpoint:WebhooksEndpoint';

    /**
     * Returns true if the given object is an instance of WebhooksEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WebhooksEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebhooksEndpoint.__pulumiType;
    }

    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Value must be one of `incident.created`, `incident.updated`, `incident.mitigated`, `incident.resolved`,
     * `incident.cancelled`, `incident.deleted`, `incident.scheduled.created`, `incident.scheduled.updated`,
     * `incident.scheduled.in_progress`, `incident.scheduled.completed`, `incident.scheduled.deleted`,
     * `incident_post_mortem.created`, `incident_post_mortem.updated`, `incident_post_mortem.published`,
     * `incident_post_mortem.deleted`, `alert.created`, `pulse.created`.
     */
    public readonly eventTypes!: pulumi.Output<string[]>;
    /**
     * The name of the endpoint
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The webhook signing secret used to verify webhook requests.
     */
    public readonly secret!: pulumi.Output<string>;
    /**
     * The slug of the endpoint
     */
    public readonly slug!: pulumi.Output<string>;
    /**
     * The URL of the endpoint.
     */
    public readonly url!: pulumi.Output<string>;

    /**
     * Create a WebhooksEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebhooksEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebhooksEndpointArgs | WebhooksEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebhooksEndpointState | undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["eventTypes"] = state ? state.eventTypes : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["secret"] = state ? state.secret : undefined;
            resourceInputs["slug"] = state ? state.slug : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as WebhooksEndpointArgs | undefined;
            if ((!args || args.url === undefined) && !opts.urn) {
                throw new Error("Missing required property 'url'");
            }
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["eventTypes"] = args ? args.eventTypes : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["secret"] = args ? args.secret : undefined;
            resourceInputs["slug"] = args ? args.slug : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebhooksEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WebhooksEndpoint resources.
 */
export interface WebhooksEndpointState {
    enabled?: pulumi.Input<boolean>;
    /**
     * Value must be one of `incident.created`, `incident.updated`, `incident.mitigated`, `incident.resolved`,
     * `incident.cancelled`, `incident.deleted`, `incident.scheduled.created`, `incident.scheduled.updated`,
     * `incident.scheduled.in_progress`, `incident.scheduled.completed`, `incident.scheduled.deleted`,
     * `incident_post_mortem.created`, `incident_post_mortem.updated`, `incident_post_mortem.published`,
     * `incident_post_mortem.deleted`, `alert.created`, `pulse.created`.
     */
    eventTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the endpoint
     */
    name?: pulumi.Input<string>;
    /**
     * The webhook signing secret used to verify webhook requests.
     */
    secret?: pulumi.Input<string>;
    /**
     * The slug of the endpoint
     */
    slug?: pulumi.Input<string>;
    /**
     * The URL of the endpoint.
     */
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WebhooksEndpoint resource.
 */
export interface WebhooksEndpointArgs {
    enabled?: pulumi.Input<boolean>;
    /**
     * Value must be one of `incident.created`, `incident.updated`, `incident.mitigated`, `incident.resolved`,
     * `incident.cancelled`, `incident.deleted`, `incident.scheduled.created`, `incident.scheduled.updated`,
     * `incident.scheduled.in_progress`, `incident.scheduled.completed`, `incident.scheduled.deleted`,
     * `incident_post_mortem.created`, `incident_post_mortem.updated`, `incident_post_mortem.published`,
     * `incident_post_mortem.deleted`, `alert.created`, `pulse.created`.
     */
    eventTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the endpoint
     */
    name?: pulumi.Input<string>;
    /**
     * The webhook signing secret used to verify webhook requests.
     */
    secret?: pulumi.Input<string>;
    /**
     * The slug of the endpoint
     */
    slug?: pulumi.Input<string>;
    /**
     * The URL of the endpoint.
     */
    url: pulumi.Input<string>;
}
