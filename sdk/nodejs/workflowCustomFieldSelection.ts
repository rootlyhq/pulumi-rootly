// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages workflow custom field selections (triggers).
 */
export class WorkflowCustomFieldSelection extends pulumi.CustomResource {
    /**
     * Get an existing WorkflowCustomFieldSelection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkflowCustomFieldSelectionState, opts?: pulumi.CustomResourceOptions): WorkflowCustomFieldSelection {
        return new WorkflowCustomFieldSelection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rootly:index/workflowCustomFieldSelection:WorkflowCustomFieldSelection';

    /**
     * Returns true if the given object is an instance of WorkflowCustomFieldSelection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkflowCustomFieldSelection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkflowCustomFieldSelection.__pulumiType;
    }

    /**
     * The ID of the custom field
     */
    public readonly customFieldId!: pulumi.Output<number>;
    /**
     * The trigger condition
     */
    public readonly incidentCondition!: pulumi.Output<string | undefined>;
    /**
     * Custom field options to associate with this custom field trigger
     */
    public readonly selectedOptionIds!: pulumi.Output<number[]>;
    /**
     * Custom field values to associate with this custom field trigger
     */
    public readonly values!: pulumi.Output<string[]>;
    /**
     * The ID of the workflow
     */
    public readonly workflowId!: pulumi.Output<string>;

    /**
     * Create a WorkflowCustomFieldSelection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkflowCustomFieldSelectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkflowCustomFieldSelectionArgs | WorkflowCustomFieldSelectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkflowCustomFieldSelectionState | undefined;
            resourceInputs["customFieldId"] = state ? state.customFieldId : undefined;
            resourceInputs["incidentCondition"] = state ? state.incidentCondition : undefined;
            resourceInputs["selectedOptionIds"] = state ? state.selectedOptionIds : undefined;
            resourceInputs["values"] = state ? state.values : undefined;
            resourceInputs["workflowId"] = state ? state.workflowId : undefined;
        } else {
            const args = argsOrState as WorkflowCustomFieldSelectionArgs | undefined;
            if ((!args || args.customFieldId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customFieldId'");
            }
            if ((!args || args.workflowId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workflowId'");
            }
            resourceInputs["customFieldId"] = args ? args.customFieldId : undefined;
            resourceInputs["incidentCondition"] = args ? args.incidentCondition : undefined;
            resourceInputs["selectedOptionIds"] = args ? args.selectedOptionIds : undefined;
            resourceInputs["values"] = args ? args.values : undefined;
            resourceInputs["workflowId"] = args ? args.workflowId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkflowCustomFieldSelection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkflowCustomFieldSelection resources.
 */
export interface WorkflowCustomFieldSelectionState {
    /**
     * The ID of the custom field
     */
    customFieldId?: pulumi.Input<number>;
    /**
     * The trigger condition
     */
    incidentCondition?: pulumi.Input<string>;
    /**
     * Custom field options to associate with this custom field trigger
     */
    selectedOptionIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Custom field values to associate with this custom field trigger
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the workflow
     */
    workflowId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkflowCustomFieldSelection resource.
 */
export interface WorkflowCustomFieldSelectionArgs {
    /**
     * The ID of the custom field
     */
    customFieldId: pulumi.Input<number>;
    /**
     * The trigger condition
     */
    incidentCondition?: pulumi.Input<string>;
    /**
     * Custom field options to associate with this custom field trigger
     */
    selectedOptionIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Custom field values to associate with this custom field trigger
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the workflow
     */
    workflowId: pulumi.Input<string>;
}
