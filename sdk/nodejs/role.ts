// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Role extends pulumi.CustomResource {
    /**
     * Get an existing Role resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoleState, opts?: pulumi.CustomResourceOptions): Role {
        return new Role(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rootly:index/role:Role';

    /**
     * Returns true if the given object is an instance of Role.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Role {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Role.__pulumiType;
    }

    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly apiKeysPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly auditsPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly billingPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly environmentsPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly formFieldsPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly functionalitiesPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly groupsPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly incidentCausesPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly incidentFeedbacksPermissions!: pulumi.Output<string[]>;
    /**
     * Associated incident permissions set.
     */
    public readonly incidentPermissionSetId!: pulumi.Output<string>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly incidentRolesPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly incidentTypesPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly incidentsPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly invitationsPermissions!: pulumi.Output<string[]>;
    /**
     * Whether the role can be deleted.. Value must be one of true or false
     */
    public readonly isDeletable!: pulumi.Output<boolean>;
    /**
     * Whether the role can be edited.. Value must be one of true or false
     */
    public readonly isEditable!: pulumi.Output<boolean>;
    /**
     * The role name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly playbooksPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly privateIncidentsPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly retrospectivePermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly rolesPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly secretsPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly servicesPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly severitiesPermissions!: pulumi.Output<string[]>;
    /**
     * The role slug.
     */
    public readonly slug!: pulumi.Output<string>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly statusPagesPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly webhooksPermissions!: pulumi.Output<string[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    public readonly workflowsPermissions!: pulumi.Output<string[]>;

    /**
     * Create a Role resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoleArgs | RoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoleState | undefined;
            resourceInputs["apiKeysPermissions"] = state ? state.apiKeysPermissions : undefined;
            resourceInputs["auditsPermissions"] = state ? state.auditsPermissions : undefined;
            resourceInputs["billingPermissions"] = state ? state.billingPermissions : undefined;
            resourceInputs["environmentsPermissions"] = state ? state.environmentsPermissions : undefined;
            resourceInputs["formFieldsPermissions"] = state ? state.formFieldsPermissions : undefined;
            resourceInputs["functionalitiesPermissions"] = state ? state.functionalitiesPermissions : undefined;
            resourceInputs["groupsPermissions"] = state ? state.groupsPermissions : undefined;
            resourceInputs["incidentCausesPermissions"] = state ? state.incidentCausesPermissions : undefined;
            resourceInputs["incidentFeedbacksPermissions"] = state ? state.incidentFeedbacksPermissions : undefined;
            resourceInputs["incidentPermissionSetId"] = state ? state.incidentPermissionSetId : undefined;
            resourceInputs["incidentRolesPermissions"] = state ? state.incidentRolesPermissions : undefined;
            resourceInputs["incidentTypesPermissions"] = state ? state.incidentTypesPermissions : undefined;
            resourceInputs["incidentsPermissions"] = state ? state.incidentsPermissions : undefined;
            resourceInputs["invitationsPermissions"] = state ? state.invitationsPermissions : undefined;
            resourceInputs["isDeletable"] = state ? state.isDeletable : undefined;
            resourceInputs["isEditable"] = state ? state.isEditable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["playbooksPermissions"] = state ? state.playbooksPermissions : undefined;
            resourceInputs["privateIncidentsPermissions"] = state ? state.privateIncidentsPermissions : undefined;
            resourceInputs["retrospectivePermissions"] = state ? state.retrospectivePermissions : undefined;
            resourceInputs["rolesPermissions"] = state ? state.rolesPermissions : undefined;
            resourceInputs["secretsPermissions"] = state ? state.secretsPermissions : undefined;
            resourceInputs["servicesPermissions"] = state ? state.servicesPermissions : undefined;
            resourceInputs["severitiesPermissions"] = state ? state.severitiesPermissions : undefined;
            resourceInputs["slug"] = state ? state.slug : undefined;
            resourceInputs["statusPagesPermissions"] = state ? state.statusPagesPermissions : undefined;
            resourceInputs["webhooksPermissions"] = state ? state.webhooksPermissions : undefined;
            resourceInputs["workflowsPermissions"] = state ? state.workflowsPermissions : undefined;
        } else {
            const args = argsOrState as RoleArgs | undefined;
            resourceInputs["apiKeysPermissions"] = args ? args.apiKeysPermissions : undefined;
            resourceInputs["auditsPermissions"] = args ? args.auditsPermissions : undefined;
            resourceInputs["billingPermissions"] = args ? args.billingPermissions : undefined;
            resourceInputs["environmentsPermissions"] = args ? args.environmentsPermissions : undefined;
            resourceInputs["formFieldsPermissions"] = args ? args.formFieldsPermissions : undefined;
            resourceInputs["functionalitiesPermissions"] = args ? args.functionalitiesPermissions : undefined;
            resourceInputs["groupsPermissions"] = args ? args.groupsPermissions : undefined;
            resourceInputs["incidentCausesPermissions"] = args ? args.incidentCausesPermissions : undefined;
            resourceInputs["incidentFeedbacksPermissions"] = args ? args.incidentFeedbacksPermissions : undefined;
            resourceInputs["incidentPermissionSetId"] = args ? args.incidentPermissionSetId : undefined;
            resourceInputs["incidentRolesPermissions"] = args ? args.incidentRolesPermissions : undefined;
            resourceInputs["incidentTypesPermissions"] = args ? args.incidentTypesPermissions : undefined;
            resourceInputs["incidentsPermissions"] = args ? args.incidentsPermissions : undefined;
            resourceInputs["invitationsPermissions"] = args ? args.invitationsPermissions : undefined;
            resourceInputs["isDeletable"] = args ? args.isDeletable : undefined;
            resourceInputs["isEditable"] = args ? args.isEditable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["playbooksPermissions"] = args ? args.playbooksPermissions : undefined;
            resourceInputs["privateIncidentsPermissions"] = args ? args.privateIncidentsPermissions : undefined;
            resourceInputs["retrospectivePermissions"] = args ? args.retrospectivePermissions : undefined;
            resourceInputs["rolesPermissions"] = args ? args.rolesPermissions : undefined;
            resourceInputs["secretsPermissions"] = args ? args.secretsPermissions : undefined;
            resourceInputs["servicesPermissions"] = args ? args.servicesPermissions : undefined;
            resourceInputs["severitiesPermissions"] = args ? args.severitiesPermissions : undefined;
            resourceInputs["slug"] = args ? args.slug : undefined;
            resourceInputs["statusPagesPermissions"] = args ? args.statusPagesPermissions : undefined;
            resourceInputs["webhooksPermissions"] = args ? args.webhooksPermissions : undefined;
            resourceInputs["workflowsPermissions"] = args ? args.workflowsPermissions : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Role.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Role resources.
 */
export interface RoleState {
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    apiKeysPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    auditsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    billingPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    environmentsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    formFieldsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    functionalitiesPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    groupsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    incidentCausesPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    incidentFeedbacksPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Associated incident permissions set.
     */
    incidentPermissionSetId?: pulumi.Input<string>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    incidentRolesPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    incidentTypesPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    incidentsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    invitationsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the role can be deleted.. Value must be one of true or false
     */
    isDeletable?: pulumi.Input<boolean>;
    /**
     * Whether the role can be edited.. Value must be one of true or false
     */
    isEditable?: pulumi.Input<boolean>;
    /**
     * The role name.
     */
    name?: pulumi.Input<string>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    playbooksPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    privateIncidentsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    retrospectivePermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    rolesPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    secretsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    servicesPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    severitiesPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The role slug.
     */
    slug?: pulumi.Input<string>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    statusPagesPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    webhooksPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    workflowsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Role resource.
 */
export interface RoleArgs {
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    apiKeysPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    auditsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    billingPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    environmentsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    formFieldsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    functionalitiesPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    groupsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    incidentCausesPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    incidentFeedbacksPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Associated incident permissions set.
     */
    incidentPermissionSetId?: pulumi.Input<string>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    incidentRolesPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    incidentTypesPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    incidentsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    invitationsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the role can be deleted.. Value must be one of true or false
     */
    isDeletable?: pulumi.Input<boolean>;
    /**
     * Whether the role can be edited.. Value must be one of true or false
     */
    isEditable?: pulumi.Input<boolean>;
    /**
     * The role name.
     */
    name?: pulumi.Input<string>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    playbooksPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    privateIncidentsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    retrospectivePermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    rolesPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    secretsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    servicesPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    severitiesPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The role slug.
     */
    slug?: pulumi.Input<string>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    statusPagesPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    webhooksPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Value must be one of `create`, `read`, `update`, `delete`.
     */
    workflowsPermissions?: pulumi.Input<pulumi.Input<string>[]>;
}
