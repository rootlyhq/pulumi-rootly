// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RetrospectiveConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing RetrospectiveConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RetrospectiveConfigurationState, opts?: pulumi.CustomResourceOptions): RetrospectiveConfiguration {
        return new RetrospectiveConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rootly:index/retrospectiveConfiguration:RetrospectiveConfiguration';

    /**
     * Returns true if the given object is an instance of RetrospectiveConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RetrospectiveConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RetrospectiveConfiguration.__pulumiType;
    }

    /**
     * Teams associated with the retrospective configuration.
     */
    public readonly groupIds!: pulumi.Output<string[]>;
    /**
     * Incident types associated with the retrospective configuration.
     */
    public readonly incidentTypeIds!: pulumi.Output<string[]>;
    /**
     * The kind of the retrospective configuration.
     */
    public readonly kind!: pulumi.Output<string>;
    /**
     * Severities associated with the retrospective configuration.
     */
    public readonly severityIds!: pulumi.Output<string[]>;

    /**
     * Create a RetrospectiveConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RetrospectiveConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RetrospectiveConfigurationArgs | RetrospectiveConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RetrospectiveConfigurationState | undefined;
            resourceInputs["groupIds"] = state ? state.groupIds : undefined;
            resourceInputs["incidentTypeIds"] = state ? state.incidentTypeIds : undefined;
            resourceInputs["kind"] = state ? state.kind : undefined;
            resourceInputs["severityIds"] = state ? state.severityIds : undefined;
        } else {
            const args = argsOrState as RetrospectiveConfigurationArgs | undefined;
            resourceInputs["groupIds"] = args ? args.groupIds : undefined;
            resourceInputs["incidentTypeIds"] = args ? args.incidentTypeIds : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["severityIds"] = args ? args.severityIds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RetrospectiveConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RetrospectiveConfiguration resources.
 */
export interface RetrospectiveConfigurationState {
    /**
     * Teams associated with the retrospective configuration.
     */
    groupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Incident types associated with the retrospective configuration.
     */
    incidentTypeIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The kind of the retrospective configuration.
     */
    kind?: pulumi.Input<string>;
    /**
     * Severities associated with the retrospective configuration.
     */
    severityIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a RetrospectiveConfiguration resource.
 */
export interface RetrospectiveConfigurationArgs {
    /**
     * Teams associated with the retrospective configuration.
     */
    groupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Incident types associated with the retrospective configuration.
     */
    incidentTypeIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The kind of the retrospective configuration.
     */
    kind?: pulumi.Input<string>;
    /**
     * Severities associated with the retrospective configuration.
     */
    severityIds?: pulumi.Input<pulumi.Input<string>[]>;
}
