// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RetrospectiveStep extends pulumi.CustomResource {
    /**
     * Get an existing RetrospectiveStep resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RetrospectiveStepState, opts?: pulumi.CustomResourceOptions): RetrospectiveStep {
        return new RetrospectiveStep(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rootly:index/retrospectiveStep:RetrospectiveStep';

    /**
     * Returns true if the given object is an instance of RetrospectiveStep.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RetrospectiveStep {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RetrospectiveStep.__pulumiType;
    }

    /**
     * The description of the step
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Due date in days
     */
    public readonly dueAfterDays!: pulumi.Output<number>;
    /**
     * Users assigned to the selected incident role will be the default owners for this step
     */
    public readonly incidentRoleId!: pulumi.Output<string>;
    /**
     * Position of the step
     */
    public readonly position!: pulumi.Output<number>;
    /**
     * Is the step skippable?. Value must be one of true or false
     */
    public readonly skippable!: pulumi.Output<boolean>;
    /**
     * The slug of the step
     */
    public readonly slug!: pulumi.Output<string>;
    /**
     * The name of the step
     */
    public readonly title!: pulumi.Output<string>;

    /**
     * Create a RetrospectiveStep resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RetrospectiveStepArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RetrospectiveStepArgs | RetrospectiveStepState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RetrospectiveStepState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dueAfterDays"] = state ? state.dueAfterDays : undefined;
            resourceInputs["incidentRoleId"] = state ? state.incidentRoleId : undefined;
            resourceInputs["position"] = state ? state.position : undefined;
            resourceInputs["skippable"] = state ? state.skippable : undefined;
            resourceInputs["slug"] = state ? state.slug : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
        } else {
            const args = argsOrState as RetrospectiveStepArgs | undefined;
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dueAfterDays"] = args ? args.dueAfterDays : undefined;
            resourceInputs["incidentRoleId"] = args ? args.incidentRoleId : undefined;
            resourceInputs["position"] = args ? args.position : undefined;
            resourceInputs["skippable"] = args ? args.skippable : undefined;
            resourceInputs["slug"] = args ? args.slug : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RetrospectiveStep.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RetrospectiveStep resources.
 */
export interface RetrospectiveStepState {
    /**
     * The description of the step
     */
    description?: pulumi.Input<string>;
    /**
     * Due date in days
     */
    dueAfterDays?: pulumi.Input<number>;
    /**
     * Users assigned to the selected incident role will be the default owners for this step
     */
    incidentRoleId?: pulumi.Input<string>;
    /**
     * Position of the step
     */
    position?: pulumi.Input<number>;
    /**
     * Is the step skippable?. Value must be one of true or false
     */
    skippable?: pulumi.Input<boolean>;
    /**
     * The slug of the step
     */
    slug?: pulumi.Input<string>;
    /**
     * The name of the step
     */
    title?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RetrospectiveStep resource.
 */
export interface RetrospectiveStepArgs {
    /**
     * The description of the step
     */
    description?: pulumi.Input<string>;
    /**
     * Due date in days
     */
    dueAfterDays?: pulumi.Input<number>;
    /**
     * Users assigned to the selected incident role will be the default owners for this step
     */
    incidentRoleId?: pulumi.Input<string>;
    /**
     * Position of the step
     */
    position?: pulumi.Input<number>;
    /**
     * Is the step skippable?. Value must be one of true or false
     */
    skippable?: pulumi.Input<boolean>;
    /**
     * The slug of the step
     */
    slug?: pulumi.Input<string>;
    /**
     * The name of the step
     */
    title: pulumi.Input<string>;
}
