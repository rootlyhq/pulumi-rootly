// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow tweetTwitterMessage task.
type WorkflowTaskTweetTwitterMessage struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskTweetTwitterMessageTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskTweetTwitterMessage registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskTweetTwitterMessage(ctx *pulumi.Context,
	name string, args *WorkflowTaskTweetTwitterMessageArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskTweetTwitterMessage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskTweetTwitterMessage
	err := ctx.RegisterResource("rootly:index/workflowTaskTweetTwitterMessage:WorkflowTaskTweetTwitterMessage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskTweetTwitterMessage gets an existing WorkflowTaskTweetTwitterMessage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskTweetTwitterMessage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskTweetTwitterMessageState, opts ...pulumi.ResourceOption) (*WorkflowTaskTweetTwitterMessage, error) {
	var resource WorkflowTaskTweetTwitterMessage
	err := ctx.ReadResource("rootly:index/workflowTaskTweetTwitterMessage:WorkflowTaskTweetTwitterMessage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskTweetTwitterMessage resources.
type workflowTaskTweetTwitterMessageState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskTweetTwitterMessageTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskTweetTwitterMessageState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskTweetTwitterMessageTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskTweetTwitterMessageState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskTweetTwitterMessageState)(nil)).Elem()
}

type workflowTaskTweetTwitterMessageArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskTweetTwitterMessageTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskTweetTwitterMessage resource.
type WorkflowTaskTweetTwitterMessageArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskTweetTwitterMessageTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskTweetTwitterMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskTweetTwitterMessageArgs)(nil)).Elem()
}

type WorkflowTaskTweetTwitterMessageInput interface {
	pulumi.Input

	ToWorkflowTaskTweetTwitterMessageOutput() WorkflowTaskTweetTwitterMessageOutput
	ToWorkflowTaskTweetTwitterMessageOutputWithContext(ctx context.Context) WorkflowTaskTweetTwitterMessageOutput
}

func (*WorkflowTaskTweetTwitterMessage) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskTweetTwitterMessage)(nil)).Elem()
}

func (i *WorkflowTaskTweetTwitterMessage) ToWorkflowTaskTweetTwitterMessageOutput() WorkflowTaskTweetTwitterMessageOutput {
	return i.ToWorkflowTaskTweetTwitterMessageOutputWithContext(context.Background())
}

func (i *WorkflowTaskTweetTwitterMessage) ToWorkflowTaskTweetTwitterMessageOutputWithContext(ctx context.Context) WorkflowTaskTweetTwitterMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskTweetTwitterMessageOutput)
}

// WorkflowTaskTweetTwitterMessageArrayInput is an input type that accepts WorkflowTaskTweetTwitterMessageArray and WorkflowTaskTweetTwitterMessageArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskTweetTwitterMessageArrayInput` via:
//
//	WorkflowTaskTweetTwitterMessageArray{ WorkflowTaskTweetTwitterMessageArgs{...} }
type WorkflowTaskTweetTwitterMessageArrayInput interface {
	pulumi.Input

	ToWorkflowTaskTweetTwitterMessageArrayOutput() WorkflowTaskTweetTwitterMessageArrayOutput
	ToWorkflowTaskTweetTwitterMessageArrayOutputWithContext(context.Context) WorkflowTaskTweetTwitterMessageArrayOutput
}

type WorkflowTaskTweetTwitterMessageArray []WorkflowTaskTweetTwitterMessageInput

func (WorkflowTaskTweetTwitterMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskTweetTwitterMessage)(nil)).Elem()
}

func (i WorkflowTaskTweetTwitterMessageArray) ToWorkflowTaskTweetTwitterMessageArrayOutput() WorkflowTaskTweetTwitterMessageArrayOutput {
	return i.ToWorkflowTaskTweetTwitterMessageArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskTweetTwitterMessageArray) ToWorkflowTaskTweetTwitterMessageArrayOutputWithContext(ctx context.Context) WorkflowTaskTweetTwitterMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskTweetTwitterMessageArrayOutput)
}

// WorkflowTaskTweetTwitterMessageMapInput is an input type that accepts WorkflowTaskTweetTwitterMessageMap and WorkflowTaskTweetTwitterMessageMapOutput values.
// You can construct a concrete instance of `WorkflowTaskTweetTwitterMessageMapInput` via:
//
//	WorkflowTaskTweetTwitterMessageMap{ "key": WorkflowTaskTweetTwitterMessageArgs{...} }
type WorkflowTaskTweetTwitterMessageMapInput interface {
	pulumi.Input

	ToWorkflowTaskTweetTwitterMessageMapOutput() WorkflowTaskTweetTwitterMessageMapOutput
	ToWorkflowTaskTweetTwitterMessageMapOutputWithContext(context.Context) WorkflowTaskTweetTwitterMessageMapOutput
}

type WorkflowTaskTweetTwitterMessageMap map[string]WorkflowTaskTweetTwitterMessageInput

func (WorkflowTaskTweetTwitterMessageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskTweetTwitterMessage)(nil)).Elem()
}

func (i WorkflowTaskTweetTwitterMessageMap) ToWorkflowTaskTweetTwitterMessageMapOutput() WorkflowTaskTweetTwitterMessageMapOutput {
	return i.ToWorkflowTaskTweetTwitterMessageMapOutputWithContext(context.Background())
}

func (i WorkflowTaskTweetTwitterMessageMap) ToWorkflowTaskTweetTwitterMessageMapOutputWithContext(ctx context.Context) WorkflowTaskTweetTwitterMessageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskTweetTwitterMessageMapOutput)
}

type WorkflowTaskTweetTwitterMessageOutput struct{ *pulumi.OutputState }

func (WorkflowTaskTweetTwitterMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskTweetTwitterMessage)(nil)).Elem()
}

func (o WorkflowTaskTweetTwitterMessageOutput) ToWorkflowTaskTweetTwitterMessageOutput() WorkflowTaskTweetTwitterMessageOutput {
	return o
}

func (o WorkflowTaskTweetTwitterMessageOutput) ToWorkflowTaskTweetTwitterMessageOutputWithContext(ctx context.Context) WorkflowTaskTweetTwitterMessageOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskTweetTwitterMessageOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskTweetTwitterMessage) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskTweetTwitterMessageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskTweetTwitterMessage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskTweetTwitterMessageOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskTweetTwitterMessage) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskTweetTwitterMessageOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskTweetTwitterMessage) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskTweetTwitterMessageOutput) TaskParams() WorkflowTaskTweetTwitterMessageTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskTweetTwitterMessage) WorkflowTaskTweetTwitterMessageTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskTweetTwitterMessageTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskTweetTwitterMessageOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskTweetTwitterMessage) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskTweetTwitterMessageArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskTweetTwitterMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskTweetTwitterMessage)(nil)).Elem()
}

func (o WorkflowTaskTweetTwitterMessageArrayOutput) ToWorkflowTaskTweetTwitterMessageArrayOutput() WorkflowTaskTweetTwitterMessageArrayOutput {
	return o
}

func (o WorkflowTaskTweetTwitterMessageArrayOutput) ToWorkflowTaskTweetTwitterMessageArrayOutputWithContext(ctx context.Context) WorkflowTaskTweetTwitterMessageArrayOutput {
	return o
}

func (o WorkflowTaskTweetTwitterMessageArrayOutput) Index(i pulumi.IntInput) WorkflowTaskTweetTwitterMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskTweetTwitterMessage {
		return vs[0].([]*WorkflowTaskTweetTwitterMessage)[vs[1].(int)]
	}).(WorkflowTaskTweetTwitterMessageOutput)
}

type WorkflowTaskTweetTwitterMessageMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskTweetTwitterMessageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskTweetTwitterMessage)(nil)).Elem()
}

func (o WorkflowTaskTweetTwitterMessageMapOutput) ToWorkflowTaskTweetTwitterMessageMapOutput() WorkflowTaskTweetTwitterMessageMapOutput {
	return o
}

func (o WorkflowTaskTweetTwitterMessageMapOutput) ToWorkflowTaskTweetTwitterMessageMapOutputWithContext(ctx context.Context) WorkflowTaskTweetTwitterMessageMapOutput {
	return o
}

func (o WorkflowTaskTweetTwitterMessageMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskTweetTwitterMessageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskTweetTwitterMessage {
		return vs[0].(map[string]*WorkflowTaskTweetTwitterMessage)[vs[1].(string)]
	}).(WorkflowTaskTweetTwitterMessageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskTweetTwitterMessageInput)(nil)).Elem(), &WorkflowTaskTweetTwitterMessage{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskTweetTwitterMessageArrayInput)(nil)).Elem(), WorkflowTaskTweetTwitterMessageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskTweetTwitterMessageMapInput)(nil)).Elem(), WorkflowTaskTweetTwitterMessageMap{})
	pulumi.RegisterOutputType(WorkflowTaskTweetTwitterMessageOutput{})
	pulumi.RegisterOutputType(WorkflowTaskTweetTwitterMessageArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskTweetTwitterMessageMapOutput{})
}
