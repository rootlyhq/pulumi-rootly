// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow createAsanaTask task.
type WorkflowTaskCreateAsanaTask struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateAsanaTaskTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskCreateAsanaTask registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskCreateAsanaTask(ctx *pulumi.Context,
	name string, args *WorkflowTaskCreateAsanaTaskArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateAsanaTask, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskCreateAsanaTask
	err := ctx.RegisterResource("rootly:index/workflowTaskCreateAsanaTask:WorkflowTaskCreateAsanaTask", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskCreateAsanaTask gets an existing WorkflowTaskCreateAsanaTask resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskCreateAsanaTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskCreateAsanaTaskState, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateAsanaTask, error) {
	var resource WorkflowTaskCreateAsanaTask
	err := ctx.ReadResource("rootly:index/workflowTaskCreateAsanaTask:WorkflowTaskCreateAsanaTask", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskCreateAsanaTask resources.
type workflowTaskCreateAsanaTaskState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskCreateAsanaTaskTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskCreateAsanaTaskState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateAsanaTaskTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskCreateAsanaTaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateAsanaTaskState)(nil)).Elem()
}

type workflowTaskCreateAsanaTaskArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateAsanaTaskTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskCreateAsanaTask resource.
type WorkflowTaskCreateAsanaTaskArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateAsanaTaskTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskCreateAsanaTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateAsanaTaskArgs)(nil)).Elem()
}

type WorkflowTaskCreateAsanaTaskInput interface {
	pulumi.Input

	ToWorkflowTaskCreateAsanaTaskOutput() WorkflowTaskCreateAsanaTaskOutput
	ToWorkflowTaskCreateAsanaTaskOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskOutput
}

func (*WorkflowTaskCreateAsanaTask) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateAsanaTask)(nil)).Elem()
}

func (i *WorkflowTaskCreateAsanaTask) ToWorkflowTaskCreateAsanaTaskOutput() WorkflowTaskCreateAsanaTaskOutput {
	return i.ToWorkflowTaskCreateAsanaTaskOutputWithContext(context.Background())
}

func (i *WorkflowTaskCreateAsanaTask) ToWorkflowTaskCreateAsanaTaskOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateAsanaTaskOutput)
}

// WorkflowTaskCreateAsanaTaskArrayInput is an input type that accepts WorkflowTaskCreateAsanaTaskArray and WorkflowTaskCreateAsanaTaskArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateAsanaTaskArrayInput` via:
//
//	WorkflowTaskCreateAsanaTaskArray{ WorkflowTaskCreateAsanaTaskArgs{...} }
type WorkflowTaskCreateAsanaTaskArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateAsanaTaskArrayOutput() WorkflowTaskCreateAsanaTaskArrayOutput
	ToWorkflowTaskCreateAsanaTaskArrayOutputWithContext(context.Context) WorkflowTaskCreateAsanaTaskArrayOutput
}

type WorkflowTaskCreateAsanaTaskArray []WorkflowTaskCreateAsanaTaskInput

func (WorkflowTaskCreateAsanaTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateAsanaTask)(nil)).Elem()
}

func (i WorkflowTaskCreateAsanaTaskArray) ToWorkflowTaskCreateAsanaTaskArrayOutput() WorkflowTaskCreateAsanaTaskArrayOutput {
	return i.ToWorkflowTaskCreateAsanaTaskArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateAsanaTaskArray) ToWorkflowTaskCreateAsanaTaskArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateAsanaTaskArrayOutput)
}

// WorkflowTaskCreateAsanaTaskMapInput is an input type that accepts WorkflowTaskCreateAsanaTaskMap and WorkflowTaskCreateAsanaTaskMapOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateAsanaTaskMapInput` via:
//
//	WorkflowTaskCreateAsanaTaskMap{ "key": WorkflowTaskCreateAsanaTaskArgs{...} }
type WorkflowTaskCreateAsanaTaskMapInput interface {
	pulumi.Input

	ToWorkflowTaskCreateAsanaTaskMapOutput() WorkflowTaskCreateAsanaTaskMapOutput
	ToWorkflowTaskCreateAsanaTaskMapOutputWithContext(context.Context) WorkflowTaskCreateAsanaTaskMapOutput
}

type WorkflowTaskCreateAsanaTaskMap map[string]WorkflowTaskCreateAsanaTaskInput

func (WorkflowTaskCreateAsanaTaskMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateAsanaTask)(nil)).Elem()
}

func (i WorkflowTaskCreateAsanaTaskMap) ToWorkflowTaskCreateAsanaTaskMapOutput() WorkflowTaskCreateAsanaTaskMapOutput {
	return i.ToWorkflowTaskCreateAsanaTaskMapOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateAsanaTaskMap) ToWorkflowTaskCreateAsanaTaskMapOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateAsanaTaskMapOutput)
}

type WorkflowTaskCreateAsanaTaskOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateAsanaTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateAsanaTask)(nil)).Elem()
}

func (o WorkflowTaskCreateAsanaTaskOutput) ToWorkflowTaskCreateAsanaTaskOutput() WorkflowTaskCreateAsanaTaskOutput {
	return o
}

func (o WorkflowTaskCreateAsanaTaskOutput) ToWorkflowTaskCreateAsanaTaskOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskCreateAsanaTaskOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTask) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskCreateAsanaTaskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTask) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskCreateAsanaTaskOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTask) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskCreateAsanaTaskOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTask) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskCreateAsanaTaskOutput) TaskParams() WorkflowTaskCreateAsanaTaskTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTask) WorkflowTaskCreateAsanaTaskTaskParamsOutput { return v.TaskParams }).(WorkflowTaskCreateAsanaTaskTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskCreateAsanaTaskOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTask) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskCreateAsanaTaskArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateAsanaTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateAsanaTask)(nil)).Elem()
}

func (o WorkflowTaskCreateAsanaTaskArrayOutput) ToWorkflowTaskCreateAsanaTaskArrayOutput() WorkflowTaskCreateAsanaTaskArrayOutput {
	return o
}

func (o WorkflowTaskCreateAsanaTaskArrayOutput) ToWorkflowTaskCreateAsanaTaskArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskArrayOutput {
	return o
}

func (o WorkflowTaskCreateAsanaTaskArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateAsanaTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskCreateAsanaTask {
		return vs[0].([]*WorkflowTaskCreateAsanaTask)[vs[1].(int)]
	}).(WorkflowTaskCreateAsanaTaskOutput)
}

type WorkflowTaskCreateAsanaTaskMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateAsanaTaskMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateAsanaTask)(nil)).Elem()
}

func (o WorkflowTaskCreateAsanaTaskMapOutput) ToWorkflowTaskCreateAsanaTaskMapOutput() WorkflowTaskCreateAsanaTaskMapOutput {
	return o
}

func (o WorkflowTaskCreateAsanaTaskMapOutput) ToWorkflowTaskCreateAsanaTaskMapOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskMapOutput {
	return o
}

func (o WorkflowTaskCreateAsanaTaskMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskCreateAsanaTaskOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskCreateAsanaTask {
		return vs[0].(map[string]*WorkflowTaskCreateAsanaTask)[vs[1].(string)]
	}).(WorkflowTaskCreateAsanaTaskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateAsanaTaskInput)(nil)).Elem(), &WorkflowTaskCreateAsanaTask{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateAsanaTaskArrayInput)(nil)).Elem(), WorkflowTaskCreateAsanaTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateAsanaTaskMapInput)(nil)).Elem(), WorkflowTaskCreateAsanaTaskMap{})
	pulumi.RegisterOutputType(WorkflowTaskCreateAsanaTaskOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateAsanaTaskArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateAsanaTaskMapOutput{})
}
