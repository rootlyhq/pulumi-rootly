// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow attachDatadogDashboards task.
type WorkflowTaskAttachDatadogDashboards struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskAttachDatadogDashboardsTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskAttachDatadogDashboards registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskAttachDatadogDashboards(ctx *pulumi.Context,
	name string, args *WorkflowTaskAttachDatadogDashboardsArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskAttachDatadogDashboards, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskAttachDatadogDashboards
	err := ctx.RegisterResource("rootly:index/workflowTaskAttachDatadogDashboards:WorkflowTaskAttachDatadogDashboards", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskAttachDatadogDashboards gets an existing WorkflowTaskAttachDatadogDashboards resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskAttachDatadogDashboards(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskAttachDatadogDashboardsState, opts ...pulumi.ResourceOption) (*WorkflowTaskAttachDatadogDashboards, error) {
	var resource WorkflowTaskAttachDatadogDashboards
	err := ctx.ReadResource("rootly:index/workflowTaskAttachDatadogDashboards:WorkflowTaskAttachDatadogDashboards", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskAttachDatadogDashboards resources.
type workflowTaskAttachDatadogDashboardsState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskAttachDatadogDashboardsTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskAttachDatadogDashboardsState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskAttachDatadogDashboardsTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskAttachDatadogDashboardsState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskAttachDatadogDashboardsState)(nil)).Elem()
}

type workflowTaskAttachDatadogDashboardsArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskAttachDatadogDashboardsTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskAttachDatadogDashboards resource.
type WorkflowTaskAttachDatadogDashboardsArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskAttachDatadogDashboardsTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskAttachDatadogDashboardsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskAttachDatadogDashboardsArgs)(nil)).Elem()
}

type WorkflowTaskAttachDatadogDashboardsInput interface {
	pulumi.Input

	ToWorkflowTaskAttachDatadogDashboardsOutput() WorkflowTaskAttachDatadogDashboardsOutput
	ToWorkflowTaskAttachDatadogDashboardsOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsOutput
}

func (*WorkflowTaskAttachDatadogDashboards) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAttachDatadogDashboards)(nil)).Elem()
}

func (i *WorkflowTaskAttachDatadogDashboards) ToWorkflowTaskAttachDatadogDashboardsOutput() WorkflowTaskAttachDatadogDashboardsOutput {
	return i.ToWorkflowTaskAttachDatadogDashboardsOutputWithContext(context.Background())
}

func (i *WorkflowTaskAttachDatadogDashboards) ToWorkflowTaskAttachDatadogDashboardsOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAttachDatadogDashboardsOutput)
}

// WorkflowTaskAttachDatadogDashboardsArrayInput is an input type that accepts WorkflowTaskAttachDatadogDashboardsArray and WorkflowTaskAttachDatadogDashboardsArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskAttachDatadogDashboardsArrayInput` via:
//
//	WorkflowTaskAttachDatadogDashboardsArray{ WorkflowTaskAttachDatadogDashboardsArgs{...} }
type WorkflowTaskAttachDatadogDashboardsArrayInput interface {
	pulumi.Input

	ToWorkflowTaskAttachDatadogDashboardsArrayOutput() WorkflowTaskAttachDatadogDashboardsArrayOutput
	ToWorkflowTaskAttachDatadogDashboardsArrayOutputWithContext(context.Context) WorkflowTaskAttachDatadogDashboardsArrayOutput
}

type WorkflowTaskAttachDatadogDashboardsArray []WorkflowTaskAttachDatadogDashboardsInput

func (WorkflowTaskAttachDatadogDashboardsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskAttachDatadogDashboards)(nil)).Elem()
}

func (i WorkflowTaskAttachDatadogDashboardsArray) ToWorkflowTaskAttachDatadogDashboardsArrayOutput() WorkflowTaskAttachDatadogDashboardsArrayOutput {
	return i.ToWorkflowTaskAttachDatadogDashboardsArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskAttachDatadogDashboardsArray) ToWorkflowTaskAttachDatadogDashboardsArrayOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAttachDatadogDashboardsArrayOutput)
}

// WorkflowTaskAttachDatadogDashboardsMapInput is an input type that accepts WorkflowTaskAttachDatadogDashboardsMap and WorkflowTaskAttachDatadogDashboardsMapOutput values.
// You can construct a concrete instance of `WorkflowTaskAttachDatadogDashboardsMapInput` via:
//
//	WorkflowTaskAttachDatadogDashboardsMap{ "key": WorkflowTaskAttachDatadogDashboardsArgs{...} }
type WorkflowTaskAttachDatadogDashboardsMapInput interface {
	pulumi.Input

	ToWorkflowTaskAttachDatadogDashboardsMapOutput() WorkflowTaskAttachDatadogDashboardsMapOutput
	ToWorkflowTaskAttachDatadogDashboardsMapOutputWithContext(context.Context) WorkflowTaskAttachDatadogDashboardsMapOutput
}

type WorkflowTaskAttachDatadogDashboardsMap map[string]WorkflowTaskAttachDatadogDashboardsInput

func (WorkflowTaskAttachDatadogDashboardsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskAttachDatadogDashboards)(nil)).Elem()
}

func (i WorkflowTaskAttachDatadogDashboardsMap) ToWorkflowTaskAttachDatadogDashboardsMapOutput() WorkflowTaskAttachDatadogDashboardsMapOutput {
	return i.ToWorkflowTaskAttachDatadogDashboardsMapOutputWithContext(context.Background())
}

func (i WorkflowTaskAttachDatadogDashboardsMap) ToWorkflowTaskAttachDatadogDashboardsMapOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAttachDatadogDashboardsMapOutput)
}

type WorkflowTaskAttachDatadogDashboardsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAttachDatadogDashboardsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAttachDatadogDashboards)(nil)).Elem()
}

func (o WorkflowTaskAttachDatadogDashboardsOutput) ToWorkflowTaskAttachDatadogDashboardsOutput() WorkflowTaskAttachDatadogDashboardsOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsOutput) ToWorkflowTaskAttachDatadogDashboardsOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskAttachDatadogDashboardsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAttachDatadogDashboards) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskAttachDatadogDashboardsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskAttachDatadogDashboards) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskAttachDatadogDashboardsOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskAttachDatadogDashboards) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskAttachDatadogDashboardsOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAttachDatadogDashboards) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskAttachDatadogDashboardsOutput) TaskParams() WorkflowTaskAttachDatadogDashboardsTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskAttachDatadogDashboards) WorkflowTaskAttachDatadogDashboardsTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskAttachDatadogDashboardsTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskAttachDatadogDashboardsOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskAttachDatadogDashboards) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskAttachDatadogDashboardsArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAttachDatadogDashboardsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskAttachDatadogDashboards)(nil)).Elem()
}

func (o WorkflowTaskAttachDatadogDashboardsArrayOutput) ToWorkflowTaskAttachDatadogDashboardsArrayOutput() WorkflowTaskAttachDatadogDashboardsArrayOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsArrayOutput) ToWorkflowTaskAttachDatadogDashboardsArrayOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsArrayOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsArrayOutput) Index(i pulumi.IntInput) WorkflowTaskAttachDatadogDashboardsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskAttachDatadogDashboards {
		return vs[0].([]*WorkflowTaskAttachDatadogDashboards)[vs[1].(int)]
	}).(WorkflowTaskAttachDatadogDashboardsOutput)
}

type WorkflowTaskAttachDatadogDashboardsMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAttachDatadogDashboardsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskAttachDatadogDashboards)(nil)).Elem()
}

func (o WorkflowTaskAttachDatadogDashboardsMapOutput) ToWorkflowTaskAttachDatadogDashboardsMapOutput() WorkflowTaskAttachDatadogDashboardsMapOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsMapOutput) ToWorkflowTaskAttachDatadogDashboardsMapOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsMapOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskAttachDatadogDashboardsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskAttachDatadogDashboards {
		return vs[0].(map[string]*WorkflowTaskAttachDatadogDashboards)[vs[1].(string)]
	}).(WorkflowTaskAttachDatadogDashboardsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAttachDatadogDashboardsInput)(nil)).Elem(), &WorkflowTaskAttachDatadogDashboards{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAttachDatadogDashboardsArrayInput)(nil)).Elem(), WorkflowTaskAttachDatadogDashboardsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAttachDatadogDashboardsMapInput)(nil)).Elem(), WorkflowTaskAttachDatadogDashboardsMap{})
	pulumi.RegisterOutputType(WorkflowTaskAttachDatadogDashboardsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAttachDatadogDashboardsArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAttachDatadogDashboardsMapOutput{})
}
