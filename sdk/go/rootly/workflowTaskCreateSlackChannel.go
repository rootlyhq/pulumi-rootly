// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow createSlackChannel task.
type WorkflowTaskCreateSlackChannel struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateSlackChannelTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskCreateSlackChannel registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskCreateSlackChannel(ctx *pulumi.Context,
	name string, args *WorkflowTaskCreateSlackChannelArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateSlackChannel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskCreateSlackChannel
	err := ctx.RegisterResource("rootly:index/workflowTaskCreateSlackChannel:WorkflowTaskCreateSlackChannel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskCreateSlackChannel gets an existing WorkflowTaskCreateSlackChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskCreateSlackChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskCreateSlackChannelState, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateSlackChannel, error) {
	var resource WorkflowTaskCreateSlackChannel
	err := ctx.ReadResource("rootly:index/workflowTaskCreateSlackChannel:WorkflowTaskCreateSlackChannel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskCreateSlackChannel resources.
type workflowTaskCreateSlackChannelState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskCreateSlackChannelTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskCreateSlackChannelState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateSlackChannelTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskCreateSlackChannelState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateSlackChannelState)(nil)).Elem()
}

type workflowTaskCreateSlackChannelArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateSlackChannelTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskCreateSlackChannel resource.
type WorkflowTaskCreateSlackChannelArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateSlackChannelTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskCreateSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateSlackChannelArgs)(nil)).Elem()
}

type WorkflowTaskCreateSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskCreateSlackChannelOutput() WorkflowTaskCreateSlackChannelOutput
	ToWorkflowTaskCreateSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateSlackChannelOutput
}

func (*WorkflowTaskCreateSlackChannel) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateSlackChannel)(nil)).Elem()
}

func (i *WorkflowTaskCreateSlackChannel) ToWorkflowTaskCreateSlackChannelOutput() WorkflowTaskCreateSlackChannelOutput {
	return i.ToWorkflowTaskCreateSlackChannelOutputWithContext(context.Background())
}

func (i *WorkflowTaskCreateSlackChannel) ToWorkflowTaskCreateSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateSlackChannelOutput)
}

// WorkflowTaskCreateSlackChannelArrayInput is an input type that accepts WorkflowTaskCreateSlackChannelArray and WorkflowTaskCreateSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateSlackChannelArrayInput` via:
//
//	WorkflowTaskCreateSlackChannelArray{ WorkflowTaskCreateSlackChannelArgs{...} }
type WorkflowTaskCreateSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateSlackChannelArrayOutput() WorkflowTaskCreateSlackChannelArrayOutput
	ToWorkflowTaskCreateSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskCreateSlackChannelArrayOutput
}

type WorkflowTaskCreateSlackChannelArray []WorkflowTaskCreateSlackChannelInput

func (WorkflowTaskCreateSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskCreateSlackChannelArray) ToWorkflowTaskCreateSlackChannelArrayOutput() WorkflowTaskCreateSlackChannelArrayOutput {
	return i.ToWorkflowTaskCreateSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateSlackChannelArray) ToWorkflowTaskCreateSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateSlackChannelArrayOutput)
}

// WorkflowTaskCreateSlackChannelMapInput is an input type that accepts WorkflowTaskCreateSlackChannelMap and WorkflowTaskCreateSlackChannelMapOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateSlackChannelMapInput` via:
//
//	WorkflowTaskCreateSlackChannelMap{ "key": WorkflowTaskCreateSlackChannelArgs{...} }
type WorkflowTaskCreateSlackChannelMapInput interface {
	pulumi.Input

	ToWorkflowTaskCreateSlackChannelMapOutput() WorkflowTaskCreateSlackChannelMapOutput
	ToWorkflowTaskCreateSlackChannelMapOutputWithContext(context.Context) WorkflowTaskCreateSlackChannelMapOutput
}

type WorkflowTaskCreateSlackChannelMap map[string]WorkflowTaskCreateSlackChannelInput

func (WorkflowTaskCreateSlackChannelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskCreateSlackChannelMap) ToWorkflowTaskCreateSlackChannelMapOutput() WorkflowTaskCreateSlackChannelMapOutput {
	return i.ToWorkflowTaskCreateSlackChannelMapOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateSlackChannelMap) ToWorkflowTaskCreateSlackChannelMapOutputWithContext(ctx context.Context) WorkflowTaskCreateSlackChannelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateSlackChannelMapOutput)
}

type WorkflowTaskCreateSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateSlackChannelOutput) ToWorkflowTaskCreateSlackChannelOutput() WorkflowTaskCreateSlackChannelOutput {
	return o
}

func (o WorkflowTaskCreateSlackChannelOutput) ToWorkflowTaskCreateSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateSlackChannelOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskCreateSlackChannelOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSlackChannel) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskCreateSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSlackChannel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskCreateSlackChannelOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSlackChannel) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskCreateSlackChannelOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSlackChannel) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskCreateSlackChannelOutput) TaskParams() WorkflowTaskCreateSlackChannelTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSlackChannel) WorkflowTaskCreateSlackChannelTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskCreateSlackChannelTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskCreateSlackChannelOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSlackChannel) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskCreateSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateSlackChannelArrayOutput) ToWorkflowTaskCreateSlackChannelArrayOutput() WorkflowTaskCreateSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskCreateSlackChannelArrayOutput) ToWorkflowTaskCreateSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskCreateSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskCreateSlackChannel {
		return vs[0].([]*WorkflowTaskCreateSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskCreateSlackChannelOutput)
}

type WorkflowTaskCreateSlackChannelMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateSlackChannelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateSlackChannelMapOutput) ToWorkflowTaskCreateSlackChannelMapOutput() WorkflowTaskCreateSlackChannelMapOutput {
	return o
}

func (o WorkflowTaskCreateSlackChannelMapOutput) ToWorkflowTaskCreateSlackChannelMapOutputWithContext(ctx context.Context) WorkflowTaskCreateSlackChannelMapOutput {
	return o
}

func (o WorkflowTaskCreateSlackChannelMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskCreateSlackChannelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskCreateSlackChannel {
		return vs[0].(map[string]*WorkflowTaskCreateSlackChannel)[vs[1].(string)]
	}).(WorkflowTaskCreateSlackChannelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateSlackChannelInput)(nil)).Elem(), &WorkflowTaskCreateSlackChannel{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskCreateSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateSlackChannelMapInput)(nil)).Elem(), WorkflowTaskCreateSlackChannelMap{})
	pulumi.RegisterOutputType(WorkflowTaskCreateSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateSlackChannelMapOutput{})
}
