// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow updateSlackChannelTopic task.
type WorkflowTaskUpdateSlackChannelTopic struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskUpdateSlackChannelTopic registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskUpdateSlackChannelTopic(ctx *pulumi.Context,
	name string, args *WorkflowTaskUpdateSlackChannelTopicArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateSlackChannelTopic, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskUpdateSlackChannelTopic
	err := ctx.RegisterResource("rootly:index/workflowTaskUpdateSlackChannelTopic:WorkflowTaskUpdateSlackChannelTopic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskUpdateSlackChannelTopic gets an existing WorkflowTaskUpdateSlackChannelTopic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskUpdateSlackChannelTopic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskUpdateSlackChannelTopicState, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateSlackChannelTopic, error) {
	var resource WorkflowTaskUpdateSlackChannelTopic
	err := ctx.ReadResource("rootly:index/workflowTaskUpdateSlackChannelTopic:WorkflowTaskUpdateSlackChannelTopic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskUpdateSlackChannelTopic resources.
type workflowTaskUpdateSlackChannelTopicState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskUpdateSlackChannelTopicTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskUpdateSlackChannelTopicState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskUpdateSlackChannelTopicState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateSlackChannelTopicState)(nil)).Elem()
}

type workflowTaskUpdateSlackChannelTopicArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateSlackChannelTopicTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskUpdateSlackChannelTopic resource.
type WorkflowTaskUpdateSlackChannelTopicArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateSlackChannelTopicTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskUpdateSlackChannelTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateSlackChannelTopicArgs)(nil)).Elem()
}

type WorkflowTaskUpdateSlackChannelTopicInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateSlackChannelTopicOutput() WorkflowTaskUpdateSlackChannelTopicOutput
	ToWorkflowTaskUpdateSlackChannelTopicOutputWithContext(ctx context.Context) WorkflowTaskUpdateSlackChannelTopicOutput
}

func (*WorkflowTaskUpdateSlackChannelTopic) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateSlackChannelTopic)(nil)).Elem()
}

func (i *WorkflowTaskUpdateSlackChannelTopic) ToWorkflowTaskUpdateSlackChannelTopicOutput() WorkflowTaskUpdateSlackChannelTopicOutput {
	return i.ToWorkflowTaskUpdateSlackChannelTopicOutputWithContext(context.Background())
}

func (i *WorkflowTaskUpdateSlackChannelTopic) ToWorkflowTaskUpdateSlackChannelTopicOutputWithContext(ctx context.Context) WorkflowTaskUpdateSlackChannelTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateSlackChannelTopicOutput)
}

// WorkflowTaskUpdateSlackChannelTopicArrayInput is an input type that accepts WorkflowTaskUpdateSlackChannelTopicArray and WorkflowTaskUpdateSlackChannelTopicArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateSlackChannelTopicArrayInput` via:
//
//	WorkflowTaskUpdateSlackChannelTopicArray{ WorkflowTaskUpdateSlackChannelTopicArgs{...} }
type WorkflowTaskUpdateSlackChannelTopicArrayInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateSlackChannelTopicArrayOutput() WorkflowTaskUpdateSlackChannelTopicArrayOutput
	ToWorkflowTaskUpdateSlackChannelTopicArrayOutputWithContext(context.Context) WorkflowTaskUpdateSlackChannelTopicArrayOutput
}

type WorkflowTaskUpdateSlackChannelTopicArray []WorkflowTaskUpdateSlackChannelTopicInput

func (WorkflowTaskUpdateSlackChannelTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateSlackChannelTopic)(nil)).Elem()
}

func (i WorkflowTaskUpdateSlackChannelTopicArray) ToWorkflowTaskUpdateSlackChannelTopicArrayOutput() WorkflowTaskUpdateSlackChannelTopicArrayOutput {
	return i.ToWorkflowTaskUpdateSlackChannelTopicArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateSlackChannelTopicArray) ToWorkflowTaskUpdateSlackChannelTopicArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateSlackChannelTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateSlackChannelTopicArrayOutput)
}

// WorkflowTaskUpdateSlackChannelTopicMapInput is an input type that accepts WorkflowTaskUpdateSlackChannelTopicMap and WorkflowTaskUpdateSlackChannelTopicMapOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateSlackChannelTopicMapInput` via:
//
//	WorkflowTaskUpdateSlackChannelTopicMap{ "key": WorkflowTaskUpdateSlackChannelTopicArgs{...} }
type WorkflowTaskUpdateSlackChannelTopicMapInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateSlackChannelTopicMapOutput() WorkflowTaskUpdateSlackChannelTopicMapOutput
	ToWorkflowTaskUpdateSlackChannelTopicMapOutputWithContext(context.Context) WorkflowTaskUpdateSlackChannelTopicMapOutput
}

type WorkflowTaskUpdateSlackChannelTopicMap map[string]WorkflowTaskUpdateSlackChannelTopicInput

func (WorkflowTaskUpdateSlackChannelTopicMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateSlackChannelTopic)(nil)).Elem()
}

func (i WorkflowTaskUpdateSlackChannelTopicMap) ToWorkflowTaskUpdateSlackChannelTopicMapOutput() WorkflowTaskUpdateSlackChannelTopicMapOutput {
	return i.ToWorkflowTaskUpdateSlackChannelTopicMapOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateSlackChannelTopicMap) ToWorkflowTaskUpdateSlackChannelTopicMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateSlackChannelTopicMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateSlackChannelTopicMapOutput)
}

type WorkflowTaskUpdateSlackChannelTopicOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateSlackChannelTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateSlackChannelTopic)(nil)).Elem()
}

func (o WorkflowTaskUpdateSlackChannelTopicOutput) ToWorkflowTaskUpdateSlackChannelTopicOutput() WorkflowTaskUpdateSlackChannelTopicOutput {
	return o
}

func (o WorkflowTaskUpdateSlackChannelTopicOutput) ToWorkflowTaskUpdateSlackChannelTopicOutputWithContext(ctx context.Context) WorkflowTaskUpdateSlackChannelTopicOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskUpdateSlackChannelTopicOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateSlackChannelTopic) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskUpdateSlackChannelTopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateSlackChannelTopic) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskUpdateSlackChannelTopicOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateSlackChannelTopic) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskUpdateSlackChannelTopicOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateSlackChannelTopic) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskUpdateSlackChannelTopicOutput) TaskParams() WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateSlackChannelTopic) WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskUpdateSlackChannelTopicOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateSlackChannelTopic) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskUpdateSlackChannelTopicArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateSlackChannelTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateSlackChannelTopic)(nil)).Elem()
}

func (o WorkflowTaskUpdateSlackChannelTopicArrayOutput) ToWorkflowTaskUpdateSlackChannelTopicArrayOutput() WorkflowTaskUpdateSlackChannelTopicArrayOutput {
	return o
}

func (o WorkflowTaskUpdateSlackChannelTopicArrayOutput) ToWorkflowTaskUpdateSlackChannelTopicArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateSlackChannelTopicArrayOutput {
	return o
}

func (o WorkflowTaskUpdateSlackChannelTopicArrayOutput) Index(i pulumi.IntInput) WorkflowTaskUpdateSlackChannelTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateSlackChannelTopic {
		return vs[0].([]*WorkflowTaskUpdateSlackChannelTopic)[vs[1].(int)]
	}).(WorkflowTaskUpdateSlackChannelTopicOutput)
}

type WorkflowTaskUpdateSlackChannelTopicMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateSlackChannelTopicMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateSlackChannelTopic)(nil)).Elem()
}

func (o WorkflowTaskUpdateSlackChannelTopicMapOutput) ToWorkflowTaskUpdateSlackChannelTopicMapOutput() WorkflowTaskUpdateSlackChannelTopicMapOutput {
	return o
}

func (o WorkflowTaskUpdateSlackChannelTopicMapOutput) ToWorkflowTaskUpdateSlackChannelTopicMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateSlackChannelTopicMapOutput {
	return o
}

func (o WorkflowTaskUpdateSlackChannelTopicMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskUpdateSlackChannelTopicOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateSlackChannelTopic {
		return vs[0].(map[string]*WorkflowTaskUpdateSlackChannelTopic)[vs[1].(string)]
	}).(WorkflowTaskUpdateSlackChannelTopicOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateSlackChannelTopicInput)(nil)).Elem(), &WorkflowTaskUpdateSlackChannelTopic{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateSlackChannelTopicArrayInput)(nil)).Elem(), WorkflowTaskUpdateSlackChannelTopicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateSlackChannelTopicMapInput)(nil)).Elem(), WorkflowTaskUpdateSlackChannelTopicMap{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateSlackChannelTopicOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateSlackChannelTopicArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateSlackChannelTopicMapOutput{})
}
