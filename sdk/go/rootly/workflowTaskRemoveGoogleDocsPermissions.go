// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow removeGoogleDocsPermissions task.
type WorkflowTaskRemoveGoogleDocsPermissions struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskRemoveGoogleDocsPermissions registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskRemoveGoogleDocsPermissions(ctx *pulumi.Context,
	name string, args *WorkflowTaskRemoveGoogleDocsPermissionsArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskRemoveGoogleDocsPermissions, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskRemoveGoogleDocsPermissions
	err := ctx.RegisterResource("rootly:index/workflowTaskRemoveGoogleDocsPermissions:WorkflowTaskRemoveGoogleDocsPermissions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskRemoveGoogleDocsPermissions gets an existing WorkflowTaskRemoveGoogleDocsPermissions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskRemoveGoogleDocsPermissions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskRemoveGoogleDocsPermissionsState, opts ...pulumi.ResourceOption) (*WorkflowTaskRemoveGoogleDocsPermissions, error) {
	var resource WorkflowTaskRemoveGoogleDocsPermissions
	err := ctx.ReadResource("rootly:index/workflowTaskRemoveGoogleDocsPermissions:WorkflowTaskRemoveGoogleDocsPermissions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskRemoveGoogleDocsPermissions resources.
type workflowTaskRemoveGoogleDocsPermissionsState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskRemoveGoogleDocsPermissionsTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskRemoveGoogleDocsPermissionsState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskRemoveGoogleDocsPermissionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskRemoveGoogleDocsPermissionsState)(nil)).Elem()
}

type workflowTaskRemoveGoogleDocsPermissionsArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskRemoveGoogleDocsPermissionsTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskRemoveGoogleDocsPermissions resource.
type WorkflowTaskRemoveGoogleDocsPermissionsArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskRemoveGoogleDocsPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskRemoveGoogleDocsPermissionsArgs)(nil)).Elem()
}

type WorkflowTaskRemoveGoogleDocsPermissionsInput interface {
	pulumi.Input

	ToWorkflowTaskRemoveGoogleDocsPermissionsOutput() WorkflowTaskRemoveGoogleDocsPermissionsOutput
	ToWorkflowTaskRemoveGoogleDocsPermissionsOutputWithContext(ctx context.Context) WorkflowTaskRemoveGoogleDocsPermissionsOutput
}

func (*WorkflowTaskRemoveGoogleDocsPermissions) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskRemoveGoogleDocsPermissions)(nil)).Elem()
}

func (i *WorkflowTaskRemoveGoogleDocsPermissions) ToWorkflowTaskRemoveGoogleDocsPermissionsOutput() WorkflowTaskRemoveGoogleDocsPermissionsOutput {
	return i.ToWorkflowTaskRemoveGoogleDocsPermissionsOutputWithContext(context.Background())
}

func (i *WorkflowTaskRemoveGoogleDocsPermissions) ToWorkflowTaskRemoveGoogleDocsPermissionsOutputWithContext(ctx context.Context) WorkflowTaskRemoveGoogleDocsPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRemoveGoogleDocsPermissionsOutput)
}

// WorkflowTaskRemoveGoogleDocsPermissionsArrayInput is an input type that accepts WorkflowTaskRemoveGoogleDocsPermissionsArray and WorkflowTaskRemoveGoogleDocsPermissionsArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskRemoveGoogleDocsPermissionsArrayInput` via:
//
//	WorkflowTaskRemoveGoogleDocsPermissionsArray{ WorkflowTaskRemoveGoogleDocsPermissionsArgs{...} }
type WorkflowTaskRemoveGoogleDocsPermissionsArrayInput interface {
	pulumi.Input

	ToWorkflowTaskRemoveGoogleDocsPermissionsArrayOutput() WorkflowTaskRemoveGoogleDocsPermissionsArrayOutput
	ToWorkflowTaskRemoveGoogleDocsPermissionsArrayOutputWithContext(context.Context) WorkflowTaskRemoveGoogleDocsPermissionsArrayOutput
}

type WorkflowTaskRemoveGoogleDocsPermissionsArray []WorkflowTaskRemoveGoogleDocsPermissionsInput

func (WorkflowTaskRemoveGoogleDocsPermissionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskRemoveGoogleDocsPermissions)(nil)).Elem()
}

func (i WorkflowTaskRemoveGoogleDocsPermissionsArray) ToWorkflowTaskRemoveGoogleDocsPermissionsArrayOutput() WorkflowTaskRemoveGoogleDocsPermissionsArrayOutput {
	return i.ToWorkflowTaskRemoveGoogleDocsPermissionsArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskRemoveGoogleDocsPermissionsArray) ToWorkflowTaskRemoveGoogleDocsPermissionsArrayOutputWithContext(ctx context.Context) WorkflowTaskRemoveGoogleDocsPermissionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRemoveGoogleDocsPermissionsArrayOutput)
}

// WorkflowTaskRemoveGoogleDocsPermissionsMapInput is an input type that accepts WorkflowTaskRemoveGoogleDocsPermissionsMap and WorkflowTaskRemoveGoogleDocsPermissionsMapOutput values.
// You can construct a concrete instance of `WorkflowTaskRemoveGoogleDocsPermissionsMapInput` via:
//
//	WorkflowTaskRemoveGoogleDocsPermissionsMap{ "key": WorkflowTaskRemoveGoogleDocsPermissionsArgs{...} }
type WorkflowTaskRemoveGoogleDocsPermissionsMapInput interface {
	pulumi.Input

	ToWorkflowTaskRemoveGoogleDocsPermissionsMapOutput() WorkflowTaskRemoveGoogleDocsPermissionsMapOutput
	ToWorkflowTaskRemoveGoogleDocsPermissionsMapOutputWithContext(context.Context) WorkflowTaskRemoveGoogleDocsPermissionsMapOutput
}

type WorkflowTaskRemoveGoogleDocsPermissionsMap map[string]WorkflowTaskRemoveGoogleDocsPermissionsInput

func (WorkflowTaskRemoveGoogleDocsPermissionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskRemoveGoogleDocsPermissions)(nil)).Elem()
}

func (i WorkflowTaskRemoveGoogleDocsPermissionsMap) ToWorkflowTaskRemoveGoogleDocsPermissionsMapOutput() WorkflowTaskRemoveGoogleDocsPermissionsMapOutput {
	return i.ToWorkflowTaskRemoveGoogleDocsPermissionsMapOutputWithContext(context.Background())
}

func (i WorkflowTaskRemoveGoogleDocsPermissionsMap) ToWorkflowTaskRemoveGoogleDocsPermissionsMapOutputWithContext(ctx context.Context) WorkflowTaskRemoveGoogleDocsPermissionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRemoveGoogleDocsPermissionsMapOutput)
}

type WorkflowTaskRemoveGoogleDocsPermissionsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRemoveGoogleDocsPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskRemoveGoogleDocsPermissions)(nil)).Elem()
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsOutput) ToWorkflowTaskRemoveGoogleDocsPermissionsOutput() WorkflowTaskRemoveGoogleDocsPermissionsOutput {
	return o
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsOutput) ToWorkflowTaskRemoveGoogleDocsPermissionsOutputWithContext(ctx context.Context) WorkflowTaskRemoveGoogleDocsPermissionsOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskRemoveGoogleDocsPermissionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRemoveGoogleDocsPermissions) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskRemoveGoogleDocsPermissionsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskRemoveGoogleDocsPermissions) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskRemoveGoogleDocsPermissionsOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskRemoveGoogleDocsPermissions) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskRemoveGoogleDocsPermissionsOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRemoveGoogleDocsPermissions) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskRemoveGoogleDocsPermissionsOutput) TaskParams() WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskRemoveGoogleDocsPermissions) WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskRemoveGoogleDocsPermissionsOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskRemoveGoogleDocsPermissions) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskRemoveGoogleDocsPermissionsArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRemoveGoogleDocsPermissionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskRemoveGoogleDocsPermissions)(nil)).Elem()
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsArrayOutput) ToWorkflowTaskRemoveGoogleDocsPermissionsArrayOutput() WorkflowTaskRemoveGoogleDocsPermissionsArrayOutput {
	return o
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsArrayOutput) ToWorkflowTaskRemoveGoogleDocsPermissionsArrayOutputWithContext(ctx context.Context) WorkflowTaskRemoveGoogleDocsPermissionsArrayOutput {
	return o
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsArrayOutput) Index(i pulumi.IntInput) WorkflowTaskRemoveGoogleDocsPermissionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskRemoveGoogleDocsPermissions {
		return vs[0].([]*WorkflowTaskRemoveGoogleDocsPermissions)[vs[1].(int)]
	}).(WorkflowTaskRemoveGoogleDocsPermissionsOutput)
}

type WorkflowTaskRemoveGoogleDocsPermissionsMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRemoveGoogleDocsPermissionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskRemoveGoogleDocsPermissions)(nil)).Elem()
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsMapOutput) ToWorkflowTaskRemoveGoogleDocsPermissionsMapOutput() WorkflowTaskRemoveGoogleDocsPermissionsMapOutput {
	return o
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsMapOutput) ToWorkflowTaskRemoveGoogleDocsPermissionsMapOutputWithContext(ctx context.Context) WorkflowTaskRemoveGoogleDocsPermissionsMapOutput {
	return o
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskRemoveGoogleDocsPermissionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskRemoveGoogleDocsPermissions {
		return vs[0].(map[string]*WorkflowTaskRemoveGoogleDocsPermissions)[vs[1].(string)]
	}).(WorkflowTaskRemoveGoogleDocsPermissionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRemoveGoogleDocsPermissionsInput)(nil)).Elem(), &WorkflowTaskRemoveGoogleDocsPermissions{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRemoveGoogleDocsPermissionsArrayInput)(nil)).Elem(), WorkflowTaskRemoveGoogleDocsPermissionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRemoveGoogleDocsPermissionsMapInput)(nil)).Elem(), WorkflowTaskRemoveGoogleDocsPermissionsMap{})
	pulumi.RegisterOutputType(WorkflowTaskRemoveGoogleDocsPermissionsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskRemoveGoogleDocsPermissionsArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskRemoveGoogleDocsPermissionsMapOutput{})
}
