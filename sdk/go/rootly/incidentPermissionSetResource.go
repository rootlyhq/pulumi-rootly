// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

type IncidentPermissionSetResource struct {
	pulumi.CustomResourceState

	IncidentPermissionSetId pulumi.StringOutput `pulumi:"incidentPermissionSetId"`
	// Value must be one of `severities`, `incidentTypes`, `statuses`.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Value must be one of true or false
	Private      pulumi.BoolOutput   `pulumi:"private"`
	ResourceId   pulumi.StringOutput `pulumi:"resourceId"`
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`
}

// NewIncidentPermissionSetResource registers a new resource with the given unique name, arguments, and options.
func NewIncidentPermissionSetResource(ctx *pulumi.Context,
	name string, args *IncidentPermissionSetResourceArgs, opts ...pulumi.ResourceOption) (*IncidentPermissionSetResource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IncidentPermissionSetId == nil {
		return nil, errors.New("invalid value for required argument 'IncidentPermissionSetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IncidentPermissionSetResource
	err := ctx.RegisterResource("rootly:index/incidentPermissionSetResource:IncidentPermissionSetResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIncidentPermissionSetResource gets an existing IncidentPermissionSetResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIncidentPermissionSetResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IncidentPermissionSetResourceState, opts ...pulumi.ResourceOption) (*IncidentPermissionSetResource, error) {
	var resource IncidentPermissionSetResource
	err := ctx.ReadResource("rootly:index/incidentPermissionSetResource:IncidentPermissionSetResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IncidentPermissionSetResource resources.
type incidentPermissionSetResourceState struct {
	IncidentPermissionSetId *string `pulumi:"incidentPermissionSetId"`
	// Value must be one of `severities`, `incidentTypes`, `statuses`.
	Kind *string `pulumi:"kind"`
	// Value must be one of true or false
	Private      *bool   `pulumi:"private"`
	ResourceId   *string `pulumi:"resourceId"`
	ResourceType *string `pulumi:"resourceType"`
}

type IncidentPermissionSetResourceState struct {
	IncidentPermissionSetId pulumi.StringPtrInput
	// Value must be one of `severities`, `incidentTypes`, `statuses`.
	Kind pulumi.StringPtrInput
	// Value must be one of true or false
	Private      pulumi.BoolPtrInput
	ResourceId   pulumi.StringPtrInput
	ResourceType pulumi.StringPtrInput
}

func (IncidentPermissionSetResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*incidentPermissionSetResourceState)(nil)).Elem()
}

type incidentPermissionSetResourceArgs struct {
	IncidentPermissionSetId string `pulumi:"incidentPermissionSetId"`
	// Value must be one of `severities`, `incidentTypes`, `statuses`.
	Kind *string `pulumi:"kind"`
	// Value must be one of true or false
	Private      *bool   `pulumi:"private"`
	ResourceId   *string `pulumi:"resourceId"`
	ResourceType *string `pulumi:"resourceType"`
}

// The set of arguments for constructing a IncidentPermissionSetResource resource.
type IncidentPermissionSetResourceArgs struct {
	IncidentPermissionSetId pulumi.StringInput
	// Value must be one of `severities`, `incidentTypes`, `statuses`.
	Kind pulumi.StringPtrInput
	// Value must be one of true or false
	Private      pulumi.BoolPtrInput
	ResourceId   pulumi.StringPtrInput
	ResourceType pulumi.StringPtrInput
}

func (IncidentPermissionSetResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*incidentPermissionSetResourceArgs)(nil)).Elem()
}

type IncidentPermissionSetResourceInput interface {
	pulumi.Input

	ToIncidentPermissionSetResourceOutput() IncidentPermissionSetResourceOutput
	ToIncidentPermissionSetResourceOutputWithContext(ctx context.Context) IncidentPermissionSetResourceOutput
}

func (*IncidentPermissionSetResource) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentPermissionSetResource)(nil)).Elem()
}

func (i *IncidentPermissionSetResource) ToIncidentPermissionSetResourceOutput() IncidentPermissionSetResourceOutput {
	return i.ToIncidentPermissionSetResourceOutputWithContext(context.Background())
}

func (i *IncidentPermissionSetResource) ToIncidentPermissionSetResourceOutputWithContext(ctx context.Context) IncidentPermissionSetResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentPermissionSetResourceOutput)
}

// IncidentPermissionSetResourceArrayInput is an input type that accepts IncidentPermissionSetResourceArray and IncidentPermissionSetResourceArrayOutput values.
// You can construct a concrete instance of `IncidentPermissionSetResourceArrayInput` via:
//
//	IncidentPermissionSetResourceArray{ IncidentPermissionSetResourceArgs{...} }
type IncidentPermissionSetResourceArrayInput interface {
	pulumi.Input

	ToIncidentPermissionSetResourceArrayOutput() IncidentPermissionSetResourceArrayOutput
	ToIncidentPermissionSetResourceArrayOutputWithContext(context.Context) IncidentPermissionSetResourceArrayOutput
}

type IncidentPermissionSetResourceArray []IncidentPermissionSetResourceInput

func (IncidentPermissionSetResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IncidentPermissionSetResource)(nil)).Elem()
}

func (i IncidentPermissionSetResourceArray) ToIncidentPermissionSetResourceArrayOutput() IncidentPermissionSetResourceArrayOutput {
	return i.ToIncidentPermissionSetResourceArrayOutputWithContext(context.Background())
}

func (i IncidentPermissionSetResourceArray) ToIncidentPermissionSetResourceArrayOutputWithContext(ctx context.Context) IncidentPermissionSetResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentPermissionSetResourceArrayOutput)
}

// IncidentPermissionSetResourceMapInput is an input type that accepts IncidentPermissionSetResourceMap and IncidentPermissionSetResourceMapOutput values.
// You can construct a concrete instance of `IncidentPermissionSetResourceMapInput` via:
//
//	IncidentPermissionSetResourceMap{ "key": IncidentPermissionSetResourceArgs{...} }
type IncidentPermissionSetResourceMapInput interface {
	pulumi.Input

	ToIncidentPermissionSetResourceMapOutput() IncidentPermissionSetResourceMapOutput
	ToIncidentPermissionSetResourceMapOutputWithContext(context.Context) IncidentPermissionSetResourceMapOutput
}

type IncidentPermissionSetResourceMap map[string]IncidentPermissionSetResourceInput

func (IncidentPermissionSetResourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IncidentPermissionSetResource)(nil)).Elem()
}

func (i IncidentPermissionSetResourceMap) ToIncidentPermissionSetResourceMapOutput() IncidentPermissionSetResourceMapOutput {
	return i.ToIncidentPermissionSetResourceMapOutputWithContext(context.Background())
}

func (i IncidentPermissionSetResourceMap) ToIncidentPermissionSetResourceMapOutputWithContext(ctx context.Context) IncidentPermissionSetResourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentPermissionSetResourceMapOutput)
}

type IncidentPermissionSetResourceOutput struct{ *pulumi.OutputState }

func (IncidentPermissionSetResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentPermissionSetResource)(nil)).Elem()
}

func (o IncidentPermissionSetResourceOutput) ToIncidentPermissionSetResourceOutput() IncidentPermissionSetResourceOutput {
	return o
}

func (o IncidentPermissionSetResourceOutput) ToIncidentPermissionSetResourceOutputWithContext(ctx context.Context) IncidentPermissionSetResourceOutput {
	return o
}

func (o IncidentPermissionSetResourceOutput) IncidentPermissionSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *IncidentPermissionSetResource) pulumi.StringOutput { return v.IncidentPermissionSetId }).(pulumi.StringOutput)
}

// Value must be one of `severities`, `incidentTypes`, `statuses`.
func (o IncidentPermissionSetResourceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentPermissionSetResource) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o IncidentPermissionSetResourceOutput) Private() pulumi.BoolOutput {
	return o.ApplyT(func(v *IncidentPermissionSetResource) pulumi.BoolOutput { return v.Private }).(pulumi.BoolOutput)
}

func (o IncidentPermissionSetResourceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *IncidentPermissionSetResource) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

func (o IncidentPermissionSetResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *IncidentPermissionSetResource) pulumi.StringOutput { return v.ResourceType }).(pulumi.StringOutput)
}

type IncidentPermissionSetResourceArrayOutput struct{ *pulumi.OutputState }

func (IncidentPermissionSetResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IncidentPermissionSetResource)(nil)).Elem()
}

func (o IncidentPermissionSetResourceArrayOutput) ToIncidentPermissionSetResourceArrayOutput() IncidentPermissionSetResourceArrayOutput {
	return o
}

func (o IncidentPermissionSetResourceArrayOutput) ToIncidentPermissionSetResourceArrayOutputWithContext(ctx context.Context) IncidentPermissionSetResourceArrayOutput {
	return o
}

func (o IncidentPermissionSetResourceArrayOutput) Index(i pulumi.IntInput) IncidentPermissionSetResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IncidentPermissionSetResource {
		return vs[0].([]*IncidentPermissionSetResource)[vs[1].(int)]
	}).(IncidentPermissionSetResourceOutput)
}

type IncidentPermissionSetResourceMapOutput struct{ *pulumi.OutputState }

func (IncidentPermissionSetResourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IncidentPermissionSetResource)(nil)).Elem()
}

func (o IncidentPermissionSetResourceMapOutput) ToIncidentPermissionSetResourceMapOutput() IncidentPermissionSetResourceMapOutput {
	return o
}

func (o IncidentPermissionSetResourceMapOutput) ToIncidentPermissionSetResourceMapOutputWithContext(ctx context.Context) IncidentPermissionSetResourceMapOutput {
	return o
}

func (o IncidentPermissionSetResourceMapOutput) MapIndex(k pulumi.StringInput) IncidentPermissionSetResourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IncidentPermissionSetResource {
		return vs[0].(map[string]*IncidentPermissionSetResource)[vs[1].(string)]
	}).(IncidentPermissionSetResourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IncidentPermissionSetResourceInput)(nil)).Elem(), &IncidentPermissionSetResource{})
	pulumi.RegisterInputType(reflect.TypeOf((*IncidentPermissionSetResourceArrayInput)(nil)).Elem(), IncidentPermissionSetResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IncidentPermissionSetResourceMapInput)(nil)).Elem(), IncidentPermissionSetResourceMap{})
	pulumi.RegisterOutputType(IncidentPermissionSetResourceOutput{})
	pulumi.RegisterOutputType(IncidentPermissionSetResourceArrayOutput{})
	pulumi.RegisterOutputType(IncidentPermissionSetResourceMapOutput{})
}
