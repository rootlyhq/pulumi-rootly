// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

func GetCustomFieldOptions(ctx *pulumi.Context, args *GetCustomFieldOptionsArgs, opts ...pulumi.InvokeOption) (*GetCustomFieldOptionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCustomFieldOptionsResult
	err := ctx.Invoke("rootly:index/getCustomFieldOptions:getCustomFieldOptions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCustomFieldOptions.
type GetCustomFieldOptionsArgs struct {
	Color         *string `pulumi:"color"`
	CustomFieldId int     `pulumi:"customFieldId"`
	Value         *string `pulumi:"value"`
}

// A collection of values returned by getCustomFieldOptions.
type GetCustomFieldOptionsResult struct {
	Color              *string                                  `pulumi:"color"`
	CustomFieldId      int                                      `pulumi:"customFieldId"`
	CustomFieldOptions []GetCustomFieldOptionsCustomFieldOption `pulumi:"customFieldOptions"`
	// The provider-assigned unique ID for this managed resource.
	Id    string  `pulumi:"id"`
	Value *string `pulumi:"value"`
}

func GetCustomFieldOptionsOutput(ctx *pulumi.Context, args GetCustomFieldOptionsOutputArgs, opts ...pulumi.InvokeOption) GetCustomFieldOptionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCustomFieldOptionsResult, error) {
			args := v.(GetCustomFieldOptionsArgs)
			r, err := GetCustomFieldOptions(ctx, &args, opts...)
			var s GetCustomFieldOptionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCustomFieldOptionsResultOutput)
}

// A collection of arguments for invoking getCustomFieldOptions.
type GetCustomFieldOptionsOutputArgs struct {
	Color         pulumi.StringPtrInput `pulumi:"color"`
	CustomFieldId pulumi.IntInput       `pulumi:"customFieldId"`
	Value         pulumi.StringPtrInput `pulumi:"value"`
}

func (GetCustomFieldOptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomFieldOptionsArgs)(nil)).Elem()
}

// A collection of values returned by getCustomFieldOptions.
type GetCustomFieldOptionsResultOutput struct{ *pulumi.OutputState }

func (GetCustomFieldOptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomFieldOptionsResult)(nil)).Elem()
}

func (o GetCustomFieldOptionsResultOutput) ToGetCustomFieldOptionsResultOutput() GetCustomFieldOptionsResultOutput {
	return o
}

func (o GetCustomFieldOptionsResultOutput) ToGetCustomFieldOptionsResultOutputWithContext(ctx context.Context) GetCustomFieldOptionsResultOutput {
	return o
}

func (o GetCustomFieldOptionsResultOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCustomFieldOptionsResult) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o GetCustomFieldOptionsResultOutput) CustomFieldId() pulumi.IntOutput {
	return o.ApplyT(func(v GetCustomFieldOptionsResult) int { return v.CustomFieldId }).(pulumi.IntOutput)
}

func (o GetCustomFieldOptionsResultOutput) CustomFieldOptions() GetCustomFieldOptionsCustomFieldOptionArrayOutput {
	return o.ApplyT(func(v GetCustomFieldOptionsResult) []GetCustomFieldOptionsCustomFieldOption {
		return v.CustomFieldOptions
	}).(GetCustomFieldOptionsCustomFieldOptionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCustomFieldOptionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomFieldOptionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCustomFieldOptionsResultOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCustomFieldOptionsResult) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCustomFieldOptionsResultOutput{})
}
