// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow createTrelloCard task.
type WorkflowTaskCreateTrelloCard struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateTrelloCardTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskCreateTrelloCard registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskCreateTrelloCard(ctx *pulumi.Context,
	name string, args *WorkflowTaskCreateTrelloCardArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateTrelloCard, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskCreateTrelloCard
	err := ctx.RegisterResource("rootly:index/workflowTaskCreateTrelloCard:WorkflowTaskCreateTrelloCard", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskCreateTrelloCard gets an existing WorkflowTaskCreateTrelloCard resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskCreateTrelloCard(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskCreateTrelloCardState, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateTrelloCard, error) {
	var resource WorkflowTaskCreateTrelloCard
	err := ctx.ReadResource("rootly:index/workflowTaskCreateTrelloCard:WorkflowTaskCreateTrelloCard", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskCreateTrelloCard resources.
type workflowTaskCreateTrelloCardState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskCreateTrelloCardTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskCreateTrelloCardState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateTrelloCardTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskCreateTrelloCardState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateTrelloCardState)(nil)).Elem()
}

type workflowTaskCreateTrelloCardArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateTrelloCardTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskCreateTrelloCard resource.
type WorkflowTaskCreateTrelloCardArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateTrelloCardTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskCreateTrelloCardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateTrelloCardArgs)(nil)).Elem()
}

type WorkflowTaskCreateTrelloCardInput interface {
	pulumi.Input

	ToWorkflowTaskCreateTrelloCardOutput() WorkflowTaskCreateTrelloCardOutput
	ToWorkflowTaskCreateTrelloCardOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardOutput
}

func (*WorkflowTaskCreateTrelloCard) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateTrelloCard)(nil)).Elem()
}

func (i *WorkflowTaskCreateTrelloCard) ToWorkflowTaskCreateTrelloCardOutput() WorkflowTaskCreateTrelloCardOutput {
	return i.ToWorkflowTaskCreateTrelloCardOutputWithContext(context.Background())
}

func (i *WorkflowTaskCreateTrelloCard) ToWorkflowTaskCreateTrelloCardOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateTrelloCardOutput)
}

// WorkflowTaskCreateTrelloCardArrayInput is an input type that accepts WorkflowTaskCreateTrelloCardArray and WorkflowTaskCreateTrelloCardArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateTrelloCardArrayInput` via:
//
//	WorkflowTaskCreateTrelloCardArray{ WorkflowTaskCreateTrelloCardArgs{...} }
type WorkflowTaskCreateTrelloCardArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateTrelloCardArrayOutput() WorkflowTaskCreateTrelloCardArrayOutput
	ToWorkflowTaskCreateTrelloCardArrayOutputWithContext(context.Context) WorkflowTaskCreateTrelloCardArrayOutput
}

type WorkflowTaskCreateTrelloCardArray []WorkflowTaskCreateTrelloCardInput

func (WorkflowTaskCreateTrelloCardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateTrelloCard)(nil)).Elem()
}

func (i WorkflowTaskCreateTrelloCardArray) ToWorkflowTaskCreateTrelloCardArrayOutput() WorkflowTaskCreateTrelloCardArrayOutput {
	return i.ToWorkflowTaskCreateTrelloCardArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateTrelloCardArray) ToWorkflowTaskCreateTrelloCardArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateTrelloCardArrayOutput)
}

// WorkflowTaskCreateTrelloCardMapInput is an input type that accepts WorkflowTaskCreateTrelloCardMap and WorkflowTaskCreateTrelloCardMapOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateTrelloCardMapInput` via:
//
//	WorkflowTaskCreateTrelloCardMap{ "key": WorkflowTaskCreateTrelloCardArgs{...} }
type WorkflowTaskCreateTrelloCardMapInput interface {
	pulumi.Input

	ToWorkflowTaskCreateTrelloCardMapOutput() WorkflowTaskCreateTrelloCardMapOutput
	ToWorkflowTaskCreateTrelloCardMapOutputWithContext(context.Context) WorkflowTaskCreateTrelloCardMapOutput
}

type WorkflowTaskCreateTrelloCardMap map[string]WorkflowTaskCreateTrelloCardInput

func (WorkflowTaskCreateTrelloCardMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateTrelloCard)(nil)).Elem()
}

func (i WorkflowTaskCreateTrelloCardMap) ToWorkflowTaskCreateTrelloCardMapOutput() WorkflowTaskCreateTrelloCardMapOutput {
	return i.ToWorkflowTaskCreateTrelloCardMapOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateTrelloCardMap) ToWorkflowTaskCreateTrelloCardMapOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateTrelloCardMapOutput)
}

type WorkflowTaskCreateTrelloCardOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateTrelloCardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateTrelloCard)(nil)).Elem()
}

func (o WorkflowTaskCreateTrelloCardOutput) ToWorkflowTaskCreateTrelloCardOutput() WorkflowTaskCreateTrelloCardOutput {
	return o
}

func (o WorkflowTaskCreateTrelloCardOutput) ToWorkflowTaskCreateTrelloCardOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskCreateTrelloCardOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateTrelloCard) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskCreateTrelloCardOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateTrelloCard) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskCreateTrelloCardOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateTrelloCard) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskCreateTrelloCardOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateTrelloCard) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskCreateTrelloCardOutput) TaskParams() WorkflowTaskCreateTrelloCardTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateTrelloCard) WorkflowTaskCreateTrelloCardTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskCreateTrelloCardTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskCreateTrelloCardOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateTrelloCard) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskCreateTrelloCardArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateTrelloCardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateTrelloCard)(nil)).Elem()
}

func (o WorkflowTaskCreateTrelloCardArrayOutput) ToWorkflowTaskCreateTrelloCardArrayOutput() WorkflowTaskCreateTrelloCardArrayOutput {
	return o
}

func (o WorkflowTaskCreateTrelloCardArrayOutput) ToWorkflowTaskCreateTrelloCardArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardArrayOutput {
	return o
}

func (o WorkflowTaskCreateTrelloCardArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateTrelloCardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskCreateTrelloCard {
		return vs[0].([]*WorkflowTaskCreateTrelloCard)[vs[1].(int)]
	}).(WorkflowTaskCreateTrelloCardOutput)
}

type WorkflowTaskCreateTrelloCardMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateTrelloCardMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateTrelloCard)(nil)).Elem()
}

func (o WorkflowTaskCreateTrelloCardMapOutput) ToWorkflowTaskCreateTrelloCardMapOutput() WorkflowTaskCreateTrelloCardMapOutput {
	return o
}

func (o WorkflowTaskCreateTrelloCardMapOutput) ToWorkflowTaskCreateTrelloCardMapOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardMapOutput {
	return o
}

func (o WorkflowTaskCreateTrelloCardMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskCreateTrelloCardOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskCreateTrelloCard {
		return vs[0].(map[string]*WorkflowTaskCreateTrelloCard)[vs[1].(string)]
	}).(WorkflowTaskCreateTrelloCardOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateTrelloCardInput)(nil)).Elem(), &WorkflowTaskCreateTrelloCard{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateTrelloCardArrayInput)(nil)).Elem(), WorkflowTaskCreateTrelloCardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateTrelloCardMapInput)(nil)).Elem(), WorkflowTaskCreateTrelloCardMap{})
	pulumi.RegisterOutputType(WorkflowTaskCreateTrelloCardOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateTrelloCardArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateTrelloCardMapOutput{})
}
