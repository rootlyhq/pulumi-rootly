// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// ## Example Usage
func LookupWorkflowGroup(ctx *pulumi.Context, args *LookupWorkflowGroupArgs, opts ...pulumi.InvokeOption) (*LookupWorkflowGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkflowGroupResult
	err := ctx.Invoke("rootly:index/getWorkflowGroup:getWorkflowGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkflowGroup.
type LookupWorkflowGroupArgs struct {
	Expanded *bool   `pulumi:"expanded"`
	Kind     *string `pulumi:"kind"`
	Name     *string `pulumi:"name"`
	Position *int    `pulumi:"position"`
	Slug     *string `pulumi:"slug"`
}

// A collection of values returned by getWorkflowGroup.
type LookupWorkflowGroupResult struct {
	Expanded bool `pulumi:"expanded"`
	// The ID of this resource.
	Id       string `pulumi:"id"`
	Kind     string `pulumi:"kind"`
	Name     string `pulumi:"name"`
	Position int    `pulumi:"position"`
	Slug     string `pulumi:"slug"`
}

func LookupWorkflowGroupOutput(ctx *pulumi.Context, args LookupWorkflowGroupOutputArgs, opts ...pulumi.InvokeOption) LookupWorkflowGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkflowGroupResult, error) {
			args := v.(LookupWorkflowGroupArgs)
			r, err := LookupWorkflowGroup(ctx, &args, opts...)
			var s LookupWorkflowGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkflowGroupResultOutput)
}

// A collection of arguments for invoking getWorkflowGroup.
type LookupWorkflowGroupOutputArgs struct {
	Expanded pulumi.BoolPtrInput   `pulumi:"expanded"`
	Kind     pulumi.StringPtrInput `pulumi:"kind"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Position pulumi.IntPtrInput    `pulumi:"position"`
	Slug     pulumi.StringPtrInput `pulumi:"slug"`
}

func (LookupWorkflowGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkflowGroupArgs)(nil)).Elem()
}

// A collection of values returned by getWorkflowGroup.
type LookupWorkflowGroupResultOutput struct{ *pulumi.OutputState }

func (LookupWorkflowGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkflowGroupResult)(nil)).Elem()
}

func (o LookupWorkflowGroupResultOutput) ToLookupWorkflowGroupResultOutput() LookupWorkflowGroupResultOutput {
	return o
}

func (o LookupWorkflowGroupResultOutput) ToLookupWorkflowGroupResultOutputWithContext(ctx context.Context) LookupWorkflowGroupResultOutput {
	return o
}

func (o LookupWorkflowGroupResultOutput) Expanded() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWorkflowGroupResult) bool { return v.Expanded }).(pulumi.BoolOutput)
}

// The ID of this resource.
func (o LookupWorkflowGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupWorkflowGroupResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowGroupResult) string { return v.Kind }).(pulumi.StringOutput)
}

func (o LookupWorkflowGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupWorkflowGroupResultOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWorkflowGroupResult) int { return v.Position }).(pulumi.IntOutput)
}

func (o LookupWorkflowGroupResultOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowGroupResult) string { return v.Slug }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkflowGroupResultOutput{})
}
