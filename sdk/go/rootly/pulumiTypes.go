// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

var _ = internal.GetEnvOrDefault

type DashboardPanelParams struct {
	Datasets []DashboardPanelParamsDataset `pulumi:"datasets"`
	Display  string                        `pulumi:"display"`
	Legend   *DashboardPanelParamsLegend   `pulumi:"legend"`
}

// DashboardPanelParamsInput is an input type that accepts DashboardPanelParamsArgs and DashboardPanelParamsOutput values.
// You can construct a concrete instance of `DashboardPanelParamsInput` via:
//
//	DashboardPanelParamsArgs{...}
type DashboardPanelParamsInput interface {
	pulumi.Input

	ToDashboardPanelParamsOutput() DashboardPanelParamsOutput
	ToDashboardPanelParamsOutputWithContext(context.Context) DashboardPanelParamsOutput
}

type DashboardPanelParamsArgs struct {
	Datasets DashboardPanelParamsDatasetArrayInput `pulumi:"datasets"`
	Display  pulumi.StringInput                    `pulumi:"display"`
	Legend   DashboardPanelParamsLegendPtrInput    `pulumi:"legend"`
}

func (DashboardPanelParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelParams)(nil)).Elem()
}

func (i DashboardPanelParamsArgs) ToDashboardPanelParamsOutput() DashboardPanelParamsOutput {
	return i.ToDashboardPanelParamsOutputWithContext(context.Background())
}

func (i DashboardPanelParamsArgs) ToDashboardPanelParamsOutputWithContext(ctx context.Context) DashboardPanelParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelParamsOutput)
}

func (i DashboardPanelParamsArgs) ToDashboardPanelParamsPtrOutput() DashboardPanelParamsPtrOutput {
	return i.ToDashboardPanelParamsPtrOutputWithContext(context.Background())
}

func (i DashboardPanelParamsArgs) ToDashboardPanelParamsPtrOutputWithContext(ctx context.Context) DashboardPanelParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelParamsOutput).ToDashboardPanelParamsPtrOutputWithContext(ctx)
}

// DashboardPanelParamsPtrInput is an input type that accepts DashboardPanelParamsArgs, DashboardPanelParamsPtr and DashboardPanelParamsPtrOutput values.
// You can construct a concrete instance of `DashboardPanelParamsPtrInput` via:
//
//	        DashboardPanelParamsArgs{...}
//
//	or:
//
//	        nil
type DashboardPanelParamsPtrInput interface {
	pulumi.Input

	ToDashboardPanelParamsPtrOutput() DashboardPanelParamsPtrOutput
	ToDashboardPanelParamsPtrOutputWithContext(context.Context) DashboardPanelParamsPtrOutput
}

type dashboardPanelParamsPtrType DashboardPanelParamsArgs

func DashboardPanelParamsPtr(v *DashboardPanelParamsArgs) DashboardPanelParamsPtrInput {
	return (*dashboardPanelParamsPtrType)(v)
}

func (*dashboardPanelParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelParams)(nil)).Elem()
}

func (i *dashboardPanelParamsPtrType) ToDashboardPanelParamsPtrOutput() DashboardPanelParamsPtrOutput {
	return i.ToDashboardPanelParamsPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelParamsPtrType) ToDashboardPanelParamsPtrOutputWithContext(ctx context.Context) DashboardPanelParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelParamsPtrOutput)
}

type DashboardPanelParamsOutput struct{ *pulumi.OutputState }

func (DashboardPanelParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelParams)(nil)).Elem()
}

func (o DashboardPanelParamsOutput) ToDashboardPanelParamsOutput() DashboardPanelParamsOutput {
	return o
}

func (o DashboardPanelParamsOutput) ToDashboardPanelParamsOutputWithContext(ctx context.Context) DashboardPanelParamsOutput {
	return o
}

func (o DashboardPanelParamsOutput) ToDashboardPanelParamsPtrOutput() DashboardPanelParamsPtrOutput {
	return o.ToDashboardPanelParamsPtrOutputWithContext(context.Background())
}

func (o DashboardPanelParamsOutput) ToDashboardPanelParamsPtrOutputWithContext(ctx context.Context) DashboardPanelParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelParams) *DashboardPanelParams {
		return &v
	}).(DashboardPanelParamsPtrOutput)
}

func (o DashboardPanelParamsOutput) Datasets() DashboardPanelParamsDatasetArrayOutput {
	return o.ApplyT(func(v DashboardPanelParams) []DashboardPanelParamsDataset { return v.Datasets }).(DashboardPanelParamsDatasetArrayOutput)
}

func (o DashboardPanelParamsOutput) Display() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelParams) string { return v.Display }).(pulumi.StringOutput)
}

func (o DashboardPanelParamsOutput) Legend() DashboardPanelParamsLegendPtrOutput {
	return o.ApplyT(func(v DashboardPanelParams) *DashboardPanelParamsLegend { return v.Legend }).(DashboardPanelParamsLegendPtrOutput)
}

type DashboardPanelParamsPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelParams)(nil)).Elem()
}

func (o DashboardPanelParamsPtrOutput) ToDashboardPanelParamsPtrOutput() DashboardPanelParamsPtrOutput {
	return o
}

func (o DashboardPanelParamsPtrOutput) ToDashboardPanelParamsPtrOutputWithContext(ctx context.Context) DashboardPanelParamsPtrOutput {
	return o
}

func (o DashboardPanelParamsPtrOutput) Elem() DashboardPanelParamsOutput {
	return o.ApplyT(func(v *DashboardPanelParams) DashboardPanelParams {
		if v != nil {
			return *v
		}
		var ret DashboardPanelParams
		return ret
	}).(DashboardPanelParamsOutput)
}

func (o DashboardPanelParamsPtrOutput) Datasets() DashboardPanelParamsDatasetArrayOutput {
	return o.ApplyT(func(v *DashboardPanelParams) []DashboardPanelParamsDataset {
		if v == nil {
			return nil
		}
		return v.Datasets
	}).(DashboardPanelParamsDatasetArrayOutput)
}

func (o DashboardPanelParamsPtrOutput) Display() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelParams) *string {
		if v == nil {
			return nil
		}
		return &v.Display
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelParamsPtrOutput) Legend() DashboardPanelParamsLegendPtrOutput {
	return o.ApplyT(func(v *DashboardPanelParams) *DashboardPanelParamsLegend {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(DashboardPanelParamsLegendPtrOutput)
}

type DashboardPanelParamsDataset struct {
	Aggregate  *DashboardPanelParamsDatasetAggregate `pulumi:"aggregate"`
	Collection string                                `pulumi:"collection"`
	Filters    []DashboardPanelParamsDatasetFilter   `pulumi:"filters"`
	GroupBy    *string                               `pulumi:"groupBy"`
	Name       *string                               `pulumi:"name"`
}

// DashboardPanelParamsDatasetInput is an input type that accepts DashboardPanelParamsDatasetArgs and DashboardPanelParamsDatasetOutput values.
// You can construct a concrete instance of `DashboardPanelParamsDatasetInput` via:
//
//	DashboardPanelParamsDatasetArgs{...}
type DashboardPanelParamsDatasetInput interface {
	pulumi.Input

	ToDashboardPanelParamsDatasetOutput() DashboardPanelParamsDatasetOutput
	ToDashboardPanelParamsDatasetOutputWithContext(context.Context) DashboardPanelParamsDatasetOutput
}

type DashboardPanelParamsDatasetArgs struct {
	Aggregate  DashboardPanelParamsDatasetAggregatePtrInput `pulumi:"aggregate"`
	Collection pulumi.StringInput                           `pulumi:"collection"`
	Filters    DashboardPanelParamsDatasetFilterArrayInput  `pulumi:"filters"`
	GroupBy    pulumi.StringPtrInput                        `pulumi:"groupBy"`
	Name       pulumi.StringPtrInput                        `pulumi:"name"`
}

func (DashboardPanelParamsDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelParamsDataset)(nil)).Elem()
}

func (i DashboardPanelParamsDatasetArgs) ToDashboardPanelParamsDatasetOutput() DashboardPanelParamsDatasetOutput {
	return i.ToDashboardPanelParamsDatasetOutputWithContext(context.Background())
}

func (i DashboardPanelParamsDatasetArgs) ToDashboardPanelParamsDatasetOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelParamsDatasetOutput)
}

// DashboardPanelParamsDatasetArrayInput is an input type that accepts DashboardPanelParamsDatasetArray and DashboardPanelParamsDatasetArrayOutput values.
// You can construct a concrete instance of `DashboardPanelParamsDatasetArrayInput` via:
//
//	DashboardPanelParamsDatasetArray{ DashboardPanelParamsDatasetArgs{...} }
type DashboardPanelParamsDatasetArrayInput interface {
	pulumi.Input

	ToDashboardPanelParamsDatasetArrayOutput() DashboardPanelParamsDatasetArrayOutput
	ToDashboardPanelParamsDatasetArrayOutputWithContext(context.Context) DashboardPanelParamsDatasetArrayOutput
}

type DashboardPanelParamsDatasetArray []DashboardPanelParamsDatasetInput

func (DashboardPanelParamsDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelParamsDataset)(nil)).Elem()
}

func (i DashboardPanelParamsDatasetArray) ToDashboardPanelParamsDatasetArrayOutput() DashboardPanelParamsDatasetArrayOutput {
	return i.ToDashboardPanelParamsDatasetArrayOutputWithContext(context.Background())
}

func (i DashboardPanelParamsDatasetArray) ToDashboardPanelParamsDatasetArrayOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelParamsDatasetArrayOutput)
}

type DashboardPanelParamsDatasetOutput struct{ *pulumi.OutputState }

func (DashboardPanelParamsDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelParamsDataset)(nil)).Elem()
}

func (o DashboardPanelParamsDatasetOutput) ToDashboardPanelParamsDatasetOutput() DashboardPanelParamsDatasetOutput {
	return o
}

func (o DashboardPanelParamsDatasetOutput) ToDashboardPanelParamsDatasetOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetOutput {
	return o
}

func (o DashboardPanelParamsDatasetOutput) Aggregate() DashboardPanelParamsDatasetAggregatePtrOutput {
	return o.ApplyT(func(v DashboardPanelParamsDataset) *DashboardPanelParamsDatasetAggregate { return v.Aggregate }).(DashboardPanelParamsDatasetAggregatePtrOutput)
}

func (o DashboardPanelParamsDatasetOutput) Collection() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelParamsDataset) string { return v.Collection }).(pulumi.StringOutput)
}

func (o DashboardPanelParamsDatasetOutput) Filters() DashboardPanelParamsDatasetFilterArrayOutput {
	return o.ApplyT(func(v DashboardPanelParamsDataset) []DashboardPanelParamsDatasetFilter { return v.Filters }).(DashboardPanelParamsDatasetFilterArrayOutput)
}

func (o DashboardPanelParamsDatasetOutput) GroupBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelParamsDataset) *string { return v.GroupBy }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelParamsDatasetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelParamsDataset) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DashboardPanelParamsDatasetArrayOutput struct{ *pulumi.OutputState }

func (DashboardPanelParamsDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelParamsDataset)(nil)).Elem()
}

func (o DashboardPanelParamsDatasetArrayOutput) ToDashboardPanelParamsDatasetArrayOutput() DashboardPanelParamsDatasetArrayOutput {
	return o
}

func (o DashboardPanelParamsDatasetArrayOutput) ToDashboardPanelParamsDatasetArrayOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetArrayOutput {
	return o
}

func (o DashboardPanelParamsDatasetArrayOutput) Index(i pulumi.IntInput) DashboardPanelParamsDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPanelParamsDataset {
		return vs[0].([]DashboardPanelParamsDataset)[vs[1].(int)]
	}).(DashboardPanelParamsDatasetOutput)
}

type DashboardPanelParamsDatasetAggregate struct {
	Cumulative bool   `pulumi:"cumulative"`
	Key        string `pulumi:"key"`
	Operation  string `pulumi:"operation"`
}

// DashboardPanelParamsDatasetAggregateInput is an input type that accepts DashboardPanelParamsDatasetAggregateArgs and DashboardPanelParamsDatasetAggregateOutput values.
// You can construct a concrete instance of `DashboardPanelParamsDatasetAggregateInput` via:
//
//	DashboardPanelParamsDatasetAggregateArgs{...}
type DashboardPanelParamsDatasetAggregateInput interface {
	pulumi.Input

	ToDashboardPanelParamsDatasetAggregateOutput() DashboardPanelParamsDatasetAggregateOutput
	ToDashboardPanelParamsDatasetAggregateOutputWithContext(context.Context) DashboardPanelParamsDatasetAggregateOutput
}

type DashboardPanelParamsDatasetAggregateArgs struct {
	Cumulative pulumi.BoolInput   `pulumi:"cumulative"`
	Key        pulumi.StringInput `pulumi:"key"`
	Operation  pulumi.StringInput `pulumi:"operation"`
}

func (DashboardPanelParamsDatasetAggregateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelParamsDatasetAggregate)(nil)).Elem()
}

func (i DashboardPanelParamsDatasetAggregateArgs) ToDashboardPanelParamsDatasetAggregateOutput() DashboardPanelParamsDatasetAggregateOutput {
	return i.ToDashboardPanelParamsDatasetAggregateOutputWithContext(context.Background())
}

func (i DashboardPanelParamsDatasetAggregateArgs) ToDashboardPanelParamsDatasetAggregateOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetAggregateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelParamsDatasetAggregateOutput)
}

func (i DashboardPanelParamsDatasetAggregateArgs) ToDashboardPanelParamsDatasetAggregatePtrOutput() DashboardPanelParamsDatasetAggregatePtrOutput {
	return i.ToDashboardPanelParamsDatasetAggregatePtrOutputWithContext(context.Background())
}

func (i DashboardPanelParamsDatasetAggregateArgs) ToDashboardPanelParamsDatasetAggregatePtrOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetAggregatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelParamsDatasetAggregateOutput).ToDashboardPanelParamsDatasetAggregatePtrOutputWithContext(ctx)
}

// DashboardPanelParamsDatasetAggregatePtrInput is an input type that accepts DashboardPanelParamsDatasetAggregateArgs, DashboardPanelParamsDatasetAggregatePtr and DashboardPanelParamsDatasetAggregatePtrOutput values.
// You can construct a concrete instance of `DashboardPanelParamsDatasetAggregatePtrInput` via:
//
//	        DashboardPanelParamsDatasetAggregateArgs{...}
//
//	or:
//
//	        nil
type DashboardPanelParamsDatasetAggregatePtrInput interface {
	pulumi.Input

	ToDashboardPanelParamsDatasetAggregatePtrOutput() DashboardPanelParamsDatasetAggregatePtrOutput
	ToDashboardPanelParamsDatasetAggregatePtrOutputWithContext(context.Context) DashboardPanelParamsDatasetAggregatePtrOutput
}

type dashboardPanelParamsDatasetAggregatePtrType DashboardPanelParamsDatasetAggregateArgs

func DashboardPanelParamsDatasetAggregatePtr(v *DashboardPanelParamsDatasetAggregateArgs) DashboardPanelParamsDatasetAggregatePtrInput {
	return (*dashboardPanelParamsDatasetAggregatePtrType)(v)
}

func (*dashboardPanelParamsDatasetAggregatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelParamsDatasetAggregate)(nil)).Elem()
}

func (i *dashboardPanelParamsDatasetAggregatePtrType) ToDashboardPanelParamsDatasetAggregatePtrOutput() DashboardPanelParamsDatasetAggregatePtrOutput {
	return i.ToDashboardPanelParamsDatasetAggregatePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelParamsDatasetAggregatePtrType) ToDashboardPanelParamsDatasetAggregatePtrOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetAggregatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelParamsDatasetAggregatePtrOutput)
}

type DashboardPanelParamsDatasetAggregateOutput struct{ *pulumi.OutputState }

func (DashboardPanelParamsDatasetAggregateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelParamsDatasetAggregate)(nil)).Elem()
}

func (o DashboardPanelParamsDatasetAggregateOutput) ToDashboardPanelParamsDatasetAggregateOutput() DashboardPanelParamsDatasetAggregateOutput {
	return o
}

func (o DashboardPanelParamsDatasetAggregateOutput) ToDashboardPanelParamsDatasetAggregateOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetAggregateOutput {
	return o
}

func (o DashboardPanelParamsDatasetAggregateOutput) ToDashboardPanelParamsDatasetAggregatePtrOutput() DashboardPanelParamsDatasetAggregatePtrOutput {
	return o.ToDashboardPanelParamsDatasetAggregatePtrOutputWithContext(context.Background())
}

func (o DashboardPanelParamsDatasetAggregateOutput) ToDashboardPanelParamsDatasetAggregatePtrOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetAggregatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelParamsDatasetAggregate) *DashboardPanelParamsDatasetAggregate {
		return &v
	}).(DashboardPanelParamsDatasetAggregatePtrOutput)
}

func (o DashboardPanelParamsDatasetAggregateOutput) Cumulative() pulumi.BoolOutput {
	return o.ApplyT(func(v DashboardPanelParamsDatasetAggregate) bool { return v.Cumulative }).(pulumi.BoolOutput)
}

func (o DashboardPanelParamsDatasetAggregateOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelParamsDatasetAggregate) string { return v.Key }).(pulumi.StringOutput)
}

func (o DashboardPanelParamsDatasetAggregateOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelParamsDatasetAggregate) string { return v.Operation }).(pulumi.StringOutput)
}

type DashboardPanelParamsDatasetAggregatePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelParamsDatasetAggregatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelParamsDatasetAggregate)(nil)).Elem()
}

func (o DashboardPanelParamsDatasetAggregatePtrOutput) ToDashboardPanelParamsDatasetAggregatePtrOutput() DashboardPanelParamsDatasetAggregatePtrOutput {
	return o
}

func (o DashboardPanelParamsDatasetAggregatePtrOutput) ToDashboardPanelParamsDatasetAggregatePtrOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetAggregatePtrOutput {
	return o
}

func (o DashboardPanelParamsDatasetAggregatePtrOutput) Elem() DashboardPanelParamsDatasetAggregateOutput {
	return o.ApplyT(func(v *DashboardPanelParamsDatasetAggregate) DashboardPanelParamsDatasetAggregate {
		if v != nil {
			return *v
		}
		var ret DashboardPanelParamsDatasetAggregate
		return ret
	}).(DashboardPanelParamsDatasetAggregateOutput)
}

func (o DashboardPanelParamsDatasetAggregatePtrOutput) Cumulative() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DashboardPanelParamsDatasetAggregate) *bool {
		if v == nil {
			return nil
		}
		return &v.Cumulative
	}).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelParamsDatasetAggregatePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelParamsDatasetAggregate) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelParamsDatasetAggregatePtrOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelParamsDatasetAggregate) *string {
		if v == nil {
			return nil
		}
		return &v.Operation
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelParamsDatasetFilter struct {
	Operation string                                  `pulumi:"operation"`
	Rules     []DashboardPanelParamsDatasetFilterRule `pulumi:"rules"`
}

// DashboardPanelParamsDatasetFilterInput is an input type that accepts DashboardPanelParamsDatasetFilterArgs and DashboardPanelParamsDatasetFilterOutput values.
// You can construct a concrete instance of `DashboardPanelParamsDatasetFilterInput` via:
//
//	DashboardPanelParamsDatasetFilterArgs{...}
type DashboardPanelParamsDatasetFilterInput interface {
	pulumi.Input

	ToDashboardPanelParamsDatasetFilterOutput() DashboardPanelParamsDatasetFilterOutput
	ToDashboardPanelParamsDatasetFilterOutputWithContext(context.Context) DashboardPanelParamsDatasetFilterOutput
}

type DashboardPanelParamsDatasetFilterArgs struct {
	Operation pulumi.StringInput                              `pulumi:"operation"`
	Rules     DashboardPanelParamsDatasetFilterRuleArrayInput `pulumi:"rules"`
}

func (DashboardPanelParamsDatasetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelParamsDatasetFilter)(nil)).Elem()
}

func (i DashboardPanelParamsDatasetFilterArgs) ToDashboardPanelParamsDatasetFilterOutput() DashboardPanelParamsDatasetFilterOutput {
	return i.ToDashboardPanelParamsDatasetFilterOutputWithContext(context.Background())
}

func (i DashboardPanelParamsDatasetFilterArgs) ToDashboardPanelParamsDatasetFilterOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelParamsDatasetFilterOutput)
}

// DashboardPanelParamsDatasetFilterArrayInput is an input type that accepts DashboardPanelParamsDatasetFilterArray and DashboardPanelParamsDatasetFilterArrayOutput values.
// You can construct a concrete instance of `DashboardPanelParamsDatasetFilterArrayInput` via:
//
//	DashboardPanelParamsDatasetFilterArray{ DashboardPanelParamsDatasetFilterArgs{...} }
type DashboardPanelParamsDatasetFilterArrayInput interface {
	pulumi.Input

	ToDashboardPanelParamsDatasetFilterArrayOutput() DashboardPanelParamsDatasetFilterArrayOutput
	ToDashboardPanelParamsDatasetFilterArrayOutputWithContext(context.Context) DashboardPanelParamsDatasetFilterArrayOutput
}

type DashboardPanelParamsDatasetFilterArray []DashboardPanelParamsDatasetFilterInput

func (DashboardPanelParamsDatasetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelParamsDatasetFilter)(nil)).Elem()
}

func (i DashboardPanelParamsDatasetFilterArray) ToDashboardPanelParamsDatasetFilterArrayOutput() DashboardPanelParamsDatasetFilterArrayOutput {
	return i.ToDashboardPanelParamsDatasetFilterArrayOutputWithContext(context.Background())
}

func (i DashboardPanelParamsDatasetFilterArray) ToDashboardPanelParamsDatasetFilterArrayOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelParamsDatasetFilterArrayOutput)
}

type DashboardPanelParamsDatasetFilterOutput struct{ *pulumi.OutputState }

func (DashboardPanelParamsDatasetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelParamsDatasetFilter)(nil)).Elem()
}

func (o DashboardPanelParamsDatasetFilterOutput) ToDashboardPanelParamsDatasetFilterOutput() DashboardPanelParamsDatasetFilterOutput {
	return o
}

func (o DashboardPanelParamsDatasetFilterOutput) ToDashboardPanelParamsDatasetFilterOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetFilterOutput {
	return o
}

func (o DashboardPanelParamsDatasetFilterOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelParamsDatasetFilter) string { return v.Operation }).(pulumi.StringOutput)
}

func (o DashboardPanelParamsDatasetFilterOutput) Rules() DashboardPanelParamsDatasetFilterRuleArrayOutput {
	return o.ApplyT(func(v DashboardPanelParamsDatasetFilter) []DashboardPanelParamsDatasetFilterRule { return v.Rules }).(DashboardPanelParamsDatasetFilterRuleArrayOutput)
}

type DashboardPanelParamsDatasetFilterArrayOutput struct{ *pulumi.OutputState }

func (DashboardPanelParamsDatasetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelParamsDatasetFilter)(nil)).Elem()
}

func (o DashboardPanelParamsDatasetFilterArrayOutput) ToDashboardPanelParamsDatasetFilterArrayOutput() DashboardPanelParamsDatasetFilterArrayOutput {
	return o
}

func (o DashboardPanelParamsDatasetFilterArrayOutput) ToDashboardPanelParamsDatasetFilterArrayOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetFilterArrayOutput {
	return o
}

func (o DashboardPanelParamsDatasetFilterArrayOutput) Index(i pulumi.IntInput) DashboardPanelParamsDatasetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPanelParamsDatasetFilter {
		return vs[0].([]DashboardPanelParamsDatasetFilter)[vs[1].(int)]
	}).(DashboardPanelParamsDatasetFilterOutput)
}

type DashboardPanelParamsDatasetFilterRule struct {
	Condition string `pulumi:"condition"`
	Key       string `pulumi:"key"`
	Operation string `pulumi:"operation"`
	Value     string `pulumi:"value"`
}

// DashboardPanelParamsDatasetFilterRuleInput is an input type that accepts DashboardPanelParamsDatasetFilterRuleArgs and DashboardPanelParamsDatasetFilterRuleOutput values.
// You can construct a concrete instance of `DashboardPanelParamsDatasetFilterRuleInput` via:
//
//	DashboardPanelParamsDatasetFilterRuleArgs{...}
type DashboardPanelParamsDatasetFilterRuleInput interface {
	pulumi.Input

	ToDashboardPanelParamsDatasetFilterRuleOutput() DashboardPanelParamsDatasetFilterRuleOutput
	ToDashboardPanelParamsDatasetFilterRuleOutputWithContext(context.Context) DashboardPanelParamsDatasetFilterRuleOutput
}

type DashboardPanelParamsDatasetFilterRuleArgs struct {
	Condition pulumi.StringInput `pulumi:"condition"`
	Key       pulumi.StringInput `pulumi:"key"`
	Operation pulumi.StringInput `pulumi:"operation"`
	Value     pulumi.StringInput `pulumi:"value"`
}

func (DashboardPanelParamsDatasetFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelParamsDatasetFilterRule)(nil)).Elem()
}

func (i DashboardPanelParamsDatasetFilterRuleArgs) ToDashboardPanelParamsDatasetFilterRuleOutput() DashboardPanelParamsDatasetFilterRuleOutput {
	return i.ToDashboardPanelParamsDatasetFilterRuleOutputWithContext(context.Background())
}

func (i DashboardPanelParamsDatasetFilterRuleArgs) ToDashboardPanelParamsDatasetFilterRuleOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelParamsDatasetFilterRuleOutput)
}

// DashboardPanelParamsDatasetFilterRuleArrayInput is an input type that accepts DashboardPanelParamsDatasetFilterRuleArray and DashboardPanelParamsDatasetFilterRuleArrayOutput values.
// You can construct a concrete instance of `DashboardPanelParamsDatasetFilterRuleArrayInput` via:
//
//	DashboardPanelParamsDatasetFilterRuleArray{ DashboardPanelParamsDatasetFilterRuleArgs{...} }
type DashboardPanelParamsDatasetFilterRuleArrayInput interface {
	pulumi.Input

	ToDashboardPanelParamsDatasetFilterRuleArrayOutput() DashboardPanelParamsDatasetFilterRuleArrayOutput
	ToDashboardPanelParamsDatasetFilterRuleArrayOutputWithContext(context.Context) DashboardPanelParamsDatasetFilterRuleArrayOutput
}

type DashboardPanelParamsDatasetFilterRuleArray []DashboardPanelParamsDatasetFilterRuleInput

func (DashboardPanelParamsDatasetFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelParamsDatasetFilterRule)(nil)).Elem()
}

func (i DashboardPanelParamsDatasetFilterRuleArray) ToDashboardPanelParamsDatasetFilterRuleArrayOutput() DashboardPanelParamsDatasetFilterRuleArrayOutput {
	return i.ToDashboardPanelParamsDatasetFilterRuleArrayOutputWithContext(context.Background())
}

func (i DashboardPanelParamsDatasetFilterRuleArray) ToDashboardPanelParamsDatasetFilterRuleArrayOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelParamsDatasetFilterRuleArrayOutput)
}

type DashboardPanelParamsDatasetFilterRuleOutput struct{ *pulumi.OutputState }

func (DashboardPanelParamsDatasetFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelParamsDatasetFilterRule)(nil)).Elem()
}

func (o DashboardPanelParamsDatasetFilterRuleOutput) ToDashboardPanelParamsDatasetFilterRuleOutput() DashboardPanelParamsDatasetFilterRuleOutput {
	return o
}

func (o DashboardPanelParamsDatasetFilterRuleOutput) ToDashboardPanelParamsDatasetFilterRuleOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetFilterRuleOutput {
	return o
}

func (o DashboardPanelParamsDatasetFilterRuleOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelParamsDatasetFilterRule) string { return v.Condition }).(pulumi.StringOutput)
}

func (o DashboardPanelParamsDatasetFilterRuleOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelParamsDatasetFilterRule) string { return v.Key }).(pulumi.StringOutput)
}

func (o DashboardPanelParamsDatasetFilterRuleOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelParamsDatasetFilterRule) string { return v.Operation }).(pulumi.StringOutput)
}

func (o DashboardPanelParamsDatasetFilterRuleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelParamsDatasetFilterRule) string { return v.Value }).(pulumi.StringOutput)
}

type DashboardPanelParamsDatasetFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (DashboardPanelParamsDatasetFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelParamsDatasetFilterRule)(nil)).Elem()
}

func (o DashboardPanelParamsDatasetFilterRuleArrayOutput) ToDashboardPanelParamsDatasetFilterRuleArrayOutput() DashboardPanelParamsDatasetFilterRuleArrayOutput {
	return o
}

func (o DashboardPanelParamsDatasetFilterRuleArrayOutput) ToDashboardPanelParamsDatasetFilterRuleArrayOutputWithContext(ctx context.Context) DashboardPanelParamsDatasetFilterRuleArrayOutput {
	return o
}

func (o DashboardPanelParamsDatasetFilterRuleArrayOutput) Index(i pulumi.IntInput) DashboardPanelParamsDatasetFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPanelParamsDatasetFilterRule {
		return vs[0].([]DashboardPanelParamsDatasetFilterRule)[vs[1].(int)]
	}).(DashboardPanelParamsDatasetFilterRuleOutput)
}

type DashboardPanelParamsLegend struct {
	Groups string `pulumi:"groups"`
}

// DashboardPanelParamsLegendInput is an input type that accepts DashboardPanelParamsLegendArgs and DashboardPanelParamsLegendOutput values.
// You can construct a concrete instance of `DashboardPanelParamsLegendInput` via:
//
//	DashboardPanelParamsLegendArgs{...}
type DashboardPanelParamsLegendInput interface {
	pulumi.Input

	ToDashboardPanelParamsLegendOutput() DashboardPanelParamsLegendOutput
	ToDashboardPanelParamsLegendOutputWithContext(context.Context) DashboardPanelParamsLegendOutput
}

type DashboardPanelParamsLegendArgs struct {
	Groups pulumi.StringInput `pulumi:"groups"`
}

func (DashboardPanelParamsLegendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelParamsLegend)(nil)).Elem()
}

func (i DashboardPanelParamsLegendArgs) ToDashboardPanelParamsLegendOutput() DashboardPanelParamsLegendOutput {
	return i.ToDashboardPanelParamsLegendOutputWithContext(context.Background())
}

func (i DashboardPanelParamsLegendArgs) ToDashboardPanelParamsLegendOutputWithContext(ctx context.Context) DashboardPanelParamsLegendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelParamsLegendOutput)
}

func (i DashboardPanelParamsLegendArgs) ToDashboardPanelParamsLegendPtrOutput() DashboardPanelParamsLegendPtrOutput {
	return i.ToDashboardPanelParamsLegendPtrOutputWithContext(context.Background())
}

func (i DashboardPanelParamsLegendArgs) ToDashboardPanelParamsLegendPtrOutputWithContext(ctx context.Context) DashboardPanelParamsLegendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelParamsLegendOutput).ToDashboardPanelParamsLegendPtrOutputWithContext(ctx)
}

// DashboardPanelParamsLegendPtrInput is an input type that accepts DashboardPanelParamsLegendArgs, DashboardPanelParamsLegendPtr and DashboardPanelParamsLegendPtrOutput values.
// You can construct a concrete instance of `DashboardPanelParamsLegendPtrInput` via:
//
//	        DashboardPanelParamsLegendArgs{...}
//
//	or:
//
//	        nil
type DashboardPanelParamsLegendPtrInput interface {
	pulumi.Input

	ToDashboardPanelParamsLegendPtrOutput() DashboardPanelParamsLegendPtrOutput
	ToDashboardPanelParamsLegendPtrOutputWithContext(context.Context) DashboardPanelParamsLegendPtrOutput
}

type dashboardPanelParamsLegendPtrType DashboardPanelParamsLegendArgs

func DashboardPanelParamsLegendPtr(v *DashboardPanelParamsLegendArgs) DashboardPanelParamsLegendPtrInput {
	return (*dashboardPanelParamsLegendPtrType)(v)
}

func (*dashboardPanelParamsLegendPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelParamsLegend)(nil)).Elem()
}

func (i *dashboardPanelParamsLegendPtrType) ToDashboardPanelParamsLegendPtrOutput() DashboardPanelParamsLegendPtrOutput {
	return i.ToDashboardPanelParamsLegendPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelParamsLegendPtrType) ToDashboardPanelParamsLegendPtrOutputWithContext(ctx context.Context) DashboardPanelParamsLegendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelParamsLegendPtrOutput)
}

type DashboardPanelParamsLegendOutput struct{ *pulumi.OutputState }

func (DashboardPanelParamsLegendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelParamsLegend)(nil)).Elem()
}

func (o DashboardPanelParamsLegendOutput) ToDashboardPanelParamsLegendOutput() DashboardPanelParamsLegendOutput {
	return o
}

func (o DashboardPanelParamsLegendOutput) ToDashboardPanelParamsLegendOutputWithContext(ctx context.Context) DashboardPanelParamsLegendOutput {
	return o
}

func (o DashboardPanelParamsLegendOutput) ToDashboardPanelParamsLegendPtrOutput() DashboardPanelParamsLegendPtrOutput {
	return o.ToDashboardPanelParamsLegendPtrOutputWithContext(context.Background())
}

func (o DashboardPanelParamsLegendOutput) ToDashboardPanelParamsLegendPtrOutputWithContext(ctx context.Context) DashboardPanelParamsLegendPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelParamsLegend) *DashboardPanelParamsLegend {
		return &v
	}).(DashboardPanelParamsLegendPtrOutput)
}

func (o DashboardPanelParamsLegendOutput) Groups() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelParamsLegend) string { return v.Groups }).(pulumi.StringOutput)
}

type DashboardPanelParamsLegendPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelParamsLegendPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelParamsLegend)(nil)).Elem()
}

func (o DashboardPanelParamsLegendPtrOutput) ToDashboardPanelParamsLegendPtrOutput() DashboardPanelParamsLegendPtrOutput {
	return o
}

func (o DashboardPanelParamsLegendPtrOutput) ToDashboardPanelParamsLegendPtrOutputWithContext(ctx context.Context) DashboardPanelParamsLegendPtrOutput {
	return o
}

func (o DashboardPanelParamsLegendPtrOutput) Elem() DashboardPanelParamsLegendOutput {
	return o.ApplyT(func(v *DashboardPanelParamsLegend) DashboardPanelParamsLegend {
		if v != nil {
			return *v
		}
		var ret DashboardPanelParamsLegend
		return ret
	}).(DashboardPanelParamsLegendOutput)
}

func (o DashboardPanelParamsLegendPtrOutput) Groups() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelParamsLegend) *string {
		if v == nil {
			return nil
		}
		return &v.Groups
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelPosition struct {
	H int `pulumi:"h"`
	W int `pulumi:"w"`
	X int `pulumi:"x"`
	Y int `pulumi:"y"`
}

// DashboardPanelPositionInput is an input type that accepts DashboardPanelPositionArgs and DashboardPanelPositionOutput values.
// You can construct a concrete instance of `DashboardPanelPositionInput` via:
//
//	DashboardPanelPositionArgs{...}
type DashboardPanelPositionInput interface {
	pulumi.Input

	ToDashboardPanelPositionOutput() DashboardPanelPositionOutput
	ToDashboardPanelPositionOutputWithContext(context.Context) DashboardPanelPositionOutput
}

type DashboardPanelPositionArgs struct {
	H pulumi.IntInput `pulumi:"h"`
	W pulumi.IntInput `pulumi:"w"`
	X pulumi.IntInput `pulumi:"x"`
	Y pulumi.IntInput `pulumi:"y"`
}

func (DashboardPanelPositionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelPosition)(nil)).Elem()
}

func (i DashboardPanelPositionArgs) ToDashboardPanelPositionOutput() DashboardPanelPositionOutput {
	return i.ToDashboardPanelPositionOutputWithContext(context.Background())
}

func (i DashboardPanelPositionArgs) ToDashboardPanelPositionOutputWithContext(ctx context.Context) DashboardPanelPositionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelPositionOutput)
}

func (i DashboardPanelPositionArgs) ToDashboardPanelPositionPtrOutput() DashboardPanelPositionPtrOutput {
	return i.ToDashboardPanelPositionPtrOutputWithContext(context.Background())
}

func (i DashboardPanelPositionArgs) ToDashboardPanelPositionPtrOutputWithContext(ctx context.Context) DashboardPanelPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelPositionOutput).ToDashboardPanelPositionPtrOutputWithContext(ctx)
}

// DashboardPanelPositionPtrInput is an input type that accepts DashboardPanelPositionArgs, DashboardPanelPositionPtr and DashboardPanelPositionPtrOutput values.
// You can construct a concrete instance of `DashboardPanelPositionPtrInput` via:
//
//	        DashboardPanelPositionArgs{...}
//
//	or:
//
//	        nil
type DashboardPanelPositionPtrInput interface {
	pulumi.Input

	ToDashboardPanelPositionPtrOutput() DashboardPanelPositionPtrOutput
	ToDashboardPanelPositionPtrOutputWithContext(context.Context) DashboardPanelPositionPtrOutput
}

type dashboardPanelPositionPtrType DashboardPanelPositionArgs

func DashboardPanelPositionPtr(v *DashboardPanelPositionArgs) DashboardPanelPositionPtrInput {
	return (*dashboardPanelPositionPtrType)(v)
}

func (*dashboardPanelPositionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelPosition)(nil)).Elem()
}

func (i *dashboardPanelPositionPtrType) ToDashboardPanelPositionPtrOutput() DashboardPanelPositionPtrOutput {
	return i.ToDashboardPanelPositionPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelPositionPtrType) ToDashboardPanelPositionPtrOutputWithContext(ctx context.Context) DashboardPanelPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelPositionPtrOutput)
}

type DashboardPanelPositionOutput struct{ *pulumi.OutputState }

func (DashboardPanelPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelPosition)(nil)).Elem()
}

func (o DashboardPanelPositionOutput) ToDashboardPanelPositionOutput() DashboardPanelPositionOutput {
	return o
}

func (o DashboardPanelPositionOutput) ToDashboardPanelPositionOutputWithContext(ctx context.Context) DashboardPanelPositionOutput {
	return o
}

func (o DashboardPanelPositionOutput) ToDashboardPanelPositionPtrOutput() DashboardPanelPositionPtrOutput {
	return o.ToDashboardPanelPositionPtrOutputWithContext(context.Background())
}

func (o DashboardPanelPositionOutput) ToDashboardPanelPositionPtrOutputWithContext(ctx context.Context) DashboardPanelPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelPosition) *DashboardPanelPosition {
		return &v
	}).(DashboardPanelPositionPtrOutput)
}

func (o DashboardPanelPositionOutput) H() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardPanelPosition) int { return v.H }).(pulumi.IntOutput)
}

func (o DashboardPanelPositionOutput) W() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardPanelPosition) int { return v.W }).(pulumi.IntOutput)
}

func (o DashboardPanelPositionOutput) X() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardPanelPosition) int { return v.X }).(pulumi.IntOutput)
}

func (o DashboardPanelPositionOutput) Y() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardPanelPosition) int { return v.Y }).(pulumi.IntOutput)
}

type DashboardPanelPositionPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelPosition)(nil)).Elem()
}

func (o DashboardPanelPositionPtrOutput) ToDashboardPanelPositionPtrOutput() DashboardPanelPositionPtrOutput {
	return o
}

func (o DashboardPanelPositionPtrOutput) ToDashboardPanelPositionPtrOutputWithContext(ctx context.Context) DashboardPanelPositionPtrOutput {
	return o
}

func (o DashboardPanelPositionPtrOutput) Elem() DashboardPanelPositionOutput {
	return o.ApplyT(func(v *DashboardPanelPosition) DashboardPanelPosition {
		if v != nil {
			return *v
		}
		var ret DashboardPanelPosition
		return ret
	}).(DashboardPanelPositionOutput)
}

func (o DashboardPanelPositionPtrOutput) H() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DashboardPanelPosition) *int {
		if v == nil {
			return nil
		}
		return &v.H
	}).(pulumi.IntPtrOutput)
}

func (o DashboardPanelPositionPtrOutput) W() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DashboardPanelPosition) *int {
		if v == nil {
			return nil
		}
		return &v.W
	}).(pulumi.IntPtrOutput)
}

func (o DashboardPanelPositionPtrOutput) X() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DashboardPanelPosition) *int {
		if v == nil {
			return nil
		}
		return &v.X
	}).(pulumi.IntPtrOutput)
}

func (o DashboardPanelPositionPtrOutput) Y() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DashboardPanelPosition) *int {
		if v == nil {
			return nil
		}
		return &v.Y
	}).(pulumi.IntPtrOutput)
}

type EnvironmentSlackAlias struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// EnvironmentSlackAliasInput is an input type that accepts EnvironmentSlackAliasArgs and EnvironmentSlackAliasOutput values.
// You can construct a concrete instance of `EnvironmentSlackAliasInput` via:
//
//	EnvironmentSlackAliasArgs{...}
type EnvironmentSlackAliasInput interface {
	pulumi.Input

	ToEnvironmentSlackAliasOutput() EnvironmentSlackAliasOutput
	ToEnvironmentSlackAliasOutputWithContext(context.Context) EnvironmentSlackAliasOutput
}

type EnvironmentSlackAliasArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (EnvironmentSlackAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSlackAlias)(nil)).Elem()
}

func (i EnvironmentSlackAliasArgs) ToEnvironmentSlackAliasOutput() EnvironmentSlackAliasOutput {
	return i.ToEnvironmentSlackAliasOutputWithContext(context.Background())
}

func (i EnvironmentSlackAliasArgs) ToEnvironmentSlackAliasOutputWithContext(ctx context.Context) EnvironmentSlackAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSlackAliasOutput)
}

// EnvironmentSlackAliasArrayInput is an input type that accepts EnvironmentSlackAliasArray and EnvironmentSlackAliasArrayOutput values.
// You can construct a concrete instance of `EnvironmentSlackAliasArrayInput` via:
//
//	EnvironmentSlackAliasArray{ EnvironmentSlackAliasArgs{...} }
type EnvironmentSlackAliasArrayInput interface {
	pulumi.Input

	ToEnvironmentSlackAliasArrayOutput() EnvironmentSlackAliasArrayOutput
	ToEnvironmentSlackAliasArrayOutputWithContext(context.Context) EnvironmentSlackAliasArrayOutput
}

type EnvironmentSlackAliasArray []EnvironmentSlackAliasInput

func (EnvironmentSlackAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSlackAlias)(nil)).Elem()
}

func (i EnvironmentSlackAliasArray) ToEnvironmentSlackAliasArrayOutput() EnvironmentSlackAliasArrayOutput {
	return i.ToEnvironmentSlackAliasArrayOutputWithContext(context.Background())
}

func (i EnvironmentSlackAliasArray) ToEnvironmentSlackAliasArrayOutputWithContext(ctx context.Context) EnvironmentSlackAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSlackAliasArrayOutput)
}

type EnvironmentSlackAliasOutput struct{ *pulumi.OutputState }

func (EnvironmentSlackAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSlackAlias)(nil)).Elem()
}

func (o EnvironmentSlackAliasOutput) ToEnvironmentSlackAliasOutput() EnvironmentSlackAliasOutput {
	return o
}

func (o EnvironmentSlackAliasOutput) ToEnvironmentSlackAliasOutputWithContext(ctx context.Context) EnvironmentSlackAliasOutput {
	return o
}

func (o EnvironmentSlackAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentSlackAlias) string { return v.Id }).(pulumi.StringOutput)
}

func (o EnvironmentSlackAliasOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentSlackAlias) string { return v.Name }).(pulumi.StringOutput)
}

type EnvironmentSlackAliasArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentSlackAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSlackAlias)(nil)).Elem()
}

func (o EnvironmentSlackAliasArrayOutput) ToEnvironmentSlackAliasArrayOutput() EnvironmentSlackAliasArrayOutput {
	return o
}

func (o EnvironmentSlackAliasArrayOutput) ToEnvironmentSlackAliasArrayOutputWithContext(ctx context.Context) EnvironmentSlackAliasArrayOutput {
	return o
}

func (o EnvironmentSlackAliasArrayOutput) Index(i pulumi.IntInput) EnvironmentSlackAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentSlackAlias {
		return vs[0].([]EnvironmentSlackAlias)[vs[1].(int)]
	}).(EnvironmentSlackAliasOutput)
}

type EnvironmentSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// EnvironmentSlackChannelInput is an input type that accepts EnvironmentSlackChannelArgs and EnvironmentSlackChannelOutput values.
// You can construct a concrete instance of `EnvironmentSlackChannelInput` via:
//
//	EnvironmentSlackChannelArgs{...}
type EnvironmentSlackChannelInput interface {
	pulumi.Input

	ToEnvironmentSlackChannelOutput() EnvironmentSlackChannelOutput
	ToEnvironmentSlackChannelOutputWithContext(context.Context) EnvironmentSlackChannelOutput
}

type EnvironmentSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (EnvironmentSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSlackChannel)(nil)).Elem()
}

func (i EnvironmentSlackChannelArgs) ToEnvironmentSlackChannelOutput() EnvironmentSlackChannelOutput {
	return i.ToEnvironmentSlackChannelOutputWithContext(context.Background())
}

func (i EnvironmentSlackChannelArgs) ToEnvironmentSlackChannelOutputWithContext(ctx context.Context) EnvironmentSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSlackChannelOutput)
}

// EnvironmentSlackChannelArrayInput is an input type that accepts EnvironmentSlackChannelArray and EnvironmentSlackChannelArrayOutput values.
// You can construct a concrete instance of `EnvironmentSlackChannelArrayInput` via:
//
//	EnvironmentSlackChannelArray{ EnvironmentSlackChannelArgs{...} }
type EnvironmentSlackChannelArrayInput interface {
	pulumi.Input

	ToEnvironmentSlackChannelArrayOutput() EnvironmentSlackChannelArrayOutput
	ToEnvironmentSlackChannelArrayOutputWithContext(context.Context) EnvironmentSlackChannelArrayOutput
}

type EnvironmentSlackChannelArray []EnvironmentSlackChannelInput

func (EnvironmentSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSlackChannel)(nil)).Elem()
}

func (i EnvironmentSlackChannelArray) ToEnvironmentSlackChannelArrayOutput() EnvironmentSlackChannelArrayOutput {
	return i.ToEnvironmentSlackChannelArrayOutputWithContext(context.Background())
}

func (i EnvironmentSlackChannelArray) ToEnvironmentSlackChannelArrayOutputWithContext(ctx context.Context) EnvironmentSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSlackChannelArrayOutput)
}

type EnvironmentSlackChannelOutput struct{ *pulumi.OutputState }

func (EnvironmentSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSlackChannel)(nil)).Elem()
}

func (o EnvironmentSlackChannelOutput) ToEnvironmentSlackChannelOutput() EnvironmentSlackChannelOutput {
	return o
}

func (o EnvironmentSlackChannelOutput) ToEnvironmentSlackChannelOutputWithContext(ctx context.Context) EnvironmentSlackChannelOutput {
	return o
}

func (o EnvironmentSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o EnvironmentSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type EnvironmentSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSlackChannel)(nil)).Elem()
}

func (o EnvironmentSlackChannelArrayOutput) ToEnvironmentSlackChannelArrayOutput() EnvironmentSlackChannelArrayOutput {
	return o
}

func (o EnvironmentSlackChannelArrayOutput) ToEnvironmentSlackChannelArrayOutputWithContext(ctx context.Context) EnvironmentSlackChannelArrayOutput {
	return o
}

func (o EnvironmentSlackChannelArrayOutput) Index(i pulumi.IntInput) EnvironmentSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentSlackChannel {
		return vs[0].([]EnvironmentSlackChannel)[vs[1].(int)]
	}).(EnvironmentSlackChannelOutput)
}

type EscalationLevelNotificationTargetParam struct {
	Id   string `pulumi:"id"`
	Type string `pulumi:"type"`
}

// EscalationLevelNotificationTargetParamInput is an input type that accepts EscalationLevelNotificationTargetParamArgs and EscalationLevelNotificationTargetParamOutput values.
// You can construct a concrete instance of `EscalationLevelNotificationTargetParamInput` via:
//
//	EscalationLevelNotificationTargetParamArgs{...}
type EscalationLevelNotificationTargetParamInput interface {
	pulumi.Input

	ToEscalationLevelNotificationTargetParamOutput() EscalationLevelNotificationTargetParamOutput
	ToEscalationLevelNotificationTargetParamOutputWithContext(context.Context) EscalationLevelNotificationTargetParamOutput
}

type EscalationLevelNotificationTargetParamArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (EscalationLevelNotificationTargetParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EscalationLevelNotificationTargetParam)(nil)).Elem()
}

func (i EscalationLevelNotificationTargetParamArgs) ToEscalationLevelNotificationTargetParamOutput() EscalationLevelNotificationTargetParamOutput {
	return i.ToEscalationLevelNotificationTargetParamOutputWithContext(context.Background())
}

func (i EscalationLevelNotificationTargetParamArgs) ToEscalationLevelNotificationTargetParamOutputWithContext(ctx context.Context) EscalationLevelNotificationTargetParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EscalationLevelNotificationTargetParamOutput)
}

// EscalationLevelNotificationTargetParamArrayInput is an input type that accepts EscalationLevelNotificationTargetParamArray and EscalationLevelNotificationTargetParamArrayOutput values.
// You can construct a concrete instance of `EscalationLevelNotificationTargetParamArrayInput` via:
//
//	EscalationLevelNotificationTargetParamArray{ EscalationLevelNotificationTargetParamArgs{...} }
type EscalationLevelNotificationTargetParamArrayInput interface {
	pulumi.Input

	ToEscalationLevelNotificationTargetParamArrayOutput() EscalationLevelNotificationTargetParamArrayOutput
	ToEscalationLevelNotificationTargetParamArrayOutputWithContext(context.Context) EscalationLevelNotificationTargetParamArrayOutput
}

type EscalationLevelNotificationTargetParamArray []EscalationLevelNotificationTargetParamInput

func (EscalationLevelNotificationTargetParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EscalationLevelNotificationTargetParam)(nil)).Elem()
}

func (i EscalationLevelNotificationTargetParamArray) ToEscalationLevelNotificationTargetParamArrayOutput() EscalationLevelNotificationTargetParamArrayOutput {
	return i.ToEscalationLevelNotificationTargetParamArrayOutputWithContext(context.Background())
}

func (i EscalationLevelNotificationTargetParamArray) ToEscalationLevelNotificationTargetParamArrayOutputWithContext(ctx context.Context) EscalationLevelNotificationTargetParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EscalationLevelNotificationTargetParamArrayOutput)
}

type EscalationLevelNotificationTargetParamOutput struct{ *pulumi.OutputState }

func (EscalationLevelNotificationTargetParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EscalationLevelNotificationTargetParam)(nil)).Elem()
}

func (o EscalationLevelNotificationTargetParamOutput) ToEscalationLevelNotificationTargetParamOutput() EscalationLevelNotificationTargetParamOutput {
	return o
}

func (o EscalationLevelNotificationTargetParamOutput) ToEscalationLevelNotificationTargetParamOutputWithContext(ctx context.Context) EscalationLevelNotificationTargetParamOutput {
	return o
}

func (o EscalationLevelNotificationTargetParamOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EscalationLevelNotificationTargetParam) string { return v.Id }).(pulumi.StringOutput)
}

func (o EscalationLevelNotificationTargetParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EscalationLevelNotificationTargetParam) string { return v.Type }).(pulumi.StringOutput)
}

type EscalationLevelNotificationTargetParamArrayOutput struct{ *pulumi.OutputState }

func (EscalationLevelNotificationTargetParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EscalationLevelNotificationTargetParam)(nil)).Elem()
}

func (o EscalationLevelNotificationTargetParamArrayOutput) ToEscalationLevelNotificationTargetParamArrayOutput() EscalationLevelNotificationTargetParamArrayOutput {
	return o
}

func (o EscalationLevelNotificationTargetParamArrayOutput) ToEscalationLevelNotificationTargetParamArrayOutputWithContext(ctx context.Context) EscalationLevelNotificationTargetParamArrayOutput {
	return o
}

func (o EscalationLevelNotificationTargetParamArrayOutput) Index(i pulumi.IntInput) EscalationLevelNotificationTargetParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EscalationLevelNotificationTargetParam {
		return vs[0].([]EscalationLevelNotificationTargetParam)[vs[1].(int)]
	}).(EscalationLevelNotificationTargetParamOutput)
}

type FunctionalitySlackAlias struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// FunctionalitySlackAliasInput is an input type that accepts FunctionalitySlackAliasArgs and FunctionalitySlackAliasOutput values.
// You can construct a concrete instance of `FunctionalitySlackAliasInput` via:
//
//	FunctionalitySlackAliasArgs{...}
type FunctionalitySlackAliasInput interface {
	pulumi.Input

	ToFunctionalitySlackAliasOutput() FunctionalitySlackAliasOutput
	ToFunctionalitySlackAliasOutputWithContext(context.Context) FunctionalitySlackAliasOutput
}

type FunctionalitySlackAliasArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (FunctionalitySlackAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionalitySlackAlias)(nil)).Elem()
}

func (i FunctionalitySlackAliasArgs) ToFunctionalitySlackAliasOutput() FunctionalitySlackAliasOutput {
	return i.ToFunctionalitySlackAliasOutputWithContext(context.Background())
}

func (i FunctionalitySlackAliasArgs) ToFunctionalitySlackAliasOutputWithContext(ctx context.Context) FunctionalitySlackAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionalitySlackAliasOutput)
}

// FunctionalitySlackAliasArrayInput is an input type that accepts FunctionalitySlackAliasArray and FunctionalitySlackAliasArrayOutput values.
// You can construct a concrete instance of `FunctionalitySlackAliasArrayInput` via:
//
//	FunctionalitySlackAliasArray{ FunctionalitySlackAliasArgs{...} }
type FunctionalitySlackAliasArrayInput interface {
	pulumi.Input

	ToFunctionalitySlackAliasArrayOutput() FunctionalitySlackAliasArrayOutput
	ToFunctionalitySlackAliasArrayOutputWithContext(context.Context) FunctionalitySlackAliasArrayOutput
}

type FunctionalitySlackAliasArray []FunctionalitySlackAliasInput

func (FunctionalitySlackAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionalitySlackAlias)(nil)).Elem()
}

func (i FunctionalitySlackAliasArray) ToFunctionalitySlackAliasArrayOutput() FunctionalitySlackAliasArrayOutput {
	return i.ToFunctionalitySlackAliasArrayOutputWithContext(context.Background())
}

func (i FunctionalitySlackAliasArray) ToFunctionalitySlackAliasArrayOutputWithContext(ctx context.Context) FunctionalitySlackAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionalitySlackAliasArrayOutput)
}

type FunctionalitySlackAliasOutput struct{ *pulumi.OutputState }

func (FunctionalitySlackAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionalitySlackAlias)(nil)).Elem()
}

func (o FunctionalitySlackAliasOutput) ToFunctionalitySlackAliasOutput() FunctionalitySlackAliasOutput {
	return o
}

func (o FunctionalitySlackAliasOutput) ToFunctionalitySlackAliasOutputWithContext(ctx context.Context) FunctionalitySlackAliasOutput {
	return o
}

func (o FunctionalitySlackAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionalitySlackAlias) string { return v.Id }).(pulumi.StringOutput)
}

func (o FunctionalitySlackAliasOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionalitySlackAlias) string { return v.Name }).(pulumi.StringOutput)
}

type FunctionalitySlackAliasArrayOutput struct{ *pulumi.OutputState }

func (FunctionalitySlackAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionalitySlackAlias)(nil)).Elem()
}

func (o FunctionalitySlackAliasArrayOutput) ToFunctionalitySlackAliasArrayOutput() FunctionalitySlackAliasArrayOutput {
	return o
}

func (o FunctionalitySlackAliasArrayOutput) ToFunctionalitySlackAliasArrayOutputWithContext(ctx context.Context) FunctionalitySlackAliasArrayOutput {
	return o
}

func (o FunctionalitySlackAliasArrayOutput) Index(i pulumi.IntInput) FunctionalitySlackAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionalitySlackAlias {
		return vs[0].([]FunctionalitySlackAlias)[vs[1].(int)]
	}).(FunctionalitySlackAliasOutput)
}

type FunctionalitySlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// FunctionalitySlackChannelInput is an input type that accepts FunctionalitySlackChannelArgs and FunctionalitySlackChannelOutput values.
// You can construct a concrete instance of `FunctionalitySlackChannelInput` via:
//
//	FunctionalitySlackChannelArgs{...}
type FunctionalitySlackChannelInput interface {
	pulumi.Input

	ToFunctionalitySlackChannelOutput() FunctionalitySlackChannelOutput
	ToFunctionalitySlackChannelOutputWithContext(context.Context) FunctionalitySlackChannelOutput
}

type FunctionalitySlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (FunctionalitySlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionalitySlackChannel)(nil)).Elem()
}

func (i FunctionalitySlackChannelArgs) ToFunctionalitySlackChannelOutput() FunctionalitySlackChannelOutput {
	return i.ToFunctionalitySlackChannelOutputWithContext(context.Background())
}

func (i FunctionalitySlackChannelArgs) ToFunctionalitySlackChannelOutputWithContext(ctx context.Context) FunctionalitySlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionalitySlackChannelOutput)
}

// FunctionalitySlackChannelArrayInput is an input type that accepts FunctionalitySlackChannelArray and FunctionalitySlackChannelArrayOutput values.
// You can construct a concrete instance of `FunctionalitySlackChannelArrayInput` via:
//
//	FunctionalitySlackChannelArray{ FunctionalitySlackChannelArgs{...} }
type FunctionalitySlackChannelArrayInput interface {
	pulumi.Input

	ToFunctionalitySlackChannelArrayOutput() FunctionalitySlackChannelArrayOutput
	ToFunctionalitySlackChannelArrayOutputWithContext(context.Context) FunctionalitySlackChannelArrayOutput
}

type FunctionalitySlackChannelArray []FunctionalitySlackChannelInput

func (FunctionalitySlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionalitySlackChannel)(nil)).Elem()
}

func (i FunctionalitySlackChannelArray) ToFunctionalitySlackChannelArrayOutput() FunctionalitySlackChannelArrayOutput {
	return i.ToFunctionalitySlackChannelArrayOutputWithContext(context.Background())
}

func (i FunctionalitySlackChannelArray) ToFunctionalitySlackChannelArrayOutputWithContext(ctx context.Context) FunctionalitySlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionalitySlackChannelArrayOutput)
}

type FunctionalitySlackChannelOutput struct{ *pulumi.OutputState }

func (FunctionalitySlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionalitySlackChannel)(nil)).Elem()
}

func (o FunctionalitySlackChannelOutput) ToFunctionalitySlackChannelOutput() FunctionalitySlackChannelOutput {
	return o
}

func (o FunctionalitySlackChannelOutput) ToFunctionalitySlackChannelOutputWithContext(ctx context.Context) FunctionalitySlackChannelOutput {
	return o
}

func (o FunctionalitySlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionalitySlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o FunctionalitySlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionalitySlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type FunctionalitySlackChannelArrayOutput struct{ *pulumi.OutputState }

func (FunctionalitySlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionalitySlackChannel)(nil)).Elem()
}

func (o FunctionalitySlackChannelArrayOutput) ToFunctionalitySlackChannelArrayOutput() FunctionalitySlackChannelArrayOutput {
	return o
}

func (o FunctionalitySlackChannelArrayOutput) ToFunctionalitySlackChannelArrayOutputWithContext(ctx context.Context) FunctionalitySlackChannelArrayOutput {
	return o
}

func (o FunctionalitySlackChannelArrayOutput) Index(i pulumi.IntInput) FunctionalitySlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionalitySlackChannel {
		return vs[0].([]FunctionalitySlackChannel)[vs[1].(int)]
	}).(FunctionalitySlackChannelOutput)
}

type IncidentTypeSlackAlias struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// IncidentTypeSlackAliasInput is an input type that accepts IncidentTypeSlackAliasArgs and IncidentTypeSlackAliasOutput values.
// You can construct a concrete instance of `IncidentTypeSlackAliasInput` via:
//
//	IncidentTypeSlackAliasArgs{...}
type IncidentTypeSlackAliasInput interface {
	pulumi.Input

	ToIncidentTypeSlackAliasOutput() IncidentTypeSlackAliasOutput
	ToIncidentTypeSlackAliasOutputWithContext(context.Context) IncidentTypeSlackAliasOutput
}

type IncidentTypeSlackAliasArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (IncidentTypeSlackAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentTypeSlackAlias)(nil)).Elem()
}

func (i IncidentTypeSlackAliasArgs) ToIncidentTypeSlackAliasOutput() IncidentTypeSlackAliasOutput {
	return i.ToIncidentTypeSlackAliasOutputWithContext(context.Background())
}

func (i IncidentTypeSlackAliasArgs) ToIncidentTypeSlackAliasOutputWithContext(ctx context.Context) IncidentTypeSlackAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentTypeSlackAliasOutput)
}

// IncidentTypeSlackAliasArrayInput is an input type that accepts IncidentTypeSlackAliasArray and IncidentTypeSlackAliasArrayOutput values.
// You can construct a concrete instance of `IncidentTypeSlackAliasArrayInput` via:
//
//	IncidentTypeSlackAliasArray{ IncidentTypeSlackAliasArgs{...} }
type IncidentTypeSlackAliasArrayInput interface {
	pulumi.Input

	ToIncidentTypeSlackAliasArrayOutput() IncidentTypeSlackAliasArrayOutput
	ToIncidentTypeSlackAliasArrayOutputWithContext(context.Context) IncidentTypeSlackAliasArrayOutput
}

type IncidentTypeSlackAliasArray []IncidentTypeSlackAliasInput

func (IncidentTypeSlackAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentTypeSlackAlias)(nil)).Elem()
}

func (i IncidentTypeSlackAliasArray) ToIncidentTypeSlackAliasArrayOutput() IncidentTypeSlackAliasArrayOutput {
	return i.ToIncidentTypeSlackAliasArrayOutputWithContext(context.Background())
}

func (i IncidentTypeSlackAliasArray) ToIncidentTypeSlackAliasArrayOutputWithContext(ctx context.Context) IncidentTypeSlackAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentTypeSlackAliasArrayOutput)
}

type IncidentTypeSlackAliasOutput struct{ *pulumi.OutputState }

func (IncidentTypeSlackAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentTypeSlackAlias)(nil)).Elem()
}

func (o IncidentTypeSlackAliasOutput) ToIncidentTypeSlackAliasOutput() IncidentTypeSlackAliasOutput {
	return o
}

func (o IncidentTypeSlackAliasOutput) ToIncidentTypeSlackAliasOutputWithContext(ctx context.Context) IncidentTypeSlackAliasOutput {
	return o
}

func (o IncidentTypeSlackAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentTypeSlackAlias) string { return v.Id }).(pulumi.StringOutput)
}

func (o IncidentTypeSlackAliasOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentTypeSlackAlias) string { return v.Name }).(pulumi.StringOutput)
}

type IncidentTypeSlackAliasArrayOutput struct{ *pulumi.OutputState }

func (IncidentTypeSlackAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentTypeSlackAlias)(nil)).Elem()
}

func (o IncidentTypeSlackAliasArrayOutput) ToIncidentTypeSlackAliasArrayOutput() IncidentTypeSlackAliasArrayOutput {
	return o
}

func (o IncidentTypeSlackAliasArrayOutput) ToIncidentTypeSlackAliasArrayOutputWithContext(ctx context.Context) IncidentTypeSlackAliasArrayOutput {
	return o
}

func (o IncidentTypeSlackAliasArrayOutput) Index(i pulumi.IntInput) IncidentTypeSlackAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncidentTypeSlackAlias {
		return vs[0].([]IncidentTypeSlackAlias)[vs[1].(int)]
	}).(IncidentTypeSlackAliasOutput)
}

type IncidentTypeSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// IncidentTypeSlackChannelInput is an input type that accepts IncidentTypeSlackChannelArgs and IncidentTypeSlackChannelOutput values.
// You can construct a concrete instance of `IncidentTypeSlackChannelInput` via:
//
//	IncidentTypeSlackChannelArgs{...}
type IncidentTypeSlackChannelInput interface {
	pulumi.Input

	ToIncidentTypeSlackChannelOutput() IncidentTypeSlackChannelOutput
	ToIncidentTypeSlackChannelOutputWithContext(context.Context) IncidentTypeSlackChannelOutput
}

type IncidentTypeSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (IncidentTypeSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentTypeSlackChannel)(nil)).Elem()
}

func (i IncidentTypeSlackChannelArgs) ToIncidentTypeSlackChannelOutput() IncidentTypeSlackChannelOutput {
	return i.ToIncidentTypeSlackChannelOutputWithContext(context.Background())
}

func (i IncidentTypeSlackChannelArgs) ToIncidentTypeSlackChannelOutputWithContext(ctx context.Context) IncidentTypeSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentTypeSlackChannelOutput)
}

// IncidentTypeSlackChannelArrayInput is an input type that accepts IncidentTypeSlackChannelArray and IncidentTypeSlackChannelArrayOutput values.
// You can construct a concrete instance of `IncidentTypeSlackChannelArrayInput` via:
//
//	IncidentTypeSlackChannelArray{ IncidentTypeSlackChannelArgs{...} }
type IncidentTypeSlackChannelArrayInput interface {
	pulumi.Input

	ToIncidentTypeSlackChannelArrayOutput() IncidentTypeSlackChannelArrayOutput
	ToIncidentTypeSlackChannelArrayOutputWithContext(context.Context) IncidentTypeSlackChannelArrayOutput
}

type IncidentTypeSlackChannelArray []IncidentTypeSlackChannelInput

func (IncidentTypeSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentTypeSlackChannel)(nil)).Elem()
}

func (i IncidentTypeSlackChannelArray) ToIncidentTypeSlackChannelArrayOutput() IncidentTypeSlackChannelArrayOutput {
	return i.ToIncidentTypeSlackChannelArrayOutputWithContext(context.Background())
}

func (i IncidentTypeSlackChannelArray) ToIncidentTypeSlackChannelArrayOutputWithContext(ctx context.Context) IncidentTypeSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentTypeSlackChannelArrayOutput)
}

type IncidentTypeSlackChannelOutput struct{ *pulumi.OutputState }

func (IncidentTypeSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentTypeSlackChannel)(nil)).Elem()
}

func (o IncidentTypeSlackChannelOutput) ToIncidentTypeSlackChannelOutput() IncidentTypeSlackChannelOutput {
	return o
}

func (o IncidentTypeSlackChannelOutput) ToIncidentTypeSlackChannelOutputWithContext(ctx context.Context) IncidentTypeSlackChannelOutput {
	return o
}

func (o IncidentTypeSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentTypeSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o IncidentTypeSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentTypeSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type IncidentTypeSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (IncidentTypeSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentTypeSlackChannel)(nil)).Elem()
}

func (o IncidentTypeSlackChannelArrayOutput) ToIncidentTypeSlackChannelArrayOutput() IncidentTypeSlackChannelArrayOutput {
	return o
}

func (o IncidentTypeSlackChannelArrayOutput) ToIncidentTypeSlackChannelArrayOutputWithContext(ctx context.Context) IncidentTypeSlackChannelArrayOutput {
	return o
}

func (o IncidentTypeSlackChannelArrayOutput) Index(i pulumi.IntInput) IncidentTypeSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncidentTypeSlackChannel {
		return vs[0].([]IncidentTypeSlackChannel)[vs[1].(int)]
	}).(IncidentTypeSlackChannelOutput)
}

type RetrospectiveProcessRetrospectiveProcessMatchingCriteria struct {
	// Teams for process matching criteria.
	GroupIds []string `pulumi:"groupIds"`
	// Incident types for process matching criteria.
	IncidentTypeIds []string `pulumi:"incidentTypeIds"`
	// Severities for process matching criteria.
	SeverityIds []string `pulumi:"severityIds"`
}

// RetrospectiveProcessRetrospectiveProcessMatchingCriteriaInput is an input type that accepts RetrospectiveProcessRetrospectiveProcessMatchingCriteriaArgs and RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput values.
// You can construct a concrete instance of `RetrospectiveProcessRetrospectiveProcessMatchingCriteriaInput` via:
//
//	RetrospectiveProcessRetrospectiveProcessMatchingCriteriaArgs{...}
type RetrospectiveProcessRetrospectiveProcessMatchingCriteriaInput interface {
	pulumi.Input

	ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput() RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput
	ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutputWithContext(context.Context) RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput
}

type RetrospectiveProcessRetrospectiveProcessMatchingCriteriaArgs struct {
	// Teams for process matching criteria.
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
	// Incident types for process matching criteria.
	IncidentTypeIds pulumi.StringArrayInput `pulumi:"incidentTypeIds"`
	// Severities for process matching criteria.
	SeverityIds pulumi.StringArrayInput `pulumi:"severityIds"`
}

func (RetrospectiveProcessRetrospectiveProcessMatchingCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetrospectiveProcessRetrospectiveProcessMatchingCriteria)(nil)).Elem()
}

func (i RetrospectiveProcessRetrospectiveProcessMatchingCriteriaArgs) ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput() RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput {
	return i.ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutputWithContext(context.Background())
}

func (i RetrospectiveProcessRetrospectiveProcessMatchingCriteriaArgs) ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutputWithContext(ctx context.Context) RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput)
}

func (i RetrospectiveProcessRetrospectiveProcessMatchingCriteriaArgs) ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput() RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput {
	return i.ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutputWithContext(context.Background())
}

func (i RetrospectiveProcessRetrospectiveProcessMatchingCriteriaArgs) ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutputWithContext(ctx context.Context) RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput).ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutputWithContext(ctx)
}

// RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrInput is an input type that accepts RetrospectiveProcessRetrospectiveProcessMatchingCriteriaArgs, RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtr and RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput values.
// You can construct a concrete instance of `RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrInput` via:
//
//	        RetrospectiveProcessRetrospectiveProcessMatchingCriteriaArgs{...}
//
//	or:
//
//	        nil
type RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrInput interface {
	pulumi.Input

	ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput() RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput
	ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutputWithContext(context.Context) RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput
}

type retrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrType RetrospectiveProcessRetrospectiveProcessMatchingCriteriaArgs

func RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtr(v *RetrospectiveProcessRetrospectiveProcessMatchingCriteriaArgs) RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrInput {
	return (*retrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrType)(v)
}

func (*retrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetrospectiveProcessRetrospectiveProcessMatchingCriteria)(nil)).Elem()
}

func (i *retrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrType) ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput() RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput {
	return i.ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutputWithContext(context.Background())
}

func (i *retrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrType) ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutputWithContext(ctx context.Context) RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput)
}

type RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput struct{ *pulumi.OutputState }

func (RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetrospectiveProcessRetrospectiveProcessMatchingCriteria)(nil)).Elem()
}

func (o RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput) ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput() RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput {
	return o
}

func (o RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput) ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutputWithContext(ctx context.Context) RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput {
	return o
}

func (o RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput) ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput() RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput {
	return o.ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutputWithContext(context.Background())
}

func (o RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput) ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutputWithContext(ctx context.Context) RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RetrospectiveProcessRetrospectiveProcessMatchingCriteria) *RetrospectiveProcessRetrospectiveProcessMatchingCriteria {
		return &v
	}).(RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput)
}

// Teams for process matching criteria.
func (o RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RetrospectiveProcessRetrospectiveProcessMatchingCriteria) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Incident types for process matching criteria.
func (o RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput) IncidentTypeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RetrospectiveProcessRetrospectiveProcessMatchingCriteria) []string { return v.IncidentTypeIds }).(pulumi.StringArrayOutput)
}

// Severities for process matching criteria.
func (o RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput) SeverityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RetrospectiveProcessRetrospectiveProcessMatchingCriteria) []string { return v.SeverityIds }).(pulumi.StringArrayOutput)
}

type RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput struct{ *pulumi.OutputState }

func (RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetrospectiveProcessRetrospectiveProcessMatchingCriteria)(nil)).Elem()
}

func (o RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput) ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput() RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput {
	return o
}

func (o RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput) ToRetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutputWithContext(ctx context.Context) RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput {
	return o
}

func (o RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput) Elem() RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput {
	return o.ApplyT(func(v *RetrospectiveProcessRetrospectiveProcessMatchingCriteria) RetrospectiveProcessRetrospectiveProcessMatchingCriteria {
		if v != nil {
			return *v
		}
		var ret RetrospectiveProcessRetrospectiveProcessMatchingCriteria
		return ret
	}).(RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput)
}

// Teams for process matching criteria.
func (o RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RetrospectiveProcessRetrospectiveProcessMatchingCriteria) []string {
		if v == nil {
			return nil
		}
		return v.GroupIds
	}).(pulumi.StringArrayOutput)
}

// Incident types for process matching criteria.
func (o RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput) IncidentTypeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RetrospectiveProcessRetrospectiveProcessMatchingCriteria) []string {
		if v == nil {
			return nil
		}
		return v.IncidentTypeIds
	}).(pulumi.StringArrayOutput)
}

// Severities for process matching criteria.
func (o RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput) SeverityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RetrospectiveProcessRetrospectiveProcessMatchingCriteria) []string {
		if v == nil {
			return nil
		}
		return v.SeverityIds
	}).(pulumi.StringArrayOutput)
}

type ScheduleRotationActiveDayActiveTimeAttribute struct {
	EndTime   string `pulumi:"endTime"`
	StartTime string `pulumi:"startTime"`
}

// ScheduleRotationActiveDayActiveTimeAttributeInput is an input type that accepts ScheduleRotationActiveDayActiveTimeAttributeArgs and ScheduleRotationActiveDayActiveTimeAttributeOutput values.
// You can construct a concrete instance of `ScheduleRotationActiveDayActiveTimeAttributeInput` via:
//
//	ScheduleRotationActiveDayActiveTimeAttributeArgs{...}
type ScheduleRotationActiveDayActiveTimeAttributeInput interface {
	pulumi.Input

	ToScheduleRotationActiveDayActiveTimeAttributeOutput() ScheduleRotationActiveDayActiveTimeAttributeOutput
	ToScheduleRotationActiveDayActiveTimeAttributeOutputWithContext(context.Context) ScheduleRotationActiveDayActiveTimeAttributeOutput
}

type ScheduleRotationActiveDayActiveTimeAttributeArgs struct {
	EndTime   pulumi.StringInput `pulumi:"endTime"`
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (ScheduleRotationActiveDayActiveTimeAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRotationActiveDayActiveTimeAttribute)(nil)).Elem()
}

func (i ScheduleRotationActiveDayActiveTimeAttributeArgs) ToScheduleRotationActiveDayActiveTimeAttributeOutput() ScheduleRotationActiveDayActiveTimeAttributeOutput {
	return i.ToScheduleRotationActiveDayActiveTimeAttributeOutputWithContext(context.Background())
}

func (i ScheduleRotationActiveDayActiveTimeAttributeArgs) ToScheduleRotationActiveDayActiveTimeAttributeOutputWithContext(ctx context.Context) ScheduleRotationActiveDayActiveTimeAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRotationActiveDayActiveTimeAttributeOutput)
}

// ScheduleRotationActiveDayActiveTimeAttributeArrayInput is an input type that accepts ScheduleRotationActiveDayActiveTimeAttributeArray and ScheduleRotationActiveDayActiveTimeAttributeArrayOutput values.
// You can construct a concrete instance of `ScheduleRotationActiveDayActiveTimeAttributeArrayInput` via:
//
//	ScheduleRotationActiveDayActiveTimeAttributeArray{ ScheduleRotationActiveDayActiveTimeAttributeArgs{...} }
type ScheduleRotationActiveDayActiveTimeAttributeArrayInput interface {
	pulumi.Input

	ToScheduleRotationActiveDayActiveTimeAttributeArrayOutput() ScheduleRotationActiveDayActiveTimeAttributeArrayOutput
	ToScheduleRotationActiveDayActiveTimeAttributeArrayOutputWithContext(context.Context) ScheduleRotationActiveDayActiveTimeAttributeArrayOutput
}

type ScheduleRotationActiveDayActiveTimeAttributeArray []ScheduleRotationActiveDayActiveTimeAttributeInput

func (ScheduleRotationActiveDayActiveTimeAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleRotationActiveDayActiveTimeAttribute)(nil)).Elem()
}

func (i ScheduleRotationActiveDayActiveTimeAttributeArray) ToScheduleRotationActiveDayActiveTimeAttributeArrayOutput() ScheduleRotationActiveDayActiveTimeAttributeArrayOutput {
	return i.ToScheduleRotationActiveDayActiveTimeAttributeArrayOutputWithContext(context.Background())
}

func (i ScheduleRotationActiveDayActiveTimeAttributeArray) ToScheduleRotationActiveDayActiveTimeAttributeArrayOutputWithContext(ctx context.Context) ScheduleRotationActiveDayActiveTimeAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRotationActiveDayActiveTimeAttributeArrayOutput)
}

type ScheduleRotationActiveDayActiveTimeAttributeOutput struct{ *pulumi.OutputState }

func (ScheduleRotationActiveDayActiveTimeAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRotationActiveDayActiveTimeAttribute)(nil)).Elem()
}

func (o ScheduleRotationActiveDayActiveTimeAttributeOutput) ToScheduleRotationActiveDayActiveTimeAttributeOutput() ScheduleRotationActiveDayActiveTimeAttributeOutput {
	return o
}

func (o ScheduleRotationActiveDayActiveTimeAttributeOutput) ToScheduleRotationActiveDayActiveTimeAttributeOutputWithContext(ctx context.Context) ScheduleRotationActiveDayActiveTimeAttributeOutput {
	return o
}

func (o ScheduleRotationActiveDayActiveTimeAttributeOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleRotationActiveDayActiveTimeAttribute) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o ScheduleRotationActiveDayActiveTimeAttributeOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleRotationActiveDayActiveTimeAttribute) string { return v.StartTime }).(pulumi.StringOutput)
}

type ScheduleRotationActiveDayActiveTimeAttributeArrayOutput struct{ *pulumi.OutputState }

func (ScheduleRotationActiveDayActiveTimeAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleRotationActiveDayActiveTimeAttribute)(nil)).Elem()
}

func (o ScheduleRotationActiveDayActiveTimeAttributeArrayOutput) ToScheduleRotationActiveDayActiveTimeAttributeArrayOutput() ScheduleRotationActiveDayActiveTimeAttributeArrayOutput {
	return o
}

func (o ScheduleRotationActiveDayActiveTimeAttributeArrayOutput) ToScheduleRotationActiveDayActiveTimeAttributeArrayOutputWithContext(ctx context.Context) ScheduleRotationActiveDayActiveTimeAttributeArrayOutput {
	return o
}

func (o ScheduleRotationActiveDayActiveTimeAttributeArrayOutput) Index(i pulumi.IntInput) ScheduleRotationActiveDayActiveTimeAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduleRotationActiveDayActiveTimeAttribute {
		return vs[0].([]ScheduleRotationActiveDayActiveTimeAttribute)[vs[1].(int)]
	}).(ScheduleRotationActiveDayActiveTimeAttributeOutput)
}

type ScheduleRotationActiveTimeAttribute struct {
	EndTime   string `pulumi:"endTime"`
	StartTime string `pulumi:"startTime"`
}

// ScheduleRotationActiveTimeAttributeInput is an input type that accepts ScheduleRotationActiveTimeAttributeArgs and ScheduleRotationActiveTimeAttributeOutput values.
// You can construct a concrete instance of `ScheduleRotationActiveTimeAttributeInput` via:
//
//	ScheduleRotationActiveTimeAttributeArgs{...}
type ScheduleRotationActiveTimeAttributeInput interface {
	pulumi.Input

	ToScheduleRotationActiveTimeAttributeOutput() ScheduleRotationActiveTimeAttributeOutput
	ToScheduleRotationActiveTimeAttributeOutputWithContext(context.Context) ScheduleRotationActiveTimeAttributeOutput
}

type ScheduleRotationActiveTimeAttributeArgs struct {
	EndTime   pulumi.StringInput `pulumi:"endTime"`
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (ScheduleRotationActiveTimeAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRotationActiveTimeAttribute)(nil)).Elem()
}

func (i ScheduleRotationActiveTimeAttributeArgs) ToScheduleRotationActiveTimeAttributeOutput() ScheduleRotationActiveTimeAttributeOutput {
	return i.ToScheduleRotationActiveTimeAttributeOutputWithContext(context.Background())
}

func (i ScheduleRotationActiveTimeAttributeArgs) ToScheduleRotationActiveTimeAttributeOutputWithContext(ctx context.Context) ScheduleRotationActiveTimeAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRotationActiveTimeAttributeOutput)
}

// ScheduleRotationActiveTimeAttributeArrayInput is an input type that accepts ScheduleRotationActiveTimeAttributeArray and ScheduleRotationActiveTimeAttributeArrayOutput values.
// You can construct a concrete instance of `ScheduleRotationActiveTimeAttributeArrayInput` via:
//
//	ScheduleRotationActiveTimeAttributeArray{ ScheduleRotationActiveTimeAttributeArgs{...} }
type ScheduleRotationActiveTimeAttributeArrayInput interface {
	pulumi.Input

	ToScheduleRotationActiveTimeAttributeArrayOutput() ScheduleRotationActiveTimeAttributeArrayOutput
	ToScheduleRotationActiveTimeAttributeArrayOutputWithContext(context.Context) ScheduleRotationActiveTimeAttributeArrayOutput
}

type ScheduleRotationActiveTimeAttributeArray []ScheduleRotationActiveTimeAttributeInput

func (ScheduleRotationActiveTimeAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleRotationActiveTimeAttribute)(nil)).Elem()
}

func (i ScheduleRotationActiveTimeAttributeArray) ToScheduleRotationActiveTimeAttributeArrayOutput() ScheduleRotationActiveTimeAttributeArrayOutput {
	return i.ToScheduleRotationActiveTimeAttributeArrayOutputWithContext(context.Background())
}

func (i ScheduleRotationActiveTimeAttributeArray) ToScheduleRotationActiveTimeAttributeArrayOutputWithContext(ctx context.Context) ScheduleRotationActiveTimeAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRotationActiveTimeAttributeArrayOutput)
}

type ScheduleRotationActiveTimeAttributeOutput struct{ *pulumi.OutputState }

func (ScheduleRotationActiveTimeAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRotationActiveTimeAttribute)(nil)).Elem()
}

func (o ScheduleRotationActiveTimeAttributeOutput) ToScheduleRotationActiveTimeAttributeOutput() ScheduleRotationActiveTimeAttributeOutput {
	return o
}

func (o ScheduleRotationActiveTimeAttributeOutput) ToScheduleRotationActiveTimeAttributeOutputWithContext(ctx context.Context) ScheduleRotationActiveTimeAttributeOutput {
	return o
}

func (o ScheduleRotationActiveTimeAttributeOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleRotationActiveTimeAttribute) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o ScheduleRotationActiveTimeAttributeOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleRotationActiveTimeAttribute) string { return v.StartTime }).(pulumi.StringOutput)
}

type ScheduleRotationActiveTimeAttributeArrayOutput struct{ *pulumi.OutputState }

func (ScheduleRotationActiveTimeAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleRotationActiveTimeAttribute)(nil)).Elem()
}

func (o ScheduleRotationActiveTimeAttributeArrayOutput) ToScheduleRotationActiveTimeAttributeArrayOutput() ScheduleRotationActiveTimeAttributeArrayOutput {
	return o
}

func (o ScheduleRotationActiveTimeAttributeArrayOutput) ToScheduleRotationActiveTimeAttributeArrayOutputWithContext(ctx context.Context) ScheduleRotationActiveTimeAttributeArrayOutput {
	return o
}

func (o ScheduleRotationActiveTimeAttributeArrayOutput) Index(i pulumi.IntInput) ScheduleRotationActiveTimeAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduleRotationActiveTimeAttribute {
		return vs[0].([]ScheduleRotationActiveTimeAttribute)[vs[1].(int)]
	}).(ScheduleRotationActiveTimeAttributeOutput)
}

type ServiceSlackAlias struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// ServiceSlackAliasInput is an input type that accepts ServiceSlackAliasArgs and ServiceSlackAliasOutput values.
// You can construct a concrete instance of `ServiceSlackAliasInput` via:
//
//	ServiceSlackAliasArgs{...}
type ServiceSlackAliasInput interface {
	pulumi.Input

	ToServiceSlackAliasOutput() ServiceSlackAliasOutput
	ToServiceSlackAliasOutputWithContext(context.Context) ServiceSlackAliasOutput
}

type ServiceSlackAliasArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (ServiceSlackAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSlackAlias)(nil)).Elem()
}

func (i ServiceSlackAliasArgs) ToServiceSlackAliasOutput() ServiceSlackAliasOutput {
	return i.ToServiceSlackAliasOutputWithContext(context.Background())
}

func (i ServiceSlackAliasArgs) ToServiceSlackAliasOutputWithContext(ctx context.Context) ServiceSlackAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSlackAliasOutput)
}

// ServiceSlackAliasArrayInput is an input type that accepts ServiceSlackAliasArray and ServiceSlackAliasArrayOutput values.
// You can construct a concrete instance of `ServiceSlackAliasArrayInput` via:
//
//	ServiceSlackAliasArray{ ServiceSlackAliasArgs{...} }
type ServiceSlackAliasArrayInput interface {
	pulumi.Input

	ToServiceSlackAliasArrayOutput() ServiceSlackAliasArrayOutput
	ToServiceSlackAliasArrayOutputWithContext(context.Context) ServiceSlackAliasArrayOutput
}

type ServiceSlackAliasArray []ServiceSlackAliasInput

func (ServiceSlackAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceSlackAlias)(nil)).Elem()
}

func (i ServiceSlackAliasArray) ToServiceSlackAliasArrayOutput() ServiceSlackAliasArrayOutput {
	return i.ToServiceSlackAliasArrayOutputWithContext(context.Background())
}

func (i ServiceSlackAliasArray) ToServiceSlackAliasArrayOutputWithContext(ctx context.Context) ServiceSlackAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSlackAliasArrayOutput)
}

type ServiceSlackAliasOutput struct{ *pulumi.OutputState }

func (ServiceSlackAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSlackAlias)(nil)).Elem()
}

func (o ServiceSlackAliasOutput) ToServiceSlackAliasOutput() ServiceSlackAliasOutput {
	return o
}

func (o ServiceSlackAliasOutput) ToServiceSlackAliasOutputWithContext(ctx context.Context) ServiceSlackAliasOutput {
	return o
}

func (o ServiceSlackAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSlackAlias) string { return v.Id }).(pulumi.StringOutput)
}

func (o ServiceSlackAliasOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSlackAlias) string { return v.Name }).(pulumi.StringOutput)
}

type ServiceSlackAliasArrayOutput struct{ *pulumi.OutputState }

func (ServiceSlackAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceSlackAlias)(nil)).Elem()
}

func (o ServiceSlackAliasArrayOutput) ToServiceSlackAliasArrayOutput() ServiceSlackAliasArrayOutput {
	return o
}

func (o ServiceSlackAliasArrayOutput) ToServiceSlackAliasArrayOutputWithContext(ctx context.Context) ServiceSlackAliasArrayOutput {
	return o
}

func (o ServiceSlackAliasArrayOutput) Index(i pulumi.IntInput) ServiceSlackAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceSlackAlias {
		return vs[0].([]ServiceSlackAlias)[vs[1].(int)]
	}).(ServiceSlackAliasOutput)
}

type ServiceSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// ServiceSlackChannelInput is an input type that accepts ServiceSlackChannelArgs and ServiceSlackChannelOutput values.
// You can construct a concrete instance of `ServiceSlackChannelInput` via:
//
//	ServiceSlackChannelArgs{...}
type ServiceSlackChannelInput interface {
	pulumi.Input

	ToServiceSlackChannelOutput() ServiceSlackChannelOutput
	ToServiceSlackChannelOutputWithContext(context.Context) ServiceSlackChannelOutput
}

type ServiceSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (ServiceSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSlackChannel)(nil)).Elem()
}

func (i ServiceSlackChannelArgs) ToServiceSlackChannelOutput() ServiceSlackChannelOutput {
	return i.ToServiceSlackChannelOutputWithContext(context.Background())
}

func (i ServiceSlackChannelArgs) ToServiceSlackChannelOutputWithContext(ctx context.Context) ServiceSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSlackChannelOutput)
}

// ServiceSlackChannelArrayInput is an input type that accepts ServiceSlackChannelArray and ServiceSlackChannelArrayOutput values.
// You can construct a concrete instance of `ServiceSlackChannelArrayInput` via:
//
//	ServiceSlackChannelArray{ ServiceSlackChannelArgs{...} }
type ServiceSlackChannelArrayInput interface {
	pulumi.Input

	ToServiceSlackChannelArrayOutput() ServiceSlackChannelArrayOutput
	ToServiceSlackChannelArrayOutputWithContext(context.Context) ServiceSlackChannelArrayOutput
}

type ServiceSlackChannelArray []ServiceSlackChannelInput

func (ServiceSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceSlackChannel)(nil)).Elem()
}

func (i ServiceSlackChannelArray) ToServiceSlackChannelArrayOutput() ServiceSlackChannelArrayOutput {
	return i.ToServiceSlackChannelArrayOutputWithContext(context.Background())
}

func (i ServiceSlackChannelArray) ToServiceSlackChannelArrayOutputWithContext(ctx context.Context) ServiceSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSlackChannelArrayOutput)
}

type ServiceSlackChannelOutput struct{ *pulumi.OutputState }

func (ServiceSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSlackChannel)(nil)).Elem()
}

func (o ServiceSlackChannelOutput) ToServiceSlackChannelOutput() ServiceSlackChannelOutput {
	return o
}

func (o ServiceSlackChannelOutput) ToServiceSlackChannelOutputWithContext(ctx context.Context) ServiceSlackChannelOutput {
	return o
}

func (o ServiceSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o ServiceSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type ServiceSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (ServiceSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceSlackChannel)(nil)).Elem()
}

func (o ServiceSlackChannelArrayOutput) ToServiceSlackChannelArrayOutput() ServiceSlackChannelArrayOutput {
	return o
}

func (o ServiceSlackChannelArrayOutput) ToServiceSlackChannelArrayOutputWithContext(ctx context.Context) ServiceSlackChannelArrayOutput {
	return o
}

func (o ServiceSlackChannelArrayOutput) Index(i pulumi.IntInput) ServiceSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceSlackChannel {
		return vs[0].([]ServiceSlackChannel)[vs[1].(int)]
	}).(ServiceSlackChannelOutput)
}

type SeveritySlackAlias struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// SeveritySlackAliasInput is an input type that accepts SeveritySlackAliasArgs and SeveritySlackAliasOutput values.
// You can construct a concrete instance of `SeveritySlackAliasInput` via:
//
//	SeveritySlackAliasArgs{...}
type SeveritySlackAliasInput interface {
	pulumi.Input

	ToSeveritySlackAliasOutput() SeveritySlackAliasOutput
	ToSeveritySlackAliasOutputWithContext(context.Context) SeveritySlackAliasOutput
}

type SeveritySlackAliasArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (SeveritySlackAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SeveritySlackAlias)(nil)).Elem()
}

func (i SeveritySlackAliasArgs) ToSeveritySlackAliasOutput() SeveritySlackAliasOutput {
	return i.ToSeveritySlackAliasOutputWithContext(context.Background())
}

func (i SeveritySlackAliasArgs) ToSeveritySlackAliasOutputWithContext(ctx context.Context) SeveritySlackAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SeveritySlackAliasOutput)
}

// SeveritySlackAliasArrayInput is an input type that accepts SeveritySlackAliasArray and SeveritySlackAliasArrayOutput values.
// You can construct a concrete instance of `SeveritySlackAliasArrayInput` via:
//
//	SeveritySlackAliasArray{ SeveritySlackAliasArgs{...} }
type SeveritySlackAliasArrayInput interface {
	pulumi.Input

	ToSeveritySlackAliasArrayOutput() SeveritySlackAliasArrayOutput
	ToSeveritySlackAliasArrayOutputWithContext(context.Context) SeveritySlackAliasArrayOutput
}

type SeveritySlackAliasArray []SeveritySlackAliasInput

func (SeveritySlackAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SeveritySlackAlias)(nil)).Elem()
}

func (i SeveritySlackAliasArray) ToSeveritySlackAliasArrayOutput() SeveritySlackAliasArrayOutput {
	return i.ToSeveritySlackAliasArrayOutputWithContext(context.Background())
}

func (i SeveritySlackAliasArray) ToSeveritySlackAliasArrayOutputWithContext(ctx context.Context) SeveritySlackAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SeveritySlackAliasArrayOutput)
}

type SeveritySlackAliasOutput struct{ *pulumi.OutputState }

func (SeveritySlackAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SeveritySlackAlias)(nil)).Elem()
}

func (o SeveritySlackAliasOutput) ToSeveritySlackAliasOutput() SeveritySlackAliasOutput {
	return o
}

func (o SeveritySlackAliasOutput) ToSeveritySlackAliasOutputWithContext(ctx context.Context) SeveritySlackAliasOutput {
	return o
}

func (o SeveritySlackAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SeveritySlackAlias) string { return v.Id }).(pulumi.StringOutput)
}

func (o SeveritySlackAliasOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SeveritySlackAlias) string { return v.Name }).(pulumi.StringOutput)
}

type SeveritySlackAliasArrayOutput struct{ *pulumi.OutputState }

func (SeveritySlackAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SeveritySlackAlias)(nil)).Elem()
}

func (o SeveritySlackAliasArrayOutput) ToSeveritySlackAliasArrayOutput() SeveritySlackAliasArrayOutput {
	return o
}

func (o SeveritySlackAliasArrayOutput) ToSeveritySlackAliasArrayOutputWithContext(ctx context.Context) SeveritySlackAliasArrayOutput {
	return o
}

func (o SeveritySlackAliasArrayOutput) Index(i pulumi.IntInput) SeveritySlackAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SeveritySlackAlias {
		return vs[0].([]SeveritySlackAlias)[vs[1].(int)]
	}).(SeveritySlackAliasOutput)
}

type SeveritySlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// SeveritySlackChannelInput is an input type that accepts SeveritySlackChannelArgs and SeveritySlackChannelOutput values.
// You can construct a concrete instance of `SeveritySlackChannelInput` via:
//
//	SeveritySlackChannelArgs{...}
type SeveritySlackChannelInput interface {
	pulumi.Input

	ToSeveritySlackChannelOutput() SeveritySlackChannelOutput
	ToSeveritySlackChannelOutputWithContext(context.Context) SeveritySlackChannelOutput
}

type SeveritySlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (SeveritySlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SeveritySlackChannel)(nil)).Elem()
}

func (i SeveritySlackChannelArgs) ToSeveritySlackChannelOutput() SeveritySlackChannelOutput {
	return i.ToSeveritySlackChannelOutputWithContext(context.Background())
}

func (i SeveritySlackChannelArgs) ToSeveritySlackChannelOutputWithContext(ctx context.Context) SeveritySlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SeveritySlackChannelOutput)
}

// SeveritySlackChannelArrayInput is an input type that accepts SeveritySlackChannelArray and SeveritySlackChannelArrayOutput values.
// You can construct a concrete instance of `SeveritySlackChannelArrayInput` via:
//
//	SeveritySlackChannelArray{ SeveritySlackChannelArgs{...} }
type SeveritySlackChannelArrayInput interface {
	pulumi.Input

	ToSeveritySlackChannelArrayOutput() SeveritySlackChannelArrayOutput
	ToSeveritySlackChannelArrayOutputWithContext(context.Context) SeveritySlackChannelArrayOutput
}

type SeveritySlackChannelArray []SeveritySlackChannelInput

func (SeveritySlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SeveritySlackChannel)(nil)).Elem()
}

func (i SeveritySlackChannelArray) ToSeveritySlackChannelArrayOutput() SeveritySlackChannelArrayOutput {
	return i.ToSeveritySlackChannelArrayOutputWithContext(context.Background())
}

func (i SeveritySlackChannelArray) ToSeveritySlackChannelArrayOutputWithContext(ctx context.Context) SeveritySlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SeveritySlackChannelArrayOutput)
}

type SeveritySlackChannelOutput struct{ *pulumi.OutputState }

func (SeveritySlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SeveritySlackChannel)(nil)).Elem()
}

func (o SeveritySlackChannelOutput) ToSeveritySlackChannelOutput() SeveritySlackChannelOutput {
	return o
}

func (o SeveritySlackChannelOutput) ToSeveritySlackChannelOutputWithContext(ctx context.Context) SeveritySlackChannelOutput {
	return o
}

func (o SeveritySlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SeveritySlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o SeveritySlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SeveritySlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type SeveritySlackChannelArrayOutput struct{ *pulumi.OutputState }

func (SeveritySlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SeveritySlackChannel)(nil)).Elem()
}

func (o SeveritySlackChannelArrayOutput) ToSeveritySlackChannelArrayOutput() SeveritySlackChannelArrayOutput {
	return o
}

func (o SeveritySlackChannelArrayOutput) ToSeveritySlackChannelArrayOutputWithContext(ctx context.Context) SeveritySlackChannelArrayOutput {
	return o
}

func (o SeveritySlackChannelArrayOutput) Index(i pulumi.IntInput) SeveritySlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SeveritySlackChannel {
		return vs[0].([]SeveritySlackChannel)[vs[1].(int)]
	}).(SeveritySlackChannelOutput)
}

type TeamSlackAlias struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// TeamSlackAliasInput is an input type that accepts TeamSlackAliasArgs and TeamSlackAliasOutput values.
// You can construct a concrete instance of `TeamSlackAliasInput` via:
//
//	TeamSlackAliasArgs{...}
type TeamSlackAliasInput interface {
	pulumi.Input

	ToTeamSlackAliasOutput() TeamSlackAliasOutput
	ToTeamSlackAliasOutputWithContext(context.Context) TeamSlackAliasOutput
}

type TeamSlackAliasArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (TeamSlackAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamSlackAlias)(nil)).Elem()
}

func (i TeamSlackAliasArgs) ToTeamSlackAliasOutput() TeamSlackAliasOutput {
	return i.ToTeamSlackAliasOutputWithContext(context.Background())
}

func (i TeamSlackAliasArgs) ToTeamSlackAliasOutputWithContext(ctx context.Context) TeamSlackAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamSlackAliasOutput)
}

// TeamSlackAliasArrayInput is an input type that accepts TeamSlackAliasArray and TeamSlackAliasArrayOutput values.
// You can construct a concrete instance of `TeamSlackAliasArrayInput` via:
//
//	TeamSlackAliasArray{ TeamSlackAliasArgs{...} }
type TeamSlackAliasArrayInput interface {
	pulumi.Input

	ToTeamSlackAliasArrayOutput() TeamSlackAliasArrayOutput
	ToTeamSlackAliasArrayOutputWithContext(context.Context) TeamSlackAliasArrayOutput
}

type TeamSlackAliasArray []TeamSlackAliasInput

func (TeamSlackAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TeamSlackAlias)(nil)).Elem()
}

func (i TeamSlackAliasArray) ToTeamSlackAliasArrayOutput() TeamSlackAliasArrayOutput {
	return i.ToTeamSlackAliasArrayOutputWithContext(context.Background())
}

func (i TeamSlackAliasArray) ToTeamSlackAliasArrayOutputWithContext(ctx context.Context) TeamSlackAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamSlackAliasArrayOutput)
}

type TeamSlackAliasOutput struct{ *pulumi.OutputState }

func (TeamSlackAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamSlackAlias)(nil)).Elem()
}

func (o TeamSlackAliasOutput) ToTeamSlackAliasOutput() TeamSlackAliasOutput {
	return o
}

func (o TeamSlackAliasOutput) ToTeamSlackAliasOutputWithContext(ctx context.Context) TeamSlackAliasOutput {
	return o
}

func (o TeamSlackAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TeamSlackAlias) string { return v.Id }).(pulumi.StringOutput)
}

func (o TeamSlackAliasOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TeamSlackAlias) string { return v.Name }).(pulumi.StringOutput)
}

type TeamSlackAliasArrayOutput struct{ *pulumi.OutputState }

func (TeamSlackAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TeamSlackAlias)(nil)).Elem()
}

func (o TeamSlackAliasArrayOutput) ToTeamSlackAliasArrayOutput() TeamSlackAliasArrayOutput {
	return o
}

func (o TeamSlackAliasArrayOutput) ToTeamSlackAliasArrayOutputWithContext(ctx context.Context) TeamSlackAliasArrayOutput {
	return o
}

func (o TeamSlackAliasArrayOutput) Index(i pulumi.IntInput) TeamSlackAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TeamSlackAlias {
		return vs[0].([]TeamSlackAlias)[vs[1].(int)]
	}).(TeamSlackAliasOutput)
}

type TeamSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// TeamSlackChannelInput is an input type that accepts TeamSlackChannelArgs and TeamSlackChannelOutput values.
// You can construct a concrete instance of `TeamSlackChannelInput` via:
//
//	TeamSlackChannelArgs{...}
type TeamSlackChannelInput interface {
	pulumi.Input

	ToTeamSlackChannelOutput() TeamSlackChannelOutput
	ToTeamSlackChannelOutputWithContext(context.Context) TeamSlackChannelOutput
}

type TeamSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (TeamSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamSlackChannel)(nil)).Elem()
}

func (i TeamSlackChannelArgs) ToTeamSlackChannelOutput() TeamSlackChannelOutput {
	return i.ToTeamSlackChannelOutputWithContext(context.Background())
}

func (i TeamSlackChannelArgs) ToTeamSlackChannelOutputWithContext(ctx context.Context) TeamSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamSlackChannelOutput)
}

// TeamSlackChannelArrayInput is an input type that accepts TeamSlackChannelArray and TeamSlackChannelArrayOutput values.
// You can construct a concrete instance of `TeamSlackChannelArrayInput` via:
//
//	TeamSlackChannelArray{ TeamSlackChannelArgs{...} }
type TeamSlackChannelArrayInput interface {
	pulumi.Input

	ToTeamSlackChannelArrayOutput() TeamSlackChannelArrayOutput
	ToTeamSlackChannelArrayOutputWithContext(context.Context) TeamSlackChannelArrayOutput
}

type TeamSlackChannelArray []TeamSlackChannelInput

func (TeamSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TeamSlackChannel)(nil)).Elem()
}

func (i TeamSlackChannelArray) ToTeamSlackChannelArrayOutput() TeamSlackChannelArrayOutput {
	return i.ToTeamSlackChannelArrayOutputWithContext(context.Background())
}

func (i TeamSlackChannelArray) ToTeamSlackChannelArrayOutputWithContext(ctx context.Context) TeamSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamSlackChannelArrayOutput)
}

type TeamSlackChannelOutput struct{ *pulumi.OutputState }

func (TeamSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamSlackChannel)(nil)).Elem()
}

func (o TeamSlackChannelOutput) ToTeamSlackChannelOutput() TeamSlackChannelOutput {
	return o
}

func (o TeamSlackChannelOutput) ToTeamSlackChannelOutputWithContext(ctx context.Context) TeamSlackChannelOutput {
	return o
}

func (o TeamSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TeamSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o TeamSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TeamSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type TeamSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (TeamSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TeamSlackChannel)(nil)).Elem()
}

func (o TeamSlackChannelArrayOutput) ToTeamSlackChannelArrayOutput() TeamSlackChannelArrayOutput {
	return o
}

func (o TeamSlackChannelArrayOutput) ToTeamSlackChannelArrayOutputWithContext(ctx context.Context) TeamSlackChannelArrayOutput {
	return o
}

func (o TeamSlackChannelArrayOutput) Index(i pulumi.IntInput) TeamSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TeamSlackChannel {
		return vs[0].([]TeamSlackChannel)[vs[1].(int)]
	}).(TeamSlackChannelOutput)
}

type WorkflowActionItemTriggerParams struct {
	// Value must be one off `ALL`, `ANY`, `NONE`.
	IncidentActionItemCondition *string `pulumi:"incidentActionItemCondition"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentActionItemConditionGroup *string `pulumi:"incidentActionItemConditionGroup"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentActionItemConditionKind *string `pulumi:"incidentActionItemConditionKind"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentActionItemConditionPriority *string `pulumi:"incidentActionItemConditionPriority"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentActionItemConditionStatus *string  `pulumi:"incidentActionItemConditionStatus"`
	IncidentActionItemGroupIds        []string `pulumi:"incidentActionItemGroupIds"`
	// Value must be one of `task`, `followUp`.
	IncidentActionItemKinds []string `pulumi:"incidentActionItemKinds"`
	// Value must be one of `high`, `medium`, `low`.
	IncidentActionItemPriorities []string `pulumi:"incidentActionItemPriorities"`
	// Value must be one of `open`, `inProgress`, `cancelled`, `done`.
	IncidentActionItemStatuses []string `pulumi:"incidentActionItemStatuses"`
	// Value must be one off `ALL`, `ANY`, `NONE`.
	IncidentCondition               *string `pulumi:"incidentCondition"`
	IncidentConditionAcknowledgedAt *string `pulumi:"incidentConditionAcknowledgedAt"`
	IncidentConditionDetectedAt     *string `pulumi:"incidentConditionDetectedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionEnvironment *string `pulumi:"incidentConditionEnvironment"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionFunctionality *string `pulumi:"incidentConditionFunctionality"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionGroup *string `pulumi:"incidentConditionGroup"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionIncidentRoles *string `pulumi:"incidentConditionIncidentRoles"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionIncidentType *string `pulumi:"incidentConditionIncidentType"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionKind        *string `pulumi:"incidentConditionKind"`
	IncidentConditionMitigatedAt *string `pulumi:"incidentConditionMitigatedAt"`
	IncidentConditionResolvedAt  *string `pulumi:"incidentConditionResolvedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionService *string `pulumi:"incidentConditionService"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionSeverity  *string `pulumi:"incidentConditionSeverity"`
	IncidentConditionStartedAt *string `pulumi:"incidentConditionStartedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionStatus  *string `pulumi:"incidentConditionStatus"`
	IncidentConditionSummary *string `pulumi:"incidentConditionSummary"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionVisibility   *string `pulumi:"incidentConditionVisibility"`
	IncidentConditionalInactivity *string `pulumi:"incidentConditionalInactivity"`
	// ex. 10 min, 1h, 3 days, 2 weeks
	IncidentInactivityDuration *string `pulumi:"incidentInactivityDuration"`
	// Value must be one of `test`, `testSub`, `example`, `exampleSub`, `normal`, `normalSub`, `backfilled`, `scheduled`.
	IncidentKinds []string `pulumi:"incidentKinds"`
	// Value must be one of `inTriage`, `started`, `detected`, `acknowledged`, `mitigated`, `resolved`, `cancelled`, `scheduled`, `inProgress`, `completed`.
	IncidentStatuses     []string `pulumi:"incidentStatuses"`
	IncidentVisibilities []string `pulumi:"incidentVisibilities"`
	// Value must be one off `actionItem`.
	TriggerType *string `pulumi:"triggerType"`
	// Actions that trigger the workflow. One of custom*fields.\n\n.updated, incident*updated, action*item*created, action*item*updated, assigned*user*updated, summary*updated, description*updated, status*updated, priority*updated, due*date*updated, teams*updated, slack*command
	Triggers []string `pulumi:"triggers"`
}

// WorkflowActionItemTriggerParamsInput is an input type that accepts WorkflowActionItemTriggerParamsArgs and WorkflowActionItemTriggerParamsOutput values.
// You can construct a concrete instance of `WorkflowActionItemTriggerParamsInput` via:
//
//	WorkflowActionItemTriggerParamsArgs{...}
type WorkflowActionItemTriggerParamsInput interface {
	pulumi.Input

	ToWorkflowActionItemTriggerParamsOutput() WorkflowActionItemTriggerParamsOutput
	ToWorkflowActionItemTriggerParamsOutputWithContext(context.Context) WorkflowActionItemTriggerParamsOutput
}

type WorkflowActionItemTriggerParamsArgs struct {
	// Value must be one off `ALL`, `ANY`, `NONE`.
	IncidentActionItemCondition pulumi.StringPtrInput `pulumi:"incidentActionItemCondition"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentActionItemConditionGroup pulumi.StringPtrInput `pulumi:"incidentActionItemConditionGroup"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentActionItemConditionKind pulumi.StringPtrInput `pulumi:"incidentActionItemConditionKind"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentActionItemConditionPriority pulumi.StringPtrInput `pulumi:"incidentActionItemConditionPriority"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentActionItemConditionStatus pulumi.StringPtrInput   `pulumi:"incidentActionItemConditionStatus"`
	IncidentActionItemGroupIds        pulumi.StringArrayInput `pulumi:"incidentActionItemGroupIds"`
	// Value must be one of `task`, `followUp`.
	IncidentActionItemKinds pulumi.StringArrayInput `pulumi:"incidentActionItemKinds"`
	// Value must be one of `high`, `medium`, `low`.
	IncidentActionItemPriorities pulumi.StringArrayInput `pulumi:"incidentActionItemPriorities"`
	// Value must be one of `open`, `inProgress`, `cancelled`, `done`.
	IncidentActionItemStatuses pulumi.StringArrayInput `pulumi:"incidentActionItemStatuses"`
	// Value must be one off `ALL`, `ANY`, `NONE`.
	IncidentCondition               pulumi.StringPtrInput `pulumi:"incidentCondition"`
	IncidentConditionAcknowledgedAt pulumi.StringPtrInput `pulumi:"incidentConditionAcknowledgedAt"`
	IncidentConditionDetectedAt     pulumi.StringPtrInput `pulumi:"incidentConditionDetectedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionEnvironment pulumi.StringPtrInput `pulumi:"incidentConditionEnvironment"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionFunctionality pulumi.StringPtrInput `pulumi:"incidentConditionFunctionality"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionGroup pulumi.StringPtrInput `pulumi:"incidentConditionGroup"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionIncidentRoles pulumi.StringPtrInput `pulumi:"incidentConditionIncidentRoles"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionIncidentType pulumi.StringPtrInput `pulumi:"incidentConditionIncidentType"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionKind        pulumi.StringPtrInput `pulumi:"incidentConditionKind"`
	IncidentConditionMitigatedAt pulumi.StringPtrInput `pulumi:"incidentConditionMitigatedAt"`
	IncidentConditionResolvedAt  pulumi.StringPtrInput `pulumi:"incidentConditionResolvedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionService pulumi.StringPtrInput `pulumi:"incidentConditionService"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionSeverity  pulumi.StringPtrInput `pulumi:"incidentConditionSeverity"`
	IncidentConditionStartedAt pulumi.StringPtrInput `pulumi:"incidentConditionStartedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionStatus  pulumi.StringPtrInput `pulumi:"incidentConditionStatus"`
	IncidentConditionSummary pulumi.StringPtrInput `pulumi:"incidentConditionSummary"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionVisibility   pulumi.StringPtrInput `pulumi:"incidentConditionVisibility"`
	IncidentConditionalInactivity pulumi.StringPtrInput `pulumi:"incidentConditionalInactivity"`
	// ex. 10 min, 1h, 3 days, 2 weeks
	IncidentInactivityDuration pulumi.StringPtrInput `pulumi:"incidentInactivityDuration"`
	// Value must be one of `test`, `testSub`, `example`, `exampleSub`, `normal`, `normalSub`, `backfilled`, `scheduled`.
	IncidentKinds pulumi.StringArrayInput `pulumi:"incidentKinds"`
	// Value must be one of `inTriage`, `started`, `detected`, `acknowledged`, `mitigated`, `resolved`, `cancelled`, `scheduled`, `inProgress`, `completed`.
	IncidentStatuses     pulumi.StringArrayInput `pulumi:"incidentStatuses"`
	IncidentVisibilities pulumi.StringArrayInput `pulumi:"incidentVisibilities"`
	// Value must be one off `actionItem`.
	TriggerType pulumi.StringPtrInput `pulumi:"triggerType"`
	// Actions that trigger the workflow. One of custom*fields.\n\n.updated, incident*updated, action*item*created, action*item*updated, assigned*user*updated, summary*updated, description*updated, status*updated, priority*updated, due*date*updated, teams*updated, slack*command
	Triggers pulumi.StringArrayInput `pulumi:"triggers"`
}

func (WorkflowActionItemTriggerParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowActionItemTriggerParams)(nil)).Elem()
}

func (i WorkflowActionItemTriggerParamsArgs) ToWorkflowActionItemTriggerParamsOutput() WorkflowActionItemTriggerParamsOutput {
	return i.ToWorkflowActionItemTriggerParamsOutputWithContext(context.Background())
}

func (i WorkflowActionItemTriggerParamsArgs) ToWorkflowActionItemTriggerParamsOutputWithContext(ctx context.Context) WorkflowActionItemTriggerParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowActionItemTriggerParamsOutput)
}

func (i WorkflowActionItemTriggerParamsArgs) ToWorkflowActionItemTriggerParamsPtrOutput() WorkflowActionItemTriggerParamsPtrOutput {
	return i.ToWorkflowActionItemTriggerParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowActionItemTriggerParamsArgs) ToWorkflowActionItemTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowActionItemTriggerParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowActionItemTriggerParamsOutput).ToWorkflowActionItemTriggerParamsPtrOutputWithContext(ctx)
}

// WorkflowActionItemTriggerParamsPtrInput is an input type that accepts WorkflowActionItemTriggerParamsArgs, WorkflowActionItemTriggerParamsPtr and WorkflowActionItemTriggerParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowActionItemTriggerParamsPtrInput` via:
//
//	        WorkflowActionItemTriggerParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowActionItemTriggerParamsPtrInput interface {
	pulumi.Input

	ToWorkflowActionItemTriggerParamsPtrOutput() WorkflowActionItemTriggerParamsPtrOutput
	ToWorkflowActionItemTriggerParamsPtrOutputWithContext(context.Context) WorkflowActionItemTriggerParamsPtrOutput
}

type workflowActionItemTriggerParamsPtrType WorkflowActionItemTriggerParamsArgs

func WorkflowActionItemTriggerParamsPtr(v *WorkflowActionItemTriggerParamsArgs) WorkflowActionItemTriggerParamsPtrInput {
	return (*workflowActionItemTriggerParamsPtrType)(v)
}

func (*workflowActionItemTriggerParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowActionItemTriggerParams)(nil)).Elem()
}

func (i *workflowActionItemTriggerParamsPtrType) ToWorkflowActionItemTriggerParamsPtrOutput() WorkflowActionItemTriggerParamsPtrOutput {
	return i.ToWorkflowActionItemTriggerParamsPtrOutputWithContext(context.Background())
}

func (i *workflowActionItemTriggerParamsPtrType) ToWorkflowActionItemTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowActionItemTriggerParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowActionItemTriggerParamsPtrOutput)
}

type WorkflowActionItemTriggerParamsOutput struct{ *pulumi.OutputState }

func (WorkflowActionItemTriggerParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowActionItemTriggerParams)(nil)).Elem()
}

func (o WorkflowActionItemTriggerParamsOutput) ToWorkflowActionItemTriggerParamsOutput() WorkflowActionItemTriggerParamsOutput {
	return o
}

func (o WorkflowActionItemTriggerParamsOutput) ToWorkflowActionItemTriggerParamsOutputWithContext(ctx context.Context) WorkflowActionItemTriggerParamsOutput {
	return o
}

func (o WorkflowActionItemTriggerParamsOutput) ToWorkflowActionItemTriggerParamsPtrOutput() WorkflowActionItemTriggerParamsPtrOutput {
	return o.ToWorkflowActionItemTriggerParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowActionItemTriggerParamsOutput) ToWorkflowActionItemTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowActionItemTriggerParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowActionItemTriggerParams) *WorkflowActionItemTriggerParams {
		return &v
	}).(WorkflowActionItemTriggerParamsPtrOutput)
}

// Value must be one off `ALL`, `ANY`, `NONE`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentActionItemCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentActionItemCondition }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentActionItemConditionGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentActionItemConditionGroup }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentActionItemConditionKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentActionItemConditionKind }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentActionItemConditionPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentActionItemConditionPriority }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentActionItemConditionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentActionItemConditionStatus }).(pulumi.StringPtrOutput)
}

func (o WorkflowActionItemTriggerParamsOutput) IncidentActionItemGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) []string { return v.IncidentActionItemGroupIds }).(pulumi.StringArrayOutput)
}

// Value must be one of `task`, `followUp`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentActionItemKinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) []string { return v.IncidentActionItemKinds }).(pulumi.StringArrayOutput)
}

// Value must be one of `high`, `medium`, `low`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentActionItemPriorities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) []string { return v.IncidentActionItemPriorities }).(pulumi.StringArrayOutput)
}

// Value must be one of `open`, `inProgress`, `cancelled`, `done`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentActionItemStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) []string { return v.IncidentActionItemStatuses }).(pulumi.StringArrayOutput)
}

// Value must be one off `ALL`, `ANY`, `NONE`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentCondition }).(pulumi.StringPtrOutput)
}

func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionAcknowledgedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionAcknowledgedAt }).(pulumi.StringPtrOutput)
}

func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionDetectedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionDetectedAt }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionEnvironment }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionFunctionality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionFunctionality }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionGroup }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionIncidentRoles() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionIncidentRoles }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionIncidentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionIncidentType }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionKind }).(pulumi.StringPtrOutput)
}

func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionMitigatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionMitigatedAt }).(pulumi.StringPtrOutput)
}

func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionResolvedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionResolvedAt }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionService }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionSeverity }).(pulumi.StringPtrOutput)
}

func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionStartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionStartedAt }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionStatus }).(pulumi.StringPtrOutput)
}

func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionSummary }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionVisibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionVisibility }).(pulumi.StringPtrOutput)
}

func (o WorkflowActionItemTriggerParamsOutput) IncidentConditionalInactivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentConditionalInactivity }).(pulumi.StringPtrOutput)
}

// ex. 10 min, 1h, 3 days, 2 weeks
func (o WorkflowActionItemTriggerParamsOutput) IncidentInactivityDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.IncidentInactivityDuration }).(pulumi.StringPtrOutput)
}

// Value must be one of `test`, `testSub`, `example`, `exampleSub`, `normal`, `normalSub`, `backfilled`, `scheduled`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentKinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) []string { return v.IncidentKinds }).(pulumi.StringArrayOutput)
}

// Value must be one of `inTriage`, `started`, `detected`, `acknowledged`, `mitigated`, `resolved`, `cancelled`, `scheduled`, `inProgress`, `completed`.
func (o WorkflowActionItemTriggerParamsOutput) IncidentStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) []string { return v.IncidentStatuses }).(pulumi.StringArrayOutput)
}

func (o WorkflowActionItemTriggerParamsOutput) IncidentVisibilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) []string { return v.IncidentVisibilities }).(pulumi.StringArrayOutput)
}

// Value must be one off `actionItem`.
func (o WorkflowActionItemTriggerParamsOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) *string { return v.TriggerType }).(pulumi.StringPtrOutput)
}

// Actions that trigger the workflow. One of custom*fields.\n\n.updated, incident*updated, action*item*created, action*item*updated, assigned*user*updated, summary*updated, description*updated, status*updated, priority*updated, due*date*updated, teams*updated, slack*command
func (o WorkflowActionItemTriggerParamsOutput) Triggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowActionItemTriggerParams) []string { return v.Triggers }).(pulumi.StringArrayOutput)
}

type WorkflowActionItemTriggerParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowActionItemTriggerParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowActionItemTriggerParams)(nil)).Elem()
}

func (o WorkflowActionItemTriggerParamsPtrOutput) ToWorkflowActionItemTriggerParamsPtrOutput() WorkflowActionItemTriggerParamsPtrOutput {
	return o
}

func (o WorkflowActionItemTriggerParamsPtrOutput) ToWorkflowActionItemTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowActionItemTriggerParamsPtrOutput {
	return o
}

func (o WorkflowActionItemTriggerParamsPtrOutput) Elem() WorkflowActionItemTriggerParamsOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) WorkflowActionItemTriggerParams {
		if v != nil {
			return *v
		}
		var ret WorkflowActionItemTriggerParams
		return ret
	}).(WorkflowActionItemTriggerParamsOutput)
}

// Value must be one off `ALL`, `ANY`, `NONE`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentActionItemCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentActionItemCondition
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentActionItemConditionGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentActionItemConditionGroup
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentActionItemConditionKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentActionItemConditionKind
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentActionItemConditionPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentActionItemConditionPriority
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentActionItemConditionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentActionItemConditionStatus
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentActionItemGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.IncidentActionItemGroupIds
	}).(pulumi.StringArrayOutput)
}

// Value must be one of `task`, `followUp`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentActionItemKinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.IncidentActionItemKinds
	}).(pulumi.StringArrayOutput)
}

// Value must be one of `high`, `medium`, `low`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentActionItemPriorities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.IncidentActionItemPriorities
	}).(pulumi.StringArrayOutput)
}

// Value must be one of `open`, `inProgress`, `cancelled`, `done`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentActionItemStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.IncidentActionItemStatuses
	}).(pulumi.StringArrayOutput)
}

// Value must be one off `ALL`, `ANY`, `NONE`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentCondition
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionAcknowledgedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionAcknowledgedAt
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionDetectedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionDetectedAt
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionEnvironment
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionFunctionality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionFunctionality
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionGroup
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionIncidentRoles() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionIncidentRoles
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionIncidentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionIncidentType
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionKind
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionMitigatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionMitigatedAt
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionResolvedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionResolvedAt
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionService
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionSeverity
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionStartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionStartedAt
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionStatus
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionSummary
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionVisibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionVisibility
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentConditionalInactivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionalInactivity
	}).(pulumi.StringPtrOutput)
}

// ex. 10 min, 1h, 3 days, 2 weeks
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentInactivityDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentInactivityDuration
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `test`, `testSub`, `example`, `exampleSub`, `normal`, `normalSub`, `backfilled`, `scheduled`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentKinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.IncidentKinds
	}).(pulumi.StringArrayOutput)
}

// Value must be one of `inTriage`, `started`, `detected`, `acknowledged`, `mitigated`, `resolved`, `cancelled`, `scheduled`, `inProgress`, `completed`.
func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.IncidentStatuses
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowActionItemTriggerParamsPtrOutput) IncidentVisibilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.IncidentVisibilities
	}).(pulumi.StringArrayOutput)
}

// Value must be one off `actionItem`.
func (o WorkflowActionItemTriggerParamsPtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.TriggerType
	}).(pulumi.StringPtrOutput)
}

// Actions that trigger the workflow. One of custom*fields.\n\n.updated, incident*updated, action*item*created, action*item*updated, assigned*user*updated, summary*updated, description*updated, status*updated, priority*updated, due*date*updated, teams*updated, slack*command
func (o WorkflowActionItemTriggerParamsPtrOutput) Triggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowActionItemTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(pulumi.StringArrayOutput)
}

type WorkflowAlertTriggerParams struct {
	// Value must be one off `ALL`, `ANY`, `NONE`.
	AlertCondition *string `pulumi:"alertCondition"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	AlertConditionLabel *string `pulumi:"alertConditionLabel"`
	// Value must be one of true or false
	AlertConditionLabelUseRegexp *bool `pulumi:"alertConditionLabelUseRegexp"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	AlertConditionPayload *string `pulumi:"alertConditionPayload"`
	// Value must be one of true or false
	AlertConditionPayloadUseRegexp *bool `pulumi:"alertConditionPayloadUseRegexp"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	AlertConditionSource *string `pulumi:"alertConditionSource"`
	// Value must be one of true or false
	AlertConditionSourceUseRegexp *bool    `pulumi:"alertConditionSourceUseRegexp"`
	AlertLabels                   []string `pulumi:"alertLabels"`
	AlertPayloads                 []string `pulumi:"alertPayloads"`
	// You can use jsonpath syntax. eg: $.incident.teams[*]
	AlertQueryPayload *string  `pulumi:"alertQueryPayload"`
	AlertSources      []string `pulumi:"alertSources"`
	// Value must be one off `alert`.
	TriggerType *string `pulumi:"triggerType"`
	// Actions that trigger the workflow. Value must be one of `alertCreated`.
	Triggers []string `pulumi:"triggers"`
}

// WorkflowAlertTriggerParamsInput is an input type that accepts WorkflowAlertTriggerParamsArgs and WorkflowAlertTriggerParamsOutput values.
// You can construct a concrete instance of `WorkflowAlertTriggerParamsInput` via:
//
//	WorkflowAlertTriggerParamsArgs{...}
type WorkflowAlertTriggerParamsInput interface {
	pulumi.Input

	ToWorkflowAlertTriggerParamsOutput() WorkflowAlertTriggerParamsOutput
	ToWorkflowAlertTriggerParamsOutputWithContext(context.Context) WorkflowAlertTriggerParamsOutput
}

type WorkflowAlertTriggerParamsArgs struct {
	// Value must be one off `ALL`, `ANY`, `NONE`.
	AlertCondition pulumi.StringPtrInput `pulumi:"alertCondition"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	AlertConditionLabel pulumi.StringPtrInput `pulumi:"alertConditionLabel"`
	// Value must be one of true or false
	AlertConditionLabelUseRegexp pulumi.BoolPtrInput `pulumi:"alertConditionLabelUseRegexp"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	AlertConditionPayload pulumi.StringPtrInput `pulumi:"alertConditionPayload"`
	// Value must be one of true or false
	AlertConditionPayloadUseRegexp pulumi.BoolPtrInput `pulumi:"alertConditionPayloadUseRegexp"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	AlertConditionSource pulumi.StringPtrInput `pulumi:"alertConditionSource"`
	// Value must be one of true or false
	AlertConditionSourceUseRegexp pulumi.BoolPtrInput     `pulumi:"alertConditionSourceUseRegexp"`
	AlertLabels                   pulumi.StringArrayInput `pulumi:"alertLabels"`
	AlertPayloads                 pulumi.StringArrayInput `pulumi:"alertPayloads"`
	// You can use jsonpath syntax. eg: $.incident.teams[*]
	AlertQueryPayload pulumi.StringPtrInput   `pulumi:"alertQueryPayload"`
	AlertSources      pulumi.StringArrayInput `pulumi:"alertSources"`
	// Value must be one off `alert`.
	TriggerType pulumi.StringPtrInput `pulumi:"triggerType"`
	// Actions that trigger the workflow. Value must be one of `alertCreated`.
	Triggers pulumi.StringArrayInput `pulumi:"triggers"`
}

func (WorkflowAlertTriggerParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAlertTriggerParams)(nil)).Elem()
}

func (i WorkflowAlertTriggerParamsArgs) ToWorkflowAlertTriggerParamsOutput() WorkflowAlertTriggerParamsOutput {
	return i.ToWorkflowAlertTriggerParamsOutputWithContext(context.Background())
}

func (i WorkflowAlertTriggerParamsArgs) ToWorkflowAlertTriggerParamsOutputWithContext(ctx context.Context) WorkflowAlertTriggerParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAlertTriggerParamsOutput)
}

func (i WorkflowAlertTriggerParamsArgs) ToWorkflowAlertTriggerParamsPtrOutput() WorkflowAlertTriggerParamsPtrOutput {
	return i.ToWorkflowAlertTriggerParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowAlertTriggerParamsArgs) ToWorkflowAlertTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowAlertTriggerParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAlertTriggerParamsOutput).ToWorkflowAlertTriggerParamsPtrOutputWithContext(ctx)
}

// WorkflowAlertTriggerParamsPtrInput is an input type that accepts WorkflowAlertTriggerParamsArgs, WorkflowAlertTriggerParamsPtr and WorkflowAlertTriggerParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowAlertTriggerParamsPtrInput` via:
//
//	        WorkflowAlertTriggerParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowAlertTriggerParamsPtrInput interface {
	pulumi.Input

	ToWorkflowAlertTriggerParamsPtrOutput() WorkflowAlertTriggerParamsPtrOutput
	ToWorkflowAlertTriggerParamsPtrOutputWithContext(context.Context) WorkflowAlertTriggerParamsPtrOutput
}

type workflowAlertTriggerParamsPtrType WorkflowAlertTriggerParamsArgs

func WorkflowAlertTriggerParamsPtr(v *WorkflowAlertTriggerParamsArgs) WorkflowAlertTriggerParamsPtrInput {
	return (*workflowAlertTriggerParamsPtrType)(v)
}

func (*workflowAlertTriggerParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAlertTriggerParams)(nil)).Elem()
}

func (i *workflowAlertTriggerParamsPtrType) ToWorkflowAlertTriggerParamsPtrOutput() WorkflowAlertTriggerParamsPtrOutput {
	return i.ToWorkflowAlertTriggerParamsPtrOutputWithContext(context.Background())
}

func (i *workflowAlertTriggerParamsPtrType) ToWorkflowAlertTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowAlertTriggerParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAlertTriggerParamsPtrOutput)
}

type WorkflowAlertTriggerParamsOutput struct{ *pulumi.OutputState }

func (WorkflowAlertTriggerParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAlertTriggerParams)(nil)).Elem()
}

func (o WorkflowAlertTriggerParamsOutput) ToWorkflowAlertTriggerParamsOutput() WorkflowAlertTriggerParamsOutput {
	return o
}

func (o WorkflowAlertTriggerParamsOutput) ToWorkflowAlertTriggerParamsOutputWithContext(ctx context.Context) WorkflowAlertTriggerParamsOutput {
	return o
}

func (o WorkflowAlertTriggerParamsOutput) ToWorkflowAlertTriggerParamsPtrOutput() WorkflowAlertTriggerParamsPtrOutput {
	return o.ToWorkflowAlertTriggerParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowAlertTriggerParamsOutput) ToWorkflowAlertTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowAlertTriggerParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowAlertTriggerParams) *WorkflowAlertTriggerParams {
		return &v
	}).(WorkflowAlertTriggerParamsPtrOutput)
}

// Value must be one off `ALL`, `ANY`, `NONE`.
func (o WorkflowAlertTriggerParamsOutput) AlertCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowAlertTriggerParams) *string { return v.AlertCondition }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowAlertTriggerParamsOutput) AlertConditionLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowAlertTriggerParams) *string { return v.AlertConditionLabel }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowAlertTriggerParamsOutput) AlertConditionLabelUseRegexp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowAlertTriggerParams) *bool { return v.AlertConditionLabelUseRegexp }).(pulumi.BoolPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowAlertTriggerParamsOutput) AlertConditionPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowAlertTriggerParams) *string { return v.AlertConditionPayload }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowAlertTriggerParamsOutput) AlertConditionPayloadUseRegexp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowAlertTriggerParams) *bool { return v.AlertConditionPayloadUseRegexp }).(pulumi.BoolPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowAlertTriggerParamsOutput) AlertConditionSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowAlertTriggerParams) *string { return v.AlertConditionSource }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowAlertTriggerParamsOutput) AlertConditionSourceUseRegexp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowAlertTriggerParams) *bool { return v.AlertConditionSourceUseRegexp }).(pulumi.BoolPtrOutput)
}

func (o WorkflowAlertTriggerParamsOutput) AlertLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowAlertTriggerParams) []string { return v.AlertLabels }).(pulumi.StringArrayOutput)
}

func (o WorkflowAlertTriggerParamsOutput) AlertPayloads() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowAlertTriggerParams) []string { return v.AlertPayloads }).(pulumi.StringArrayOutput)
}

// You can use jsonpath syntax. eg: $.incident.teams[*]
func (o WorkflowAlertTriggerParamsOutput) AlertQueryPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowAlertTriggerParams) *string { return v.AlertQueryPayload }).(pulumi.StringPtrOutput)
}

func (o WorkflowAlertTriggerParamsOutput) AlertSources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowAlertTriggerParams) []string { return v.AlertSources }).(pulumi.StringArrayOutput)
}

// Value must be one off `alert`.
func (o WorkflowAlertTriggerParamsOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowAlertTriggerParams) *string { return v.TriggerType }).(pulumi.StringPtrOutput)
}

// Actions that trigger the workflow. Value must be one of `alertCreated`.
func (o WorkflowAlertTriggerParamsOutput) Triggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowAlertTriggerParams) []string { return v.Triggers }).(pulumi.StringArrayOutput)
}

type WorkflowAlertTriggerParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowAlertTriggerParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAlertTriggerParams)(nil)).Elem()
}

func (o WorkflowAlertTriggerParamsPtrOutput) ToWorkflowAlertTriggerParamsPtrOutput() WorkflowAlertTriggerParamsPtrOutput {
	return o
}

func (o WorkflowAlertTriggerParamsPtrOutput) ToWorkflowAlertTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowAlertTriggerParamsPtrOutput {
	return o
}

func (o WorkflowAlertTriggerParamsPtrOutput) Elem() WorkflowAlertTriggerParamsOutput {
	return o.ApplyT(func(v *WorkflowAlertTriggerParams) WorkflowAlertTriggerParams {
		if v != nil {
			return *v
		}
		var ret WorkflowAlertTriggerParams
		return ret
	}).(WorkflowAlertTriggerParamsOutput)
}

// Value must be one off `ALL`, `ANY`, `NONE`.
func (o WorkflowAlertTriggerParamsPtrOutput) AlertCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowAlertTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.AlertCondition
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowAlertTriggerParamsPtrOutput) AlertConditionLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowAlertTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.AlertConditionLabel
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowAlertTriggerParamsPtrOutput) AlertConditionLabelUseRegexp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowAlertTriggerParams) *bool {
		if v == nil {
			return nil
		}
		return v.AlertConditionLabelUseRegexp
	}).(pulumi.BoolPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowAlertTriggerParamsPtrOutput) AlertConditionPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowAlertTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.AlertConditionPayload
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowAlertTriggerParamsPtrOutput) AlertConditionPayloadUseRegexp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowAlertTriggerParams) *bool {
		if v == nil {
			return nil
		}
		return v.AlertConditionPayloadUseRegexp
	}).(pulumi.BoolPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowAlertTriggerParamsPtrOutput) AlertConditionSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowAlertTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.AlertConditionSource
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowAlertTriggerParamsPtrOutput) AlertConditionSourceUseRegexp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowAlertTriggerParams) *bool {
		if v == nil {
			return nil
		}
		return v.AlertConditionSourceUseRegexp
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowAlertTriggerParamsPtrOutput) AlertLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowAlertTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.AlertLabels
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowAlertTriggerParamsPtrOutput) AlertPayloads() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowAlertTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.AlertPayloads
	}).(pulumi.StringArrayOutput)
}

// You can use jsonpath syntax. eg: $.incident.teams[*]
func (o WorkflowAlertTriggerParamsPtrOutput) AlertQueryPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowAlertTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.AlertQueryPayload
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowAlertTriggerParamsPtrOutput) AlertSources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowAlertTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.AlertSources
	}).(pulumi.StringArrayOutput)
}

// Value must be one off `alert`.
func (o WorkflowAlertTriggerParamsPtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowAlertTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.TriggerType
	}).(pulumi.StringPtrOutput)
}

// Actions that trigger the workflow. Value must be one of `alertCreated`.
func (o WorkflowAlertTriggerParamsPtrOutput) Triggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowAlertTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(pulumi.StringArrayOutput)
}

type WorkflowIncidentTriggerParams struct {
	// Value must be one off `ALL`, `ANY`, `NONE`.
	IncidentCondition               *string `pulumi:"incidentCondition"`
	IncidentConditionAcknowledgedAt *string `pulumi:"incidentConditionAcknowledgedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionCause      *string `pulumi:"incidentConditionCause"`
	IncidentConditionDetectedAt *string `pulumi:"incidentConditionDetectedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionEnvironment *string `pulumi:"incidentConditionEnvironment"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionFunctionality *string `pulumi:"incidentConditionFunctionality"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionGroup *string `pulumi:"incidentConditionGroup"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionIncidentRoles *string `pulumi:"incidentConditionIncidentRoles"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionIncidentType *string `pulumi:"incidentConditionIncidentType"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionKind        *string `pulumi:"incidentConditionKind"`
	IncidentConditionMitigatedAt *string `pulumi:"incidentConditionMitigatedAt"`
	IncidentConditionResolvedAt  *string `pulumi:"incidentConditionResolvedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionService *string `pulumi:"incidentConditionService"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionSeverity  *string `pulumi:"incidentConditionSeverity"`
	IncidentConditionStartedAt *string `pulumi:"incidentConditionStartedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionStatus  *string `pulumi:"incidentConditionStatus"`
	IncidentConditionSummary *string `pulumi:"incidentConditionSummary"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionVisibility   *string `pulumi:"incidentConditionVisibility"`
	IncidentConditionalInactivity *string `pulumi:"incidentConditionalInactivity"`
	// ex. 10 min, 1h, 3 days, 2 weeks
	IncidentInactivityDuration *string `pulumi:"incidentInactivityDuration"`
	// Value must be one of `test`, `testSub`, `example`, `exampleSub`, `normal`, `normalSub`, `backfilled`, `scheduled`.
	IncidentKinds []string `pulumi:"incidentKinds"`
	// [DEPRECATED] Use incident*condition*cause instead. Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentPostMortemConditionCause *string `pulumi:"incidentPostMortemConditionCause"`
	// Value must be one of `inTriage`, `started`, `detected`, `acknowledged`, `mitigated`, `resolved`, `cancelled`, `scheduled`, `inProgress`, `completed`.
	IncidentStatuses     []string `pulumi:"incidentStatuses"`
	IncidentVisibilities []string `pulumi:"incidentVisibilities"`
	// Value must be one off `incident`.
	TriggerType *string `pulumi:"triggerType"`
	// Actions that trigger the workflow. One of custom*fields.\n\n.updated, incident*in*triage, incident*created, incident*started, incident*updated, title*updated, summary*updated, status*updated, severity*updated, environments*added, environments*removed, environments*updated, incident*types*added, incident*types*removed, incident*types*updated, services*added, services*removed, services*updated, visibility*updated, functionalities*added, functionalities*removed, functionalities*updated, teams*added, teams*removed, teams*updated, causes*added, causes*removed, causes*updated, timeline*updated, status*page*timeline*updated, role*assignments*updated, role*assignments*added, role*assignments*removed, slack*command, slack*channel*created, slack*channel*converted, subscribers*updated, subscribers*added, subscribers*removed, user*joined*slack*channel, user*left*slack*channel
	Triggers []string `pulumi:"triggers"`
}

// WorkflowIncidentTriggerParamsInput is an input type that accepts WorkflowIncidentTriggerParamsArgs and WorkflowIncidentTriggerParamsOutput values.
// You can construct a concrete instance of `WorkflowIncidentTriggerParamsInput` via:
//
//	WorkflowIncidentTriggerParamsArgs{...}
type WorkflowIncidentTriggerParamsInput interface {
	pulumi.Input

	ToWorkflowIncidentTriggerParamsOutput() WorkflowIncidentTriggerParamsOutput
	ToWorkflowIncidentTriggerParamsOutputWithContext(context.Context) WorkflowIncidentTriggerParamsOutput
}

type WorkflowIncidentTriggerParamsArgs struct {
	// Value must be one off `ALL`, `ANY`, `NONE`.
	IncidentCondition               pulumi.StringPtrInput `pulumi:"incidentCondition"`
	IncidentConditionAcknowledgedAt pulumi.StringPtrInput `pulumi:"incidentConditionAcknowledgedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionCause      pulumi.StringPtrInput `pulumi:"incidentConditionCause"`
	IncidentConditionDetectedAt pulumi.StringPtrInput `pulumi:"incidentConditionDetectedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionEnvironment pulumi.StringPtrInput `pulumi:"incidentConditionEnvironment"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionFunctionality pulumi.StringPtrInput `pulumi:"incidentConditionFunctionality"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionGroup pulumi.StringPtrInput `pulumi:"incidentConditionGroup"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionIncidentRoles pulumi.StringPtrInput `pulumi:"incidentConditionIncidentRoles"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionIncidentType pulumi.StringPtrInput `pulumi:"incidentConditionIncidentType"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionKind        pulumi.StringPtrInput `pulumi:"incidentConditionKind"`
	IncidentConditionMitigatedAt pulumi.StringPtrInput `pulumi:"incidentConditionMitigatedAt"`
	IncidentConditionResolvedAt  pulumi.StringPtrInput `pulumi:"incidentConditionResolvedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionService pulumi.StringPtrInput `pulumi:"incidentConditionService"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionSeverity  pulumi.StringPtrInput `pulumi:"incidentConditionSeverity"`
	IncidentConditionStartedAt pulumi.StringPtrInput `pulumi:"incidentConditionStartedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionStatus  pulumi.StringPtrInput `pulumi:"incidentConditionStatus"`
	IncidentConditionSummary pulumi.StringPtrInput `pulumi:"incidentConditionSummary"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionVisibility   pulumi.StringPtrInput `pulumi:"incidentConditionVisibility"`
	IncidentConditionalInactivity pulumi.StringPtrInput `pulumi:"incidentConditionalInactivity"`
	// ex. 10 min, 1h, 3 days, 2 weeks
	IncidentInactivityDuration pulumi.StringPtrInput `pulumi:"incidentInactivityDuration"`
	// Value must be one of `test`, `testSub`, `example`, `exampleSub`, `normal`, `normalSub`, `backfilled`, `scheduled`.
	IncidentKinds pulumi.StringArrayInput `pulumi:"incidentKinds"`
	// [DEPRECATED] Use incident*condition*cause instead. Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentPostMortemConditionCause pulumi.StringPtrInput `pulumi:"incidentPostMortemConditionCause"`
	// Value must be one of `inTriage`, `started`, `detected`, `acknowledged`, `mitigated`, `resolved`, `cancelled`, `scheduled`, `inProgress`, `completed`.
	IncidentStatuses     pulumi.StringArrayInput `pulumi:"incidentStatuses"`
	IncidentVisibilities pulumi.StringArrayInput `pulumi:"incidentVisibilities"`
	// Value must be one off `incident`.
	TriggerType pulumi.StringPtrInput `pulumi:"triggerType"`
	// Actions that trigger the workflow. One of custom*fields.\n\n.updated, incident*in*triage, incident*created, incident*started, incident*updated, title*updated, summary*updated, status*updated, severity*updated, environments*added, environments*removed, environments*updated, incident*types*added, incident*types*removed, incident*types*updated, services*added, services*removed, services*updated, visibility*updated, functionalities*added, functionalities*removed, functionalities*updated, teams*added, teams*removed, teams*updated, causes*added, causes*removed, causes*updated, timeline*updated, status*page*timeline*updated, role*assignments*updated, role*assignments*added, role*assignments*removed, slack*command, slack*channel*created, slack*channel*converted, subscribers*updated, subscribers*added, subscribers*removed, user*joined*slack*channel, user*left*slack*channel
	Triggers pulumi.StringArrayInput `pulumi:"triggers"`
}

func (WorkflowIncidentTriggerParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowIncidentTriggerParams)(nil)).Elem()
}

func (i WorkflowIncidentTriggerParamsArgs) ToWorkflowIncidentTriggerParamsOutput() WorkflowIncidentTriggerParamsOutput {
	return i.ToWorkflowIncidentTriggerParamsOutputWithContext(context.Background())
}

func (i WorkflowIncidentTriggerParamsArgs) ToWorkflowIncidentTriggerParamsOutputWithContext(ctx context.Context) WorkflowIncidentTriggerParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowIncidentTriggerParamsOutput)
}

func (i WorkflowIncidentTriggerParamsArgs) ToWorkflowIncidentTriggerParamsPtrOutput() WorkflowIncidentTriggerParamsPtrOutput {
	return i.ToWorkflowIncidentTriggerParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowIncidentTriggerParamsArgs) ToWorkflowIncidentTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowIncidentTriggerParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowIncidentTriggerParamsOutput).ToWorkflowIncidentTriggerParamsPtrOutputWithContext(ctx)
}

// WorkflowIncidentTriggerParamsPtrInput is an input type that accepts WorkflowIncidentTriggerParamsArgs, WorkflowIncidentTriggerParamsPtr and WorkflowIncidentTriggerParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowIncidentTriggerParamsPtrInput` via:
//
//	        WorkflowIncidentTriggerParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowIncidentTriggerParamsPtrInput interface {
	pulumi.Input

	ToWorkflowIncidentTriggerParamsPtrOutput() WorkflowIncidentTriggerParamsPtrOutput
	ToWorkflowIncidentTriggerParamsPtrOutputWithContext(context.Context) WorkflowIncidentTriggerParamsPtrOutput
}

type workflowIncidentTriggerParamsPtrType WorkflowIncidentTriggerParamsArgs

func WorkflowIncidentTriggerParamsPtr(v *WorkflowIncidentTriggerParamsArgs) WorkflowIncidentTriggerParamsPtrInput {
	return (*workflowIncidentTriggerParamsPtrType)(v)
}

func (*workflowIncidentTriggerParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowIncidentTriggerParams)(nil)).Elem()
}

func (i *workflowIncidentTriggerParamsPtrType) ToWorkflowIncidentTriggerParamsPtrOutput() WorkflowIncidentTriggerParamsPtrOutput {
	return i.ToWorkflowIncidentTriggerParamsPtrOutputWithContext(context.Background())
}

func (i *workflowIncidentTriggerParamsPtrType) ToWorkflowIncidentTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowIncidentTriggerParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowIncidentTriggerParamsPtrOutput)
}

type WorkflowIncidentTriggerParamsOutput struct{ *pulumi.OutputState }

func (WorkflowIncidentTriggerParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowIncidentTriggerParams)(nil)).Elem()
}

func (o WorkflowIncidentTriggerParamsOutput) ToWorkflowIncidentTriggerParamsOutput() WorkflowIncidentTriggerParamsOutput {
	return o
}

func (o WorkflowIncidentTriggerParamsOutput) ToWorkflowIncidentTriggerParamsOutputWithContext(ctx context.Context) WorkflowIncidentTriggerParamsOutput {
	return o
}

func (o WorkflowIncidentTriggerParamsOutput) ToWorkflowIncidentTriggerParamsPtrOutput() WorkflowIncidentTriggerParamsPtrOutput {
	return o.ToWorkflowIncidentTriggerParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowIncidentTriggerParamsOutput) ToWorkflowIncidentTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowIncidentTriggerParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowIncidentTriggerParams) *WorkflowIncidentTriggerParams {
		return &v
	}).(WorkflowIncidentTriggerParamsPtrOutput)
}

// Value must be one off `ALL`, `ANY`, `NONE`.
func (o WorkflowIncidentTriggerParamsOutput) IncidentCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentCondition }).(pulumi.StringPtrOutput)
}

func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionAcknowledgedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionAcknowledgedAt }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionCause() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionCause }).(pulumi.StringPtrOutput)
}

func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionDetectedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionDetectedAt }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionEnvironment }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionFunctionality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionFunctionality }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionGroup }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionIncidentRoles() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionIncidentRoles }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionIncidentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionIncidentType }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionKind }).(pulumi.StringPtrOutput)
}

func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionMitigatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionMitigatedAt }).(pulumi.StringPtrOutput)
}

func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionResolvedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionResolvedAt }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionService }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionSeverity }).(pulumi.StringPtrOutput)
}

func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionStartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionStartedAt }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionStatus }).(pulumi.StringPtrOutput)
}

func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionSummary }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionVisibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionVisibility }).(pulumi.StringPtrOutput)
}

func (o WorkflowIncidentTriggerParamsOutput) IncidentConditionalInactivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentConditionalInactivity }).(pulumi.StringPtrOutput)
}

// ex. 10 min, 1h, 3 days, 2 weeks
func (o WorkflowIncidentTriggerParamsOutput) IncidentInactivityDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentInactivityDuration }).(pulumi.StringPtrOutput)
}

// Value must be one of `test`, `testSub`, `example`, `exampleSub`, `normal`, `normalSub`, `backfilled`, `scheduled`.
func (o WorkflowIncidentTriggerParamsOutput) IncidentKinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) []string { return v.IncidentKinds }).(pulumi.StringArrayOutput)
}

// [DEPRECATED] Use incident*condition*cause instead. Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsOutput) IncidentPostMortemConditionCause() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.IncidentPostMortemConditionCause }).(pulumi.StringPtrOutput)
}

// Value must be one of `inTriage`, `started`, `detected`, `acknowledged`, `mitigated`, `resolved`, `cancelled`, `scheduled`, `inProgress`, `completed`.
func (o WorkflowIncidentTriggerParamsOutput) IncidentStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) []string { return v.IncidentStatuses }).(pulumi.StringArrayOutput)
}

func (o WorkflowIncidentTriggerParamsOutput) IncidentVisibilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) []string { return v.IncidentVisibilities }).(pulumi.StringArrayOutput)
}

// Value must be one off `incident`.
func (o WorkflowIncidentTriggerParamsOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) *string { return v.TriggerType }).(pulumi.StringPtrOutput)
}

// Actions that trigger the workflow. One of custom*fields.\n\n.updated, incident*in*triage, incident*created, incident*started, incident*updated, title*updated, summary*updated, status*updated, severity*updated, environments*added, environments*removed, environments*updated, incident*types*added, incident*types*removed, incident*types*updated, services*added, services*removed, services*updated, visibility*updated, functionalities*added, functionalities*removed, functionalities*updated, teams*added, teams*removed, teams*updated, causes*added, causes*removed, causes*updated, timeline*updated, status*page*timeline*updated, role*assignments*updated, role*assignments*added, role*assignments*removed, slack*command, slack*channel*created, slack*channel*converted, subscribers*updated, subscribers*added, subscribers*removed, user*joined*slack*channel, user*left*slack*channel
func (o WorkflowIncidentTriggerParamsOutput) Triggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowIncidentTriggerParams) []string { return v.Triggers }).(pulumi.StringArrayOutput)
}

type WorkflowIncidentTriggerParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowIncidentTriggerParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowIncidentTriggerParams)(nil)).Elem()
}

func (o WorkflowIncidentTriggerParamsPtrOutput) ToWorkflowIncidentTriggerParamsPtrOutput() WorkflowIncidentTriggerParamsPtrOutput {
	return o
}

func (o WorkflowIncidentTriggerParamsPtrOutput) ToWorkflowIncidentTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowIncidentTriggerParamsPtrOutput {
	return o
}

func (o WorkflowIncidentTriggerParamsPtrOutput) Elem() WorkflowIncidentTriggerParamsOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) WorkflowIncidentTriggerParams {
		if v != nil {
			return *v
		}
		var ret WorkflowIncidentTriggerParams
		return ret
	}).(WorkflowIncidentTriggerParamsOutput)
}

// Value must be one off `ALL`, `ANY`, `NONE`.
func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentCondition
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionAcknowledgedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionAcknowledgedAt
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionCause() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionCause
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionDetectedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionDetectedAt
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionEnvironment
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionFunctionality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionFunctionality
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionGroup
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionIncidentRoles() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionIncidentRoles
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionIncidentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionIncidentType
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionKind
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionMitigatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionMitigatedAt
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionResolvedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionResolvedAt
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionService
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionSeverity
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionStartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionStartedAt
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionStatus
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionSummary
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionVisibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionVisibility
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentConditionalInactivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionalInactivity
	}).(pulumi.StringPtrOutput)
}

// ex. 10 min, 1h, 3 days, 2 weeks
func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentInactivityDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentInactivityDuration
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `test`, `testSub`, `example`, `exampleSub`, `normal`, `normalSub`, `backfilled`, `scheduled`.
func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentKinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.IncidentKinds
	}).(pulumi.StringArrayOutput)
}

// [DEPRECATED] Use incident*condition*cause instead. Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentPostMortemConditionCause() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentPostMortemConditionCause
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `inTriage`, `started`, `detected`, `acknowledged`, `mitigated`, `resolved`, `cancelled`, `scheduled`, `inProgress`, `completed`.
func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.IncidentStatuses
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowIncidentTriggerParamsPtrOutput) IncidentVisibilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.IncidentVisibilities
	}).(pulumi.StringArrayOutput)
}

// Value must be one off `incident`.
func (o WorkflowIncidentTriggerParamsPtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.TriggerType
	}).(pulumi.StringPtrOutput)
}

// Actions that trigger the workflow. One of custom*fields.\n\n.updated, incident*in*triage, incident*created, incident*started, incident*updated, title*updated, summary*updated, status*updated, severity*updated, environments*added, environments*removed, environments*updated, incident*types*added, incident*types*removed, incident*types*updated, services*added, services*removed, services*updated, visibility*updated, functionalities*added, functionalities*removed, functionalities*updated, teams*added, teams*removed, teams*updated, causes*added, causes*removed, causes*updated, timeline*updated, status*page*timeline*updated, role*assignments*updated, role*assignments*added, role*assignments*removed, slack*command, slack*channel*created, slack*channel*converted, subscribers*updated, subscribers*added, subscribers*removed, user*joined*slack*channel, user*left*slack*channel
func (o WorkflowIncidentTriggerParamsPtrOutput) Triggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowIncidentTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(pulumi.StringArrayOutput)
}

type WorkflowPostMortemTriggerParams struct {
	// Value must be one off `ALL`, `ANY`, `NONE`.
	IncidentCondition               *string `pulumi:"incidentCondition"`
	IncidentConditionAcknowledgedAt *string `pulumi:"incidentConditionAcknowledgedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionCause      *string `pulumi:"incidentConditionCause"`
	IncidentConditionDetectedAt *string `pulumi:"incidentConditionDetectedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionEnvironment *string `pulumi:"incidentConditionEnvironment"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionFunctionality *string `pulumi:"incidentConditionFunctionality"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionGroup *string `pulumi:"incidentConditionGroup"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionIncidentRoles *string `pulumi:"incidentConditionIncidentRoles"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionIncidentType *string `pulumi:"incidentConditionIncidentType"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionKind        *string `pulumi:"incidentConditionKind"`
	IncidentConditionMitigatedAt *string `pulumi:"incidentConditionMitigatedAt"`
	IncidentConditionResolvedAt  *string `pulumi:"incidentConditionResolvedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionService *string `pulumi:"incidentConditionService"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionSeverity  *string `pulumi:"incidentConditionSeverity"`
	IncidentConditionStartedAt *string `pulumi:"incidentConditionStartedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionStatus  *string `pulumi:"incidentConditionStatus"`
	IncidentConditionSummary *string `pulumi:"incidentConditionSummary"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionVisibility   *string `pulumi:"incidentConditionVisibility"`
	IncidentConditionalInactivity *string `pulumi:"incidentConditionalInactivity"`
	// ex. 10 min, 1h, 3 days, 2 weeks
	IncidentInactivityDuration *string `pulumi:"incidentInactivityDuration"`
	// Value must be one of `test`, `testSub`, `example`, `exampleSub`, `normal`, `normalSub`, `backfilled`, `scheduled`.
	IncidentKinds []string `pulumi:"incidentKinds"`
	// Value must be one off `ALL`, `ANY`, `NONE`.
	IncidentPostMortemCondition *string `pulumi:"incidentPostMortemCondition"`
	// [DEPRECATED] Use incident*condition*cause instead. Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentPostMortemConditionCause *string `pulumi:"incidentPostMortemConditionCause"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentPostMortemConditionStatus *string `pulumi:"incidentPostMortemConditionStatus"`
	// Value must be one of `draft`, `published`.
	IncidentPostMortemStatuses []string `pulumi:"incidentPostMortemStatuses"`
	// Value must be one of `inTriage`, `started`, `detected`, `acknowledged`, `mitigated`, `resolved`, `cancelled`, `scheduled`, `inProgress`, `completed`.
	IncidentStatuses     []string `pulumi:"incidentStatuses"`
	IncidentVisibilities []string `pulumi:"incidentVisibilities"`
	// Value must be one off `postMortem`.
	TriggerType *string `pulumi:"triggerType"`
	// Actions that trigger the workflow. One of custom*fields.\n\n.updated, post*mortem*created, post*mortem*updated, status*updated, slack_command
	Triggers []string `pulumi:"triggers"`
}

// WorkflowPostMortemTriggerParamsInput is an input type that accepts WorkflowPostMortemTriggerParamsArgs and WorkflowPostMortemTriggerParamsOutput values.
// You can construct a concrete instance of `WorkflowPostMortemTriggerParamsInput` via:
//
//	WorkflowPostMortemTriggerParamsArgs{...}
type WorkflowPostMortemTriggerParamsInput interface {
	pulumi.Input

	ToWorkflowPostMortemTriggerParamsOutput() WorkflowPostMortemTriggerParamsOutput
	ToWorkflowPostMortemTriggerParamsOutputWithContext(context.Context) WorkflowPostMortemTriggerParamsOutput
}

type WorkflowPostMortemTriggerParamsArgs struct {
	// Value must be one off `ALL`, `ANY`, `NONE`.
	IncidentCondition               pulumi.StringPtrInput `pulumi:"incidentCondition"`
	IncidentConditionAcknowledgedAt pulumi.StringPtrInput `pulumi:"incidentConditionAcknowledgedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionCause      pulumi.StringPtrInput `pulumi:"incidentConditionCause"`
	IncidentConditionDetectedAt pulumi.StringPtrInput `pulumi:"incidentConditionDetectedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionEnvironment pulumi.StringPtrInput `pulumi:"incidentConditionEnvironment"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionFunctionality pulumi.StringPtrInput `pulumi:"incidentConditionFunctionality"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionGroup pulumi.StringPtrInput `pulumi:"incidentConditionGroup"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionIncidentRoles pulumi.StringPtrInput `pulumi:"incidentConditionIncidentRoles"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionIncidentType pulumi.StringPtrInput `pulumi:"incidentConditionIncidentType"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionKind        pulumi.StringPtrInput `pulumi:"incidentConditionKind"`
	IncidentConditionMitigatedAt pulumi.StringPtrInput `pulumi:"incidentConditionMitigatedAt"`
	IncidentConditionResolvedAt  pulumi.StringPtrInput `pulumi:"incidentConditionResolvedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionService pulumi.StringPtrInput `pulumi:"incidentConditionService"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionSeverity  pulumi.StringPtrInput `pulumi:"incidentConditionSeverity"`
	IncidentConditionStartedAt pulumi.StringPtrInput `pulumi:"incidentConditionStartedAt"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionStatus  pulumi.StringPtrInput `pulumi:"incidentConditionStatus"`
	IncidentConditionSummary pulumi.StringPtrInput `pulumi:"incidentConditionSummary"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentConditionVisibility   pulumi.StringPtrInput `pulumi:"incidentConditionVisibility"`
	IncidentConditionalInactivity pulumi.StringPtrInput `pulumi:"incidentConditionalInactivity"`
	// ex. 10 min, 1h, 3 days, 2 weeks
	IncidentInactivityDuration pulumi.StringPtrInput `pulumi:"incidentInactivityDuration"`
	// Value must be one of `test`, `testSub`, `example`, `exampleSub`, `normal`, `normalSub`, `backfilled`, `scheduled`.
	IncidentKinds pulumi.StringArrayInput `pulumi:"incidentKinds"`
	// Value must be one off `ALL`, `ANY`, `NONE`.
	IncidentPostMortemCondition pulumi.StringPtrInput `pulumi:"incidentPostMortemCondition"`
	// [DEPRECATED] Use incident*condition*cause instead. Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentPostMortemConditionCause pulumi.StringPtrInput `pulumi:"incidentPostMortemConditionCause"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentPostMortemConditionStatus pulumi.StringPtrInput `pulumi:"incidentPostMortemConditionStatus"`
	// Value must be one of `draft`, `published`.
	IncidentPostMortemStatuses pulumi.StringArrayInput `pulumi:"incidentPostMortemStatuses"`
	// Value must be one of `inTriage`, `started`, `detected`, `acknowledged`, `mitigated`, `resolved`, `cancelled`, `scheduled`, `inProgress`, `completed`.
	IncidentStatuses     pulumi.StringArrayInput `pulumi:"incidentStatuses"`
	IncidentVisibilities pulumi.StringArrayInput `pulumi:"incidentVisibilities"`
	// Value must be one off `postMortem`.
	TriggerType pulumi.StringPtrInput `pulumi:"triggerType"`
	// Actions that trigger the workflow. One of custom*fields.\n\n.updated, post*mortem*created, post*mortem*updated, status*updated, slack_command
	Triggers pulumi.StringArrayInput `pulumi:"triggers"`
}

func (WorkflowPostMortemTriggerParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowPostMortemTriggerParams)(nil)).Elem()
}

func (i WorkflowPostMortemTriggerParamsArgs) ToWorkflowPostMortemTriggerParamsOutput() WorkflowPostMortemTriggerParamsOutput {
	return i.ToWorkflowPostMortemTriggerParamsOutputWithContext(context.Background())
}

func (i WorkflowPostMortemTriggerParamsArgs) ToWorkflowPostMortemTriggerParamsOutputWithContext(ctx context.Context) WorkflowPostMortemTriggerParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowPostMortemTriggerParamsOutput)
}

func (i WorkflowPostMortemTriggerParamsArgs) ToWorkflowPostMortemTriggerParamsPtrOutput() WorkflowPostMortemTriggerParamsPtrOutput {
	return i.ToWorkflowPostMortemTriggerParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowPostMortemTriggerParamsArgs) ToWorkflowPostMortemTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowPostMortemTriggerParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowPostMortemTriggerParamsOutput).ToWorkflowPostMortemTriggerParamsPtrOutputWithContext(ctx)
}

// WorkflowPostMortemTriggerParamsPtrInput is an input type that accepts WorkflowPostMortemTriggerParamsArgs, WorkflowPostMortemTriggerParamsPtr and WorkflowPostMortemTriggerParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowPostMortemTriggerParamsPtrInput` via:
//
//	        WorkflowPostMortemTriggerParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowPostMortemTriggerParamsPtrInput interface {
	pulumi.Input

	ToWorkflowPostMortemTriggerParamsPtrOutput() WorkflowPostMortemTriggerParamsPtrOutput
	ToWorkflowPostMortemTriggerParamsPtrOutputWithContext(context.Context) WorkflowPostMortemTriggerParamsPtrOutput
}

type workflowPostMortemTriggerParamsPtrType WorkflowPostMortemTriggerParamsArgs

func WorkflowPostMortemTriggerParamsPtr(v *WorkflowPostMortemTriggerParamsArgs) WorkflowPostMortemTriggerParamsPtrInput {
	return (*workflowPostMortemTriggerParamsPtrType)(v)
}

func (*workflowPostMortemTriggerParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowPostMortemTriggerParams)(nil)).Elem()
}

func (i *workflowPostMortemTriggerParamsPtrType) ToWorkflowPostMortemTriggerParamsPtrOutput() WorkflowPostMortemTriggerParamsPtrOutput {
	return i.ToWorkflowPostMortemTriggerParamsPtrOutputWithContext(context.Background())
}

func (i *workflowPostMortemTriggerParamsPtrType) ToWorkflowPostMortemTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowPostMortemTriggerParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowPostMortemTriggerParamsPtrOutput)
}

type WorkflowPostMortemTriggerParamsOutput struct{ *pulumi.OutputState }

func (WorkflowPostMortemTriggerParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowPostMortemTriggerParams)(nil)).Elem()
}

func (o WorkflowPostMortemTriggerParamsOutput) ToWorkflowPostMortemTriggerParamsOutput() WorkflowPostMortemTriggerParamsOutput {
	return o
}

func (o WorkflowPostMortemTriggerParamsOutput) ToWorkflowPostMortemTriggerParamsOutputWithContext(ctx context.Context) WorkflowPostMortemTriggerParamsOutput {
	return o
}

func (o WorkflowPostMortemTriggerParamsOutput) ToWorkflowPostMortemTriggerParamsPtrOutput() WorkflowPostMortemTriggerParamsPtrOutput {
	return o.ToWorkflowPostMortemTriggerParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowPostMortemTriggerParamsOutput) ToWorkflowPostMortemTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowPostMortemTriggerParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowPostMortemTriggerParams) *WorkflowPostMortemTriggerParams {
		return &v
	}).(WorkflowPostMortemTriggerParamsPtrOutput)
}

// Value must be one off `ALL`, `ANY`, `NONE`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentCondition }).(pulumi.StringPtrOutput)
}

func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionAcknowledgedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionAcknowledgedAt }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionCause() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionCause }).(pulumi.StringPtrOutput)
}

func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionDetectedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionDetectedAt }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionEnvironment }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionFunctionality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionFunctionality }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionGroup }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionIncidentRoles() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionIncidentRoles }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionIncidentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionIncidentType }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionKind }).(pulumi.StringPtrOutput)
}

func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionMitigatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionMitigatedAt }).(pulumi.StringPtrOutput)
}

func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionResolvedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionResolvedAt }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionService }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionSeverity }).(pulumi.StringPtrOutput)
}

func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionStartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionStartedAt }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionStatus }).(pulumi.StringPtrOutput)
}

func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionSummary }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionVisibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionVisibility }).(pulumi.StringPtrOutput)
}

func (o WorkflowPostMortemTriggerParamsOutput) IncidentConditionalInactivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentConditionalInactivity }).(pulumi.StringPtrOutput)
}

// ex. 10 min, 1h, 3 days, 2 weeks
func (o WorkflowPostMortemTriggerParamsOutput) IncidentInactivityDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentInactivityDuration }).(pulumi.StringPtrOutput)
}

// Value must be one of `test`, `testSub`, `example`, `exampleSub`, `normal`, `normalSub`, `backfilled`, `scheduled`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentKinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) []string { return v.IncidentKinds }).(pulumi.StringArrayOutput)
}

// Value must be one off `ALL`, `ANY`, `NONE`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentPostMortemCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentPostMortemCondition }).(pulumi.StringPtrOutput)
}

// [DEPRECATED] Use incident*condition*cause instead. Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentPostMortemConditionCause() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentPostMortemConditionCause }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentPostMortemConditionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.IncidentPostMortemConditionStatus }).(pulumi.StringPtrOutput)
}

// Value must be one of `draft`, `published`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentPostMortemStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) []string { return v.IncidentPostMortemStatuses }).(pulumi.StringArrayOutput)
}

// Value must be one of `inTriage`, `started`, `detected`, `acknowledged`, `mitigated`, `resolved`, `cancelled`, `scheduled`, `inProgress`, `completed`.
func (o WorkflowPostMortemTriggerParamsOutput) IncidentStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) []string { return v.IncidentStatuses }).(pulumi.StringArrayOutput)
}

func (o WorkflowPostMortemTriggerParamsOutput) IncidentVisibilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) []string { return v.IncidentVisibilities }).(pulumi.StringArrayOutput)
}

// Value must be one off `postMortem`.
func (o WorkflowPostMortemTriggerParamsOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) *string { return v.TriggerType }).(pulumi.StringPtrOutput)
}

// Actions that trigger the workflow. One of custom*fields.\n\n.updated, post*mortem*created, post*mortem*updated, status*updated, slack_command
func (o WorkflowPostMortemTriggerParamsOutput) Triggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowPostMortemTriggerParams) []string { return v.Triggers }).(pulumi.StringArrayOutput)
}

type WorkflowPostMortemTriggerParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowPostMortemTriggerParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowPostMortemTriggerParams)(nil)).Elem()
}

func (o WorkflowPostMortemTriggerParamsPtrOutput) ToWorkflowPostMortemTriggerParamsPtrOutput() WorkflowPostMortemTriggerParamsPtrOutput {
	return o
}

func (o WorkflowPostMortemTriggerParamsPtrOutput) ToWorkflowPostMortemTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowPostMortemTriggerParamsPtrOutput {
	return o
}

func (o WorkflowPostMortemTriggerParamsPtrOutput) Elem() WorkflowPostMortemTriggerParamsOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) WorkflowPostMortemTriggerParams {
		if v != nil {
			return *v
		}
		var ret WorkflowPostMortemTriggerParams
		return ret
	}).(WorkflowPostMortemTriggerParamsOutput)
}

// Value must be one off `ALL`, `ANY`, `NONE`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentCondition
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionAcknowledgedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionAcknowledgedAt
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionCause() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionCause
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionDetectedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionDetectedAt
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionEnvironment
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionFunctionality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionFunctionality
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionGroup
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionIncidentRoles() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionIncidentRoles
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionIncidentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionIncidentType
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionKind
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionMitigatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionMitigatedAt
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionResolvedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionResolvedAt
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionService
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionSeverity
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionStartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionStartedAt
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionStatus
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionSummary
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionVisibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionVisibility
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentConditionalInactivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentConditionalInactivity
	}).(pulumi.StringPtrOutput)
}

// ex. 10 min, 1h, 3 days, 2 weeks
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentInactivityDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentInactivityDuration
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `test`, `testSub`, `example`, `exampleSub`, `normal`, `normalSub`, `backfilled`, `scheduled`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentKinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.IncidentKinds
	}).(pulumi.StringArrayOutput)
}

// Value must be one off `ALL`, `ANY`, `NONE`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentPostMortemCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentPostMortemCondition
	}).(pulumi.StringPtrOutput)
}

// [DEPRECATED] Use incident*condition*cause instead. Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentPostMortemConditionCause() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentPostMortemConditionCause
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentPostMortemConditionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentPostMortemConditionStatus
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `draft`, `published`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentPostMortemStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.IncidentPostMortemStatuses
	}).(pulumi.StringArrayOutput)
}

// Value must be one of `inTriage`, `started`, `detected`, `acknowledged`, `mitigated`, `resolved`, `cancelled`, `scheduled`, `inProgress`, `completed`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.IncidentStatuses
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowPostMortemTriggerParamsPtrOutput) IncidentVisibilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.IncidentVisibilities
	}).(pulumi.StringArrayOutput)
}

// Value must be one off `postMortem`.
func (o WorkflowPostMortemTriggerParamsPtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.TriggerType
	}).(pulumi.StringPtrOutput)
}

// Actions that trigger the workflow. One of custom*fields.\n\n.updated, post*mortem*created, post*mortem*updated, status*updated, slack_command
func (o WorkflowPostMortemTriggerParamsPtrOutput) Triggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowPostMortemTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(pulumi.StringArrayOutput)
}

type WorkflowPulseTriggerParams struct {
	// Value must be one off `ALL`, `ANY`, `NONE`.
	PulseCondition *string `pulumi:"pulseCondition"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	PulseConditionLabel *string `pulumi:"pulseConditionLabel"`
	// Value must be one of true or false
	PulseConditionLabelUseRegexp *bool `pulumi:"pulseConditionLabelUseRegexp"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	PulseConditionPayload *string `pulumi:"pulseConditionPayload"`
	// Value must be one of true or false
	PulseConditionPayloadUseRegexp *bool `pulumi:"pulseConditionPayloadUseRegexp"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	PulseConditionSource *string `pulumi:"pulseConditionSource"`
	// Value must be one of true or false
	PulseConditionSourceUseRegexp *bool    `pulumi:"pulseConditionSourceUseRegexp"`
	PulseLabels                   []string `pulumi:"pulseLabels"`
	PulsePayloads                 []string `pulumi:"pulsePayloads"`
	// You can use jsonpath syntax. eg: $.incident.teams[*]
	PulseQueryPayload *string  `pulumi:"pulseQueryPayload"`
	PulseSources      []string `pulumi:"pulseSources"`
	// Value must be one off `pulse`.
	TriggerType *string `pulumi:"triggerType"`
	// Actions that trigger the workflow. Value must be one of `pulseCreated`.
	Triggers []string `pulumi:"triggers"`
}

// WorkflowPulseTriggerParamsInput is an input type that accepts WorkflowPulseTriggerParamsArgs and WorkflowPulseTriggerParamsOutput values.
// You can construct a concrete instance of `WorkflowPulseTriggerParamsInput` via:
//
//	WorkflowPulseTriggerParamsArgs{...}
type WorkflowPulseTriggerParamsInput interface {
	pulumi.Input

	ToWorkflowPulseTriggerParamsOutput() WorkflowPulseTriggerParamsOutput
	ToWorkflowPulseTriggerParamsOutputWithContext(context.Context) WorkflowPulseTriggerParamsOutput
}

type WorkflowPulseTriggerParamsArgs struct {
	// Value must be one off `ALL`, `ANY`, `NONE`.
	PulseCondition pulumi.StringPtrInput `pulumi:"pulseCondition"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	PulseConditionLabel pulumi.StringPtrInput `pulumi:"pulseConditionLabel"`
	// Value must be one of true or false
	PulseConditionLabelUseRegexp pulumi.BoolPtrInput `pulumi:"pulseConditionLabelUseRegexp"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	PulseConditionPayload pulumi.StringPtrInput `pulumi:"pulseConditionPayload"`
	// Value must be one of true or false
	PulseConditionPayloadUseRegexp pulumi.BoolPtrInput `pulumi:"pulseConditionPayloadUseRegexp"`
	// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	PulseConditionSource pulumi.StringPtrInput `pulumi:"pulseConditionSource"`
	// Value must be one of true or false
	PulseConditionSourceUseRegexp pulumi.BoolPtrInput     `pulumi:"pulseConditionSourceUseRegexp"`
	PulseLabels                   pulumi.StringArrayInput `pulumi:"pulseLabels"`
	PulsePayloads                 pulumi.StringArrayInput `pulumi:"pulsePayloads"`
	// You can use jsonpath syntax. eg: $.incident.teams[*]
	PulseQueryPayload pulumi.StringPtrInput   `pulumi:"pulseQueryPayload"`
	PulseSources      pulumi.StringArrayInput `pulumi:"pulseSources"`
	// Value must be one off `pulse`.
	TriggerType pulumi.StringPtrInput `pulumi:"triggerType"`
	// Actions that trigger the workflow. Value must be one of `pulseCreated`.
	Triggers pulumi.StringArrayInput `pulumi:"triggers"`
}

func (WorkflowPulseTriggerParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowPulseTriggerParams)(nil)).Elem()
}

func (i WorkflowPulseTriggerParamsArgs) ToWorkflowPulseTriggerParamsOutput() WorkflowPulseTriggerParamsOutput {
	return i.ToWorkflowPulseTriggerParamsOutputWithContext(context.Background())
}

func (i WorkflowPulseTriggerParamsArgs) ToWorkflowPulseTriggerParamsOutputWithContext(ctx context.Context) WorkflowPulseTriggerParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowPulseTriggerParamsOutput)
}

func (i WorkflowPulseTriggerParamsArgs) ToWorkflowPulseTriggerParamsPtrOutput() WorkflowPulseTriggerParamsPtrOutput {
	return i.ToWorkflowPulseTriggerParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowPulseTriggerParamsArgs) ToWorkflowPulseTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowPulseTriggerParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowPulseTriggerParamsOutput).ToWorkflowPulseTriggerParamsPtrOutputWithContext(ctx)
}

// WorkflowPulseTriggerParamsPtrInput is an input type that accepts WorkflowPulseTriggerParamsArgs, WorkflowPulseTriggerParamsPtr and WorkflowPulseTriggerParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowPulseTriggerParamsPtrInput` via:
//
//	        WorkflowPulseTriggerParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowPulseTriggerParamsPtrInput interface {
	pulumi.Input

	ToWorkflowPulseTriggerParamsPtrOutput() WorkflowPulseTriggerParamsPtrOutput
	ToWorkflowPulseTriggerParamsPtrOutputWithContext(context.Context) WorkflowPulseTriggerParamsPtrOutput
}

type workflowPulseTriggerParamsPtrType WorkflowPulseTriggerParamsArgs

func WorkflowPulseTriggerParamsPtr(v *WorkflowPulseTriggerParamsArgs) WorkflowPulseTriggerParamsPtrInput {
	return (*workflowPulseTriggerParamsPtrType)(v)
}

func (*workflowPulseTriggerParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowPulseTriggerParams)(nil)).Elem()
}

func (i *workflowPulseTriggerParamsPtrType) ToWorkflowPulseTriggerParamsPtrOutput() WorkflowPulseTriggerParamsPtrOutput {
	return i.ToWorkflowPulseTriggerParamsPtrOutputWithContext(context.Background())
}

func (i *workflowPulseTriggerParamsPtrType) ToWorkflowPulseTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowPulseTriggerParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowPulseTriggerParamsPtrOutput)
}

type WorkflowPulseTriggerParamsOutput struct{ *pulumi.OutputState }

func (WorkflowPulseTriggerParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowPulseTriggerParams)(nil)).Elem()
}

func (o WorkflowPulseTriggerParamsOutput) ToWorkflowPulseTriggerParamsOutput() WorkflowPulseTriggerParamsOutput {
	return o
}

func (o WorkflowPulseTriggerParamsOutput) ToWorkflowPulseTriggerParamsOutputWithContext(ctx context.Context) WorkflowPulseTriggerParamsOutput {
	return o
}

func (o WorkflowPulseTriggerParamsOutput) ToWorkflowPulseTriggerParamsPtrOutput() WorkflowPulseTriggerParamsPtrOutput {
	return o.ToWorkflowPulseTriggerParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowPulseTriggerParamsOutput) ToWorkflowPulseTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowPulseTriggerParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowPulseTriggerParams) *WorkflowPulseTriggerParams {
		return &v
	}).(WorkflowPulseTriggerParamsPtrOutput)
}

// Value must be one off `ALL`, `ANY`, `NONE`.
func (o WorkflowPulseTriggerParamsOutput) PulseCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPulseTriggerParams) *string { return v.PulseCondition }).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPulseTriggerParamsOutput) PulseConditionLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPulseTriggerParams) *string { return v.PulseConditionLabel }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowPulseTriggerParamsOutput) PulseConditionLabelUseRegexp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowPulseTriggerParams) *bool { return v.PulseConditionLabelUseRegexp }).(pulumi.BoolPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPulseTriggerParamsOutput) PulseConditionPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPulseTriggerParams) *string { return v.PulseConditionPayload }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowPulseTriggerParamsOutput) PulseConditionPayloadUseRegexp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowPulseTriggerParams) *bool { return v.PulseConditionPayloadUseRegexp }).(pulumi.BoolPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPulseTriggerParamsOutput) PulseConditionSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPulseTriggerParams) *string { return v.PulseConditionSource }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowPulseTriggerParamsOutput) PulseConditionSourceUseRegexp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowPulseTriggerParams) *bool { return v.PulseConditionSourceUseRegexp }).(pulumi.BoolPtrOutput)
}

func (o WorkflowPulseTriggerParamsOutput) PulseLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowPulseTriggerParams) []string { return v.PulseLabels }).(pulumi.StringArrayOutput)
}

func (o WorkflowPulseTriggerParamsOutput) PulsePayloads() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowPulseTriggerParams) []string { return v.PulsePayloads }).(pulumi.StringArrayOutput)
}

// You can use jsonpath syntax. eg: $.incident.teams[*]
func (o WorkflowPulseTriggerParamsOutput) PulseQueryPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPulseTriggerParams) *string { return v.PulseQueryPayload }).(pulumi.StringPtrOutput)
}

func (o WorkflowPulseTriggerParamsOutput) PulseSources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowPulseTriggerParams) []string { return v.PulseSources }).(pulumi.StringArrayOutput)
}

// Value must be one off `pulse`.
func (o WorkflowPulseTriggerParamsOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowPulseTriggerParams) *string { return v.TriggerType }).(pulumi.StringPtrOutput)
}

// Actions that trigger the workflow. Value must be one of `pulseCreated`.
func (o WorkflowPulseTriggerParamsOutput) Triggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowPulseTriggerParams) []string { return v.Triggers }).(pulumi.StringArrayOutput)
}

type WorkflowPulseTriggerParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowPulseTriggerParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowPulseTriggerParams)(nil)).Elem()
}

func (o WorkflowPulseTriggerParamsPtrOutput) ToWorkflowPulseTriggerParamsPtrOutput() WorkflowPulseTriggerParamsPtrOutput {
	return o
}

func (o WorkflowPulseTriggerParamsPtrOutput) ToWorkflowPulseTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowPulseTriggerParamsPtrOutput {
	return o
}

func (o WorkflowPulseTriggerParamsPtrOutput) Elem() WorkflowPulseTriggerParamsOutput {
	return o.ApplyT(func(v *WorkflowPulseTriggerParams) WorkflowPulseTriggerParams {
		if v != nil {
			return *v
		}
		var ret WorkflowPulseTriggerParams
		return ret
	}).(WorkflowPulseTriggerParamsOutput)
}

// Value must be one off `ALL`, `ANY`, `NONE`.
func (o WorkflowPulseTriggerParamsPtrOutput) PulseCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPulseTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.PulseCondition
	}).(pulumi.StringPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPulseTriggerParamsPtrOutput) PulseConditionLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPulseTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.PulseConditionLabel
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowPulseTriggerParamsPtrOutput) PulseConditionLabelUseRegexp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowPulseTriggerParams) *bool {
		if v == nil {
			return nil
		}
		return v.PulseConditionLabelUseRegexp
	}).(pulumi.BoolPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPulseTriggerParamsPtrOutput) PulseConditionPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPulseTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.PulseConditionPayload
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowPulseTriggerParamsPtrOutput) PulseConditionPayloadUseRegexp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowPulseTriggerParams) *bool {
		if v == nil {
			return nil
		}
		return v.PulseConditionPayloadUseRegexp
	}).(pulumi.BoolPtrOutput)
}

// Value must be one off `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowPulseTriggerParamsPtrOutput) PulseConditionSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPulseTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.PulseConditionSource
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowPulseTriggerParamsPtrOutput) PulseConditionSourceUseRegexp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowPulseTriggerParams) *bool {
		if v == nil {
			return nil
		}
		return v.PulseConditionSourceUseRegexp
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowPulseTriggerParamsPtrOutput) PulseLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowPulseTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.PulseLabels
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowPulseTriggerParamsPtrOutput) PulsePayloads() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowPulseTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.PulsePayloads
	}).(pulumi.StringArrayOutput)
}

// You can use jsonpath syntax. eg: $.incident.teams[*]
func (o WorkflowPulseTriggerParamsPtrOutput) PulseQueryPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPulseTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.PulseQueryPayload
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowPulseTriggerParamsPtrOutput) PulseSources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowPulseTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.PulseSources
	}).(pulumi.StringArrayOutput)
}

// Value must be one off `pulse`.
func (o WorkflowPulseTriggerParamsPtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowPulseTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.TriggerType
	}).(pulumi.StringPtrOutput)
}

// Actions that trigger the workflow. Value must be one of `pulseCreated`.
func (o WorkflowPulseTriggerParamsPtrOutput) Triggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowPulseTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(pulumi.StringArrayOutput)
}

type WorkflowSimpleTriggerParams struct {
	// Value must be one off `simple`.
	TriggerType *string `pulumi:"triggerType"`
	// Actions that trigger the workflow. Value must be one of `slackCommand`.
	Triggers []string `pulumi:"triggers"`
}

// WorkflowSimpleTriggerParamsInput is an input type that accepts WorkflowSimpleTriggerParamsArgs and WorkflowSimpleTriggerParamsOutput values.
// You can construct a concrete instance of `WorkflowSimpleTriggerParamsInput` via:
//
//	WorkflowSimpleTriggerParamsArgs{...}
type WorkflowSimpleTriggerParamsInput interface {
	pulumi.Input

	ToWorkflowSimpleTriggerParamsOutput() WorkflowSimpleTriggerParamsOutput
	ToWorkflowSimpleTriggerParamsOutputWithContext(context.Context) WorkflowSimpleTriggerParamsOutput
}

type WorkflowSimpleTriggerParamsArgs struct {
	// Value must be one off `simple`.
	TriggerType pulumi.StringPtrInput `pulumi:"triggerType"`
	// Actions that trigger the workflow. Value must be one of `slackCommand`.
	Triggers pulumi.StringArrayInput `pulumi:"triggers"`
}

func (WorkflowSimpleTriggerParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowSimpleTriggerParams)(nil)).Elem()
}

func (i WorkflowSimpleTriggerParamsArgs) ToWorkflowSimpleTriggerParamsOutput() WorkflowSimpleTriggerParamsOutput {
	return i.ToWorkflowSimpleTriggerParamsOutputWithContext(context.Background())
}

func (i WorkflowSimpleTriggerParamsArgs) ToWorkflowSimpleTriggerParamsOutputWithContext(ctx context.Context) WorkflowSimpleTriggerParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowSimpleTriggerParamsOutput)
}

func (i WorkflowSimpleTriggerParamsArgs) ToWorkflowSimpleTriggerParamsPtrOutput() WorkflowSimpleTriggerParamsPtrOutput {
	return i.ToWorkflowSimpleTriggerParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowSimpleTriggerParamsArgs) ToWorkflowSimpleTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowSimpleTriggerParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowSimpleTriggerParamsOutput).ToWorkflowSimpleTriggerParamsPtrOutputWithContext(ctx)
}

// WorkflowSimpleTriggerParamsPtrInput is an input type that accepts WorkflowSimpleTriggerParamsArgs, WorkflowSimpleTriggerParamsPtr and WorkflowSimpleTriggerParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowSimpleTriggerParamsPtrInput` via:
//
//	        WorkflowSimpleTriggerParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowSimpleTriggerParamsPtrInput interface {
	pulumi.Input

	ToWorkflowSimpleTriggerParamsPtrOutput() WorkflowSimpleTriggerParamsPtrOutput
	ToWorkflowSimpleTriggerParamsPtrOutputWithContext(context.Context) WorkflowSimpleTriggerParamsPtrOutput
}

type workflowSimpleTriggerParamsPtrType WorkflowSimpleTriggerParamsArgs

func WorkflowSimpleTriggerParamsPtr(v *WorkflowSimpleTriggerParamsArgs) WorkflowSimpleTriggerParamsPtrInput {
	return (*workflowSimpleTriggerParamsPtrType)(v)
}

func (*workflowSimpleTriggerParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowSimpleTriggerParams)(nil)).Elem()
}

func (i *workflowSimpleTriggerParamsPtrType) ToWorkflowSimpleTriggerParamsPtrOutput() WorkflowSimpleTriggerParamsPtrOutput {
	return i.ToWorkflowSimpleTriggerParamsPtrOutputWithContext(context.Background())
}

func (i *workflowSimpleTriggerParamsPtrType) ToWorkflowSimpleTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowSimpleTriggerParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowSimpleTriggerParamsPtrOutput)
}

type WorkflowSimpleTriggerParamsOutput struct{ *pulumi.OutputState }

func (WorkflowSimpleTriggerParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowSimpleTriggerParams)(nil)).Elem()
}

func (o WorkflowSimpleTriggerParamsOutput) ToWorkflowSimpleTriggerParamsOutput() WorkflowSimpleTriggerParamsOutput {
	return o
}

func (o WorkflowSimpleTriggerParamsOutput) ToWorkflowSimpleTriggerParamsOutputWithContext(ctx context.Context) WorkflowSimpleTriggerParamsOutput {
	return o
}

func (o WorkflowSimpleTriggerParamsOutput) ToWorkflowSimpleTriggerParamsPtrOutput() WorkflowSimpleTriggerParamsPtrOutput {
	return o.ToWorkflowSimpleTriggerParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowSimpleTriggerParamsOutput) ToWorkflowSimpleTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowSimpleTriggerParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowSimpleTriggerParams) *WorkflowSimpleTriggerParams {
		return &v
	}).(WorkflowSimpleTriggerParamsPtrOutput)
}

// Value must be one off `simple`.
func (o WorkflowSimpleTriggerParamsOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowSimpleTriggerParams) *string { return v.TriggerType }).(pulumi.StringPtrOutput)
}

// Actions that trigger the workflow. Value must be one of `slackCommand`.
func (o WorkflowSimpleTriggerParamsOutput) Triggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowSimpleTriggerParams) []string { return v.Triggers }).(pulumi.StringArrayOutput)
}

type WorkflowSimpleTriggerParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowSimpleTriggerParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowSimpleTriggerParams)(nil)).Elem()
}

func (o WorkflowSimpleTriggerParamsPtrOutput) ToWorkflowSimpleTriggerParamsPtrOutput() WorkflowSimpleTriggerParamsPtrOutput {
	return o
}

func (o WorkflowSimpleTriggerParamsPtrOutput) ToWorkflowSimpleTriggerParamsPtrOutputWithContext(ctx context.Context) WorkflowSimpleTriggerParamsPtrOutput {
	return o
}

func (o WorkflowSimpleTriggerParamsPtrOutput) Elem() WorkflowSimpleTriggerParamsOutput {
	return o.ApplyT(func(v *WorkflowSimpleTriggerParams) WorkflowSimpleTriggerParams {
		if v != nil {
			return *v
		}
		var ret WorkflowSimpleTriggerParams
		return ret
	}).(WorkflowSimpleTriggerParamsOutput)
}

// Value must be one off `simple`.
func (o WorkflowSimpleTriggerParamsPtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowSimpleTriggerParams) *string {
		if v == nil {
			return nil
		}
		return v.TriggerType
	}).(pulumi.StringPtrOutput)
}

// Actions that trigger the workflow. Value must be one of `slackCommand`.
func (o WorkflowSimpleTriggerParamsPtrOutput) Triggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowSimpleTriggerParams) []string {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(pulumi.StringArrayOutput)
}

type WorkflowTaskAddActionItemTaskParams struct {
	// Map must contain two fields, `id` and `name`.  The user this action item is assigned to
	AssignedToUser map[string]string `pulumi:"assignedToUser"`
	// [DEPRECATED] Use assigned*to*user attribute instead. The user id this action item is assigned to
	AssignedToUserId *string `pulumi:"assignedToUserId"`
	// The action item description
	Description *string `pulumi:"description"`
	// The role id this action item is associated with
	IncidentRoleId *string `pulumi:"incidentRoleId"`
	// The action item kind
	Kind *string `pulumi:"kind"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                   `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskAddActionItemTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	// The action item priority. Value must be one of `high`, `medium`, `low`.
	Priority string `pulumi:"priority"`
	// The action item status. Value must be one of `open`, `inProgress`, `cancelled`, `done`.
	Status string `pulumi:"status"`
	// The action item summary
	Summary  string  `pulumi:"summary"`
	TaskType *string `pulumi:"taskType"`
}

// WorkflowTaskAddActionItemTaskParamsInput is an input type that accepts WorkflowTaskAddActionItemTaskParamsArgs and WorkflowTaskAddActionItemTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskAddActionItemTaskParamsInput` via:
//
//	WorkflowTaskAddActionItemTaskParamsArgs{...}
type WorkflowTaskAddActionItemTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskAddActionItemTaskParamsOutput() WorkflowTaskAddActionItemTaskParamsOutput
	ToWorkflowTaskAddActionItemTaskParamsOutputWithContext(context.Context) WorkflowTaskAddActionItemTaskParamsOutput
}

type WorkflowTaskAddActionItemTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`.  The user this action item is assigned to
	AssignedToUser pulumi.StringMapInput `pulumi:"assignedToUser"`
	// [DEPRECATED] Use assigned*to*user attribute instead. The user id this action item is assigned to
	AssignedToUserId pulumi.StringPtrInput `pulumi:"assignedToUserId"`
	// The action item description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The role id this action item is associated with
	IncidentRoleId pulumi.StringPtrInput `pulumi:"incidentRoleId"`
	// The action item kind
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                             `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	// The action item priority. Value must be one of `high`, `medium`, `low`.
	Priority pulumi.StringInput `pulumi:"priority"`
	// The action item status. Value must be one of `open`, `inProgress`, `cancelled`, `done`.
	Status pulumi.StringInput `pulumi:"status"`
	// The action item summary
	Summary  pulumi.StringInput    `pulumi:"summary"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskAddActionItemTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAddActionItemTaskParams)(nil)).Elem()
}

func (i WorkflowTaskAddActionItemTaskParamsArgs) ToWorkflowTaskAddActionItemTaskParamsOutput() WorkflowTaskAddActionItemTaskParamsOutput {
	return i.ToWorkflowTaskAddActionItemTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskAddActionItemTaskParamsArgs) ToWorkflowTaskAddActionItemTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAddActionItemTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddActionItemTaskParamsOutput)
}

func (i WorkflowTaskAddActionItemTaskParamsArgs) ToWorkflowTaskAddActionItemTaskParamsPtrOutput() WorkflowTaskAddActionItemTaskParamsPtrOutput {
	return i.ToWorkflowTaskAddActionItemTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskAddActionItemTaskParamsArgs) ToWorkflowTaskAddActionItemTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddActionItemTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddActionItemTaskParamsOutput).ToWorkflowTaskAddActionItemTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskAddActionItemTaskParamsPtrInput is an input type that accepts WorkflowTaskAddActionItemTaskParamsArgs, WorkflowTaskAddActionItemTaskParamsPtr and WorkflowTaskAddActionItemTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskAddActionItemTaskParamsPtrInput` via:
//
//	        WorkflowTaskAddActionItemTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskAddActionItemTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskAddActionItemTaskParamsPtrOutput() WorkflowTaskAddActionItemTaskParamsPtrOutput
	ToWorkflowTaskAddActionItemTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskAddActionItemTaskParamsPtrOutput
}

type workflowTaskAddActionItemTaskParamsPtrType WorkflowTaskAddActionItemTaskParamsArgs

func WorkflowTaskAddActionItemTaskParamsPtr(v *WorkflowTaskAddActionItemTaskParamsArgs) WorkflowTaskAddActionItemTaskParamsPtrInput {
	return (*workflowTaskAddActionItemTaskParamsPtrType)(v)
}

func (*workflowTaskAddActionItemTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAddActionItemTaskParams)(nil)).Elem()
}

func (i *workflowTaskAddActionItemTaskParamsPtrType) ToWorkflowTaskAddActionItemTaskParamsPtrOutput() WorkflowTaskAddActionItemTaskParamsPtrOutput {
	return i.ToWorkflowTaskAddActionItemTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskAddActionItemTaskParamsPtrType) ToWorkflowTaskAddActionItemTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddActionItemTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddActionItemTaskParamsPtrOutput)
}

type WorkflowTaskAddActionItemTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddActionItemTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAddActionItemTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAddActionItemTaskParamsOutput) ToWorkflowTaskAddActionItemTaskParamsOutput() WorkflowTaskAddActionItemTaskParamsOutput {
	return o
}

func (o WorkflowTaskAddActionItemTaskParamsOutput) ToWorkflowTaskAddActionItemTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAddActionItemTaskParamsOutput {
	return o
}

func (o WorkflowTaskAddActionItemTaskParamsOutput) ToWorkflowTaskAddActionItemTaskParamsPtrOutput() WorkflowTaskAddActionItemTaskParamsPtrOutput {
	return o.ToWorkflowTaskAddActionItemTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskAddActionItemTaskParamsOutput) ToWorkflowTaskAddActionItemTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddActionItemTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskAddActionItemTaskParams) *WorkflowTaskAddActionItemTaskParams {
		return &v
	}).(WorkflowTaskAddActionItemTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`.  The user this action item is assigned to
func (o WorkflowTaskAddActionItemTaskParamsOutput) AssignedToUser() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskAddActionItemTaskParams) map[string]string { return v.AssignedToUser }).(pulumi.StringMapOutput)
}

// [DEPRECATED] Use assigned*to*user attribute instead. The user id this action item is assigned to
func (o WorkflowTaskAddActionItemTaskParamsOutput) AssignedToUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAddActionItemTaskParams) *string { return v.AssignedToUserId }).(pulumi.StringPtrOutput)
}

// The action item description
func (o WorkflowTaskAddActionItemTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAddActionItemTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The role id this action item is associated with
func (o WorkflowTaskAddActionItemTaskParamsOutput) IncidentRoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAddActionItemTaskParams) *string { return v.IncidentRoleId }).(pulumi.StringPtrOutput)
}

// The action item kind
func (o WorkflowTaskAddActionItemTaskParamsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAddActionItemTaskParams) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskAddActionItemTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAddActionItemTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskAddActionItemTaskParamsOutput) PostToSlackChannels() WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskAddActionItemTaskParams) []WorkflowTaskAddActionItemTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput)
}

// The action item priority. Value must be one of `high`, `medium`, `low`.
func (o WorkflowTaskAddActionItemTaskParamsOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAddActionItemTaskParams) string { return v.Priority }).(pulumi.StringOutput)
}

// The action item status. Value must be one of `open`, `inProgress`, `cancelled`, `done`.
func (o WorkflowTaskAddActionItemTaskParamsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAddActionItemTaskParams) string { return v.Status }).(pulumi.StringOutput)
}

// The action item summary
func (o WorkflowTaskAddActionItemTaskParamsOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAddActionItemTaskParams) string { return v.Summary }).(pulumi.StringOutput)
}

func (o WorkflowTaskAddActionItemTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAddActionItemTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskAddActionItemTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddActionItemTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAddActionItemTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAddActionItemTaskParamsPtrOutput) ToWorkflowTaskAddActionItemTaskParamsPtrOutput() WorkflowTaskAddActionItemTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAddActionItemTaskParamsPtrOutput) ToWorkflowTaskAddActionItemTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddActionItemTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAddActionItemTaskParamsPtrOutput) Elem() WorkflowTaskAddActionItemTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskAddActionItemTaskParams) WorkflowTaskAddActionItemTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskAddActionItemTaskParams
		return ret
	}).(WorkflowTaskAddActionItemTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`.  The user this action item is assigned to
func (o WorkflowTaskAddActionItemTaskParamsPtrOutput) AssignedToUser() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskAddActionItemTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.AssignedToUser
	}).(pulumi.StringMapOutput)
}

// [DEPRECATED] Use assigned*to*user attribute instead. The user id this action item is assigned to
func (o WorkflowTaskAddActionItemTaskParamsPtrOutput) AssignedToUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.AssignedToUserId
	}).(pulumi.StringPtrOutput)
}

// The action item description
func (o WorkflowTaskAddActionItemTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The role id this action item is associated with
func (o WorkflowTaskAddActionItemTaskParamsPtrOutput) IncidentRoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.IncidentRoleId
	}).(pulumi.StringPtrOutput)
}

// The action item kind
func (o WorkflowTaskAddActionItemTaskParamsPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskAddActionItemTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddActionItemTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskAddActionItemTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskAddActionItemTaskParams) []WorkflowTaskAddActionItemTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput)
}

// The action item priority. Value must be one of `high`, `medium`, `low`.
func (o WorkflowTaskAddActionItemTaskParamsPtrOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Priority
	}).(pulumi.StringPtrOutput)
}

// The action item status. Value must be one of `open`, `inProgress`, `cancelled`, `done`.
func (o WorkflowTaskAddActionItemTaskParamsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The action item summary
func (o WorkflowTaskAddActionItemTaskParamsPtrOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Summary
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskAddActionItemTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskAddActionItemTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskAddActionItemTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArgs and WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskAddActionItemTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskAddActionItemTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput() WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAddActionItemTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArgs) ToWorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput() WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArgs) ToWorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArray and WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArray{ WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArray []WorkflowTaskAddActionItemTaskParamsPostToSlackChannelInput

func (WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskAddActionItemTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArray) ToWorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArray) ToWorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAddActionItemTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput) ToWorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput() WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput) ToWorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAddActionItemTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAddActionItemTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskAddActionItemTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskAddActionItemTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskAddActionItemTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskAddRoleTaskParams struct {
	// Map must contain two fields, `id` and `name`.  The user this role is assigned to
	AssignedToUser map[string]string `pulumi:"assignedToUser"`
	// [DEPRECATED] Use assigned*to*user attribute instead. The user id this role is assigned to
	AssignedToUserId *string `pulumi:"assignedToUserId"`
	// The role id to add to the incident
	IncidentRoleId string  `pulumi:"incidentRoleId"`
	TaskType       *string `pulumi:"taskType"`
}

// WorkflowTaskAddRoleTaskParamsInput is an input type that accepts WorkflowTaskAddRoleTaskParamsArgs and WorkflowTaskAddRoleTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskAddRoleTaskParamsInput` via:
//
//	WorkflowTaskAddRoleTaskParamsArgs{...}
type WorkflowTaskAddRoleTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskAddRoleTaskParamsOutput() WorkflowTaskAddRoleTaskParamsOutput
	ToWorkflowTaskAddRoleTaskParamsOutputWithContext(context.Context) WorkflowTaskAddRoleTaskParamsOutput
}

type WorkflowTaskAddRoleTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`.  The user this role is assigned to
	AssignedToUser pulumi.StringMapInput `pulumi:"assignedToUser"`
	// [DEPRECATED] Use assigned*to*user attribute instead. The user id this role is assigned to
	AssignedToUserId pulumi.StringPtrInput `pulumi:"assignedToUserId"`
	// The role id to add to the incident
	IncidentRoleId pulumi.StringInput    `pulumi:"incidentRoleId"`
	TaskType       pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskAddRoleTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAddRoleTaskParams)(nil)).Elem()
}

func (i WorkflowTaskAddRoleTaskParamsArgs) ToWorkflowTaskAddRoleTaskParamsOutput() WorkflowTaskAddRoleTaskParamsOutput {
	return i.ToWorkflowTaskAddRoleTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskAddRoleTaskParamsArgs) ToWorkflowTaskAddRoleTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAddRoleTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddRoleTaskParamsOutput)
}

func (i WorkflowTaskAddRoleTaskParamsArgs) ToWorkflowTaskAddRoleTaskParamsPtrOutput() WorkflowTaskAddRoleTaskParamsPtrOutput {
	return i.ToWorkflowTaskAddRoleTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskAddRoleTaskParamsArgs) ToWorkflowTaskAddRoleTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddRoleTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddRoleTaskParamsOutput).ToWorkflowTaskAddRoleTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskAddRoleTaskParamsPtrInput is an input type that accepts WorkflowTaskAddRoleTaskParamsArgs, WorkflowTaskAddRoleTaskParamsPtr and WorkflowTaskAddRoleTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskAddRoleTaskParamsPtrInput` via:
//
//	        WorkflowTaskAddRoleTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskAddRoleTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskAddRoleTaskParamsPtrOutput() WorkflowTaskAddRoleTaskParamsPtrOutput
	ToWorkflowTaskAddRoleTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskAddRoleTaskParamsPtrOutput
}

type workflowTaskAddRoleTaskParamsPtrType WorkflowTaskAddRoleTaskParamsArgs

func WorkflowTaskAddRoleTaskParamsPtr(v *WorkflowTaskAddRoleTaskParamsArgs) WorkflowTaskAddRoleTaskParamsPtrInput {
	return (*workflowTaskAddRoleTaskParamsPtrType)(v)
}

func (*workflowTaskAddRoleTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAddRoleTaskParams)(nil)).Elem()
}

func (i *workflowTaskAddRoleTaskParamsPtrType) ToWorkflowTaskAddRoleTaskParamsPtrOutput() WorkflowTaskAddRoleTaskParamsPtrOutput {
	return i.ToWorkflowTaskAddRoleTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskAddRoleTaskParamsPtrType) ToWorkflowTaskAddRoleTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddRoleTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddRoleTaskParamsPtrOutput)
}

type WorkflowTaskAddRoleTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddRoleTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAddRoleTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAddRoleTaskParamsOutput) ToWorkflowTaskAddRoleTaskParamsOutput() WorkflowTaskAddRoleTaskParamsOutput {
	return o
}

func (o WorkflowTaskAddRoleTaskParamsOutput) ToWorkflowTaskAddRoleTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAddRoleTaskParamsOutput {
	return o
}

func (o WorkflowTaskAddRoleTaskParamsOutput) ToWorkflowTaskAddRoleTaskParamsPtrOutput() WorkflowTaskAddRoleTaskParamsPtrOutput {
	return o.ToWorkflowTaskAddRoleTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskAddRoleTaskParamsOutput) ToWorkflowTaskAddRoleTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddRoleTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskAddRoleTaskParams) *WorkflowTaskAddRoleTaskParams {
		return &v
	}).(WorkflowTaskAddRoleTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`.  The user this role is assigned to
func (o WorkflowTaskAddRoleTaskParamsOutput) AssignedToUser() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskAddRoleTaskParams) map[string]string { return v.AssignedToUser }).(pulumi.StringMapOutput)
}

// [DEPRECATED] Use assigned*to*user attribute instead. The user id this role is assigned to
func (o WorkflowTaskAddRoleTaskParamsOutput) AssignedToUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAddRoleTaskParams) *string { return v.AssignedToUserId }).(pulumi.StringPtrOutput)
}

// The role id to add to the incident
func (o WorkflowTaskAddRoleTaskParamsOutput) IncidentRoleId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAddRoleTaskParams) string { return v.IncidentRoleId }).(pulumi.StringOutput)
}

func (o WorkflowTaskAddRoleTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAddRoleTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskAddRoleTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddRoleTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAddRoleTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAddRoleTaskParamsPtrOutput) ToWorkflowTaskAddRoleTaskParamsPtrOutput() WorkflowTaskAddRoleTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAddRoleTaskParamsPtrOutput) ToWorkflowTaskAddRoleTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddRoleTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAddRoleTaskParamsPtrOutput) Elem() WorkflowTaskAddRoleTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskAddRoleTaskParams) WorkflowTaskAddRoleTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskAddRoleTaskParams
		return ret
	}).(WorkflowTaskAddRoleTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`.  The user this role is assigned to
func (o WorkflowTaskAddRoleTaskParamsPtrOutput) AssignedToUser() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskAddRoleTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.AssignedToUser
	}).(pulumi.StringMapOutput)
}

// [DEPRECATED] Use assigned*to*user attribute instead. The user id this role is assigned to
func (o WorkflowTaskAddRoleTaskParamsPtrOutput) AssignedToUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddRoleTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.AssignedToUserId
	}).(pulumi.StringPtrOutput)
}

// The role id to add to the incident
func (o WorkflowTaskAddRoleTaskParamsPtrOutput) IncidentRoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddRoleTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.IncidentRoleId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskAddRoleTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddRoleTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskAddSlackBookmarkTaskParams struct {
	// Map must contain two fields, `id` and `name`.
	Channel map[string]string `pulumi:"channel"`
	// The bookmark emoji
	Emoji *string `pulumi:"emoji"`
	// The bookmark link. Required if not a playbook bookmark
	Link *string `pulumi:"link"`
	// The playbook id if bookmark is of an incident playbook
	PlaybookId *string `pulumi:"playbookId"`
	TaskType   *string `pulumi:"taskType"`
	// The bookmark title. Required if not a playbook bookmark
	Title *string `pulumi:"title"`
}

// WorkflowTaskAddSlackBookmarkTaskParamsInput is an input type that accepts WorkflowTaskAddSlackBookmarkTaskParamsArgs and WorkflowTaskAddSlackBookmarkTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskAddSlackBookmarkTaskParamsInput` via:
//
//	WorkflowTaskAddSlackBookmarkTaskParamsArgs{...}
type WorkflowTaskAddSlackBookmarkTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskAddSlackBookmarkTaskParamsOutput() WorkflowTaskAddSlackBookmarkTaskParamsOutput
	ToWorkflowTaskAddSlackBookmarkTaskParamsOutputWithContext(context.Context) WorkflowTaskAddSlackBookmarkTaskParamsOutput
}

type WorkflowTaskAddSlackBookmarkTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`.
	Channel pulumi.StringMapInput `pulumi:"channel"`
	// The bookmark emoji
	Emoji pulumi.StringPtrInput `pulumi:"emoji"`
	// The bookmark link. Required if not a playbook bookmark
	Link pulumi.StringPtrInput `pulumi:"link"`
	// The playbook id if bookmark is of an incident playbook
	PlaybookId pulumi.StringPtrInput `pulumi:"playbookId"`
	TaskType   pulumi.StringPtrInput `pulumi:"taskType"`
	// The bookmark title. Required if not a playbook bookmark
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (WorkflowTaskAddSlackBookmarkTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAddSlackBookmarkTaskParams)(nil)).Elem()
}

func (i WorkflowTaskAddSlackBookmarkTaskParamsArgs) ToWorkflowTaskAddSlackBookmarkTaskParamsOutput() WorkflowTaskAddSlackBookmarkTaskParamsOutput {
	return i.ToWorkflowTaskAddSlackBookmarkTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskAddSlackBookmarkTaskParamsArgs) ToWorkflowTaskAddSlackBookmarkTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAddSlackBookmarkTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddSlackBookmarkTaskParamsOutput)
}

func (i WorkflowTaskAddSlackBookmarkTaskParamsArgs) ToWorkflowTaskAddSlackBookmarkTaskParamsPtrOutput() WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput {
	return i.ToWorkflowTaskAddSlackBookmarkTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskAddSlackBookmarkTaskParamsArgs) ToWorkflowTaskAddSlackBookmarkTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddSlackBookmarkTaskParamsOutput).ToWorkflowTaskAddSlackBookmarkTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskAddSlackBookmarkTaskParamsPtrInput is an input type that accepts WorkflowTaskAddSlackBookmarkTaskParamsArgs, WorkflowTaskAddSlackBookmarkTaskParamsPtr and WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskAddSlackBookmarkTaskParamsPtrInput` via:
//
//	        WorkflowTaskAddSlackBookmarkTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskAddSlackBookmarkTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskAddSlackBookmarkTaskParamsPtrOutput() WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput
	ToWorkflowTaskAddSlackBookmarkTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput
}

type workflowTaskAddSlackBookmarkTaskParamsPtrType WorkflowTaskAddSlackBookmarkTaskParamsArgs

func WorkflowTaskAddSlackBookmarkTaskParamsPtr(v *WorkflowTaskAddSlackBookmarkTaskParamsArgs) WorkflowTaskAddSlackBookmarkTaskParamsPtrInput {
	return (*workflowTaskAddSlackBookmarkTaskParamsPtrType)(v)
}

func (*workflowTaskAddSlackBookmarkTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAddSlackBookmarkTaskParams)(nil)).Elem()
}

func (i *workflowTaskAddSlackBookmarkTaskParamsPtrType) ToWorkflowTaskAddSlackBookmarkTaskParamsPtrOutput() WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput {
	return i.ToWorkflowTaskAddSlackBookmarkTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskAddSlackBookmarkTaskParamsPtrType) ToWorkflowTaskAddSlackBookmarkTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput)
}

type WorkflowTaskAddSlackBookmarkTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddSlackBookmarkTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAddSlackBookmarkTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAddSlackBookmarkTaskParamsOutput) ToWorkflowTaskAddSlackBookmarkTaskParamsOutput() WorkflowTaskAddSlackBookmarkTaskParamsOutput {
	return o
}

func (o WorkflowTaskAddSlackBookmarkTaskParamsOutput) ToWorkflowTaskAddSlackBookmarkTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAddSlackBookmarkTaskParamsOutput {
	return o
}

func (o WorkflowTaskAddSlackBookmarkTaskParamsOutput) ToWorkflowTaskAddSlackBookmarkTaskParamsPtrOutput() WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput {
	return o.ToWorkflowTaskAddSlackBookmarkTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskAddSlackBookmarkTaskParamsOutput) ToWorkflowTaskAddSlackBookmarkTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskAddSlackBookmarkTaskParams) *WorkflowTaskAddSlackBookmarkTaskParams {
		return &v
	}).(WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAddSlackBookmarkTaskParamsOutput) Channel() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskAddSlackBookmarkTaskParams) map[string]string { return v.Channel }).(pulumi.StringMapOutput)
}

// The bookmark emoji
func (o WorkflowTaskAddSlackBookmarkTaskParamsOutput) Emoji() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAddSlackBookmarkTaskParams) *string { return v.Emoji }).(pulumi.StringPtrOutput)
}

// The bookmark link. Required if not a playbook bookmark
func (o WorkflowTaskAddSlackBookmarkTaskParamsOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAddSlackBookmarkTaskParams) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// The playbook id if bookmark is of an incident playbook
func (o WorkflowTaskAddSlackBookmarkTaskParamsOutput) PlaybookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAddSlackBookmarkTaskParams) *string { return v.PlaybookId }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskAddSlackBookmarkTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAddSlackBookmarkTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The bookmark title. Required if not a playbook bookmark
func (o WorkflowTaskAddSlackBookmarkTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAddSlackBookmarkTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAddSlackBookmarkTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput) ToWorkflowTaskAddSlackBookmarkTaskParamsPtrOutput() WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput) ToWorkflowTaskAddSlackBookmarkTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput) Elem() WorkflowTaskAddSlackBookmarkTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskAddSlackBookmarkTaskParams) WorkflowTaskAddSlackBookmarkTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskAddSlackBookmarkTaskParams
		return ret
	}).(WorkflowTaskAddSlackBookmarkTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput) Channel() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskAddSlackBookmarkTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.StringMapOutput)
}

// The bookmark emoji
func (o WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput) Emoji() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddSlackBookmarkTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Emoji
	}).(pulumi.StringPtrOutput)
}

// The bookmark link. Required if not a playbook bookmark
func (o WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddSlackBookmarkTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// The playbook id if bookmark is of an incident playbook
func (o WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput) PlaybookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddSlackBookmarkTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.PlaybookId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddSlackBookmarkTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The bookmark title. Required if not a playbook bookmark
func (o WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddSlackBookmarkTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskAddTeamTaskParams struct {
	// The team id
	GroupId  string  `pulumi:"groupId"`
	TaskType *string `pulumi:"taskType"`
}

// WorkflowTaskAddTeamTaskParamsInput is an input type that accepts WorkflowTaskAddTeamTaskParamsArgs and WorkflowTaskAddTeamTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskAddTeamTaskParamsInput` via:
//
//	WorkflowTaskAddTeamTaskParamsArgs{...}
type WorkflowTaskAddTeamTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskAddTeamTaskParamsOutput() WorkflowTaskAddTeamTaskParamsOutput
	ToWorkflowTaskAddTeamTaskParamsOutputWithContext(context.Context) WorkflowTaskAddTeamTaskParamsOutput
}

type WorkflowTaskAddTeamTaskParamsArgs struct {
	// The team id
	GroupId  pulumi.StringInput    `pulumi:"groupId"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskAddTeamTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAddTeamTaskParams)(nil)).Elem()
}

func (i WorkflowTaskAddTeamTaskParamsArgs) ToWorkflowTaskAddTeamTaskParamsOutput() WorkflowTaskAddTeamTaskParamsOutput {
	return i.ToWorkflowTaskAddTeamTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskAddTeamTaskParamsArgs) ToWorkflowTaskAddTeamTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAddTeamTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddTeamTaskParamsOutput)
}

func (i WorkflowTaskAddTeamTaskParamsArgs) ToWorkflowTaskAddTeamTaskParamsPtrOutput() WorkflowTaskAddTeamTaskParamsPtrOutput {
	return i.ToWorkflowTaskAddTeamTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskAddTeamTaskParamsArgs) ToWorkflowTaskAddTeamTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddTeamTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddTeamTaskParamsOutput).ToWorkflowTaskAddTeamTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskAddTeamTaskParamsPtrInput is an input type that accepts WorkflowTaskAddTeamTaskParamsArgs, WorkflowTaskAddTeamTaskParamsPtr and WorkflowTaskAddTeamTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskAddTeamTaskParamsPtrInput` via:
//
//	        WorkflowTaskAddTeamTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskAddTeamTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskAddTeamTaskParamsPtrOutput() WorkflowTaskAddTeamTaskParamsPtrOutput
	ToWorkflowTaskAddTeamTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskAddTeamTaskParamsPtrOutput
}

type workflowTaskAddTeamTaskParamsPtrType WorkflowTaskAddTeamTaskParamsArgs

func WorkflowTaskAddTeamTaskParamsPtr(v *WorkflowTaskAddTeamTaskParamsArgs) WorkflowTaskAddTeamTaskParamsPtrInput {
	return (*workflowTaskAddTeamTaskParamsPtrType)(v)
}

func (*workflowTaskAddTeamTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAddTeamTaskParams)(nil)).Elem()
}

func (i *workflowTaskAddTeamTaskParamsPtrType) ToWorkflowTaskAddTeamTaskParamsPtrOutput() WorkflowTaskAddTeamTaskParamsPtrOutput {
	return i.ToWorkflowTaskAddTeamTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskAddTeamTaskParamsPtrType) ToWorkflowTaskAddTeamTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddTeamTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddTeamTaskParamsPtrOutput)
}

type WorkflowTaskAddTeamTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddTeamTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAddTeamTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAddTeamTaskParamsOutput) ToWorkflowTaskAddTeamTaskParamsOutput() WorkflowTaskAddTeamTaskParamsOutput {
	return o
}

func (o WorkflowTaskAddTeamTaskParamsOutput) ToWorkflowTaskAddTeamTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAddTeamTaskParamsOutput {
	return o
}

func (o WorkflowTaskAddTeamTaskParamsOutput) ToWorkflowTaskAddTeamTaskParamsPtrOutput() WorkflowTaskAddTeamTaskParamsPtrOutput {
	return o.ToWorkflowTaskAddTeamTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskAddTeamTaskParamsOutput) ToWorkflowTaskAddTeamTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddTeamTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskAddTeamTaskParams) *WorkflowTaskAddTeamTaskParams {
		return &v
	}).(WorkflowTaskAddTeamTaskParamsPtrOutput)
}

// The team id
func (o WorkflowTaskAddTeamTaskParamsOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAddTeamTaskParams) string { return v.GroupId }).(pulumi.StringOutput)
}

func (o WorkflowTaskAddTeamTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAddTeamTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskAddTeamTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddTeamTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAddTeamTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAddTeamTaskParamsPtrOutput) ToWorkflowTaskAddTeamTaskParamsPtrOutput() WorkflowTaskAddTeamTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAddTeamTaskParamsPtrOutput) ToWorkflowTaskAddTeamTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddTeamTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAddTeamTaskParamsPtrOutput) Elem() WorkflowTaskAddTeamTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskAddTeamTaskParams) WorkflowTaskAddTeamTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskAddTeamTaskParams
		return ret
	}).(WorkflowTaskAddTeamTaskParamsOutput)
}

// The team id
func (o WorkflowTaskAddTeamTaskParamsPtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddTeamTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.GroupId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskAddTeamTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddTeamTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskAddToTimelineTaskParams struct {
	// The timeline event description
	Event               string                                                  `pulumi:"event"`
	PostToSlackChannels []WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	TaskType            *string                                                 `pulumi:"taskType"`
	// A URL for the timeline event
	Url *string `pulumi:"url"`
}

// WorkflowTaskAddToTimelineTaskParamsInput is an input type that accepts WorkflowTaskAddToTimelineTaskParamsArgs and WorkflowTaskAddToTimelineTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskAddToTimelineTaskParamsInput` via:
//
//	WorkflowTaskAddToTimelineTaskParamsArgs{...}
type WorkflowTaskAddToTimelineTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskAddToTimelineTaskParamsOutput() WorkflowTaskAddToTimelineTaskParamsOutput
	ToWorkflowTaskAddToTimelineTaskParamsOutputWithContext(context.Context) WorkflowTaskAddToTimelineTaskParamsOutput
}

type WorkflowTaskAddToTimelineTaskParamsArgs struct {
	// The timeline event description
	Event               pulumi.StringInput                                              `pulumi:"event"`
	PostToSlackChannels WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	TaskType            pulumi.StringPtrInput                                           `pulumi:"taskType"`
	// A URL for the timeline event
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (WorkflowTaskAddToTimelineTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAddToTimelineTaskParams)(nil)).Elem()
}

func (i WorkflowTaskAddToTimelineTaskParamsArgs) ToWorkflowTaskAddToTimelineTaskParamsOutput() WorkflowTaskAddToTimelineTaskParamsOutput {
	return i.ToWorkflowTaskAddToTimelineTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskAddToTimelineTaskParamsArgs) ToWorkflowTaskAddToTimelineTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAddToTimelineTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddToTimelineTaskParamsOutput)
}

func (i WorkflowTaskAddToTimelineTaskParamsArgs) ToWorkflowTaskAddToTimelineTaskParamsPtrOutput() WorkflowTaskAddToTimelineTaskParamsPtrOutput {
	return i.ToWorkflowTaskAddToTimelineTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskAddToTimelineTaskParamsArgs) ToWorkflowTaskAddToTimelineTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddToTimelineTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddToTimelineTaskParamsOutput).ToWorkflowTaskAddToTimelineTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskAddToTimelineTaskParamsPtrInput is an input type that accepts WorkflowTaskAddToTimelineTaskParamsArgs, WorkflowTaskAddToTimelineTaskParamsPtr and WorkflowTaskAddToTimelineTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskAddToTimelineTaskParamsPtrInput` via:
//
//	        WorkflowTaskAddToTimelineTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskAddToTimelineTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskAddToTimelineTaskParamsPtrOutput() WorkflowTaskAddToTimelineTaskParamsPtrOutput
	ToWorkflowTaskAddToTimelineTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskAddToTimelineTaskParamsPtrOutput
}

type workflowTaskAddToTimelineTaskParamsPtrType WorkflowTaskAddToTimelineTaskParamsArgs

func WorkflowTaskAddToTimelineTaskParamsPtr(v *WorkflowTaskAddToTimelineTaskParamsArgs) WorkflowTaskAddToTimelineTaskParamsPtrInput {
	return (*workflowTaskAddToTimelineTaskParamsPtrType)(v)
}

func (*workflowTaskAddToTimelineTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAddToTimelineTaskParams)(nil)).Elem()
}

func (i *workflowTaskAddToTimelineTaskParamsPtrType) ToWorkflowTaskAddToTimelineTaskParamsPtrOutput() WorkflowTaskAddToTimelineTaskParamsPtrOutput {
	return i.ToWorkflowTaskAddToTimelineTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskAddToTimelineTaskParamsPtrType) ToWorkflowTaskAddToTimelineTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddToTimelineTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddToTimelineTaskParamsPtrOutput)
}

type WorkflowTaskAddToTimelineTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddToTimelineTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAddToTimelineTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAddToTimelineTaskParamsOutput) ToWorkflowTaskAddToTimelineTaskParamsOutput() WorkflowTaskAddToTimelineTaskParamsOutput {
	return o
}

func (o WorkflowTaskAddToTimelineTaskParamsOutput) ToWorkflowTaskAddToTimelineTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAddToTimelineTaskParamsOutput {
	return o
}

func (o WorkflowTaskAddToTimelineTaskParamsOutput) ToWorkflowTaskAddToTimelineTaskParamsPtrOutput() WorkflowTaskAddToTimelineTaskParamsPtrOutput {
	return o.ToWorkflowTaskAddToTimelineTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskAddToTimelineTaskParamsOutput) ToWorkflowTaskAddToTimelineTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddToTimelineTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskAddToTimelineTaskParams) *WorkflowTaskAddToTimelineTaskParams {
		return &v
	}).(WorkflowTaskAddToTimelineTaskParamsPtrOutput)
}

// The timeline event description
func (o WorkflowTaskAddToTimelineTaskParamsOutput) Event() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAddToTimelineTaskParams) string { return v.Event }).(pulumi.StringOutput)
}

func (o WorkflowTaskAddToTimelineTaskParamsOutput) PostToSlackChannels() WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskAddToTimelineTaskParams) []WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskAddToTimelineTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAddToTimelineTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// A URL for the timeline event
func (o WorkflowTaskAddToTimelineTaskParamsOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAddToTimelineTaskParams) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type WorkflowTaskAddToTimelineTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddToTimelineTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAddToTimelineTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAddToTimelineTaskParamsPtrOutput) ToWorkflowTaskAddToTimelineTaskParamsPtrOutput() WorkflowTaskAddToTimelineTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAddToTimelineTaskParamsPtrOutput) ToWorkflowTaskAddToTimelineTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAddToTimelineTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAddToTimelineTaskParamsPtrOutput) Elem() WorkflowTaskAddToTimelineTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskAddToTimelineTaskParams) WorkflowTaskAddToTimelineTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskAddToTimelineTaskParams
		return ret
	}).(WorkflowTaskAddToTimelineTaskParamsOutput)
}

// The timeline event description
func (o WorkflowTaskAddToTimelineTaskParamsPtrOutput) Event() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddToTimelineTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Event
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskAddToTimelineTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskAddToTimelineTaskParams) []WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskAddToTimelineTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddToTimelineTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// A URL for the timeline event
func (o WorkflowTaskAddToTimelineTaskParamsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddToTimelineTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArgs and WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput() WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArgs) ToWorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput() WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArgs) ToWorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArray and WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArray{ WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArray []WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelInput

func (WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArray) ToWorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArray) ToWorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput) ToWorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput() WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput) ToWorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskAddToTimelineTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskArchiveSlackChannelsTaskParams struct {
	Channels []WorkflowTaskArchiveSlackChannelsTaskParamsChannel `pulumi:"channels"`
	TaskType *string                                             `pulumi:"taskType"`
}

// WorkflowTaskArchiveSlackChannelsTaskParamsInput is an input type that accepts WorkflowTaskArchiveSlackChannelsTaskParamsArgs and WorkflowTaskArchiveSlackChannelsTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskArchiveSlackChannelsTaskParamsInput` via:
//
//	WorkflowTaskArchiveSlackChannelsTaskParamsArgs{...}
type WorkflowTaskArchiveSlackChannelsTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskArchiveSlackChannelsTaskParamsOutput() WorkflowTaskArchiveSlackChannelsTaskParamsOutput
	ToWorkflowTaskArchiveSlackChannelsTaskParamsOutputWithContext(context.Context) WorkflowTaskArchiveSlackChannelsTaskParamsOutput
}

type WorkflowTaskArchiveSlackChannelsTaskParamsArgs struct {
	Channels WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayInput `pulumi:"channels"`
	TaskType pulumi.StringPtrInput                                       `pulumi:"taskType"`
}

func (WorkflowTaskArchiveSlackChannelsTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskArchiveSlackChannelsTaskParams)(nil)).Elem()
}

func (i WorkflowTaskArchiveSlackChannelsTaskParamsArgs) ToWorkflowTaskArchiveSlackChannelsTaskParamsOutput() WorkflowTaskArchiveSlackChannelsTaskParamsOutput {
	return i.ToWorkflowTaskArchiveSlackChannelsTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskArchiveSlackChannelsTaskParamsArgs) ToWorkflowTaskArchiveSlackChannelsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskArchiveSlackChannelsTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskArchiveSlackChannelsTaskParamsOutput)
}

func (i WorkflowTaskArchiveSlackChannelsTaskParamsArgs) ToWorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput() WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput {
	return i.ToWorkflowTaskArchiveSlackChannelsTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskArchiveSlackChannelsTaskParamsArgs) ToWorkflowTaskArchiveSlackChannelsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskArchiveSlackChannelsTaskParamsOutput).ToWorkflowTaskArchiveSlackChannelsTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskArchiveSlackChannelsTaskParamsPtrInput is an input type that accepts WorkflowTaskArchiveSlackChannelsTaskParamsArgs, WorkflowTaskArchiveSlackChannelsTaskParamsPtr and WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskArchiveSlackChannelsTaskParamsPtrInput` via:
//
//	        WorkflowTaskArchiveSlackChannelsTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskArchiveSlackChannelsTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput() WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput
	ToWorkflowTaskArchiveSlackChannelsTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput
}

type workflowTaskArchiveSlackChannelsTaskParamsPtrType WorkflowTaskArchiveSlackChannelsTaskParamsArgs

func WorkflowTaskArchiveSlackChannelsTaskParamsPtr(v *WorkflowTaskArchiveSlackChannelsTaskParamsArgs) WorkflowTaskArchiveSlackChannelsTaskParamsPtrInput {
	return (*workflowTaskArchiveSlackChannelsTaskParamsPtrType)(v)
}

func (*workflowTaskArchiveSlackChannelsTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskArchiveSlackChannelsTaskParams)(nil)).Elem()
}

func (i *workflowTaskArchiveSlackChannelsTaskParamsPtrType) ToWorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput() WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput {
	return i.ToWorkflowTaskArchiveSlackChannelsTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskArchiveSlackChannelsTaskParamsPtrType) ToWorkflowTaskArchiveSlackChannelsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput)
}

type WorkflowTaskArchiveSlackChannelsTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskArchiveSlackChannelsTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskArchiveSlackChannelsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsOutput) ToWorkflowTaskArchiveSlackChannelsTaskParamsOutput() WorkflowTaskArchiveSlackChannelsTaskParamsOutput {
	return o
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsOutput) ToWorkflowTaskArchiveSlackChannelsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskArchiveSlackChannelsTaskParamsOutput {
	return o
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsOutput) ToWorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput() WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput {
	return o.ToWorkflowTaskArchiveSlackChannelsTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsOutput) ToWorkflowTaskArchiveSlackChannelsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskArchiveSlackChannelsTaskParams) *WorkflowTaskArchiveSlackChannelsTaskParams {
		return &v
	}).(WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput)
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsOutput) Channels() WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskArchiveSlackChannelsTaskParams) []WorkflowTaskArchiveSlackChannelsTaskParamsChannel {
		return v.Channels
	}).(WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput)
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskArchiveSlackChannelsTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskArchiveSlackChannelsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput) ToWorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput() WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput) ToWorkflowTaskArchiveSlackChannelsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput) Elem() WorkflowTaskArchiveSlackChannelsTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskArchiveSlackChannelsTaskParams) WorkflowTaskArchiveSlackChannelsTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskArchiveSlackChannelsTaskParams
		return ret
	}).(WorkflowTaskArchiveSlackChannelsTaskParamsOutput)
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput) Channels() WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskArchiveSlackChannelsTaskParams) []WorkflowTaskArchiveSlackChannelsTaskParamsChannel {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput)
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskArchiveSlackChannelsTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskArchiveSlackChannelsTaskParamsChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskArchiveSlackChannelsTaskParamsChannelInput is an input type that accepts WorkflowTaskArchiveSlackChannelsTaskParamsChannelArgs and WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskArchiveSlackChannelsTaskParamsChannelInput` via:
//
//	WorkflowTaskArchiveSlackChannelsTaskParamsChannelArgs{...}
type WorkflowTaskArchiveSlackChannelsTaskParamsChannelInput interface {
	pulumi.Input

	ToWorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput() WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput
	ToWorkflowTaskArchiveSlackChannelsTaskParamsChannelOutputWithContext(context.Context) WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput
}

type WorkflowTaskArchiveSlackChannelsTaskParamsChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskArchiveSlackChannelsTaskParamsChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskArchiveSlackChannelsTaskParamsChannel)(nil)).Elem()
}

func (i WorkflowTaskArchiveSlackChannelsTaskParamsChannelArgs) ToWorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput() WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput {
	return i.ToWorkflowTaskArchiveSlackChannelsTaskParamsChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskArchiveSlackChannelsTaskParamsChannelArgs) ToWorkflowTaskArchiveSlackChannelsTaskParamsChannelOutputWithContext(ctx context.Context) WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput)
}

// WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayInput is an input type that accepts WorkflowTaskArchiveSlackChannelsTaskParamsChannelArray and WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayInput` via:
//
//	WorkflowTaskArchiveSlackChannelsTaskParamsChannelArray{ WorkflowTaskArchiveSlackChannelsTaskParamsChannelArgs{...} }
type WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput() WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput
	ToWorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutputWithContext(context.Context) WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput
}

type WorkflowTaskArchiveSlackChannelsTaskParamsChannelArray []WorkflowTaskArchiveSlackChannelsTaskParamsChannelInput

func (WorkflowTaskArchiveSlackChannelsTaskParamsChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskArchiveSlackChannelsTaskParamsChannel)(nil)).Elem()
}

func (i WorkflowTaskArchiveSlackChannelsTaskParamsChannelArray) ToWorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput() WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput {
	return i.ToWorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskArchiveSlackChannelsTaskParamsChannelArray) ToWorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput)
}

type WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskArchiveSlackChannelsTaskParamsChannel)(nil)).Elem()
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput) ToWorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput() WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput {
	return o
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput) ToWorkflowTaskArchiveSlackChannelsTaskParamsChannelOutputWithContext(ctx context.Context) WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput {
	return o
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskArchiveSlackChannelsTaskParamsChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskArchiveSlackChannelsTaskParamsChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskArchiveSlackChannelsTaskParamsChannel)(nil)).Elem()
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput) ToWorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput() WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput {
	return o
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput) ToWorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput {
	return o
}

func (o WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskArchiveSlackChannelsTaskParamsChannel {
		return vs[0].([]WorkflowTaskArchiveSlackChannelsTaskParamsChannel)[vs[1].(int)]
	}).(WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput)
}

type WorkflowTaskAttachDatadogDashboardsTaskParams struct {
	Dashboards []WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard `pulumi:"dashboards"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                             `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	TaskType               *string                                                           `pulumi:"taskType"`
}

// WorkflowTaskAttachDatadogDashboardsTaskParamsInput is an input type that accepts WorkflowTaskAttachDatadogDashboardsTaskParamsArgs and WorkflowTaskAttachDatadogDashboardsTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskAttachDatadogDashboardsTaskParamsInput` via:
//
//	WorkflowTaskAttachDatadogDashboardsTaskParamsArgs{...}
type WorkflowTaskAttachDatadogDashboardsTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskAttachDatadogDashboardsTaskParamsOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsOutput
	ToWorkflowTaskAttachDatadogDashboardsTaskParamsOutputWithContext(context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsOutput
}

type WorkflowTaskAttachDatadogDashboardsTaskParamsArgs struct {
	Dashboards WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayInput `pulumi:"dashboards"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                                       `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	TaskType               pulumi.StringPtrInput                                                     `pulumi:"taskType"`
}

func (WorkflowTaskAttachDatadogDashboardsTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAttachDatadogDashboardsTaskParams)(nil)).Elem()
}

func (i WorkflowTaskAttachDatadogDashboardsTaskParamsArgs) ToWorkflowTaskAttachDatadogDashboardsTaskParamsOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsOutput {
	return i.ToWorkflowTaskAttachDatadogDashboardsTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskAttachDatadogDashboardsTaskParamsArgs) ToWorkflowTaskAttachDatadogDashboardsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAttachDatadogDashboardsTaskParamsOutput)
}

func (i WorkflowTaskAttachDatadogDashboardsTaskParamsArgs) ToWorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput {
	return i.ToWorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskAttachDatadogDashboardsTaskParamsArgs) ToWorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAttachDatadogDashboardsTaskParamsOutput).ToWorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskAttachDatadogDashboardsTaskParamsPtrInput is an input type that accepts WorkflowTaskAttachDatadogDashboardsTaskParamsArgs, WorkflowTaskAttachDatadogDashboardsTaskParamsPtr and WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskAttachDatadogDashboardsTaskParamsPtrInput` via:
//
//	        WorkflowTaskAttachDatadogDashboardsTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskAttachDatadogDashboardsTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput
	ToWorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput
}

type workflowTaskAttachDatadogDashboardsTaskParamsPtrType WorkflowTaskAttachDatadogDashboardsTaskParamsArgs

func WorkflowTaskAttachDatadogDashboardsTaskParamsPtr(v *WorkflowTaskAttachDatadogDashboardsTaskParamsArgs) WorkflowTaskAttachDatadogDashboardsTaskParamsPtrInput {
	return (*workflowTaskAttachDatadogDashboardsTaskParamsPtrType)(v)
}

func (*workflowTaskAttachDatadogDashboardsTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAttachDatadogDashboardsTaskParams)(nil)).Elem()
}

func (i *workflowTaskAttachDatadogDashboardsTaskParamsPtrType) ToWorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput {
	return i.ToWorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskAttachDatadogDashboardsTaskParamsPtrType) ToWorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput)
}

type WorkflowTaskAttachDatadogDashboardsTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAttachDatadogDashboardsTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAttachDatadogDashboardsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsOutput) ToWorkflowTaskAttachDatadogDashboardsTaskParamsOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsOutput) ToWorkflowTaskAttachDatadogDashboardsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsOutput) ToWorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput {
	return o.ToWorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsOutput) ToWorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskAttachDatadogDashboardsTaskParams) *WorkflowTaskAttachDatadogDashboardsTaskParams {
		return &v
	}).(WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput)
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsOutput) Dashboards() WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput {
	return o.ApplyT(func(v WorkflowTaskAttachDatadogDashboardsTaskParams) []WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard {
		return v.Dashboards
	}).(WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskAttachDatadogDashboardsTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAttachDatadogDashboardsTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsOutput) PostToSlackChannels() WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskAttachDatadogDashboardsTaskParams) []WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAttachDatadogDashboardsTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAttachDatadogDashboardsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput) ToWorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput) ToWorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput) Elem() WorkflowTaskAttachDatadogDashboardsTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskAttachDatadogDashboardsTaskParams) WorkflowTaskAttachDatadogDashboardsTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskAttachDatadogDashboardsTaskParams
		return ret
	}).(WorkflowTaskAttachDatadogDashboardsTaskParamsOutput)
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput) Dashboards() WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskAttachDatadogDashboardsTaskParams) []WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard {
		if v == nil {
			return nil
		}
		return v.Dashboards
	}).(WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAttachDatadogDashboardsTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskAttachDatadogDashboardsTaskParams) []WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAttachDatadogDashboardsTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardInput is an input type that accepts WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArgs and WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput values.
// You can construct a concrete instance of `WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardInput` via:
//
//	WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArgs{...}
type WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardInput interface {
	pulumi.Input

	ToWorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput
	ToWorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutputWithContext(context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput
}

type WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard)(nil)).Elem()
}

func (i WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArgs) ToWorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput {
	return i.ToWorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutputWithContext(context.Background())
}

func (i WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArgs) ToWorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput)
}

// WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayInput is an input type that accepts WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArray and WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayInput` via:
//
//	WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArray{ WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArgs{...} }
type WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayInput interface {
	pulumi.Input

	ToWorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput
	ToWorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutputWithContext(context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput
}

type WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArray []WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardInput

func (WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard)(nil)).Elem()
}

func (i WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArray) ToWorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput {
	return i.ToWorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArray) ToWorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput)
}

type WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard)(nil)).Elem()
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput) ToWorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput) ToWorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard)(nil)).Elem()
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput) ToWorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput) ToWorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput) Index(i pulumi.IntInput) WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard {
		return vs[0].([]WorkflowTaskAttachDatadogDashboardsTaskParamsDashboard)[vs[1].(int)]
	}).(WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput)
}

type WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArgs and WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArgs) ToWorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArgs) ToWorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArray and WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArray{ WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArray []WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelInput

func (WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArray) ToWorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArray) ToWorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput) ToWorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput) ToWorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskAutoAssignRoleOpsgenieTaskParams struct {
	// The role id
	IncidentRoleId string `pulumi:"incidentRoleId"`
	// Map must contain two fields, `id` and `name`.
	Schedule map[string]string `pulumi:"schedule"`
	TaskType *string           `pulumi:"taskType"`
}

// WorkflowTaskAutoAssignRoleOpsgenieTaskParamsInput is an input type that accepts WorkflowTaskAutoAssignRoleOpsgenieTaskParamsArgs and WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskAutoAssignRoleOpsgenieTaskParamsInput` via:
//
//	WorkflowTaskAutoAssignRoleOpsgenieTaskParamsArgs{...}
type WorkflowTaskAutoAssignRoleOpsgenieTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput() WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput
	ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutputWithContext(context.Context) WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput
}

type WorkflowTaskAutoAssignRoleOpsgenieTaskParamsArgs struct {
	// The role id
	IncidentRoleId pulumi.StringInput `pulumi:"incidentRoleId"`
	// Map must contain two fields, `id` and `name`.
	Schedule pulumi.StringMapInput `pulumi:"schedule"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskAutoAssignRoleOpsgenieTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAutoAssignRoleOpsgenieTaskParams)(nil)).Elem()
}

func (i WorkflowTaskAutoAssignRoleOpsgenieTaskParamsArgs) ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput() WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput {
	return i.ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskAutoAssignRoleOpsgenieTaskParamsArgs) ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput)
}

func (i WorkflowTaskAutoAssignRoleOpsgenieTaskParamsArgs) ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput() WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput {
	return i.ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskAutoAssignRoleOpsgenieTaskParamsArgs) ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput).ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrInput is an input type that accepts WorkflowTaskAutoAssignRoleOpsgenieTaskParamsArgs, WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtr and WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrInput` via:
//
//	        WorkflowTaskAutoAssignRoleOpsgenieTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput() WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput
	ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput
}

type workflowTaskAutoAssignRoleOpsgenieTaskParamsPtrType WorkflowTaskAutoAssignRoleOpsgenieTaskParamsArgs

func WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtr(v *WorkflowTaskAutoAssignRoleOpsgenieTaskParamsArgs) WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrInput {
	return (*workflowTaskAutoAssignRoleOpsgenieTaskParamsPtrType)(v)
}

func (*workflowTaskAutoAssignRoleOpsgenieTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAutoAssignRoleOpsgenieTaskParams)(nil)).Elem()
}

func (i *workflowTaskAutoAssignRoleOpsgenieTaskParamsPtrType) ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput() WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput {
	return i.ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskAutoAssignRoleOpsgenieTaskParamsPtrType) ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput)
}

type WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAutoAssignRoleOpsgenieTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput) ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput() WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput {
	return o
}

func (o WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput) ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput {
	return o
}

func (o WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput) ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput() WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput {
	return o.ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput) ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskAutoAssignRoleOpsgenieTaskParams) *WorkflowTaskAutoAssignRoleOpsgenieTaskParams {
		return &v
	}).(WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput)
}

// The role id
func (o WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput) IncidentRoleId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRoleOpsgenieTaskParams) string { return v.IncidentRoleId }).(pulumi.StringOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput) Schedule() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRoleOpsgenieTaskParams) map[string]string { return v.Schedule }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRoleOpsgenieTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAutoAssignRoleOpsgenieTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput) ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput() WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput) ToWorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput) Elem() WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRoleOpsgenieTaskParams) WorkflowTaskAutoAssignRoleOpsgenieTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskAutoAssignRoleOpsgenieTaskParams
		return ret
	}).(WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput)
}

// The role id
func (o WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput) IncidentRoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRoleOpsgenieTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.IncidentRoleId
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput) Schedule() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRoleOpsgenieTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRoleOpsgenieTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskAutoAssignRolePagerdutyTaskParams struct {
	// Map must contain two fields, `id` and `name`.
	EscalationPolicy map[string]string `pulumi:"escalationPolicy"`
	// The role id
	IncidentRoleId string `pulumi:"incidentRoleId"`
	// Map must contain two fields, `id` and `name`.
	Schedule map[string]string `pulumi:"schedule"`
	// Map must contain two fields, `id` and `name`.
	Service  map[string]string `pulumi:"service"`
	TaskType *string           `pulumi:"taskType"`
}

// WorkflowTaskAutoAssignRolePagerdutyTaskParamsInput is an input type that accepts WorkflowTaskAutoAssignRolePagerdutyTaskParamsArgs and WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskAutoAssignRolePagerdutyTaskParamsInput` via:
//
//	WorkflowTaskAutoAssignRolePagerdutyTaskParamsArgs{...}
type WorkflowTaskAutoAssignRolePagerdutyTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput() WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput
	ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsOutputWithContext(context.Context) WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput
}

type WorkflowTaskAutoAssignRolePagerdutyTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`.
	EscalationPolicy pulumi.StringMapInput `pulumi:"escalationPolicy"`
	// The role id
	IncidentRoleId pulumi.StringInput `pulumi:"incidentRoleId"`
	// Map must contain two fields, `id` and `name`.
	Schedule pulumi.StringMapInput `pulumi:"schedule"`
	// Map must contain two fields, `id` and `name`.
	Service  pulumi.StringMapInput `pulumi:"service"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskAutoAssignRolePagerdutyTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAutoAssignRolePagerdutyTaskParams)(nil)).Elem()
}

func (i WorkflowTaskAutoAssignRolePagerdutyTaskParamsArgs) ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput() WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput {
	return i.ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskAutoAssignRolePagerdutyTaskParamsArgs) ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput)
}

func (i WorkflowTaskAutoAssignRolePagerdutyTaskParamsArgs) ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput() WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput {
	return i.ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskAutoAssignRolePagerdutyTaskParamsArgs) ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput).ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrInput is an input type that accepts WorkflowTaskAutoAssignRolePagerdutyTaskParamsArgs, WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtr and WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrInput` via:
//
//	        WorkflowTaskAutoAssignRolePagerdutyTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput() WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput
	ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput
}

type workflowTaskAutoAssignRolePagerdutyTaskParamsPtrType WorkflowTaskAutoAssignRolePagerdutyTaskParamsArgs

func WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtr(v *WorkflowTaskAutoAssignRolePagerdutyTaskParamsArgs) WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrInput {
	return (*workflowTaskAutoAssignRolePagerdutyTaskParamsPtrType)(v)
}

func (*workflowTaskAutoAssignRolePagerdutyTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAutoAssignRolePagerdutyTaskParams)(nil)).Elem()
}

func (i *workflowTaskAutoAssignRolePagerdutyTaskParamsPtrType) ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput() WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput {
	return i.ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskAutoAssignRolePagerdutyTaskParamsPtrType) ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput)
}

type WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAutoAssignRolePagerdutyTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput) ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput() WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput {
	return o
}

func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput) ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput {
	return o
}

func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput) ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput() WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput {
	return o.ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput) ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskAutoAssignRolePagerdutyTaskParams) *WorkflowTaskAutoAssignRolePagerdutyTaskParams {
		return &v
	}).(WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput) EscalationPolicy() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRolePagerdutyTaskParams) map[string]string { return v.EscalationPolicy }).(pulumi.StringMapOutput)
}

// The role id
func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput) IncidentRoleId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRolePagerdutyTaskParams) string { return v.IncidentRoleId }).(pulumi.StringOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput) Schedule() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRolePagerdutyTaskParams) map[string]string { return v.Schedule }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput) Service() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRolePagerdutyTaskParams) map[string]string { return v.Service }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRolePagerdutyTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAutoAssignRolePagerdutyTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput) ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput() WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput) ToWorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput) Elem() WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRolePagerdutyTaskParams) WorkflowTaskAutoAssignRolePagerdutyTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskAutoAssignRolePagerdutyTaskParams
		return ret
	}).(WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput) EscalationPolicy() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRolePagerdutyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.EscalationPolicy
	}).(pulumi.StringMapOutput)
}

// The role id
func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput) IncidentRoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRolePagerdutyTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.IncidentRoleId
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput) Schedule() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRolePagerdutyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput) Service() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRolePagerdutyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRolePagerdutyTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskAutoAssignRoleRootlyTaskParams struct {
	// Map must contain two fields, `id` and `name`.
	EscalationPolicyTarget map[string]string `pulumi:"escalationPolicyTarget"`
	// Map must contain two fields, `id` and `name`.
	GroupTarget map[string]string `pulumi:"groupTarget"`
	// The role id
	IncidentRoleId string `pulumi:"incidentRoleId"`
	// Map must contain two fields, `id` and `name`.
	ScheduleTarget map[string]string `pulumi:"scheduleTarget"`
	// Map must contain two fields, `id` and `name`.
	ServiceTarget map[string]string `pulumi:"serviceTarget"`
	TaskType      *string           `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`.
	UserTarget map[string]string `pulumi:"userTarget"`
}

// WorkflowTaskAutoAssignRoleRootlyTaskParamsInput is an input type that accepts WorkflowTaskAutoAssignRoleRootlyTaskParamsArgs and WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskAutoAssignRoleRootlyTaskParamsInput` via:
//
//	WorkflowTaskAutoAssignRoleRootlyTaskParamsArgs{...}
type WorkflowTaskAutoAssignRoleRootlyTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskAutoAssignRoleRootlyTaskParamsOutput() WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput
	ToWorkflowTaskAutoAssignRoleRootlyTaskParamsOutputWithContext(context.Context) WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput
}

type WorkflowTaskAutoAssignRoleRootlyTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`.
	EscalationPolicyTarget pulumi.StringMapInput `pulumi:"escalationPolicyTarget"`
	// Map must contain two fields, `id` and `name`.
	GroupTarget pulumi.StringMapInput `pulumi:"groupTarget"`
	// The role id
	IncidentRoleId pulumi.StringInput `pulumi:"incidentRoleId"`
	// Map must contain two fields, `id` and `name`.
	ScheduleTarget pulumi.StringMapInput `pulumi:"scheduleTarget"`
	// Map must contain two fields, `id` and `name`.
	ServiceTarget pulumi.StringMapInput `pulumi:"serviceTarget"`
	TaskType      pulumi.StringPtrInput `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`.
	UserTarget pulumi.StringMapInput `pulumi:"userTarget"`
}

func (WorkflowTaskAutoAssignRoleRootlyTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAutoAssignRoleRootlyTaskParams)(nil)).Elem()
}

func (i WorkflowTaskAutoAssignRoleRootlyTaskParamsArgs) ToWorkflowTaskAutoAssignRoleRootlyTaskParamsOutput() WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput {
	return i.ToWorkflowTaskAutoAssignRoleRootlyTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskAutoAssignRoleRootlyTaskParamsArgs) ToWorkflowTaskAutoAssignRoleRootlyTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput)
}

func (i WorkflowTaskAutoAssignRoleRootlyTaskParamsArgs) ToWorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput() WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput {
	return i.ToWorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskAutoAssignRoleRootlyTaskParamsArgs) ToWorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput).ToWorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrInput is an input type that accepts WorkflowTaskAutoAssignRoleRootlyTaskParamsArgs, WorkflowTaskAutoAssignRoleRootlyTaskParamsPtr and WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrInput` via:
//
//	        WorkflowTaskAutoAssignRoleRootlyTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput() WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput
	ToWorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput
}

type workflowTaskAutoAssignRoleRootlyTaskParamsPtrType WorkflowTaskAutoAssignRoleRootlyTaskParamsArgs

func WorkflowTaskAutoAssignRoleRootlyTaskParamsPtr(v *WorkflowTaskAutoAssignRoleRootlyTaskParamsArgs) WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrInput {
	return (*workflowTaskAutoAssignRoleRootlyTaskParamsPtrType)(v)
}

func (*workflowTaskAutoAssignRoleRootlyTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAutoAssignRoleRootlyTaskParams)(nil)).Elem()
}

func (i *workflowTaskAutoAssignRoleRootlyTaskParamsPtrType) ToWorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput() WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput {
	return i.ToWorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskAutoAssignRoleRootlyTaskParamsPtrType) ToWorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput)
}

type WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAutoAssignRoleRootlyTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput) ToWorkflowTaskAutoAssignRoleRootlyTaskParamsOutput() WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput {
	return o
}

func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput) ToWorkflowTaskAutoAssignRoleRootlyTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput {
	return o
}

func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput) ToWorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput() WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput {
	return o.ToWorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput) ToWorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskAutoAssignRoleRootlyTaskParams) *WorkflowTaskAutoAssignRoleRootlyTaskParams {
		return &v
	}).(WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput) EscalationPolicyTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRoleRootlyTaskParams) map[string]string { return v.EscalationPolicyTarget }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput) GroupTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRoleRootlyTaskParams) map[string]string { return v.GroupTarget }).(pulumi.StringMapOutput)
}

// The role id
func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput) IncidentRoleId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRoleRootlyTaskParams) string { return v.IncidentRoleId }).(pulumi.StringOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput) ScheduleTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRoleRootlyTaskParams) map[string]string { return v.ScheduleTarget }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput) ServiceTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRoleRootlyTaskParams) map[string]string { return v.ServiceTarget }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRoleRootlyTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput) UserTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRoleRootlyTaskParams) map[string]string { return v.UserTarget }).(pulumi.StringMapOutput)
}

type WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAutoAssignRoleRootlyTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput) ToWorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput() WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput) ToWorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput) Elem() WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRoleRootlyTaskParams) WorkflowTaskAutoAssignRoleRootlyTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskAutoAssignRoleRootlyTaskParams
		return ret
	}).(WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput) EscalationPolicyTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRoleRootlyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.EscalationPolicyTarget
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput) GroupTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRoleRootlyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.GroupTarget
	}).(pulumi.StringMapOutput)
}

// The role id
func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput) IncidentRoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRoleRootlyTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.IncidentRoleId
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput) ScheduleTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRoleRootlyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.ScheduleTarget
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput) ServiceTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRoleRootlyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.ServiceTarget
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRoleRootlyTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput) UserTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRoleRootlyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserTarget
	}).(pulumi.StringMapOutput)
}

type WorkflowTaskAutoAssignRoleVictorOpsTaskParams struct {
	// The role id
	IncidentRoleId string  `pulumi:"incidentRoleId"`
	TaskType       *string `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`.
	Team map[string]string `pulumi:"team"`
}

// WorkflowTaskAutoAssignRoleVictorOpsTaskParamsInput is an input type that accepts WorkflowTaskAutoAssignRoleVictorOpsTaskParamsArgs and WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskAutoAssignRoleVictorOpsTaskParamsInput` via:
//
//	WorkflowTaskAutoAssignRoleVictorOpsTaskParamsArgs{...}
type WorkflowTaskAutoAssignRoleVictorOpsTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput() WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput
	ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutputWithContext(context.Context) WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput
}

type WorkflowTaskAutoAssignRoleVictorOpsTaskParamsArgs struct {
	// The role id
	IncidentRoleId pulumi.StringInput    `pulumi:"incidentRoleId"`
	TaskType       pulumi.StringPtrInput `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`.
	Team pulumi.StringMapInput `pulumi:"team"`
}

func (WorkflowTaskAutoAssignRoleVictorOpsTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAutoAssignRoleVictorOpsTaskParams)(nil)).Elem()
}

func (i WorkflowTaskAutoAssignRoleVictorOpsTaskParamsArgs) ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput() WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput {
	return i.ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskAutoAssignRoleVictorOpsTaskParamsArgs) ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput)
}

func (i WorkflowTaskAutoAssignRoleVictorOpsTaskParamsArgs) ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput() WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput {
	return i.ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskAutoAssignRoleVictorOpsTaskParamsArgs) ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput).ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrInput is an input type that accepts WorkflowTaskAutoAssignRoleVictorOpsTaskParamsArgs, WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtr and WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrInput` via:
//
//	        WorkflowTaskAutoAssignRoleVictorOpsTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput() WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput
	ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput
}

type workflowTaskAutoAssignRoleVictorOpsTaskParamsPtrType WorkflowTaskAutoAssignRoleVictorOpsTaskParamsArgs

func WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtr(v *WorkflowTaskAutoAssignRoleVictorOpsTaskParamsArgs) WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrInput {
	return (*workflowTaskAutoAssignRoleVictorOpsTaskParamsPtrType)(v)
}

func (*workflowTaskAutoAssignRoleVictorOpsTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAutoAssignRoleVictorOpsTaskParams)(nil)).Elem()
}

func (i *workflowTaskAutoAssignRoleVictorOpsTaskParamsPtrType) ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput() WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput {
	return i.ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskAutoAssignRoleVictorOpsTaskParamsPtrType) ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput)
}

type WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskAutoAssignRoleVictorOpsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput) ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput() WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput {
	return o
}

func (o WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput) ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput {
	return o
}

func (o WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput) ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput() WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput {
	return o.ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput) ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskAutoAssignRoleVictorOpsTaskParams) *WorkflowTaskAutoAssignRoleVictorOpsTaskParams {
		return &v
	}).(WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput)
}

// The role id
func (o WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput) IncidentRoleId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRoleVictorOpsTaskParams) string { return v.IncidentRoleId }).(pulumi.StringOutput)
}

func (o WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRoleVictorOpsTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput) Team() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskAutoAssignRoleVictorOpsTaskParams) map[string]string { return v.Team }).(pulumi.StringMapOutput)
}

type WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAutoAssignRoleVictorOpsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput) ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput() WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput) ToWorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput) Elem() WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRoleVictorOpsTaskParams) WorkflowTaskAutoAssignRoleVictorOpsTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskAutoAssignRoleVictorOpsTaskParams
		return ret
	}).(WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput)
}

// The role id
func (o WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput) IncidentRoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRoleVictorOpsTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.IncidentRoleId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRoleVictorOpsTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput) Team() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRoleVictorOpsTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Team
	}).(pulumi.StringMapOutput)
}

type WorkflowTaskCallPeopleTaskParams struct {
	// The message to be read by text-to-voice
	Content string `pulumi:"content"`
	// The name
	Name         string   `pulumi:"name"`
	PhoneNumbers []string `pulumi:"phoneNumbers"`
	TaskType     *string  `pulumi:"taskType"`
}

// WorkflowTaskCallPeopleTaskParamsInput is an input type that accepts WorkflowTaskCallPeopleTaskParamsArgs and WorkflowTaskCallPeopleTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCallPeopleTaskParamsInput` via:
//
//	WorkflowTaskCallPeopleTaskParamsArgs{...}
type WorkflowTaskCallPeopleTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCallPeopleTaskParamsOutput() WorkflowTaskCallPeopleTaskParamsOutput
	ToWorkflowTaskCallPeopleTaskParamsOutputWithContext(context.Context) WorkflowTaskCallPeopleTaskParamsOutput
}

type WorkflowTaskCallPeopleTaskParamsArgs struct {
	// The message to be read by text-to-voice
	Content pulumi.StringInput `pulumi:"content"`
	// The name
	Name         pulumi.StringInput      `pulumi:"name"`
	PhoneNumbers pulumi.StringArrayInput `pulumi:"phoneNumbers"`
	TaskType     pulumi.StringPtrInput   `pulumi:"taskType"`
}

func (WorkflowTaskCallPeopleTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCallPeopleTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCallPeopleTaskParamsArgs) ToWorkflowTaskCallPeopleTaskParamsOutput() WorkflowTaskCallPeopleTaskParamsOutput {
	return i.ToWorkflowTaskCallPeopleTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCallPeopleTaskParamsArgs) ToWorkflowTaskCallPeopleTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCallPeopleTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCallPeopleTaskParamsOutput)
}

func (i WorkflowTaskCallPeopleTaskParamsArgs) ToWorkflowTaskCallPeopleTaskParamsPtrOutput() WorkflowTaskCallPeopleTaskParamsPtrOutput {
	return i.ToWorkflowTaskCallPeopleTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCallPeopleTaskParamsArgs) ToWorkflowTaskCallPeopleTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCallPeopleTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCallPeopleTaskParamsOutput).ToWorkflowTaskCallPeopleTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCallPeopleTaskParamsPtrInput is an input type that accepts WorkflowTaskCallPeopleTaskParamsArgs, WorkflowTaskCallPeopleTaskParamsPtr and WorkflowTaskCallPeopleTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCallPeopleTaskParamsPtrInput` via:
//
//	        WorkflowTaskCallPeopleTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCallPeopleTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCallPeopleTaskParamsPtrOutput() WorkflowTaskCallPeopleTaskParamsPtrOutput
	ToWorkflowTaskCallPeopleTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCallPeopleTaskParamsPtrOutput
}

type workflowTaskCallPeopleTaskParamsPtrType WorkflowTaskCallPeopleTaskParamsArgs

func WorkflowTaskCallPeopleTaskParamsPtr(v *WorkflowTaskCallPeopleTaskParamsArgs) WorkflowTaskCallPeopleTaskParamsPtrInput {
	return (*workflowTaskCallPeopleTaskParamsPtrType)(v)
}

func (*workflowTaskCallPeopleTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCallPeopleTaskParams)(nil)).Elem()
}

func (i *workflowTaskCallPeopleTaskParamsPtrType) ToWorkflowTaskCallPeopleTaskParamsPtrOutput() WorkflowTaskCallPeopleTaskParamsPtrOutput {
	return i.ToWorkflowTaskCallPeopleTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCallPeopleTaskParamsPtrType) ToWorkflowTaskCallPeopleTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCallPeopleTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCallPeopleTaskParamsPtrOutput)
}

type WorkflowTaskCallPeopleTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCallPeopleTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCallPeopleTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCallPeopleTaskParamsOutput) ToWorkflowTaskCallPeopleTaskParamsOutput() WorkflowTaskCallPeopleTaskParamsOutput {
	return o
}

func (o WorkflowTaskCallPeopleTaskParamsOutput) ToWorkflowTaskCallPeopleTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCallPeopleTaskParamsOutput {
	return o
}

func (o WorkflowTaskCallPeopleTaskParamsOutput) ToWorkflowTaskCallPeopleTaskParamsPtrOutput() WorkflowTaskCallPeopleTaskParamsPtrOutput {
	return o.ToWorkflowTaskCallPeopleTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCallPeopleTaskParamsOutput) ToWorkflowTaskCallPeopleTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCallPeopleTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCallPeopleTaskParams) *WorkflowTaskCallPeopleTaskParams {
		return &v
	}).(WorkflowTaskCallPeopleTaskParamsPtrOutput)
}

// The message to be read by text-to-voice
func (o WorkflowTaskCallPeopleTaskParamsOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCallPeopleTaskParams) string { return v.Content }).(pulumi.StringOutput)
}

// The name
func (o WorkflowTaskCallPeopleTaskParamsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCallPeopleTaskParams) string { return v.Name }).(pulumi.StringOutput)
}

func (o WorkflowTaskCallPeopleTaskParamsOutput) PhoneNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCallPeopleTaskParams) []string { return v.PhoneNumbers }).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskCallPeopleTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCallPeopleTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskCallPeopleTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCallPeopleTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCallPeopleTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCallPeopleTaskParamsPtrOutput) ToWorkflowTaskCallPeopleTaskParamsPtrOutput() WorkflowTaskCallPeopleTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCallPeopleTaskParamsPtrOutput) ToWorkflowTaskCallPeopleTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCallPeopleTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCallPeopleTaskParamsPtrOutput) Elem() WorkflowTaskCallPeopleTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCallPeopleTaskParams) WorkflowTaskCallPeopleTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCallPeopleTaskParams
		return ret
	}).(WorkflowTaskCallPeopleTaskParamsOutput)
}

// The message to be read by text-to-voice
func (o WorkflowTaskCallPeopleTaskParamsPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCallPeopleTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// The name
func (o WorkflowTaskCallPeopleTaskParamsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCallPeopleTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCallPeopleTaskParamsPtrOutput) PhoneNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCallPeopleTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.PhoneNumbers
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskCallPeopleTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCallPeopleTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskChangeSlackChannelPrivacyTaskParams struct {
	// Map must contain two fields, `id` and `name`.
	Channel map[string]string `pulumi:"channel"`
	// Value must be one of `private`, `public`.
	Privacy  string  `pulumi:"privacy"`
	TaskType *string `pulumi:"taskType"`
}

// WorkflowTaskChangeSlackChannelPrivacyTaskParamsInput is an input type that accepts WorkflowTaskChangeSlackChannelPrivacyTaskParamsArgs and WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskChangeSlackChannelPrivacyTaskParamsInput` via:
//
//	WorkflowTaskChangeSlackChannelPrivacyTaskParamsArgs{...}
type WorkflowTaskChangeSlackChannelPrivacyTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput() WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput
	ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsOutputWithContext(context.Context) WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput
}

type WorkflowTaskChangeSlackChannelPrivacyTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`.
	Channel pulumi.StringMapInput `pulumi:"channel"`
	// Value must be one of `private`, `public`.
	Privacy  pulumi.StringInput    `pulumi:"privacy"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskChangeSlackChannelPrivacyTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskChangeSlackChannelPrivacyTaskParams)(nil)).Elem()
}

func (i WorkflowTaskChangeSlackChannelPrivacyTaskParamsArgs) ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput() WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput {
	return i.ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskChangeSlackChannelPrivacyTaskParamsArgs) ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput)
}

func (i WorkflowTaskChangeSlackChannelPrivacyTaskParamsArgs) ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput() WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput {
	return i.ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskChangeSlackChannelPrivacyTaskParamsArgs) ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput).ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrInput is an input type that accepts WorkflowTaskChangeSlackChannelPrivacyTaskParamsArgs, WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtr and WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrInput` via:
//
//	        WorkflowTaskChangeSlackChannelPrivacyTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput() WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput
	ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput
}

type workflowTaskChangeSlackChannelPrivacyTaskParamsPtrType WorkflowTaskChangeSlackChannelPrivacyTaskParamsArgs

func WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtr(v *WorkflowTaskChangeSlackChannelPrivacyTaskParamsArgs) WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrInput {
	return (*workflowTaskChangeSlackChannelPrivacyTaskParamsPtrType)(v)
}

func (*workflowTaskChangeSlackChannelPrivacyTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskChangeSlackChannelPrivacyTaskParams)(nil)).Elem()
}

func (i *workflowTaskChangeSlackChannelPrivacyTaskParamsPtrType) ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput() WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput {
	return i.ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskChangeSlackChannelPrivacyTaskParamsPtrType) ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput)
}

type WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskChangeSlackChannelPrivacyTaskParams)(nil)).Elem()
}

func (o WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput) ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput() WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput {
	return o
}

func (o WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput) ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput {
	return o
}

func (o WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput) ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput() WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput {
	return o.ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput) ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskChangeSlackChannelPrivacyTaskParams) *WorkflowTaskChangeSlackChannelPrivacyTaskParams {
		return &v
	}).(WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput) Channel() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskChangeSlackChannelPrivacyTaskParams) map[string]string { return v.Channel }).(pulumi.StringMapOutput)
}

// Value must be one of `private`, `public`.
func (o WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput) Privacy() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskChangeSlackChannelPrivacyTaskParams) string { return v.Privacy }).(pulumi.StringOutput)
}

func (o WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskChangeSlackChannelPrivacyTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskChangeSlackChannelPrivacyTaskParams)(nil)).Elem()
}

func (o WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput) ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput() WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput) ToWorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput) Elem() WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskChangeSlackChannelPrivacyTaskParams) WorkflowTaskChangeSlackChannelPrivacyTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskChangeSlackChannelPrivacyTaskParams
		return ret
	}).(WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput) Channel() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskChangeSlackChannelPrivacyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.StringMapOutput)
}

// Value must be one of `private`, `public`.
func (o WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput) Privacy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskChangeSlackChannelPrivacyTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Privacy
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskChangeSlackChannelPrivacyTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateAirtableTableRecordTaskParams struct {
	// Map must contain two fields, `id` and `name`.
	Base map[string]string `pulumi:"base"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string `pulumi:"customFieldsMapping"`
	// Map must contain two fields, `id` and `name`.
	Table    map[string]string `pulumi:"table"`
	TaskType *string           `pulumi:"taskType"`
}

// WorkflowTaskCreateAirtableTableRecordTaskParamsInput is an input type that accepts WorkflowTaskCreateAirtableTableRecordTaskParamsArgs and WorkflowTaskCreateAirtableTableRecordTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateAirtableTableRecordTaskParamsInput` via:
//
//	WorkflowTaskCreateAirtableTableRecordTaskParamsArgs{...}
type WorkflowTaskCreateAirtableTableRecordTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateAirtableTableRecordTaskParamsOutput() WorkflowTaskCreateAirtableTableRecordTaskParamsOutput
	ToWorkflowTaskCreateAirtableTableRecordTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateAirtableTableRecordTaskParamsOutput
}

type WorkflowTaskCreateAirtableTableRecordTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`.
	Base pulumi.StringMapInput `pulumi:"base"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput `pulumi:"customFieldsMapping"`
	// Map must contain two fields, `id` and `name`.
	Table    pulumi.StringMapInput `pulumi:"table"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskCreateAirtableTableRecordTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateAirtableTableRecordTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateAirtableTableRecordTaskParamsArgs) ToWorkflowTaskCreateAirtableTableRecordTaskParamsOutput() WorkflowTaskCreateAirtableTableRecordTaskParamsOutput {
	return i.ToWorkflowTaskCreateAirtableTableRecordTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateAirtableTableRecordTaskParamsArgs) ToWorkflowTaskCreateAirtableTableRecordTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateAirtableTableRecordTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateAirtableTableRecordTaskParamsOutput)
}

func (i WorkflowTaskCreateAirtableTableRecordTaskParamsArgs) ToWorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput() WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateAirtableTableRecordTaskParamsArgs) ToWorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateAirtableTableRecordTaskParamsOutput).ToWorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateAirtableTableRecordTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateAirtableTableRecordTaskParamsArgs, WorkflowTaskCreateAirtableTableRecordTaskParamsPtr and WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateAirtableTableRecordTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateAirtableTableRecordTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateAirtableTableRecordTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput() WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput
	ToWorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput
}

type workflowTaskCreateAirtableTableRecordTaskParamsPtrType WorkflowTaskCreateAirtableTableRecordTaskParamsArgs

func WorkflowTaskCreateAirtableTableRecordTaskParamsPtr(v *WorkflowTaskCreateAirtableTableRecordTaskParamsArgs) WorkflowTaskCreateAirtableTableRecordTaskParamsPtrInput {
	return (*workflowTaskCreateAirtableTableRecordTaskParamsPtrType)(v)
}

func (*workflowTaskCreateAirtableTableRecordTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateAirtableTableRecordTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateAirtableTableRecordTaskParamsPtrType) ToWorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput() WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateAirtableTableRecordTaskParamsPtrType) ToWorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput)
}

type WorkflowTaskCreateAirtableTableRecordTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateAirtableTableRecordTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateAirtableTableRecordTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateAirtableTableRecordTaskParamsOutput) ToWorkflowTaskCreateAirtableTableRecordTaskParamsOutput() WorkflowTaskCreateAirtableTableRecordTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateAirtableTableRecordTaskParamsOutput) ToWorkflowTaskCreateAirtableTableRecordTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateAirtableTableRecordTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateAirtableTableRecordTaskParamsOutput) ToWorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput() WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateAirtableTableRecordTaskParamsOutput) ToWorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateAirtableTableRecordTaskParams) *WorkflowTaskCreateAirtableTableRecordTaskParams {
		return &v
	}).(WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateAirtableTableRecordTaskParamsOutput) Base() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAirtableTableRecordTaskParams) map[string]string { return v.Base }).(pulumi.StringMapOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateAirtableTableRecordTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAirtableTableRecordTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateAirtableTableRecordTaskParamsOutput) Table() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAirtableTableRecordTaskParams) map[string]string { return v.Table }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateAirtableTableRecordTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAirtableTableRecordTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateAirtableTableRecordTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput) ToWorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput() WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput) ToWorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput) Elem() WorkflowTaskCreateAirtableTableRecordTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAirtableTableRecordTaskParams) WorkflowTaskCreateAirtableTableRecordTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateAirtableTableRecordTaskParams
		return ret
	}).(WorkflowTaskCreateAirtableTableRecordTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput) Base() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAirtableTableRecordTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Base
	}).(pulumi.StringMapOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAirtableTableRecordTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput) Table() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAirtableTableRecordTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Table
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAirtableTableRecordTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateAsanaSubtaskTaskParams struct {
	// The assigned user's email
	AssignUserEmail *string `pulumi:"assignUserEmail"`
	// Map must contain two fields, `id` and `name`.
	Completion map[string]string `pulumi:"completion"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string `pulumi:"customFieldsMapping"`
	// Value must be one of `blocking`, `blockedBy`.
	DependencyDirection *string `pulumi:"dependencyDirection"`
	// Dependent task ids. Supports liquid syntax
	DependentTaskIds []string `pulumi:"dependentTaskIds"`
	// The due date
	DueDate *string `pulumi:"dueDate"`
	Notes   *string `pulumi:"notes"`
	// The parent task id
	ParentTaskId string  `pulumi:"parentTaskId"`
	TaskType     *string `pulumi:"taskType"`
	// The subtask title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateAsanaSubtaskTaskParamsInput is an input type that accepts WorkflowTaskCreateAsanaSubtaskTaskParamsArgs and WorkflowTaskCreateAsanaSubtaskTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateAsanaSubtaskTaskParamsInput` via:
//
//	WorkflowTaskCreateAsanaSubtaskTaskParamsArgs{...}
type WorkflowTaskCreateAsanaSubtaskTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateAsanaSubtaskTaskParamsOutput() WorkflowTaskCreateAsanaSubtaskTaskParamsOutput
	ToWorkflowTaskCreateAsanaSubtaskTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateAsanaSubtaskTaskParamsOutput
}

type WorkflowTaskCreateAsanaSubtaskTaskParamsArgs struct {
	// The assigned user's email
	AssignUserEmail pulumi.StringPtrInput `pulumi:"assignUserEmail"`
	// Map must contain two fields, `id` and `name`.
	Completion pulumi.StringMapInput `pulumi:"completion"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput `pulumi:"customFieldsMapping"`
	// Value must be one of `blocking`, `blockedBy`.
	DependencyDirection pulumi.StringPtrInput `pulumi:"dependencyDirection"`
	// Dependent task ids. Supports liquid syntax
	DependentTaskIds pulumi.StringArrayInput `pulumi:"dependentTaskIds"`
	// The due date
	DueDate pulumi.StringPtrInput `pulumi:"dueDate"`
	Notes   pulumi.StringPtrInput `pulumi:"notes"`
	// The parent task id
	ParentTaskId pulumi.StringInput    `pulumi:"parentTaskId"`
	TaskType     pulumi.StringPtrInput `pulumi:"taskType"`
	// The subtask title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateAsanaSubtaskTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateAsanaSubtaskTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateAsanaSubtaskTaskParamsArgs) ToWorkflowTaskCreateAsanaSubtaskTaskParamsOutput() WorkflowTaskCreateAsanaSubtaskTaskParamsOutput {
	return i.ToWorkflowTaskCreateAsanaSubtaskTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateAsanaSubtaskTaskParamsArgs) ToWorkflowTaskCreateAsanaSubtaskTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaSubtaskTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateAsanaSubtaskTaskParamsOutput)
}

func (i WorkflowTaskCreateAsanaSubtaskTaskParamsArgs) ToWorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput() WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateAsanaSubtaskTaskParamsArgs) ToWorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateAsanaSubtaskTaskParamsOutput).ToWorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateAsanaSubtaskTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateAsanaSubtaskTaskParamsArgs, WorkflowTaskCreateAsanaSubtaskTaskParamsPtr and WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateAsanaSubtaskTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateAsanaSubtaskTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateAsanaSubtaskTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput() WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput
	ToWorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput
}

type workflowTaskCreateAsanaSubtaskTaskParamsPtrType WorkflowTaskCreateAsanaSubtaskTaskParamsArgs

func WorkflowTaskCreateAsanaSubtaskTaskParamsPtr(v *WorkflowTaskCreateAsanaSubtaskTaskParamsArgs) WorkflowTaskCreateAsanaSubtaskTaskParamsPtrInput {
	return (*workflowTaskCreateAsanaSubtaskTaskParamsPtrType)(v)
}

func (*workflowTaskCreateAsanaSubtaskTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateAsanaSubtaskTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateAsanaSubtaskTaskParamsPtrType) ToWorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput() WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateAsanaSubtaskTaskParamsPtrType) ToWorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput)
}

type WorkflowTaskCreateAsanaSubtaskTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateAsanaSubtaskTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateAsanaSubtaskTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateAsanaSubtaskTaskParamsOutput) ToWorkflowTaskCreateAsanaSubtaskTaskParamsOutput() WorkflowTaskCreateAsanaSubtaskTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateAsanaSubtaskTaskParamsOutput) ToWorkflowTaskCreateAsanaSubtaskTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaSubtaskTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateAsanaSubtaskTaskParamsOutput) ToWorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput() WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateAsanaSubtaskTaskParamsOutput) ToWorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateAsanaSubtaskTaskParams) *WorkflowTaskCreateAsanaSubtaskTaskParams {
		return &v
	}).(WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput)
}

// The assigned user's email
func (o WorkflowTaskCreateAsanaSubtaskTaskParamsOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaSubtaskTaskParams) *string { return v.AssignUserEmail }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateAsanaSubtaskTaskParamsOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaSubtaskTaskParams) map[string]string { return v.Completion }).(pulumi.StringMapOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateAsanaSubtaskTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaSubtaskTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

// Value must be one of `blocking`, `blockedBy`.
func (o WorkflowTaskCreateAsanaSubtaskTaskParamsOutput) DependencyDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaSubtaskTaskParams) *string { return v.DependencyDirection }).(pulumi.StringPtrOutput)
}

// Dependent task ids. Supports liquid syntax
func (o WorkflowTaskCreateAsanaSubtaskTaskParamsOutput) DependentTaskIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaSubtaskTaskParams) []string { return v.DependentTaskIds }).(pulumi.StringArrayOutput)
}

// The due date
func (o WorkflowTaskCreateAsanaSubtaskTaskParamsOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaSubtaskTaskParams) *string { return v.DueDate }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateAsanaSubtaskTaskParamsOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaSubtaskTaskParams) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// The parent task id
func (o WorkflowTaskCreateAsanaSubtaskTaskParamsOutput) ParentTaskId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaSubtaskTaskParams) string { return v.ParentTaskId }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateAsanaSubtaskTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaSubtaskTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The subtask title
func (o WorkflowTaskCreateAsanaSubtaskTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaSubtaskTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateAsanaSubtaskTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput) ToWorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput() WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput) ToWorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput) Elem() WorkflowTaskCreateAsanaSubtaskTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaSubtaskTaskParams) WorkflowTaskCreateAsanaSubtaskTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateAsanaSubtaskTaskParams
		return ret
	}).(WorkflowTaskCreateAsanaSubtaskTaskParamsOutput)
}

// The assigned user's email
func (o WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.AssignUserEmail
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaSubtaskTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Completion
	}).(pulumi.StringMapOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `blocking`, `blockedBy`.
func (o WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput) DependencyDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DependencyDirection
	}).(pulumi.StringPtrOutput)
}

// Dependent task ids. Supports liquid syntax
func (o WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput) DependentTaskIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaSubtaskTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.DependentTaskIds
	}).(pulumi.StringArrayOutput)
}

// The due date
func (o WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DueDate
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Notes
	}).(pulumi.StringPtrOutput)
}

// The parent task id
func (o WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput) ParentTaskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.ParentTaskId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The subtask title
func (o WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateAsanaTaskTaskParams struct {
	// The assigned user's email
	AssignUserEmail *string `pulumi:"assignUserEmail"`
	// Map must contain two fields, `id` and `name`.
	Completion map[string]string `pulumi:"completion"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string `pulumi:"customFieldsMapping"`
	// Value must be one of `blocking`, `blockedBy`.
	DependencyDirection *string `pulumi:"dependencyDirection"`
	// Dependent task ids. Supports liquid syntax
	DependentTaskIds []string `pulumi:"dependentTaskIds"`
	// The due date
	DueDate  *string                                        `pulumi:"dueDate"`
	Notes    *string                                        `pulumi:"notes"`
	Projects []WorkflowTaskCreateAsanaTaskTaskParamsProject `pulumi:"projects"`
	TaskType *string                                        `pulumi:"taskType"`
	// The task title
	Title string `pulumi:"title"`
	// Map must contain two fields, `id` and `name`.
	Workspace map[string]string `pulumi:"workspace"`
}

// WorkflowTaskCreateAsanaTaskTaskParamsInput is an input type that accepts WorkflowTaskCreateAsanaTaskTaskParamsArgs and WorkflowTaskCreateAsanaTaskTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateAsanaTaskTaskParamsInput` via:
//
//	WorkflowTaskCreateAsanaTaskTaskParamsArgs{...}
type WorkflowTaskCreateAsanaTaskTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateAsanaTaskTaskParamsOutput() WorkflowTaskCreateAsanaTaskTaskParamsOutput
	ToWorkflowTaskCreateAsanaTaskTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateAsanaTaskTaskParamsOutput
}

type WorkflowTaskCreateAsanaTaskTaskParamsArgs struct {
	// The assigned user's email
	AssignUserEmail pulumi.StringPtrInput `pulumi:"assignUserEmail"`
	// Map must contain two fields, `id` and `name`.
	Completion pulumi.StringMapInput `pulumi:"completion"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput `pulumi:"customFieldsMapping"`
	// Value must be one of `blocking`, `blockedBy`.
	DependencyDirection pulumi.StringPtrInput `pulumi:"dependencyDirection"`
	// Dependent task ids. Supports liquid syntax
	DependentTaskIds pulumi.StringArrayInput `pulumi:"dependentTaskIds"`
	// The due date
	DueDate  pulumi.StringPtrInput                                  `pulumi:"dueDate"`
	Notes    pulumi.StringPtrInput                                  `pulumi:"notes"`
	Projects WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayInput `pulumi:"projects"`
	TaskType pulumi.StringPtrInput                                  `pulumi:"taskType"`
	// The task title
	Title pulumi.StringInput `pulumi:"title"`
	// Map must contain two fields, `id` and `name`.
	Workspace pulumi.StringMapInput `pulumi:"workspace"`
}

func (WorkflowTaskCreateAsanaTaskTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateAsanaTaskTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateAsanaTaskTaskParamsArgs) ToWorkflowTaskCreateAsanaTaskTaskParamsOutput() WorkflowTaskCreateAsanaTaskTaskParamsOutput {
	return i.ToWorkflowTaskCreateAsanaTaskTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateAsanaTaskTaskParamsArgs) ToWorkflowTaskCreateAsanaTaskTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateAsanaTaskTaskParamsOutput)
}

func (i WorkflowTaskCreateAsanaTaskTaskParamsArgs) ToWorkflowTaskCreateAsanaTaskTaskParamsPtrOutput() WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateAsanaTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateAsanaTaskTaskParamsArgs) ToWorkflowTaskCreateAsanaTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateAsanaTaskTaskParamsOutput).ToWorkflowTaskCreateAsanaTaskTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateAsanaTaskTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateAsanaTaskTaskParamsArgs, WorkflowTaskCreateAsanaTaskTaskParamsPtr and WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateAsanaTaskTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateAsanaTaskTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateAsanaTaskTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateAsanaTaskTaskParamsPtrOutput() WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput
	ToWorkflowTaskCreateAsanaTaskTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput
}

type workflowTaskCreateAsanaTaskTaskParamsPtrType WorkflowTaskCreateAsanaTaskTaskParamsArgs

func WorkflowTaskCreateAsanaTaskTaskParamsPtr(v *WorkflowTaskCreateAsanaTaskTaskParamsArgs) WorkflowTaskCreateAsanaTaskTaskParamsPtrInput {
	return (*workflowTaskCreateAsanaTaskTaskParamsPtrType)(v)
}

func (*workflowTaskCreateAsanaTaskTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateAsanaTaskTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateAsanaTaskTaskParamsPtrType) ToWorkflowTaskCreateAsanaTaskTaskParamsPtrOutput() WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateAsanaTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateAsanaTaskTaskParamsPtrType) ToWorkflowTaskCreateAsanaTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput)
}

type WorkflowTaskCreateAsanaTaskTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateAsanaTaskTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateAsanaTaskTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsOutput) ToWorkflowTaskCreateAsanaTaskTaskParamsOutput() WorkflowTaskCreateAsanaTaskTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsOutput) ToWorkflowTaskCreateAsanaTaskTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsOutput) ToWorkflowTaskCreateAsanaTaskTaskParamsPtrOutput() WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateAsanaTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsOutput) ToWorkflowTaskCreateAsanaTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateAsanaTaskTaskParams) *WorkflowTaskCreateAsanaTaskTaskParams {
		return &v
	}).(WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput)
}

// The assigned user's email
func (o WorkflowTaskCreateAsanaTaskTaskParamsOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaTaskTaskParams) *string { return v.AssignUserEmail }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateAsanaTaskTaskParamsOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaTaskTaskParams) map[string]string { return v.Completion }).(pulumi.StringMapOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateAsanaTaskTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaTaskTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

// Value must be one of `blocking`, `blockedBy`.
func (o WorkflowTaskCreateAsanaTaskTaskParamsOutput) DependencyDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaTaskTaskParams) *string { return v.DependencyDirection }).(pulumi.StringPtrOutput)
}

// Dependent task ids. Supports liquid syntax
func (o WorkflowTaskCreateAsanaTaskTaskParamsOutput) DependentTaskIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaTaskTaskParams) []string { return v.DependentTaskIds }).(pulumi.StringArrayOutput)
}

// The due date
func (o WorkflowTaskCreateAsanaTaskTaskParamsOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaTaskTaskParams) *string { return v.DueDate }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaTaskTaskParams) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsOutput) Projects() WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaTaskTaskParams) []WorkflowTaskCreateAsanaTaskTaskParamsProject {
		return v.Projects
	}).(WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput)
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaTaskTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The task title
func (o WorkflowTaskCreateAsanaTaskTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaTaskTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateAsanaTaskTaskParamsOutput) Workspace() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaTaskTaskParams) map[string]string { return v.Workspace }).(pulumi.StringMapOutput)
}

type WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateAsanaTaskTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput) ToWorkflowTaskCreateAsanaTaskTaskParamsPtrOutput() WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput) ToWorkflowTaskCreateAsanaTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput) Elem() WorkflowTaskCreateAsanaTaskTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTaskTaskParams) WorkflowTaskCreateAsanaTaskTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateAsanaTaskTaskParams
		return ret
	}).(WorkflowTaskCreateAsanaTaskTaskParamsOutput)
}

// The assigned user's email
func (o WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.AssignUserEmail
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTaskTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Completion
	}).(pulumi.StringMapOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `blocking`, `blockedBy`.
func (o WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput) DependencyDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DependencyDirection
	}).(pulumi.StringPtrOutput)
}

// Dependent task ids. Supports liquid syntax
func (o WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput) DependentTaskIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTaskTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.DependentTaskIds
	}).(pulumi.StringArrayOutput)
}

// The due date
func (o WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DueDate
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Notes
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput) Projects() WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTaskTaskParams) []WorkflowTaskCreateAsanaTaskTaskParamsProject {
		if v == nil {
			return nil
		}
		return v.Projects
	}).(WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput)
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The task title
func (o WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput) Workspace() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateAsanaTaskTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Workspace
	}).(pulumi.StringMapOutput)
}

type WorkflowTaskCreateAsanaTaskTaskParamsProject struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskCreateAsanaTaskTaskParamsProjectInput is an input type that accepts WorkflowTaskCreateAsanaTaskTaskParamsProjectArgs and WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateAsanaTaskTaskParamsProjectInput` via:
//
//	WorkflowTaskCreateAsanaTaskTaskParamsProjectArgs{...}
type WorkflowTaskCreateAsanaTaskTaskParamsProjectInput interface {
	pulumi.Input

	ToWorkflowTaskCreateAsanaTaskTaskParamsProjectOutput() WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput
	ToWorkflowTaskCreateAsanaTaskTaskParamsProjectOutputWithContext(context.Context) WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput
}

type WorkflowTaskCreateAsanaTaskTaskParamsProjectArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskCreateAsanaTaskTaskParamsProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateAsanaTaskTaskParamsProject)(nil)).Elem()
}

func (i WorkflowTaskCreateAsanaTaskTaskParamsProjectArgs) ToWorkflowTaskCreateAsanaTaskTaskParamsProjectOutput() WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput {
	return i.ToWorkflowTaskCreateAsanaTaskTaskParamsProjectOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateAsanaTaskTaskParamsProjectArgs) ToWorkflowTaskCreateAsanaTaskTaskParamsProjectOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput)
}

// WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayInput is an input type that accepts WorkflowTaskCreateAsanaTaskTaskParamsProjectArray and WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayInput` via:
//
//	WorkflowTaskCreateAsanaTaskTaskParamsProjectArray{ WorkflowTaskCreateAsanaTaskTaskParamsProjectArgs{...} }
type WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput() WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput
	ToWorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutputWithContext(context.Context) WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput
}

type WorkflowTaskCreateAsanaTaskTaskParamsProjectArray []WorkflowTaskCreateAsanaTaskTaskParamsProjectInput

func (WorkflowTaskCreateAsanaTaskTaskParamsProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateAsanaTaskTaskParamsProject)(nil)).Elem()
}

func (i WorkflowTaskCreateAsanaTaskTaskParamsProjectArray) ToWorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput() WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput {
	return i.ToWorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateAsanaTaskTaskParamsProjectArray) ToWorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput)
}

type WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateAsanaTaskTaskParamsProject)(nil)).Elem()
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput) ToWorkflowTaskCreateAsanaTaskTaskParamsProjectOutput() WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput {
	return o
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput) ToWorkflowTaskCreateAsanaTaskTaskParamsProjectOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput {
	return o
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaTaskTaskParamsProject) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateAsanaTaskTaskParamsProject) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateAsanaTaskTaskParamsProject)(nil)).Elem()
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput) ToWorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput() WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput {
	return o
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput) ToWorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput {
	return o
}

func (o WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskCreateAsanaTaskTaskParamsProject {
		return vs[0].([]WorkflowTaskCreateAsanaTaskTaskParamsProject)[vs[1].(int)]
	}).(WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput)
}

type WorkflowTaskCreateClickupTaskTaskParams struct {
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string `pulumi:"customFieldsMapping"`
	// The task description
	Description *string `pulumi:"description"`
	// The due date
	DueDate *string `pulumi:"dueDate"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority map[string]string `pulumi:"priority"`
	// The task tags
	Tags *string `pulumi:"tags"`
	// Additional ClickUp task attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
	TaskPayload *string `pulumi:"taskPayload"`
	TaskType    *string `pulumi:"taskType"`
	// The task title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateClickupTaskTaskParamsInput is an input type that accepts WorkflowTaskCreateClickupTaskTaskParamsArgs and WorkflowTaskCreateClickupTaskTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateClickupTaskTaskParamsInput` via:
//
//	WorkflowTaskCreateClickupTaskTaskParamsArgs{...}
type WorkflowTaskCreateClickupTaskTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateClickupTaskTaskParamsOutput() WorkflowTaskCreateClickupTaskTaskParamsOutput
	ToWorkflowTaskCreateClickupTaskTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateClickupTaskTaskParamsOutput
}

type WorkflowTaskCreateClickupTaskTaskParamsArgs struct {
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput `pulumi:"customFieldsMapping"`
	// The task description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The due date
	DueDate pulumi.StringPtrInput `pulumi:"dueDate"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority pulumi.StringMapInput `pulumi:"priority"`
	// The task tags
	Tags pulumi.StringPtrInput `pulumi:"tags"`
	// Additional ClickUp task attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
	TaskPayload pulumi.StringPtrInput `pulumi:"taskPayload"`
	TaskType    pulumi.StringPtrInput `pulumi:"taskType"`
	// The task title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateClickupTaskTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateClickupTaskTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateClickupTaskTaskParamsArgs) ToWorkflowTaskCreateClickupTaskTaskParamsOutput() WorkflowTaskCreateClickupTaskTaskParamsOutput {
	return i.ToWorkflowTaskCreateClickupTaskTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateClickupTaskTaskParamsArgs) ToWorkflowTaskCreateClickupTaskTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateClickupTaskTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateClickupTaskTaskParamsOutput)
}

func (i WorkflowTaskCreateClickupTaskTaskParamsArgs) ToWorkflowTaskCreateClickupTaskTaskParamsPtrOutput() WorkflowTaskCreateClickupTaskTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateClickupTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateClickupTaskTaskParamsArgs) ToWorkflowTaskCreateClickupTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateClickupTaskTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateClickupTaskTaskParamsOutput).ToWorkflowTaskCreateClickupTaskTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateClickupTaskTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateClickupTaskTaskParamsArgs, WorkflowTaskCreateClickupTaskTaskParamsPtr and WorkflowTaskCreateClickupTaskTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateClickupTaskTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateClickupTaskTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateClickupTaskTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateClickupTaskTaskParamsPtrOutput() WorkflowTaskCreateClickupTaskTaskParamsPtrOutput
	ToWorkflowTaskCreateClickupTaskTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateClickupTaskTaskParamsPtrOutput
}

type workflowTaskCreateClickupTaskTaskParamsPtrType WorkflowTaskCreateClickupTaskTaskParamsArgs

func WorkflowTaskCreateClickupTaskTaskParamsPtr(v *WorkflowTaskCreateClickupTaskTaskParamsArgs) WorkflowTaskCreateClickupTaskTaskParamsPtrInput {
	return (*workflowTaskCreateClickupTaskTaskParamsPtrType)(v)
}

func (*workflowTaskCreateClickupTaskTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateClickupTaskTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateClickupTaskTaskParamsPtrType) ToWorkflowTaskCreateClickupTaskTaskParamsPtrOutput() WorkflowTaskCreateClickupTaskTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateClickupTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateClickupTaskTaskParamsPtrType) ToWorkflowTaskCreateClickupTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateClickupTaskTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateClickupTaskTaskParamsPtrOutput)
}

type WorkflowTaskCreateClickupTaskTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateClickupTaskTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateClickupTaskTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateClickupTaskTaskParamsOutput) ToWorkflowTaskCreateClickupTaskTaskParamsOutput() WorkflowTaskCreateClickupTaskTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateClickupTaskTaskParamsOutput) ToWorkflowTaskCreateClickupTaskTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateClickupTaskTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateClickupTaskTaskParamsOutput) ToWorkflowTaskCreateClickupTaskTaskParamsPtrOutput() WorkflowTaskCreateClickupTaskTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateClickupTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateClickupTaskTaskParamsOutput) ToWorkflowTaskCreateClickupTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateClickupTaskTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateClickupTaskTaskParams) *WorkflowTaskCreateClickupTaskTaskParams {
		return &v
	}).(WorkflowTaskCreateClickupTaskTaskParamsPtrOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateClickupTaskTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateClickupTaskTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

// The task description
func (o WorkflowTaskCreateClickupTaskTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateClickupTaskTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskCreateClickupTaskTaskParamsOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateClickupTaskTaskParams) *string { return v.DueDate }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskCreateClickupTaskTaskParamsOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateClickupTaskTaskParams) map[string]string { return v.Priority }).(pulumi.StringMapOutput)
}

// The task tags
func (o WorkflowTaskCreateClickupTaskTaskParamsOutput) Tags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateClickupTaskTaskParams) *string { return v.Tags }).(pulumi.StringPtrOutput)
}

// Additional ClickUp task attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateClickupTaskTaskParamsOutput) TaskPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateClickupTaskTaskParams) *string { return v.TaskPayload }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateClickupTaskTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateClickupTaskTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The task title
func (o WorkflowTaskCreateClickupTaskTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateClickupTaskTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateClickupTaskTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateClickupTaskTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateClickupTaskTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateClickupTaskTaskParamsPtrOutput) ToWorkflowTaskCreateClickupTaskTaskParamsPtrOutput() WorkflowTaskCreateClickupTaskTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateClickupTaskTaskParamsPtrOutput) ToWorkflowTaskCreateClickupTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateClickupTaskTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateClickupTaskTaskParamsPtrOutput) Elem() WorkflowTaskCreateClickupTaskTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateClickupTaskTaskParams) WorkflowTaskCreateClickupTaskTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateClickupTaskTaskParams
		return ret
	}).(WorkflowTaskCreateClickupTaskTaskParamsOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateClickupTaskTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateClickupTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

// The task description
func (o WorkflowTaskCreateClickupTaskTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateClickupTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskCreateClickupTaskTaskParamsPtrOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateClickupTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DueDate
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskCreateClickupTaskTaskParamsPtrOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateClickupTaskTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringMapOutput)
}

// The task tags
func (o WorkflowTaskCreateClickupTaskTaskParamsPtrOutput) Tags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateClickupTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringPtrOutput)
}

// Additional ClickUp task attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateClickupTaskTaskParamsPtrOutput) TaskPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateClickupTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskPayload
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateClickupTaskTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateClickupTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The task title
func (o WorkflowTaskCreateClickupTaskTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateClickupTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateConfluencePageTaskParams struct {
	// Map must contain two fields, `id` and `name`.
	Ancestor map[string]string `pulumi:"ancestor"`
	// The page content
	Content *string `pulumi:"content"`
	// Map must contain two fields, `id` and `name`. Specify integration id if you have more than one Confluence instance
	Integration map[string]string `pulumi:"integration"`
	// Value must be one of true or false
	MarkPostMortemAsPublished *bool `pulumi:"markPostMortemAsPublished"`
	// The Retrospective template to use
	PostMortemTemplateId *string `pulumi:"postMortemTemplateId"`
	// Map must contain two fields, `id` and `name`.
	Space    map[string]string `pulumi:"space"`
	TaskType *string           `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`.
	Template map[string]string `pulumi:"template"`
	// The page title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateConfluencePageTaskParamsInput is an input type that accepts WorkflowTaskCreateConfluencePageTaskParamsArgs and WorkflowTaskCreateConfluencePageTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateConfluencePageTaskParamsInput` via:
//
//	WorkflowTaskCreateConfluencePageTaskParamsArgs{...}
type WorkflowTaskCreateConfluencePageTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateConfluencePageTaskParamsOutput() WorkflowTaskCreateConfluencePageTaskParamsOutput
	ToWorkflowTaskCreateConfluencePageTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateConfluencePageTaskParamsOutput
}

type WorkflowTaskCreateConfluencePageTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`.
	Ancestor pulumi.StringMapInput `pulumi:"ancestor"`
	// The page content
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Map must contain two fields, `id` and `name`. Specify integration id if you have more than one Confluence instance
	Integration pulumi.StringMapInput `pulumi:"integration"`
	// Value must be one of true or false
	MarkPostMortemAsPublished pulumi.BoolPtrInput `pulumi:"markPostMortemAsPublished"`
	// The Retrospective template to use
	PostMortemTemplateId pulumi.StringPtrInput `pulumi:"postMortemTemplateId"`
	// Map must contain two fields, `id` and `name`.
	Space    pulumi.StringMapInput `pulumi:"space"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`.
	Template pulumi.StringMapInput `pulumi:"template"`
	// The page title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateConfluencePageTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateConfluencePageTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateConfluencePageTaskParamsArgs) ToWorkflowTaskCreateConfluencePageTaskParamsOutput() WorkflowTaskCreateConfluencePageTaskParamsOutput {
	return i.ToWorkflowTaskCreateConfluencePageTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateConfluencePageTaskParamsArgs) ToWorkflowTaskCreateConfluencePageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateConfluencePageTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateConfluencePageTaskParamsOutput)
}

func (i WorkflowTaskCreateConfluencePageTaskParamsArgs) ToWorkflowTaskCreateConfluencePageTaskParamsPtrOutput() WorkflowTaskCreateConfluencePageTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateConfluencePageTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateConfluencePageTaskParamsArgs) ToWorkflowTaskCreateConfluencePageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateConfluencePageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateConfluencePageTaskParamsOutput).ToWorkflowTaskCreateConfluencePageTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateConfluencePageTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateConfluencePageTaskParamsArgs, WorkflowTaskCreateConfluencePageTaskParamsPtr and WorkflowTaskCreateConfluencePageTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateConfluencePageTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateConfluencePageTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateConfluencePageTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateConfluencePageTaskParamsPtrOutput() WorkflowTaskCreateConfluencePageTaskParamsPtrOutput
	ToWorkflowTaskCreateConfluencePageTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateConfluencePageTaskParamsPtrOutput
}

type workflowTaskCreateConfluencePageTaskParamsPtrType WorkflowTaskCreateConfluencePageTaskParamsArgs

func WorkflowTaskCreateConfluencePageTaskParamsPtr(v *WorkflowTaskCreateConfluencePageTaskParamsArgs) WorkflowTaskCreateConfluencePageTaskParamsPtrInput {
	return (*workflowTaskCreateConfluencePageTaskParamsPtrType)(v)
}

func (*workflowTaskCreateConfluencePageTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateConfluencePageTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateConfluencePageTaskParamsPtrType) ToWorkflowTaskCreateConfluencePageTaskParamsPtrOutput() WorkflowTaskCreateConfluencePageTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateConfluencePageTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateConfluencePageTaskParamsPtrType) ToWorkflowTaskCreateConfluencePageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateConfluencePageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateConfluencePageTaskParamsPtrOutput)
}

type WorkflowTaskCreateConfluencePageTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateConfluencePageTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateConfluencePageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateConfluencePageTaskParamsOutput) ToWorkflowTaskCreateConfluencePageTaskParamsOutput() WorkflowTaskCreateConfluencePageTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateConfluencePageTaskParamsOutput) ToWorkflowTaskCreateConfluencePageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateConfluencePageTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateConfluencePageTaskParamsOutput) ToWorkflowTaskCreateConfluencePageTaskParamsPtrOutput() WorkflowTaskCreateConfluencePageTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateConfluencePageTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateConfluencePageTaskParamsOutput) ToWorkflowTaskCreateConfluencePageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateConfluencePageTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateConfluencePageTaskParams) *WorkflowTaskCreateConfluencePageTaskParams {
		return &v
	}).(WorkflowTaskCreateConfluencePageTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateConfluencePageTaskParamsOutput) Ancestor() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateConfluencePageTaskParams) map[string]string { return v.Ancestor }).(pulumi.StringMapOutput)
}

// The page content
func (o WorkflowTaskCreateConfluencePageTaskParamsOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateConfluencePageTaskParams) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. Specify integration id if you have more than one Confluence instance
func (o WorkflowTaskCreateConfluencePageTaskParamsOutput) Integration() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateConfluencePageTaskParams) map[string]string { return v.Integration }).(pulumi.StringMapOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateConfluencePageTaskParamsOutput) MarkPostMortemAsPublished() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateConfluencePageTaskParams) *bool { return v.MarkPostMortemAsPublished }).(pulumi.BoolPtrOutput)
}

// The Retrospective template to use
func (o WorkflowTaskCreateConfluencePageTaskParamsOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateConfluencePageTaskParams) *string { return v.PostMortemTemplateId }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateConfluencePageTaskParamsOutput) Space() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateConfluencePageTaskParams) map[string]string { return v.Space }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateConfluencePageTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateConfluencePageTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateConfluencePageTaskParamsOutput) Template() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateConfluencePageTaskParams) map[string]string { return v.Template }).(pulumi.StringMapOutput)
}

// The page title
func (o WorkflowTaskCreateConfluencePageTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateConfluencePageTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateConfluencePageTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateConfluencePageTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateConfluencePageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateConfluencePageTaskParamsPtrOutput) ToWorkflowTaskCreateConfluencePageTaskParamsPtrOutput() WorkflowTaskCreateConfluencePageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateConfluencePageTaskParamsPtrOutput) ToWorkflowTaskCreateConfluencePageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateConfluencePageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateConfluencePageTaskParamsPtrOutput) Elem() WorkflowTaskCreateConfluencePageTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateConfluencePageTaskParams) WorkflowTaskCreateConfluencePageTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateConfluencePageTaskParams
		return ret
	}).(WorkflowTaskCreateConfluencePageTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateConfluencePageTaskParamsPtrOutput) Ancestor() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateConfluencePageTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Ancestor
	}).(pulumi.StringMapOutput)
}

// The page content
func (o WorkflowTaskCreateConfluencePageTaskParamsPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateConfluencePageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. Specify integration id if you have more than one Confluence instance
func (o WorkflowTaskCreateConfluencePageTaskParamsPtrOutput) Integration() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateConfluencePageTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Integration
	}).(pulumi.StringMapOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateConfluencePageTaskParamsPtrOutput) MarkPostMortemAsPublished() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateConfluencePageTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.MarkPostMortemAsPublished
	}).(pulumi.BoolPtrOutput)
}

// The Retrospective template to use
func (o WorkflowTaskCreateConfluencePageTaskParamsPtrOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateConfluencePageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.PostMortemTemplateId
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateConfluencePageTaskParamsPtrOutput) Space() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateConfluencePageTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Space
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateConfluencePageTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateConfluencePageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateConfluencePageTaskParamsPtrOutput) Template() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateConfluencePageTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Template
	}).(pulumi.StringMapOutput)
}

// The page title
func (o WorkflowTaskCreateConfluencePageTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateConfluencePageTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateDatadogNotebookTaskParams struct {
	// The notebook content
	Content *string `pulumi:"content"`
	// The notebook kind. Value must be one of `postmortem`, `runbook`, `investigation`, `documentation`, `report`.
	Kind string `pulumi:"kind"`
	// Value must be one of true or false
	MarkPostMortemAsPublished *bool `pulumi:"markPostMortemAsPublished"`
	// Retrospective template to use when creating notebook, if desired
	PostMortemTemplateId *string `pulumi:"postMortemTemplateId"`
	TaskType             *string `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`.
	Template map[string]string `pulumi:"template"`
	// The notebook title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateDatadogNotebookTaskParamsInput is an input type that accepts WorkflowTaskCreateDatadogNotebookTaskParamsArgs and WorkflowTaskCreateDatadogNotebookTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateDatadogNotebookTaskParamsInput` via:
//
//	WorkflowTaskCreateDatadogNotebookTaskParamsArgs{...}
type WorkflowTaskCreateDatadogNotebookTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateDatadogNotebookTaskParamsOutput() WorkflowTaskCreateDatadogNotebookTaskParamsOutput
	ToWorkflowTaskCreateDatadogNotebookTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateDatadogNotebookTaskParamsOutput
}

type WorkflowTaskCreateDatadogNotebookTaskParamsArgs struct {
	// The notebook content
	Content pulumi.StringPtrInput `pulumi:"content"`
	// The notebook kind. Value must be one of `postmortem`, `runbook`, `investigation`, `documentation`, `report`.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Value must be one of true or false
	MarkPostMortemAsPublished pulumi.BoolPtrInput `pulumi:"markPostMortemAsPublished"`
	// Retrospective template to use when creating notebook, if desired
	PostMortemTemplateId pulumi.StringPtrInput `pulumi:"postMortemTemplateId"`
	TaskType             pulumi.StringPtrInput `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`.
	Template pulumi.StringMapInput `pulumi:"template"`
	// The notebook title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateDatadogNotebookTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateDatadogNotebookTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateDatadogNotebookTaskParamsArgs) ToWorkflowTaskCreateDatadogNotebookTaskParamsOutput() WorkflowTaskCreateDatadogNotebookTaskParamsOutput {
	return i.ToWorkflowTaskCreateDatadogNotebookTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateDatadogNotebookTaskParamsArgs) ToWorkflowTaskCreateDatadogNotebookTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateDatadogNotebookTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateDatadogNotebookTaskParamsOutput)
}

func (i WorkflowTaskCreateDatadogNotebookTaskParamsArgs) ToWorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput() WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateDatadogNotebookTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateDatadogNotebookTaskParamsArgs) ToWorkflowTaskCreateDatadogNotebookTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateDatadogNotebookTaskParamsOutput).ToWorkflowTaskCreateDatadogNotebookTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateDatadogNotebookTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateDatadogNotebookTaskParamsArgs, WorkflowTaskCreateDatadogNotebookTaskParamsPtr and WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateDatadogNotebookTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateDatadogNotebookTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateDatadogNotebookTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput() WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput
	ToWorkflowTaskCreateDatadogNotebookTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput
}

type workflowTaskCreateDatadogNotebookTaskParamsPtrType WorkflowTaskCreateDatadogNotebookTaskParamsArgs

func WorkflowTaskCreateDatadogNotebookTaskParamsPtr(v *WorkflowTaskCreateDatadogNotebookTaskParamsArgs) WorkflowTaskCreateDatadogNotebookTaskParamsPtrInput {
	return (*workflowTaskCreateDatadogNotebookTaskParamsPtrType)(v)
}

func (*workflowTaskCreateDatadogNotebookTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateDatadogNotebookTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateDatadogNotebookTaskParamsPtrType) ToWorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput() WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateDatadogNotebookTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateDatadogNotebookTaskParamsPtrType) ToWorkflowTaskCreateDatadogNotebookTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput)
}

type WorkflowTaskCreateDatadogNotebookTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateDatadogNotebookTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateDatadogNotebookTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateDatadogNotebookTaskParamsOutput) ToWorkflowTaskCreateDatadogNotebookTaskParamsOutput() WorkflowTaskCreateDatadogNotebookTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateDatadogNotebookTaskParamsOutput) ToWorkflowTaskCreateDatadogNotebookTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateDatadogNotebookTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateDatadogNotebookTaskParamsOutput) ToWorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput() WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateDatadogNotebookTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateDatadogNotebookTaskParamsOutput) ToWorkflowTaskCreateDatadogNotebookTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateDatadogNotebookTaskParams) *WorkflowTaskCreateDatadogNotebookTaskParams {
		return &v
	}).(WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput)
}

// The notebook content
func (o WorkflowTaskCreateDatadogNotebookTaskParamsOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateDatadogNotebookTaskParams) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The notebook kind. Value must be one of `postmortem`, `runbook`, `investigation`, `documentation`, `report`.
func (o WorkflowTaskCreateDatadogNotebookTaskParamsOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateDatadogNotebookTaskParams) string { return v.Kind }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateDatadogNotebookTaskParamsOutput) MarkPostMortemAsPublished() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateDatadogNotebookTaskParams) *bool { return v.MarkPostMortemAsPublished }).(pulumi.BoolPtrOutput)
}

// Retrospective template to use when creating notebook, if desired
func (o WorkflowTaskCreateDatadogNotebookTaskParamsOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateDatadogNotebookTaskParams) *string { return v.PostMortemTemplateId }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateDatadogNotebookTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateDatadogNotebookTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateDatadogNotebookTaskParamsOutput) Template() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateDatadogNotebookTaskParams) map[string]string { return v.Template }).(pulumi.StringMapOutput)
}

// The notebook title
func (o WorkflowTaskCreateDatadogNotebookTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateDatadogNotebookTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateDatadogNotebookTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput) ToWorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput() WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput) ToWorkflowTaskCreateDatadogNotebookTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput) Elem() WorkflowTaskCreateDatadogNotebookTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDatadogNotebookTaskParams) WorkflowTaskCreateDatadogNotebookTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateDatadogNotebookTaskParams
		return ret
	}).(WorkflowTaskCreateDatadogNotebookTaskParamsOutput)
}

// The notebook content
func (o WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDatadogNotebookTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// The notebook kind. Value must be one of `postmortem`, `runbook`, `investigation`, `documentation`, `report`.
func (o WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDatadogNotebookTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput) MarkPostMortemAsPublished() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDatadogNotebookTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.MarkPostMortemAsPublished
	}).(pulumi.BoolPtrOutput)
}

// Retrospective template to use when creating notebook, if desired
func (o WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDatadogNotebookTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.PostMortemTemplateId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDatadogNotebookTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput) Template() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDatadogNotebookTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Template
	}).(pulumi.StringMapOutput)
}

// The notebook title
func (o WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDatadogNotebookTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateDropboxPaperPageTaskParams struct {
	// The page content
	Content *string `pulumi:"content"`
	// Value must be one of true or false
	MarkPostMortemAsPublished *bool `pulumi:"markPostMortemAsPublished"`
	// Map must contain two fields, `id` and `name`.
	Namespace map[string]string `pulumi:"namespace"`
	// Map must contain two fields, `id` and `name`.
	ParentFolder map[string]string `pulumi:"parentFolder"`
	// Retrospective template to use when creating page task, if desired
	PostMortemTemplateId *string `pulumi:"postMortemTemplateId"`
	TaskType             *string `pulumi:"taskType"`
	// The page task title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateDropboxPaperPageTaskParamsInput is an input type that accepts WorkflowTaskCreateDropboxPaperPageTaskParamsArgs and WorkflowTaskCreateDropboxPaperPageTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateDropboxPaperPageTaskParamsInput` via:
//
//	WorkflowTaskCreateDropboxPaperPageTaskParamsArgs{...}
type WorkflowTaskCreateDropboxPaperPageTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateDropboxPaperPageTaskParamsOutput() WorkflowTaskCreateDropboxPaperPageTaskParamsOutput
	ToWorkflowTaskCreateDropboxPaperPageTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateDropboxPaperPageTaskParamsOutput
}

type WorkflowTaskCreateDropboxPaperPageTaskParamsArgs struct {
	// The page content
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Value must be one of true or false
	MarkPostMortemAsPublished pulumi.BoolPtrInput `pulumi:"markPostMortemAsPublished"`
	// Map must contain two fields, `id` and `name`.
	Namespace pulumi.StringMapInput `pulumi:"namespace"`
	// Map must contain two fields, `id` and `name`.
	ParentFolder pulumi.StringMapInput `pulumi:"parentFolder"`
	// Retrospective template to use when creating page task, if desired
	PostMortemTemplateId pulumi.StringPtrInput `pulumi:"postMortemTemplateId"`
	TaskType             pulumi.StringPtrInput `pulumi:"taskType"`
	// The page task title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateDropboxPaperPageTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateDropboxPaperPageTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateDropboxPaperPageTaskParamsArgs) ToWorkflowTaskCreateDropboxPaperPageTaskParamsOutput() WorkflowTaskCreateDropboxPaperPageTaskParamsOutput {
	return i.ToWorkflowTaskCreateDropboxPaperPageTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateDropboxPaperPageTaskParamsArgs) ToWorkflowTaskCreateDropboxPaperPageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateDropboxPaperPageTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateDropboxPaperPageTaskParamsOutput)
}

func (i WorkflowTaskCreateDropboxPaperPageTaskParamsArgs) ToWorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput() WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateDropboxPaperPageTaskParamsArgs) ToWorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateDropboxPaperPageTaskParamsOutput).ToWorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateDropboxPaperPageTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateDropboxPaperPageTaskParamsArgs, WorkflowTaskCreateDropboxPaperPageTaskParamsPtr and WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateDropboxPaperPageTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateDropboxPaperPageTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateDropboxPaperPageTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput() WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput
	ToWorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput
}

type workflowTaskCreateDropboxPaperPageTaskParamsPtrType WorkflowTaskCreateDropboxPaperPageTaskParamsArgs

func WorkflowTaskCreateDropboxPaperPageTaskParamsPtr(v *WorkflowTaskCreateDropboxPaperPageTaskParamsArgs) WorkflowTaskCreateDropboxPaperPageTaskParamsPtrInput {
	return (*workflowTaskCreateDropboxPaperPageTaskParamsPtrType)(v)
}

func (*workflowTaskCreateDropboxPaperPageTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateDropboxPaperPageTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateDropboxPaperPageTaskParamsPtrType) ToWorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput() WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateDropboxPaperPageTaskParamsPtrType) ToWorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput)
}

type WorkflowTaskCreateDropboxPaperPageTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateDropboxPaperPageTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateDropboxPaperPageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateDropboxPaperPageTaskParamsOutput) ToWorkflowTaskCreateDropboxPaperPageTaskParamsOutput() WorkflowTaskCreateDropboxPaperPageTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateDropboxPaperPageTaskParamsOutput) ToWorkflowTaskCreateDropboxPaperPageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateDropboxPaperPageTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateDropboxPaperPageTaskParamsOutput) ToWorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput() WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateDropboxPaperPageTaskParamsOutput) ToWorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateDropboxPaperPageTaskParams) *WorkflowTaskCreateDropboxPaperPageTaskParams {
		return &v
	}).(WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput)
}

// The page content
func (o WorkflowTaskCreateDropboxPaperPageTaskParamsOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateDropboxPaperPageTaskParams) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateDropboxPaperPageTaskParamsOutput) MarkPostMortemAsPublished() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateDropboxPaperPageTaskParams) *bool { return v.MarkPostMortemAsPublished }).(pulumi.BoolPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateDropboxPaperPageTaskParamsOutput) Namespace() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateDropboxPaperPageTaskParams) map[string]string { return v.Namespace }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateDropboxPaperPageTaskParamsOutput) ParentFolder() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateDropboxPaperPageTaskParams) map[string]string { return v.ParentFolder }).(pulumi.StringMapOutput)
}

// Retrospective template to use when creating page task, if desired
func (o WorkflowTaskCreateDropboxPaperPageTaskParamsOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateDropboxPaperPageTaskParams) *string { return v.PostMortemTemplateId }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateDropboxPaperPageTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateDropboxPaperPageTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The page task title
func (o WorkflowTaskCreateDropboxPaperPageTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateDropboxPaperPageTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateDropboxPaperPageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput) ToWorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput() WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput) ToWorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput) Elem() WorkflowTaskCreateDropboxPaperPageTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDropboxPaperPageTaskParams) WorkflowTaskCreateDropboxPaperPageTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateDropboxPaperPageTaskParams
		return ret
	}).(WorkflowTaskCreateDropboxPaperPageTaskParamsOutput)
}

// The page content
func (o WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDropboxPaperPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput) MarkPostMortemAsPublished() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDropboxPaperPageTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.MarkPostMortemAsPublished
	}).(pulumi.BoolPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput) Namespace() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDropboxPaperPageTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput) ParentFolder() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDropboxPaperPageTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.ParentFolder
	}).(pulumi.StringMapOutput)
}

// Retrospective template to use when creating page task, if desired
func (o WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDropboxPaperPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.PostMortemTemplateId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDropboxPaperPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The page task title
func (o WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDropboxPaperPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateGithubIssueTaskParams struct {
	// The issue body
	Body *string `pulumi:"body"`
	// Map must contain two fields, `id` and `name`.
	Repository map[string]string `pulumi:"repository"`
	TaskType   *string           `pulumi:"taskType"`
	// The issue title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateGithubIssueTaskParamsInput is an input type that accepts WorkflowTaskCreateGithubIssueTaskParamsArgs and WorkflowTaskCreateGithubIssueTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGithubIssueTaskParamsInput` via:
//
//	WorkflowTaskCreateGithubIssueTaskParamsArgs{...}
type WorkflowTaskCreateGithubIssueTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGithubIssueTaskParamsOutput() WorkflowTaskCreateGithubIssueTaskParamsOutput
	ToWorkflowTaskCreateGithubIssueTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateGithubIssueTaskParamsOutput
}

type WorkflowTaskCreateGithubIssueTaskParamsArgs struct {
	// The issue body
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Map must contain two fields, `id` and `name`.
	Repository pulumi.StringMapInput `pulumi:"repository"`
	TaskType   pulumi.StringPtrInput `pulumi:"taskType"`
	// The issue title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateGithubIssueTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGithubIssueTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateGithubIssueTaskParamsArgs) ToWorkflowTaskCreateGithubIssueTaskParamsOutput() WorkflowTaskCreateGithubIssueTaskParamsOutput {
	return i.ToWorkflowTaskCreateGithubIssueTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGithubIssueTaskParamsArgs) ToWorkflowTaskCreateGithubIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateGithubIssueTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGithubIssueTaskParamsOutput)
}

func (i WorkflowTaskCreateGithubIssueTaskParamsArgs) ToWorkflowTaskCreateGithubIssueTaskParamsPtrOutput() WorkflowTaskCreateGithubIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateGithubIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGithubIssueTaskParamsArgs) ToWorkflowTaskCreateGithubIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGithubIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGithubIssueTaskParamsOutput).ToWorkflowTaskCreateGithubIssueTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateGithubIssueTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateGithubIssueTaskParamsArgs, WorkflowTaskCreateGithubIssueTaskParamsPtr and WorkflowTaskCreateGithubIssueTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGithubIssueTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateGithubIssueTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateGithubIssueTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGithubIssueTaskParamsPtrOutput() WorkflowTaskCreateGithubIssueTaskParamsPtrOutput
	ToWorkflowTaskCreateGithubIssueTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateGithubIssueTaskParamsPtrOutput
}

type workflowTaskCreateGithubIssueTaskParamsPtrType WorkflowTaskCreateGithubIssueTaskParamsArgs

func WorkflowTaskCreateGithubIssueTaskParamsPtr(v *WorkflowTaskCreateGithubIssueTaskParamsArgs) WorkflowTaskCreateGithubIssueTaskParamsPtrInput {
	return (*workflowTaskCreateGithubIssueTaskParamsPtrType)(v)
}

func (*workflowTaskCreateGithubIssueTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGithubIssueTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateGithubIssueTaskParamsPtrType) ToWorkflowTaskCreateGithubIssueTaskParamsPtrOutput() WorkflowTaskCreateGithubIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateGithubIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateGithubIssueTaskParamsPtrType) ToWorkflowTaskCreateGithubIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGithubIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGithubIssueTaskParamsPtrOutput)
}

type WorkflowTaskCreateGithubIssueTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGithubIssueTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGithubIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateGithubIssueTaskParamsOutput) ToWorkflowTaskCreateGithubIssueTaskParamsOutput() WorkflowTaskCreateGithubIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateGithubIssueTaskParamsOutput) ToWorkflowTaskCreateGithubIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateGithubIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateGithubIssueTaskParamsOutput) ToWorkflowTaskCreateGithubIssueTaskParamsPtrOutput() WorkflowTaskCreateGithubIssueTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateGithubIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateGithubIssueTaskParamsOutput) ToWorkflowTaskCreateGithubIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGithubIssueTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateGithubIssueTaskParams) *WorkflowTaskCreateGithubIssueTaskParams {
		return &v
	}).(WorkflowTaskCreateGithubIssueTaskParamsPtrOutput)
}

// The issue body
func (o WorkflowTaskCreateGithubIssueTaskParamsOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGithubIssueTaskParams) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateGithubIssueTaskParamsOutput) Repository() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGithubIssueTaskParams) map[string]string { return v.Repository }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateGithubIssueTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGithubIssueTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskCreateGithubIssueTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGithubIssueTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateGithubIssueTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGithubIssueTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGithubIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateGithubIssueTaskParamsPtrOutput) ToWorkflowTaskCreateGithubIssueTaskParamsPtrOutput() WorkflowTaskCreateGithubIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateGithubIssueTaskParamsPtrOutput) ToWorkflowTaskCreateGithubIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGithubIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateGithubIssueTaskParamsPtrOutput) Elem() WorkflowTaskCreateGithubIssueTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGithubIssueTaskParams) WorkflowTaskCreateGithubIssueTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateGithubIssueTaskParams
		return ret
	}).(WorkflowTaskCreateGithubIssueTaskParamsOutput)
}

// The issue body
func (o WorkflowTaskCreateGithubIssueTaskParamsPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGithubIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateGithubIssueTaskParamsPtrOutput) Repository() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGithubIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Repository
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateGithubIssueTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGithubIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskCreateGithubIssueTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGithubIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateGitlabIssueTaskParams struct {
	// The issue description
	Description *string `pulumi:"description"`
	// The due date
	DueDate *string `pulumi:"dueDate"`
	// The issue type. Value must be one of `issue`, `incident`, `testCase`, `task`.
	IssueType *string `pulumi:"issueType"`
	// The issue labels
	Labels *string `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`.
	Repository map[string]string `pulumi:"repository"`
	TaskType   *string           `pulumi:"taskType"`
	// The issue title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateGitlabIssueTaskParamsInput is an input type that accepts WorkflowTaskCreateGitlabIssueTaskParamsArgs and WorkflowTaskCreateGitlabIssueTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGitlabIssueTaskParamsInput` via:
//
//	WorkflowTaskCreateGitlabIssueTaskParamsArgs{...}
type WorkflowTaskCreateGitlabIssueTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGitlabIssueTaskParamsOutput() WorkflowTaskCreateGitlabIssueTaskParamsOutput
	ToWorkflowTaskCreateGitlabIssueTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateGitlabIssueTaskParamsOutput
}

type WorkflowTaskCreateGitlabIssueTaskParamsArgs struct {
	// The issue description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The due date
	DueDate pulumi.StringPtrInput `pulumi:"dueDate"`
	// The issue type. Value must be one of `issue`, `incident`, `testCase`, `task`.
	IssueType pulumi.StringPtrInput `pulumi:"issueType"`
	// The issue labels
	Labels pulumi.StringPtrInput `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`.
	Repository pulumi.StringMapInput `pulumi:"repository"`
	TaskType   pulumi.StringPtrInput `pulumi:"taskType"`
	// The issue title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateGitlabIssueTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGitlabIssueTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateGitlabIssueTaskParamsArgs) ToWorkflowTaskCreateGitlabIssueTaskParamsOutput() WorkflowTaskCreateGitlabIssueTaskParamsOutput {
	return i.ToWorkflowTaskCreateGitlabIssueTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGitlabIssueTaskParamsArgs) ToWorkflowTaskCreateGitlabIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateGitlabIssueTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGitlabIssueTaskParamsOutput)
}

func (i WorkflowTaskCreateGitlabIssueTaskParamsArgs) ToWorkflowTaskCreateGitlabIssueTaskParamsPtrOutput() WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateGitlabIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGitlabIssueTaskParamsArgs) ToWorkflowTaskCreateGitlabIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGitlabIssueTaskParamsOutput).ToWorkflowTaskCreateGitlabIssueTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateGitlabIssueTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateGitlabIssueTaskParamsArgs, WorkflowTaskCreateGitlabIssueTaskParamsPtr and WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGitlabIssueTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateGitlabIssueTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateGitlabIssueTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGitlabIssueTaskParamsPtrOutput() WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput
	ToWorkflowTaskCreateGitlabIssueTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput
}

type workflowTaskCreateGitlabIssueTaskParamsPtrType WorkflowTaskCreateGitlabIssueTaskParamsArgs

func WorkflowTaskCreateGitlabIssueTaskParamsPtr(v *WorkflowTaskCreateGitlabIssueTaskParamsArgs) WorkflowTaskCreateGitlabIssueTaskParamsPtrInput {
	return (*workflowTaskCreateGitlabIssueTaskParamsPtrType)(v)
}

func (*workflowTaskCreateGitlabIssueTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGitlabIssueTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateGitlabIssueTaskParamsPtrType) ToWorkflowTaskCreateGitlabIssueTaskParamsPtrOutput() WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateGitlabIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateGitlabIssueTaskParamsPtrType) ToWorkflowTaskCreateGitlabIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput)
}

type WorkflowTaskCreateGitlabIssueTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGitlabIssueTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGitlabIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateGitlabIssueTaskParamsOutput) ToWorkflowTaskCreateGitlabIssueTaskParamsOutput() WorkflowTaskCreateGitlabIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateGitlabIssueTaskParamsOutput) ToWorkflowTaskCreateGitlabIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateGitlabIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateGitlabIssueTaskParamsOutput) ToWorkflowTaskCreateGitlabIssueTaskParamsPtrOutput() WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateGitlabIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateGitlabIssueTaskParamsOutput) ToWorkflowTaskCreateGitlabIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateGitlabIssueTaskParams) *WorkflowTaskCreateGitlabIssueTaskParams {
		return &v
	}).(WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput)
}

// The issue description
func (o WorkflowTaskCreateGitlabIssueTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGitlabIssueTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskCreateGitlabIssueTaskParamsOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGitlabIssueTaskParams) *string { return v.DueDate }).(pulumi.StringPtrOutput)
}

// The issue type. Value must be one of `issue`, `incident`, `testCase`, `task`.
func (o WorkflowTaskCreateGitlabIssueTaskParamsOutput) IssueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGitlabIssueTaskParams) *string { return v.IssueType }).(pulumi.StringPtrOutput)
}

// The issue labels
func (o WorkflowTaskCreateGitlabIssueTaskParamsOutput) Labels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGitlabIssueTaskParams) *string { return v.Labels }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateGitlabIssueTaskParamsOutput) Repository() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGitlabIssueTaskParams) map[string]string { return v.Repository }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateGitlabIssueTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGitlabIssueTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskCreateGitlabIssueTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGitlabIssueTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGitlabIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput) ToWorkflowTaskCreateGitlabIssueTaskParamsPtrOutput() WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput) ToWorkflowTaskCreateGitlabIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput) Elem() WorkflowTaskCreateGitlabIssueTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGitlabIssueTaskParams) WorkflowTaskCreateGitlabIssueTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateGitlabIssueTaskParams
		return ret
	}).(WorkflowTaskCreateGitlabIssueTaskParamsOutput)
}

// The issue description
func (o WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGitlabIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGitlabIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DueDate
	}).(pulumi.StringPtrOutput)
}

// The issue type. Value must be one of `issue`, `incident`, `testCase`, `task`.
func (o WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput) IssueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGitlabIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.IssueType
	}).(pulumi.StringPtrOutput)
}

// The issue labels
func (o WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput) Labels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGitlabIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput) Repository() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGitlabIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Repository
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGitlabIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGitlabIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateGoToMeetingTaskParams struct {
	// Value must be one of `ptsn`, `free`, `hyrid`, `voip`.
	ConferenceCallInfo *string `pulumi:"conferenceCallInfo"`
	// Value must be one of true or false
	PasswordRequired *bool `pulumi:"passwordRequired"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                       `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	// The meeting subject
	Subject  string  `pulumi:"subject"`
	TaskType *string `pulumi:"taskType"`
}

// WorkflowTaskCreateGoToMeetingTaskParamsInput is an input type that accepts WorkflowTaskCreateGoToMeetingTaskParamsArgs and WorkflowTaskCreateGoToMeetingTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoToMeetingTaskParamsInput` via:
//
//	WorkflowTaskCreateGoToMeetingTaskParamsArgs{...}
type WorkflowTaskCreateGoToMeetingTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoToMeetingTaskParamsOutput() WorkflowTaskCreateGoToMeetingTaskParamsOutput
	ToWorkflowTaskCreateGoToMeetingTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateGoToMeetingTaskParamsOutput
}

type WorkflowTaskCreateGoToMeetingTaskParamsArgs struct {
	// Value must be one of `ptsn`, `free`, `hyrid`, `voip`.
	ConferenceCallInfo pulumi.StringPtrInput `pulumi:"conferenceCallInfo"`
	// Value must be one of true or false
	PasswordRequired pulumi.BoolPtrInput `pulumi:"passwordRequired"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                                 `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	// The meeting subject
	Subject  pulumi.StringInput    `pulumi:"subject"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskCreateGoToMeetingTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGoToMeetingTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateGoToMeetingTaskParamsArgs) ToWorkflowTaskCreateGoToMeetingTaskParamsOutput() WorkflowTaskCreateGoToMeetingTaskParamsOutput {
	return i.ToWorkflowTaskCreateGoToMeetingTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoToMeetingTaskParamsArgs) ToWorkflowTaskCreateGoToMeetingTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoToMeetingTaskParamsOutput)
}

func (i WorkflowTaskCreateGoToMeetingTaskParamsArgs) ToWorkflowTaskCreateGoToMeetingTaskParamsPtrOutput() WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateGoToMeetingTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoToMeetingTaskParamsArgs) ToWorkflowTaskCreateGoToMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoToMeetingTaskParamsOutput).ToWorkflowTaskCreateGoToMeetingTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateGoToMeetingTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateGoToMeetingTaskParamsArgs, WorkflowTaskCreateGoToMeetingTaskParamsPtr and WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoToMeetingTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateGoToMeetingTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateGoToMeetingTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoToMeetingTaskParamsPtrOutput() WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput
	ToWorkflowTaskCreateGoToMeetingTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput
}

type workflowTaskCreateGoToMeetingTaskParamsPtrType WorkflowTaskCreateGoToMeetingTaskParamsArgs

func WorkflowTaskCreateGoToMeetingTaskParamsPtr(v *WorkflowTaskCreateGoToMeetingTaskParamsArgs) WorkflowTaskCreateGoToMeetingTaskParamsPtrInput {
	return (*workflowTaskCreateGoToMeetingTaskParamsPtrType)(v)
}

func (*workflowTaskCreateGoToMeetingTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGoToMeetingTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateGoToMeetingTaskParamsPtrType) ToWorkflowTaskCreateGoToMeetingTaskParamsPtrOutput() WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateGoToMeetingTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateGoToMeetingTaskParamsPtrType) ToWorkflowTaskCreateGoToMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput)
}

type WorkflowTaskCreateGoToMeetingTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoToMeetingTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGoToMeetingTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsOutput) ToWorkflowTaskCreateGoToMeetingTaskParamsOutput() WorkflowTaskCreateGoToMeetingTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsOutput) ToWorkflowTaskCreateGoToMeetingTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsOutput) ToWorkflowTaskCreateGoToMeetingTaskParamsPtrOutput() WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateGoToMeetingTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsOutput) ToWorkflowTaskCreateGoToMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateGoToMeetingTaskParams) *WorkflowTaskCreateGoToMeetingTaskParams {
		return &v
	}).(WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput)
}

// Value must be one of `ptsn`, `free`, `hyrid`, `voip`.
func (o WorkflowTaskCreateGoToMeetingTaskParamsOutput) ConferenceCallInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoToMeetingTaskParams) *string { return v.ConferenceCallInfo }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoToMeetingTaskParamsOutput) PasswordRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoToMeetingTaskParams) *bool { return v.PasswordRequired }).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoToMeetingTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoToMeetingTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsOutput) PostToSlackChannels() WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoToMeetingTaskParams) []WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput)
}

// The meeting subject
func (o WorkflowTaskCreateGoToMeetingTaskParamsOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoToMeetingTaskParams) string { return v.Subject }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoToMeetingTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGoToMeetingTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput) ToWorkflowTaskCreateGoToMeetingTaskParamsPtrOutput() WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput) ToWorkflowTaskCreateGoToMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput) Elem() WorkflowTaskCreateGoToMeetingTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoToMeetingTaskParams) WorkflowTaskCreateGoToMeetingTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateGoToMeetingTaskParams
		return ret
	}).(WorkflowTaskCreateGoToMeetingTaskParamsOutput)
}

// Value must be one of `ptsn`, `free`, `hyrid`, `voip`.
func (o WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput) ConferenceCallInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoToMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.ConferenceCallInfo
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput) PasswordRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoToMeetingTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PasswordRequired
	}).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoToMeetingTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoToMeetingTaskParams) []WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput)
}

// The meeting subject
func (o WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoToMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoToMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArgs and WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArgs) ToWorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArgs) ToWorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArray and WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArray{ WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArray []WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelInput

func (WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArray) ToWorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArray) ToWorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput) ToWorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput) ToWorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskCreateGoogleCalendarEventTaskParams struct {
	// Emails of attendees
	Attendees []string `pulumi:"attendees"`
	// Value must be one of true or false
	CanGuestsInviteOthers *bool `pulumi:"canGuestsInviteOthers"`
	// Value must be one of true or false
	CanGuestsModifyEvent *bool `pulumi:"canGuestsModifyEvent"`
	// Value must be one of true or false
	CanGuestsSeeOtherGuests *bool `pulumi:"canGuestsSeeOtherGuests"`
	// Sets the video conference type attached to the meeting. Value must be one of `eventHangout`, `eventNamedHangout`, `hangoutsMeet`, `addOn`.
	ConferenceSolutionKey *string `pulumi:"conferenceSolutionKey"`
	// The days until meeting
	DaysUntilMeeting int `pulumi:"daysUntilMeeting"`
	// The event description
	Description string `pulumi:"description"`
	// Value must be one of true or false
	ExcludeWeekends *bool `pulumi:"excludeWeekends"`
	// Meeting duration in format like '1 hour', '30 minutes'
	MeetingDuration string `pulumi:"meetingDuration"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                               `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	// Send an email to the attendees notifying them of the event. Value must be one of true or false
	SendUpdates *bool `pulumi:"sendUpdates"`
	// The event summary
	Summary  string  `pulumi:"summary"`
	TaskType *string `pulumi:"taskType"`
	// Time of meeting in format HH:MM
	TimeOfMeeting string `pulumi:"timeOfMeeting"`
	// A valid IANA time zone name.
	TimeZone *string `pulumi:"timeZone"`
}

// WorkflowTaskCreateGoogleCalendarEventTaskParamsInput is an input type that accepts WorkflowTaskCreateGoogleCalendarEventTaskParamsArgs and WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoogleCalendarEventTaskParamsInput` via:
//
//	WorkflowTaskCreateGoogleCalendarEventTaskParamsArgs{...}
type WorkflowTaskCreateGoogleCalendarEventTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleCalendarEventTaskParamsOutput() WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput
	ToWorkflowTaskCreateGoogleCalendarEventTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput
}

type WorkflowTaskCreateGoogleCalendarEventTaskParamsArgs struct {
	// Emails of attendees
	Attendees pulumi.StringArrayInput `pulumi:"attendees"`
	// Value must be one of true or false
	CanGuestsInviteOthers pulumi.BoolPtrInput `pulumi:"canGuestsInviteOthers"`
	// Value must be one of true or false
	CanGuestsModifyEvent pulumi.BoolPtrInput `pulumi:"canGuestsModifyEvent"`
	// Value must be one of true or false
	CanGuestsSeeOtherGuests pulumi.BoolPtrInput `pulumi:"canGuestsSeeOtherGuests"`
	// Sets the video conference type attached to the meeting. Value must be one of `eventHangout`, `eventNamedHangout`, `hangoutsMeet`, `addOn`.
	ConferenceSolutionKey pulumi.StringPtrInput `pulumi:"conferenceSolutionKey"`
	// The days until meeting
	DaysUntilMeeting pulumi.IntInput `pulumi:"daysUntilMeeting"`
	// The event description
	Description pulumi.StringInput `pulumi:"description"`
	// Value must be one of true or false
	ExcludeWeekends pulumi.BoolPtrInput `pulumi:"excludeWeekends"`
	// Meeting duration in format like '1 hour', '30 minutes'
	MeetingDuration pulumi.StringInput `pulumi:"meetingDuration"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                                         `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	// Send an email to the attendees notifying them of the event. Value must be one of true or false
	SendUpdates pulumi.BoolPtrInput `pulumi:"sendUpdates"`
	// The event summary
	Summary  pulumi.StringInput    `pulumi:"summary"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// Time of meeting in format HH:MM
	TimeOfMeeting pulumi.StringInput `pulumi:"timeOfMeeting"`
	// A valid IANA time zone name.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (WorkflowTaskCreateGoogleCalendarEventTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGoogleCalendarEventTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateGoogleCalendarEventTaskParamsArgs) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsOutput() WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput {
	return i.ToWorkflowTaskCreateGoogleCalendarEventTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoogleCalendarEventTaskParamsArgs) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput)
}

func (i WorkflowTaskCreateGoogleCalendarEventTaskParamsArgs) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput() WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoogleCalendarEventTaskParamsArgs) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput).ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateGoogleCalendarEventTaskParamsArgs, WorkflowTaskCreateGoogleCalendarEventTaskParamsPtr and WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateGoogleCalendarEventTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput() WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput
	ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput
}

type workflowTaskCreateGoogleCalendarEventTaskParamsPtrType WorkflowTaskCreateGoogleCalendarEventTaskParamsArgs

func WorkflowTaskCreateGoogleCalendarEventTaskParamsPtr(v *WorkflowTaskCreateGoogleCalendarEventTaskParamsArgs) WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrInput {
	return (*workflowTaskCreateGoogleCalendarEventTaskParamsPtrType)(v)
}

func (*workflowTaskCreateGoogleCalendarEventTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGoogleCalendarEventTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateGoogleCalendarEventTaskParamsPtrType) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput() WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateGoogleCalendarEventTaskParamsPtrType) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput)
}

type WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGoogleCalendarEventTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsOutput() WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput() WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateGoogleCalendarEventTaskParams) *WorkflowTaskCreateGoogleCalendarEventTaskParams {
		return &v
	}).(WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput)
}

// Emails of attendees
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) Attendees() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParams) []string { return v.Attendees }).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) CanGuestsInviteOthers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParams) *bool { return v.CanGuestsInviteOthers }).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) CanGuestsModifyEvent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParams) *bool { return v.CanGuestsModifyEvent }).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) CanGuestsSeeOtherGuests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParams) *bool { return v.CanGuestsSeeOtherGuests }).(pulumi.BoolPtrOutput)
}

// Sets the video conference type attached to the meeting. Value must be one of `eventHangout`, `eventNamedHangout`, `hangoutsMeet`, `addOn`.
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) ConferenceSolutionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParams) *string { return v.ConferenceSolutionKey }).(pulumi.StringPtrOutput)
}

// The days until meeting
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) DaysUntilMeeting() pulumi.IntOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParams) int { return v.DaysUntilMeeting }).(pulumi.IntOutput)
}

// The event description
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParams) string { return v.Description }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) ExcludeWeekends() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParams) *bool { return v.ExcludeWeekends }).(pulumi.BoolPtrOutput)
}

// Meeting duration in format like '1 hour', '30 minutes'
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) MeetingDuration() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParams) string { return v.MeetingDuration }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) PostToSlackChannels() WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParams) []WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput)
}

// Send an email to the attendees notifying them of the event. Value must be one of true or false
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) SendUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParams) *bool { return v.SendUpdates }).(pulumi.BoolPtrOutput)
}

// The event summary
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParams) string { return v.Summary }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Time of meeting in format HH:MM
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) TimeOfMeeting() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParams) string { return v.TimeOfMeeting }).(pulumi.StringOutput)
}

// A valid IANA time zone name.
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParams) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGoogleCalendarEventTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput() WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) Elem() WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) WorkflowTaskCreateGoogleCalendarEventTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateGoogleCalendarEventTaskParams
		return ret
	}).(WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput)
}

// Emails of attendees
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) Attendees() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.Attendees
	}).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) CanGuestsInviteOthers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.CanGuestsInviteOthers
	}).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) CanGuestsModifyEvent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.CanGuestsModifyEvent
	}).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) CanGuestsSeeOtherGuests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.CanGuestsSeeOtherGuests
	}).(pulumi.BoolPtrOutput)
}

// Sets the video conference type attached to the meeting. Value must be one of `eventHangout`, `eventNamedHangout`, `hangoutsMeet`, `addOn`.
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) ConferenceSolutionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.ConferenceSolutionKey
	}).(pulumi.StringPtrOutput)
}

// The days until meeting
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) DaysUntilMeeting() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) *int {
		if v == nil {
			return nil
		}
		return &v.DaysUntilMeeting
	}).(pulumi.IntPtrOutput)
}

// The event description
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) ExcludeWeekends() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeWeekends
	}).(pulumi.BoolPtrOutput)
}

// Meeting duration in format like '1 hour', '30 minutes'
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) MeetingDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.MeetingDuration
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) []WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput)
}

// Send an email to the attendees notifying them of the event. Value must be one of true or false
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) SendUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.SendUpdates
	}).(pulumi.BoolPtrOutput)
}

// The event summary
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Summary
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Time of meeting in format HH:MM
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) TimeOfMeeting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.TimeOfMeeting
	}).(pulumi.StringPtrOutput)
}

// A valid IANA time zone name.
func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArgs and WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArgs) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArgs) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArray and WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArray{ WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArray []WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelInput

func (WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArray) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArray) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskCreateGoogleDocsPageTaskParams struct {
	// The page content
	Content *string `pulumi:"content"`
	// Map must contain two fields, `id` and `name`.
	Drive map[string]string `pulumi:"drive"`
	// Value must be one of true or false
	MarkPostMortemAsPublished *bool `pulumi:"markPostMortemAsPublished"`
	// Map must contain two fields, `id` and `name`.
	ParentFolder map[string]string `pulumi:"parentFolder"`
	// Page permissions JSON
	Permissions *string `pulumi:"permissions"`
	// Retrospective template to use when creating page, if desired
	PostMortemTemplateId *string `pulumi:"postMortemTemplateId"`
	TaskType             *string `pulumi:"taskType"`
	// The Google Doc file ID to use as a template
	TemplateId *string `pulumi:"templateId"`
	// The page title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateGoogleDocsPageTaskParamsInput is an input type that accepts WorkflowTaskCreateGoogleDocsPageTaskParamsArgs and WorkflowTaskCreateGoogleDocsPageTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoogleDocsPageTaskParamsInput` via:
//
//	WorkflowTaskCreateGoogleDocsPageTaskParamsArgs{...}
type WorkflowTaskCreateGoogleDocsPageTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleDocsPageTaskParamsOutput() WorkflowTaskCreateGoogleDocsPageTaskParamsOutput
	ToWorkflowTaskCreateGoogleDocsPageTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateGoogleDocsPageTaskParamsOutput
}

type WorkflowTaskCreateGoogleDocsPageTaskParamsArgs struct {
	// The page content
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Map must contain two fields, `id` and `name`.
	Drive pulumi.StringMapInput `pulumi:"drive"`
	// Value must be one of true or false
	MarkPostMortemAsPublished pulumi.BoolPtrInput `pulumi:"markPostMortemAsPublished"`
	// Map must contain two fields, `id` and `name`.
	ParentFolder pulumi.StringMapInput `pulumi:"parentFolder"`
	// Page permissions JSON
	Permissions pulumi.StringPtrInput `pulumi:"permissions"`
	// Retrospective template to use when creating page, if desired
	PostMortemTemplateId pulumi.StringPtrInput `pulumi:"postMortemTemplateId"`
	TaskType             pulumi.StringPtrInput `pulumi:"taskType"`
	// The Google Doc file ID to use as a template
	TemplateId pulumi.StringPtrInput `pulumi:"templateId"`
	// The page title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateGoogleDocsPageTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGoogleDocsPageTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateGoogleDocsPageTaskParamsArgs) ToWorkflowTaskCreateGoogleDocsPageTaskParamsOutput() WorkflowTaskCreateGoogleDocsPageTaskParamsOutput {
	return i.ToWorkflowTaskCreateGoogleDocsPageTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoogleDocsPageTaskParamsArgs) ToWorkflowTaskCreateGoogleDocsPageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPageTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleDocsPageTaskParamsOutput)
}

func (i WorkflowTaskCreateGoogleDocsPageTaskParamsArgs) ToWorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput() WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoogleDocsPageTaskParamsArgs) ToWorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleDocsPageTaskParamsOutput).ToWorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateGoogleDocsPageTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateGoogleDocsPageTaskParamsArgs, WorkflowTaskCreateGoogleDocsPageTaskParamsPtr and WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoogleDocsPageTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateGoogleDocsPageTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateGoogleDocsPageTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput() WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput
	ToWorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput
}

type workflowTaskCreateGoogleDocsPageTaskParamsPtrType WorkflowTaskCreateGoogleDocsPageTaskParamsArgs

func WorkflowTaskCreateGoogleDocsPageTaskParamsPtr(v *WorkflowTaskCreateGoogleDocsPageTaskParamsArgs) WorkflowTaskCreateGoogleDocsPageTaskParamsPtrInput {
	return (*workflowTaskCreateGoogleDocsPageTaskParamsPtrType)(v)
}

func (*workflowTaskCreateGoogleDocsPageTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGoogleDocsPageTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateGoogleDocsPageTaskParamsPtrType) ToWorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput() WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateGoogleDocsPageTaskParamsPtrType) ToWorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput)
}

type WorkflowTaskCreateGoogleDocsPageTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleDocsPageTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGoogleDocsPageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleDocsPageTaskParamsOutput) ToWorkflowTaskCreateGoogleDocsPageTaskParamsOutput() WorkflowTaskCreateGoogleDocsPageTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateGoogleDocsPageTaskParamsOutput) ToWorkflowTaskCreateGoogleDocsPageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPageTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateGoogleDocsPageTaskParamsOutput) ToWorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput() WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateGoogleDocsPageTaskParamsOutput) ToWorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateGoogleDocsPageTaskParams) *WorkflowTaskCreateGoogleDocsPageTaskParams {
		return &v
	}).(WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput)
}

// The page content
func (o WorkflowTaskCreateGoogleDocsPageTaskParamsOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleDocsPageTaskParams) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateGoogleDocsPageTaskParamsOutput) Drive() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleDocsPageTaskParams) map[string]string { return v.Drive }).(pulumi.StringMapOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoogleDocsPageTaskParamsOutput) MarkPostMortemAsPublished() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleDocsPageTaskParams) *bool { return v.MarkPostMortemAsPublished }).(pulumi.BoolPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateGoogleDocsPageTaskParamsOutput) ParentFolder() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleDocsPageTaskParams) map[string]string { return v.ParentFolder }).(pulumi.StringMapOutput)
}

// Page permissions JSON
func (o WorkflowTaskCreateGoogleDocsPageTaskParamsOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleDocsPageTaskParams) *string { return v.Permissions }).(pulumi.StringPtrOutput)
}

// Retrospective template to use when creating page, if desired
func (o WorkflowTaskCreateGoogleDocsPageTaskParamsOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleDocsPageTaskParams) *string { return v.PostMortemTemplateId }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateGoogleDocsPageTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleDocsPageTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The Google Doc file ID to use as a template
func (o WorkflowTaskCreateGoogleDocsPageTaskParamsOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleDocsPageTaskParams) *string { return v.TemplateId }).(pulumi.StringPtrOutput)
}

// The page title
func (o WorkflowTaskCreateGoogleDocsPageTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleDocsPageTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGoogleDocsPageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput) ToWorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput() WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput) ToWorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput) Elem() WorkflowTaskCreateGoogleDocsPageTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPageTaskParams) WorkflowTaskCreateGoogleDocsPageTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateGoogleDocsPageTaskParams
		return ret
	}).(WorkflowTaskCreateGoogleDocsPageTaskParamsOutput)
}

// The page content
func (o WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput) Drive() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPageTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Drive
	}).(pulumi.StringMapOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput) MarkPostMortemAsPublished() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPageTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.MarkPostMortemAsPublished
	}).(pulumi.BoolPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput) ParentFolder() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPageTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.ParentFolder
	}).(pulumi.StringMapOutput)
}

// Page permissions JSON
func (o WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Permissions
	}).(pulumi.StringPtrOutput)
}

// Retrospective template to use when creating page, if desired
func (o WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.PostMortemTemplateId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The Google Doc file ID to use as a template
func (o WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TemplateId
	}).(pulumi.StringPtrOutput)
}

// The page title
func (o WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateGoogleDocsPermissionsTaskParams struct {
	// Email message notification
	EmailMessage *string `pulumi:"emailMessage"`
	// The Google Doc file ID
	FileId string `pulumi:"fileId"`
	// Page permissions JSON
	Permissions string `pulumi:"permissions"`
	// Value must be one of true or false
	SendNotificationEmail *bool   `pulumi:"sendNotificationEmail"`
	TaskType              *string `pulumi:"taskType"`
}

// WorkflowTaskCreateGoogleDocsPermissionsTaskParamsInput is an input type that accepts WorkflowTaskCreateGoogleDocsPermissionsTaskParamsArgs and WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoogleDocsPermissionsTaskParamsInput` via:
//
//	WorkflowTaskCreateGoogleDocsPermissionsTaskParamsArgs{...}
type WorkflowTaskCreateGoogleDocsPermissionsTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput() WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput
	ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput
}

type WorkflowTaskCreateGoogleDocsPermissionsTaskParamsArgs struct {
	// Email message notification
	EmailMessage pulumi.StringPtrInput `pulumi:"emailMessage"`
	// The Google Doc file ID
	FileId pulumi.StringInput `pulumi:"fileId"`
	// Page permissions JSON
	Permissions pulumi.StringInput `pulumi:"permissions"`
	// Value must be one of true or false
	SendNotificationEmail pulumi.BoolPtrInput   `pulumi:"sendNotificationEmail"`
	TaskType              pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskCreateGoogleDocsPermissionsTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGoogleDocsPermissionsTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateGoogleDocsPermissionsTaskParamsArgs) ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput() WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput {
	return i.ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoogleDocsPermissionsTaskParamsArgs) ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput)
}

func (i WorkflowTaskCreateGoogleDocsPermissionsTaskParamsArgs) ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput() WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoogleDocsPermissionsTaskParamsArgs) ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput).ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateGoogleDocsPermissionsTaskParamsArgs, WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtr and WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateGoogleDocsPermissionsTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput() WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput
	ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput
}

type workflowTaskCreateGoogleDocsPermissionsTaskParamsPtrType WorkflowTaskCreateGoogleDocsPermissionsTaskParamsArgs

func WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtr(v *WorkflowTaskCreateGoogleDocsPermissionsTaskParamsArgs) WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrInput {
	return (*workflowTaskCreateGoogleDocsPermissionsTaskParamsPtrType)(v)
}

func (*workflowTaskCreateGoogleDocsPermissionsTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGoogleDocsPermissionsTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateGoogleDocsPermissionsTaskParamsPtrType) ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput() WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateGoogleDocsPermissionsTaskParamsPtrType) ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput)
}

type WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGoogleDocsPermissionsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput) ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput() WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput) ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput) ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput() WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput) ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateGoogleDocsPermissionsTaskParams) *WorkflowTaskCreateGoogleDocsPermissionsTaskParams {
		return &v
	}).(WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput)
}

// Email message notification
func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput) EmailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleDocsPermissionsTaskParams) *string { return v.EmailMessage }).(pulumi.StringPtrOutput)
}

// The Google Doc file ID
func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput) FileId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleDocsPermissionsTaskParams) string { return v.FileId }).(pulumi.StringOutput)
}

// Page permissions JSON
func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleDocsPermissionsTaskParams) string { return v.Permissions }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput) SendNotificationEmail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleDocsPermissionsTaskParams) *bool { return v.SendNotificationEmail }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleDocsPermissionsTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGoogleDocsPermissionsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput) ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput() WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput) ToWorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput) Elem() WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPermissionsTaskParams) WorkflowTaskCreateGoogleDocsPermissionsTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateGoogleDocsPermissionsTaskParams
		return ret
	}).(WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput)
}

// Email message notification
func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput) EmailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPermissionsTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.EmailMessage
	}).(pulumi.StringPtrOutput)
}

// The Google Doc file ID
func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput) FileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPermissionsTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.FileId
	}).(pulumi.StringPtrOutput)
}

// Page permissions JSON
func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPermissionsTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Permissions
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput) SendNotificationEmail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPermissionsTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.SendNotificationEmail
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPermissionsTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateGoogleMeetingTaskParams struct {
	// Sets the video conference type attached to the meeting. Value must be one of `eventHangout`, `eventNamedHangout`, `hangoutsMeet`, `addOn`.
	ConferenceSolutionKey *string `pulumi:"conferenceSolutionKey"`
	// The meeting description
	Description string `pulumi:"description"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                         `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	// We will invite Rootly Bot to your call and make the transcript available to you. Value must be one of true or false
	RecordMeeting *bool `pulumi:"recordMeeting"`
	// The meeting summary
	Summary  string  `pulumi:"summary"`
	TaskType *string `pulumi:"taskType"`
}

// WorkflowTaskCreateGoogleMeetingTaskParamsInput is an input type that accepts WorkflowTaskCreateGoogleMeetingTaskParamsArgs and WorkflowTaskCreateGoogleMeetingTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoogleMeetingTaskParamsInput` via:
//
//	WorkflowTaskCreateGoogleMeetingTaskParamsArgs{...}
type WorkflowTaskCreateGoogleMeetingTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleMeetingTaskParamsOutput() WorkflowTaskCreateGoogleMeetingTaskParamsOutput
	ToWorkflowTaskCreateGoogleMeetingTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateGoogleMeetingTaskParamsOutput
}

type WorkflowTaskCreateGoogleMeetingTaskParamsArgs struct {
	// Sets the video conference type attached to the meeting. Value must be one of `eventHangout`, `eventNamedHangout`, `hangoutsMeet`, `addOn`.
	ConferenceSolutionKey pulumi.StringPtrInput `pulumi:"conferenceSolutionKey"`
	// The meeting description
	Description pulumi.StringInput `pulumi:"description"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                                   `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	// We will invite Rootly Bot to your call and make the transcript available to you. Value must be one of true or false
	RecordMeeting pulumi.BoolPtrInput `pulumi:"recordMeeting"`
	// The meeting summary
	Summary  pulumi.StringInput    `pulumi:"summary"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskCreateGoogleMeetingTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGoogleMeetingTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateGoogleMeetingTaskParamsArgs) ToWorkflowTaskCreateGoogleMeetingTaskParamsOutput() WorkflowTaskCreateGoogleMeetingTaskParamsOutput {
	return i.ToWorkflowTaskCreateGoogleMeetingTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoogleMeetingTaskParamsArgs) ToWorkflowTaskCreateGoogleMeetingTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleMeetingTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleMeetingTaskParamsOutput)
}

func (i WorkflowTaskCreateGoogleMeetingTaskParamsArgs) ToWorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput() WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateGoogleMeetingTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoogleMeetingTaskParamsArgs) ToWorkflowTaskCreateGoogleMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleMeetingTaskParamsOutput).ToWorkflowTaskCreateGoogleMeetingTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateGoogleMeetingTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateGoogleMeetingTaskParamsArgs, WorkflowTaskCreateGoogleMeetingTaskParamsPtr and WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoogleMeetingTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateGoogleMeetingTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateGoogleMeetingTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput() WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput
	ToWorkflowTaskCreateGoogleMeetingTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput
}

type workflowTaskCreateGoogleMeetingTaskParamsPtrType WorkflowTaskCreateGoogleMeetingTaskParamsArgs

func WorkflowTaskCreateGoogleMeetingTaskParamsPtr(v *WorkflowTaskCreateGoogleMeetingTaskParamsArgs) WorkflowTaskCreateGoogleMeetingTaskParamsPtrInput {
	return (*workflowTaskCreateGoogleMeetingTaskParamsPtrType)(v)
}

func (*workflowTaskCreateGoogleMeetingTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGoogleMeetingTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateGoogleMeetingTaskParamsPtrType) ToWorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput() WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateGoogleMeetingTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateGoogleMeetingTaskParamsPtrType) ToWorkflowTaskCreateGoogleMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput)
}

type WorkflowTaskCreateGoogleMeetingTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleMeetingTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGoogleMeetingTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsOutput) ToWorkflowTaskCreateGoogleMeetingTaskParamsOutput() WorkflowTaskCreateGoogleMeetingTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsOutput) ToWorkflowTaskCreateGoogleMeetingTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleMeetingTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsOutput) ToWorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput() WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateGoogleMeetingTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsOutput) ToWorkflowTaskCreateGoogleMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateGoogleMeetingTaskParams) *WorkflowTaskCreateGoogleMeetingTaskParams {
		return &v
	}).(WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput)
}

// Sets the video conference type attached to the meeting. Value must be one of `eventHangout`, `eventNamedHangout`, `hangoutsMeet`, `addOn`.
func (o WorkflowTaskCreateGoogleMeetingTaskParamsOutput) ConferenceSolutionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleMeetingTaskParams) *string { return v.ConferenceSolutionKey }).(pulumi.StringPtrOutput)
}

// The meeting description
func (o WorkflowTaskCreateGoogleMeetingTaskParamsOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleMeetingTaskParams) string { return v.Description }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoogleMeetingTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleMeetingTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsOutput) PostToSlackChannels() WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleMeetingTaskParams) []WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput)
}

// We will invite Rootly Bot to your call and make the transcript available to you. Value must be one of true or false
func (o WorkflowTaskCreateGoogleMeetingTaskParamsOutput) RecordMeeting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleMeetingTaskParams) *bool { return v.RecordMeeting }).(pulumi.BoolPtrOutput)
}

// The meeting summary
func (o WorkflowTaskCreateGoogleMeetingTaskParamsOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleMeetingTaskParams) string { return v.Summary }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleMeetingTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGoogleMeetingTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput) ToWorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput() WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput) ToWorkflowTaskCreateGoogleMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput) Elem() WorkflowTaskCreateGoogleMeetingTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleMeetingTaskParams) WorkflowTaskCreateGoogleMeetingTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateGoogleMeetingTaskParams
		return ret
	}).(WorkflowTaskCreateGoogleMeetingTaskParamsOutput)
}

// Sets the video conference type attached to the meeting. Value must be one of `eventHangout`, `eventNamedHangout`, `hangoutsMeet`, `addOn`.
func (o WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput) ConferenceSolutionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.ConferenceSolutionKey
	}).(pulumi.StringPtrOutput)
}

// The meeting description
func (o WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleMeetingTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleMeetingTaskParams) []WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput)
}

// We will invite Rootly Bot to your call and make the transcript available to you. Value must be one of true or false
func (o WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput) RecordMeeting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleMeetingTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.RecordMeeting
	}).(pulumi.BoolPtrOutput)
}

// The meeting summary
func (o WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Summary
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArgs and WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArgs) ToWorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArgs) ToWorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArray and WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArray{ WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArray []WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelInput

func (WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArray) ToWorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArray) ToWorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput) ToWorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput) ToWorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskCreateIncidentPostmortemTaskParams struct {
	// UUID of the incident that needs a retrospective
	IncidentId string  `pulumi:"incidentId"`
	Status     *string `pulumi:"status"`
	TaskType   *string `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`. Retrospective template to use
	Template map[string]string `pulumi:"template"`
	// The retrospective title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateIncidentPostmortemTaskParamsInput is an input type that accepts WorkflowTaskCreateIncidentPostmortemTaskParamsArgs and WorkflowTaskCreateIncidentPostmortemTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateIncidentPostmortemTaskParamsInput` via:
//
//	WorkflowTaskCreateIncidentPostmortemTaskParamsArgs{...}
type WorkflowTaskCreateIncidentPostmortemTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateIncidentPostmortemTaskParamsOutput() WorkflowTaskCreateIncidentPostmortemTaskParamsOutput
	ToWorkflowTaskCreateIncidentPostmortemTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateIncidentPostmortemTaskParamsOutput
}

type WorkflowTaskCreateIncidentPostmortemTaskParamsArgs struct {
	// UUID of the incident that needs a retrospective
	IncidentId pulumi.StringInput    `pulumi:"incidentId"`
	Status     pulumi.StringPtrInput `pulumi:"status"`
	TaskType   pulumi.StringPtrInput `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`. Retrospective template to use
	Template pulumi.StringMapInput `pulumi:"template"`
	// The retrospective title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateIncidentPostmortemTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateIncidentPostmortemTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateIncidentPostmortemTaskParamsArgs) ToWorkflowTaskCreateIncidentPostmortemTaskParamsOutput() WorkflowTaskCreateIncidentPostmortemTaskParamsOutput {
	return i.ToWorkflowTaskCreateIncidentPostmortemTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateIncidentPostmortemTaskParamsArgs) ToWorkflowTaskCreateIncidentPostmortemTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentPostmortemTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateIncidentPostmortemTaskParamsOutput)
}

func (i WorkflowTaskCreateIncidentPostmortemTaskParamsArgs) ToWorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput() WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateIncidentPostmortemTaskParamsArgs) ToWorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateIncidentPostmortemTaskParamsOutput).ToWorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateIncidentPostmortemTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateIncidentPostmortemTaskParamsArgs, WorkflowTaskCreateIncidentPostmortemTaskParamsPtr and WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateIncidentPostmortemTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateIncidentPostmortemTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateIncidentPostmortemTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput() WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput
	ToWorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput
}

type workflowTaskCreateIncidentPostmortemTaskParamsPtrType WorkflowTaskCreateIncidentPostmortemTaskParamsArgs

func WorkflowTaskCreateIncidentPostmortemTaskParamsPtr(v *WorkflowTaskCreateIncidentPostmortemTaskParamsArgs) WorkflowTaskCreateIncidentPostmortemTaskParamsPtrInput {
	return (*workflowTaskCreateIncidentPostmortemTaskParamsPtrType)(v)
}

func (*workflowTaskCreateIncidentPostmortemTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateIncidentPostmortemTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateIncidentPostmortemTaskParamsPtrType) ToWorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput() WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateIncidentPostmortemTaskParamsPtrType) ToWorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput)
}

type WorkflowTaskCreateIncidentPostmortemTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateIncidentPostmortemTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateIncidentPostmortemTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateIncidentPostmortemTaskParamsOutput) ToWorkflowTaskCreateIncidentPostmortemTaskParamsOutput() WorkflowTaskCreateIncidentPostmortemTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateIncidentPostmortemTaskParamsOutput) ToWorkflowTaskCreateIncidentPostmortemTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentPostmortemTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateIncidentPostmortemTaskParamsOutput) ToWorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput() WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateIncidentPostmortemTaskParamsOutput) ToWorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateIncidentPostmortemTaskParams) *WorkflowTaskCreateIncidentPostmortemTaskParams {
		return &v
	}).(WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput)
}

// UUID of the incident that needs a retrospective
func (o WorkflowTaskCreateIncidentPostmortemTaskParamsOutput) IncidentId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateIncidentPostmortemTaskParams) string { return v.IncidentId }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateIncidentPostmortemTaskParamsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateIncidentPostmortemTaskParams) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateIncidentPostmortemTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateIncidentPostmortemTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. Retrospective template to use
func (o WorkflowTaskCreateIncidentPostmortemTaskParamsOutput) Template() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateIncidentPostmortemTaskParams) map[string]string { return v.Template }).(pulumi.StringMapOutput)
}

// The retrospective title
func (o WorkflowTaskCreateIncidentPostmortemTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateIncidentPostmortemTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateIncidentPostmortemTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput) ToWorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput() WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput) ToWorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput) Elem() WorkflowTaskCreateIncidentPostmortemTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentPostmortemTaskParams) WorkflowTaskCreateIncidentPostmortemTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateIncidentPostmortemTaskParams
		return ret
	}).(WorkflowTaskCreateIncidentPostmortemTaskParamsOutput)
}

// UUID of the incident that needs a retrospective
func (o WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput) IncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentPostmortemTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.IncidentId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentPostmortemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentPostmortemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. Retrospective template to use
func (o WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput) Template() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentPostmortemTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Template
	}).(pulumi.StringMapOutput)
}

// The retrospective title
func (o WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentPostmortemTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateIncidentTaskParams struct {
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string  `pulumi:"customFieldsMapping"`
	EnvironmentIds      []string `pulumi:"environmentIds"`
	FunctionalityIds    []string `pulumi:"functionalityIds"`
	GroupIds            []string `pulumi:"groupIds"`
	IncidentTypeIds     []string `pulumi:"incidentTypeIds"`
	// Value must be one of true or false
	Private    *bool    `pulumi:"private"`
	ServiceIds []string `pulumi:"serviceIds"`
	SeverityId *string  `pulumi:"severityId"`
	// The incident summary
	Summary  *string `pulumi:"summary"`
	TaskType *string `pulumi:"taskType"`
	// The incident title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateIncidentTaskParamsInput is an input type that accepts WorkflowTaskCreateIncidentTaskParamsArgs and WorkflowTaskCreateIncidentTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateIncidentTaskParamsInput` via:
//
//	WorkflowTaskCreateIncidentTaskParamsArgs{...}
type WorkflowTaskCreateIncidentTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateIncidentTaskParamsOutput() WorkflowTaskCreateIncidentTaskParamsOutput
	ToWorkflowTaskCreateIncidentTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateIncidentTaskParamsOutput
}

type WorkflowTaskCreateIncidentTaskParamsArgs struct {
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput   `pulumi:"customFieldsMapping"`
	EnvironmentIds      pulumi.StringArrayInput `pulumi:"environmentIds"`
	FunctionalityIds    pulumi.StringArrayInput `pulumi:"functionalityIds"`
	GroupIds            pulumi.StringArrayInput `pulumi:"groupIds"`
	IncidentTypeIds     pulumi.StringArrayInput `pulumi:"incidentTypeIds"`
	// Value must be one of true or false
	Private    pulumi.BoolPtrInput     `pulumi:"private"`
	ServiceIds pulumi.StringArrayInput `pulumi:"serviceIds"`
	SeverityId pulumi.StringPtrInput   `pulumi:"severityId"`
	// The incident summary
	Summary  pulumi.StringPtrInput `pulumi:"summary"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The incident title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateIncidentTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateIncidentTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateIncidentTaskParamsArgs) ToWorkflowTaskCreateIncidentTaskParamsOutput() WorkflowTaskCreateIncidentTaskParamsOutput {
	return i.ToWorkflowTaskCreateIncidentTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateIncidentTaskParamsArgs) ToWorkflowTaskCreateIncidentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateIncidentTaskParamsOutput)
}

func (i WorkflowTaskCreateIncidentTaskParamsArgs) ToWorkflowTaskCreateIncidentTaskParamsPtrOutput() WorkflowTaskCreateIncidentTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateIncidentTaskParamsArgs) ToWorkflowTaskCreateIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateIncidentTaskParamsOutput).ToWorkflowTaskCreateIncidentTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateIncidentTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateIncidentTaskParamsArgs, WorkflowTaskCreateIncidentTaskParamsPtr and WorkflowTaskCreateIncidentTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateIncidentTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateIncidentTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateIncidentTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateIncidentTaskParamsPtrOutput() WorkflowTaskCreateIncidentTaskParamsPtrOutput
	ToWorkflowTaskCreateIncidentTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateIncidentTaskParamsPtrOutput
}

type workflowTaskCreateIncidentTaskParamsPtrType WorkflowTaskCreateIncidentTaskParamsArgs

func WorkflowTaskCreateIncidentTaskParamsPtr(v *WorkflowTaskCreateIncidentTaskParamsArgs) WorkflowTaskCreateIncidentTaskParamsPtrInput {
	return (*workflowTaskCreateIncidentTaskParamsPtrType)(v)
}

func (*workflowTaskCreateIncidentTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateIncidentTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateIncidentTaskParamsPtrType) ToWorkflowTaskCreateIncidentTaskParamsPtrOutput() WorkflowTaskCreateIncidentTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateIncidentTaskParamsPtrType) ToWorkflowTaskCreateIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateIncidentTaskParamsPtrOutput)
}

type WorkflowTaskCreateIncidentTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateIncidentTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateIncidentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateIncidentTaskParamsOutput) ToWorkflowTaskCreateIncidentTaskParamsOutput() WorkflowTaskCreateIncidentTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateIncidentTaskParamsOutput) ToWorkflowTaskCreateIncidentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateIncidentTaskParamsOutput) ToWorkflowTaskCreateIncidentTaskParamsPtrOutput() WorkflowTaskCreateIncidentTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateIncidentTaskParamsOutput) ToWorkflowTaskCreateIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateIncidentTaskParams) *WorkflowTaskCreateIncidentTaskParams {
		return &v
	}).(WorkflowTaskCreateIncidentTaskParamsPtrOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateIncidentTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateIncidentTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateIncidentTaskParamsOutput) EnvironmentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateIncidentTaskParams) []string { return v.EnvironmentIds }).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskCreateIncidentTaskParamsOutput) FunctionalityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateIncidentTaskParams) []string { return v.FunctionalityIds }).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskCreateIncidentTaskParamsOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateIncidentTaskParams) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskCreateIncidentTaskParamsOutput) IncidentTypeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateIncidentTaskParams) []string { return v.IncidentTypeIds }).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateIncidentTaskParamsOutput) Private() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateIncidentTaskParams) *bool { return v.Private }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateIncidentTaskParamsOutput) ServiceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateIncidentTaskParams) []string { return v.ServiceIds }).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskCreateIncidentTaskParamsOutput) SeverityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateIncidentTaskParams) *string { return v.SeverityId }).(pulumi.StringPtrOutput)
}

// The incident summary
func (o WorkflowTaskCreateIncidentTaskParamsOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateIncidentTaskParams) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateIncidentTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateIncidentTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The incident title
func (o WorkflowTaskCreateIncidentTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateIncidentTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateIncidentTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateIncidentTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateIncidentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateIncidentTaskParamsPtrOutput) ToWorkflowTaskCreateIncidentTaskParamsPtrOutput() WorkflowTaskCreateIncidentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateIncidentTaskParamsPtrOutput) ToWorkflowTaskCreateIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateIncidentTaskParamsPtrOutput) Elem() WorkflowTaskCreateIncidentTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentTaskParams) WorkflowTaskCreateIncidentTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateIncidentTaskParams
		return ret
	}).(WorkflowTaskCreateIncidentTaskParamsOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateIncidentTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateIncidentTaskParamsPtrOutput) EnvironmentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.EnvironmentIds
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskCreateIncidentTaskParamsPtrOutput) FunctionalityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.FunctionalityIds
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskCreateIncidentTaskParamsPtrOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.GroupIds
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskCreateIncidentTaskParamsPtrOutput) IncidentTypeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.IncidentTypeIds
	}).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateIncidentTaskParamsPtrOutput) Private() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.Private
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateIncidentTaskParamsPtrOutput) ServiceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.ServiceIds
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskCreateIncidentTaskParamsPtrOutput) SeverityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.SeverityId
	}).(pulumi.StringPtrOutput)
}

// The incident summary
func (o WorkflowTaskCreateIncidentTaskParamsPtrOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Summary
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateIncidentTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The incident title
func (o WorkflowTaskCreateIncidentTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateJiraIssueTaskParams struct {
	// The assigned user's email
	AssignUserEmail *string `pulumi:"assignUserEmail"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string `pulumi:"customFieldsMapping"`
	// The issue description
	Description *string `pulumi:"description"`
	// The due date
	DueDate *string `pulumi:"dueDate"`
	// Map must contain two fields, `id` and `name`. Specify integration id if you have more than one Jira instance
	Integration map[string]string `pulumi:"integration"`
	// Map must contain two fields, `id` and `name`. The issue type id and display name
	IssueType map[string]string `pulumi:"issueType"`
	// The issue labels
	Labels *string `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority map[string]string `pulumi:"priority"`
	// The project key
	ProjectKey string `pulumi:"projectKey"`
	// The reporter user's email
	ReporterUserEmail *string `pulumi:"reporterUserEmail"`
	// Map must contain two fields, `id` and `name`. The status id and display name
	Status   map[string]string `pulumi:"status"`
	TaskType *string           `pulumi:"taskType"`
	// The issue title
	Title string `pulumi:"title"`
	// Update payload. Can contain liquid markup and need to be valid JSON
	UpdatePayload *string `pulumi:"updatePayload"`
}

// WorkflowTaskCreateJiraIssueTaskParamsInput is an input type that accepts WorkflowTaskCreateJiraIssueTaskParamsArgs and WorkflowTaskCreateJiraIssueTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateJiraIssueTaskParamsInput` via:
//
//	WorkflowTaskCreateJiraIssueTaskParamsArgs{...}
type WorkflowTaskCreateJiraIssueTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateJiraIssueTaskParamsOutput() WorkflowTaskCreateJiraIssueTaskParamsOutput
	ToWorkflowTaskCreateJiraIssueTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateJiraIssueTaskParamsOutput
}

type WorkflowTaskCreateJiraIssueTaskParamsArgs struct {
	// The assigned user's email
	AssignUserEmail pulumi.StringPtrInput `pulumi:"assignUserEmail"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput `pulumi:"customFieldsMapping"`
	// The issue description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The due date
	DueDate pulumi.StringPtrInput `pulumi:"dueDate"`
	// Map must contain two fields, `id` and `name`. Specify integration id if you have more than one Jira instance
	Integration pulumi.StringMapInput `pulumi:"integration"`
	// Map must contain two fields, `id` and `name`. The issue type id and display name
	IssueType pulumi.StringMapInput `pulumi:"issueType"`
	// The issue labels
	Labels pulumi.StringPtrInput `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority pulumi.StringMapInput `pulumi:"priority"`
	// The project key
	ProjectKey pulumi.StringInput `pulumi:"projectKey"`
	// The reporter user's email
	ReporterUserEmail pulumi.StringPtrInput `pulumi:"reporterUserEmail"`
	// Map must contain two fields, `id` and `name`. The status id and display name
	Status   pulumi.StringMapInput `pulumi:"status"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The issue title
	Title pulumi.StringInput `pulumi:"title"`
	// Update payload. Can contain liquid markup and need to be valid JSON
	UpdatePayload pulumi.StringPtrInput `pulumi:"updatePayload"`
}

func (WorkflowTaskCreateJiraIssueTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateJiraIssueTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateJiraIssueTaskParamsArgs) ToWorkflowTaskCreateJiraIssueTaskParamsOutput() WorkflowTaskCreateJiraIssueTaskParamsOutput {
	return i.ToWorkflowTaskCreateJiraIssueTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateJiraIssueTaskParamsArgs) ToWorkflowTaskCreateJiraIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateJiraIssueTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateJiraIssueTaskParamsOutput)
}

func (i WorkflowTaskCreateJiraIssueTaskParamsArgs) ToWorkflowTaskCreateJiraIssueTaskParamsPtrOutput() WorkflowTaskCreateJiraIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateJiraIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateJiraIssueTaskParamsArgs) ToWorkflowTaskCreateJiraIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateJiraIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateJiraIssueTaskParamsOutput).ToWorkflowTaskCreateJiraIssueTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateJiraIssueTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateJiraIssueTaskParamsArgs, WorkflowTaskCreateJiraIssueTaskParamsPtr and WorkflowTaskCreateJiraIssueTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateJiraIssueTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateJiraIssueTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateJiraIssueTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateJiraIssueTaskParamsPtrOutput() WorkflowTaskCreateJiraIssueTaskParamsPtrOutput
	ToWorkflowTaskCreateJiraIssueTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateJiraIssueTaskParamsPtrOutput
}

type workflowTaskCreateJiraIssueTaskParamsPtrType WorkflowTaskCreateJiraIssueTaskParamsArgs

func WorkflowTaskCreateJiraIssueTaskParamsPtr(v *WorkflowTaskCreateJiraIssueTaskParamsArgs) WorkflowTaskCreateJiraIssueTaskParamsPtrInput {
	return (*workflowTaskCreateJiraIssueTaskParamsPtrType)(v)
}

func (*workflowTaskCreateJiraIssueTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateJiraIssueTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateJiraIssueTaskParamsPtrType) ToWorkflowTaskCreateJiraIssueTaskParamsPtrOutput() WorkflowTaskCreateJiraIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateJiraIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateJiraIssueTaskParamsPtrType) ToWorkflowTaskCreateJiraIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateJiraIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateJiraIssueTaskParamsPtrOutput)
}

type WorkflowTaskCreateJiraIssueTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateJiraIssueTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateJiraIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) ToWorkflowTaskCreateJiraIssueTaskParamsOutput() WorkflowTaskCreateJiraIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) ToWorkflowTaskCreateJiraIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateJiraIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) ToWorkflowTaskCreateJiraIssueTaskParamsPtrOutput() WorkflowTaskCreateJiraIssueTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateJiraIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) ToWorkflowTaskCreateJiraIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateJiraIssueTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateJiraIssueTaskParams) *WorkflowTaskCreateJiraIssueTaskParams {
		return &v
	}).(WorkflowTaskCreateJiraIssueTaskParamsPtrOutput)
}

// The assigned user's email
func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraIssueTaskParams) *string { return v.AssignUserEmail }).(pulumi.StringPtrOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraIssueTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

// The issue description
func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraIssueTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraIssueTaskParams) *string { return v.DueDate }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. Specify integration id if you have more than one Jira instance
func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) Integration() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraIssueTaskParams) map[string]string { return v.Integration }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The issue type id and display name
func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) IssueType() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraIssueTaskParams) map[string]string { return v.IssueType }).(pulumi.StringMapOutput)
}

// The issue labels
func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) Labels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraIssueTaskParams) *string { return v.Labels }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraIssueTaskParams) map[string]string { return v.Priority }).(pulumi.StringMapOutput)
}

// The project key
func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) ProjectKey() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraIssueTaskParams) string { return v.ProjectKey }).(pulumi.StringOutput)
}

// The reporter user's email
func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) ReporterUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraIssueTaskParams) *string { return v.ReporterUserEmail }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The status id and display name
func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) Status() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraIssueTaskParams) map[string]string { return v.Status }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraIssueTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraIssueTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

// Update payload. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateJiraIssueTaskParamsOutput) UpdatePayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraIssueTaskParams) *string { return v.UpdatePayload }).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateJiraIssueTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateJiraIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) ToWorkflowTaskCreateJiraIssueTaskParamsPtrOutput() WorkflowTaskCreateJiraIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) ToWorkflowTaskCreateJiraIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateJiraIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) Elem() WorkflowTaskCreateJiraIssueTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraIssueTaskParams) WorkflowTaskCreateJiraIssueTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateJiraIssueTaskParams
		return ret
	}).(WorkflowTaskCreateJiraIssueTaskParamsOutput)
}

// The assigned user's email
func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.AssignUserEmail
	}).(pulumi.StringPtrOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

// The issue description
func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DueDate
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. Specify integration id if you have more than one Jira instance
func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) Integration() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Integration
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The issue type id and display name
func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) IssueType() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.IssueType
	}).(pulumi.StringMapOutput)
}

// The issue labels
func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) Labels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringMapOutput)
}

// The project key
func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) ProjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectKey
	}).(pulumi.StringPtrOutput)
}

// The reporter user's email
func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) ReporterUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.ReporterUserEmail
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The status id and display name
func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) Status() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// Update payload. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateJiraIssueTaskParamsPtrOutput) UpdatePayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.UpdatePayload
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateJiraSubtaskTaskParams struct {
	// The assigned user's email
	AssignUserEmail *string `pulumi:"assignUserEmail"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string `pulumi:"customFieldsMapping"`
	// The issue description
	Description *string `pulumi:"description"`
	// The due date
	DueDate *string `pulumi:"dueDate"`
	// Map must contain two fields, `id` and `name`. Specify integration id if you have more than one Jira instance
	Integration map[string]string `pulumi:"integration"`
	// The issue labels
	Labels *string `pulumi:"labels"`
	// The parent issue
	ParentIssueId string `pulumi:"parentIssueId"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority map[string]string `pulumi:"priority"`
	// The project key
	ProjectKey string `pulumi:"projectKey"`
	// The reporter user's email
	ReporterUserEmail *string `pulumi:"reporterUserEmail"`
	// Map must contain two fields, `id` and `name`. The status id and display name
	Status map[string]string `pulumi:"status"`
	// Map must contain two fields, `id` and `name`. The issue type id and display name
	SubtaskIssueType map[string]string `pulumi:"subtaskIssueType"`
	TaskType         *string           `pulumi:"taskType"`
	// The issue title
	Title string `pulumi:"title"`
	// Update payload. Can contain liquid markup and need to be valid JSON
	UpdatePayload *string `pulumi:"updatePayload"`
}

// WorkflowTaskCreateJiraSubtaskTaskParamsInput is an input type that accepts WorkflowTaskCreateJiraSubtaskTaskParamsArgs and WorkflowTaskCreateJiraSubtaskTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateJiraSubtaskTaskParamsInput` via:
//
//	WorkflowTaskCreateJiraSubtaskTaskParamsArgs{...}
type WorkflowTaskCreateJiraSubtaskTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateJiraSubtaskTaskParamsOutput() WorkflowTaskCreateJiraSubtaskTaskParamsOutput
	ToWorkflowTaskCreateJiraSubtaskTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateJiraSubtaskTaskParamsOutput
}

type WorkflowTaskCreateJiraSubtaskTaskParamsArgs struct {
	// The assigned user's email
	AssignUserEmail pulumi.StringPtrInput `pulumi:"assignUserEmail"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput `pulumi:"customFieldsMapping"`
	// The issue description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The due date
	DueDate pulumi.StringPtrInput `pulumi:"dueDate"`
	// Map must contain two fields, `id` and `name`. Specify integration id if you have more than one Jira instance
	Integration pulumi.StringMapInput `pulumi:"integration"`
	// The issue labels
	Labels pulumi.StringPtrInput `pulumi:"labels"`
	// The parent issue
	ParentIssueId pulumi.StringInput `pulumi:"parentIssueId"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority pulumi.StringMapInput `pulumi:"priority"`
	// The project key
	ProjectKey pulumi.StringInput `pulumi:"projectKey"`
	// The reporter user's email
	ReporterUserEmail pulumi.StringPtrInput `pulumi:"reporterUserEmail"`
	// Map must contain two fields, `id` and `name`. The status id and display name
	Status pulumi.StringMapInput `pulumi:"status"`
	// Map must contain two fields, `id` and `name`. The issue type id and display name
	SubtaskIssueType pulumi.StringMapInput `pulumi:"subtaskIssueType"`
	TaskType         pulumi.StringPtrInput `pulumi:"taskType"`
	// The issue title
	Title pulumi.StringInput `pulumi:"title"`
	// Update payload. Can contain liquid markup and need to be valid JSON
	UpdatePayload pulumi.StringPtrInput `pulumi:"updatePayload"`
}

func (WorkflowTaskCreateJiraSubtaskTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateJiraSubtaskTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateJiraSubtaskTaskParamsArgs) ToWorkflowTaskCreateJiraSubtaskTaskParamsOutput() WorkflowTaskCreateJiraSubtaskTaskParamsOutput {
	return i.ToWorkflowTaskCreateJiraSubtaskTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateJiraSubtaskTaskParamsArgs) ToWorkflowTaskCreateJiraSubtaskTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateJiraSubtaskTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateJiraSubtaskTaskParamsOutput)
}

func (i WorkflowTaskCreateJiraSubtaskTaskParamsArgs) ToWorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput() WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateJiraSubtaskTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateJiraSubtaskTaskParamsArgs) ToWorkflowTaskCreateJiraSubtaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateJiraSubtaskTaskParamsOutput).ToWorkflowTaskCreateJiraSubtaskTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateJiraSubtaskTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateJiraSubtaskTaskParamsArgs, WorkflowTaskCreateJiraSubtaskTaskParamsPtr and WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateJiraSubtaskTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateJiraSubtaskTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateJiraSubtaskTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput() WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput
	ToWorkflowTaskCreateJiraSubtaskTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput
}

type workflowTaskCreateJiraSubtaskTaskParamsPtrType WorkflowTaskCreateJiraSubtaskTaskParamsArgs

func WorkflowTaskCreateJiraSubtaskTaskParamsPtr(v *WorkflowTaskCreateJiraSubtaskTaskParamsArgs) WorkflowTaskCreateJiraSubtaskTaskParamsPtrInput {
	return (*workflowTaskCreateJiraSubtaskTaskParamsPtrType)(v)
}

func (*workflowTaskCreateJiraSubtaskTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateJiraSubtaskTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateJiraSubtaskTaskParamsPtrType) ToWorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput() WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateJiraSubtaskTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateJiraSubtaskTaskParamsPtrType) ToWorkflowTaskCreateJiraSubtaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput)
}

type WorkflowTaskCreateJiraSubtaskTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateJiraSubtaskTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateJiraSubtaskTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) ToWorkflowTaskCreateJiraSubtaskTaskParamsOutput() WorkflowTaskCreateJiraSubtaskTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) ToWorkflowTaskCreateJiraSubtaskTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateJiraSubtaskTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) ToWorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput() WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateJiraSubtaskTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) ToWorkflowTaskCreateJiraSubtaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateJiraSubtaskTaskParams) *WorkflowTaskCreateJiraSubtaskTaskParams {
		return &v
	}).(WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput)
}

// The assigned user's email
func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraSubtaskTaskParams) *string { return v.AssignUserEmail }).(pulumi.StringPtrOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraSubtaskTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

// The issue description
func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraSubtaskTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraSubtaskTaskParams) *string { return v.DueDate }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. Specify integration id if you have more than one Jira instance
func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) Integration() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraSubtaskTaskParams) map[string]string { return v.Integration }).(pulumi.StringMapOutput)
}

// The issue labels
func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) Labels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraSubtaskTaskParams) *string { return v.Labels }).(pulumi.StringPtrOutput)
}

// The parent issue
func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) ParentIssueId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraSubtaskTaskParams) string { return v.ParentIssueId }).(pulumi.StringOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraSubtaskTaskParams) map[string]string { return v.Priority }).(pulumi.StringMapOutput)
}

// The project key
func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) ProjectKey() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraSubtaskTaskParams) string { return v.ProjectKey }).(pulumi.StringOutput)
}

// The reporter user's email
func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) ReporterUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraSubtaskTaskParams) *string { return v.ReporterUserEmail }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The status id and display name
func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) Status() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraSubtaskTaskParams) map[string]string { return v.Status }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The issue type id and display name
func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) SubtaskIssueType() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraSubtaskTaskParams) map[string]string { return v.SubtaskIssueType }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraSubtaskTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraSubtaskTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

// Update payload. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateJiraSubtaskTaskParamsOutput) UpdatePayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateJiraSubtaskTaskParams) *string { return v.UpdatePayload }).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateJiraSubtaskTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) ToWorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput() WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) ToWorkflowTaskCreateJiraSubtaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) Elem() WorkflowTaskCreateJiraSubtaskTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraSubtaskTaskParams) WorkflowTaskCreateJiraSubtaskTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateJiraSubtaskTaskParams
		return ret
	}).(WorkflowTaskCreateJiraSubtaskTaskParamsOutput)
}

// The assigned user's email
func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.AssignUserEmail
	}).(pulumi.StringPtrOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

// The issue description
func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DueDate
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. Specify integration id if you have more than one Jira instance
func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) Integration() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraSubtaskTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Integration
	}).(pulumi.StringMapOutput)
}

// The issue labels
func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) Labels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringPtrOutput)
}

// The parent issue
func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) ParentIssueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.ParentIssueId
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraSubtaskTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringMapOutput)
}

// The project key
func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) ProjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectKey
	}).(pulumi.StringPtrOutput)
}

// The reporter user's email
func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) ReporterUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.ReporterUserEmail
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The status id and display name
func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) Status() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraSubtaskTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The issue type id and display name
func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) SubtaskIssueType() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraSubtaskTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.SubtaskIssueType
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// Update payload. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput) UpdatePayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateJiraSubtaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.UpdatePayload
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateLinearIssueCommentTaskParams struct {
	// The issue description
	Body string `pulumi:"body"`
	// The issue id
	IssueId  string  `pulumi:"issueId"`
	TaskType *string `pulumi:"taskType"`
}

// WorkflowTaskCreateLinearIssueCommentTaskParamsInput is an input type that accepts WorkflowTaskCreateLinearIssueCommentTaskParamsArgs and WorkflowTaskCreateLinearIssueCommentTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateLinearIssueCommentTaskParamsInput` via:
//
//	WorkflowTaskCreateLinearIssueCommentTaskParamsArgs{...}
type WorkflowTaskCreateLinearIssueCommentTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateLinearIssueCommentTaskParamsOutput() WorkflowTaskCreateLinearIssueCommentTaskParamsOutput
	ToWorkflowTaskCreateLinearIssueCommentTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateLinearIssueCommentTaskParamsOutput
}

type WorkflowTaskCreateLinearIssueCommentTaskParamsArgs struct {
	// The issue description
	Body pulumi.StringInput `pulumi:"body"`
	// The issue id
	IssueId  pulumi.StringInput    `pulumi:"issueId"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskCreateLinearIssueCommentTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateLinearIssueCommentTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateLinearIssueCommentTaskParamsArgs) ToWorkflowTaskCreateLinearIssueCommentTaskParamsOutput() WorkflowTaskCreateLinearIssueCommentTaskParamsOutput {
	return i.ToWorkflowTaskCreateLinearIssueCommentTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateLinearIssueCommentTaskParamsArgs) ToWorkflowTaskCreateLinearIssueCommentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearIssueCommentTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateLinearIssueCommentTaskParamsOutput)
}

func (i WorkflowTaskCreateLinearIssueCommentTaskParamsArgs) ToWorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput() WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateLinearIssueCommentTaskParamsArgs) ToWorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateLinearIssueCommentTaskParamsOutput).ToWorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateLinearIssueCommentTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateLinearIssueCommentTaskParamsArgs, WorkflowTaskCreateLinearIssueCommentTaskParamsPtr and WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateLinearIssueCommentTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateLinearIssueCommentTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateLinearIssueCommentTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput() WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput
	ToWorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput
}

type workflowTaskCreateLinearIssueCommentTaskParamsPtrType WorkflowTaskCreateLinearIssueCommentTaskParamsArgs

func WorkflowTaskCreateLinearIssueCommentTaskParamsPtr(v *WorkflowTaskCreateLinearIssueCommentTaskParamsArgs) WorkflowTaskCreateLinearIssueCommentTaskParamsPtrInput {
	return (*workflowTaskCreateLinearIssueCommentTaskParamsPtrType)(v)
}

func (*workflowTaskCreateLinearIssueCommentTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateLinearIssueCommentTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateLinearIssueCommentTaskParamsPtrType) ToWorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput() WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateLinearIssueCommentTaskParamsPtrType) ToWorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput)
}

type WorkflowTaskCreateLinearIssueCommentTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateLinearIssueCommentTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateLinearIssueCommentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateLinearIssueCommentTaskParamsOutput) ToWorkflowTaskCreateLinearIssueCommentTaskParamsOutput() WorkflowTaskCreateLinearIssueCommentTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateLinearIssueCommentTaskParamsOutput) ToWorkflowTaskCreateLinearIssueCommentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearIssueCommentTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateLinearIssueCommentTaskParamsOutput) ToWorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput() WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateLinearIssueCommentTaskParamsOutput) ToWorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateLinearIssueCommentTaskParams) *WorkflowTaskCreateLinearIssueCommentTaskParams {
		return &v
	}).(WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput)
}

// The issue description
func (o WorkflowTaskCreateLinearIssueCommentTaskParamsOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearIssueCommentTaskParams) string { return v.Body }).(pulumi.StringOutput)
}

// The issue id
func (o WorkflowTaskCreateLinearIssueCommentTaskParamsOutput) IssueId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearIssueCommentTaskParams) string { return v.IssueId }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateLinearIssueCommentTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearIssueCommentTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateLinearIssueCommentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput) ToWorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput() WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput) ToWorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput) Elem() WorkflowTaskCreateLinearIssueCommentTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearIssueCommentTaskParams) WorkflowTaskCreateLinearIssueCommentTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateLinearIssueCommentTaskParams
		return ret
	}).(WorkflowTaskCreateLinearIssueCommentTaskParamsOutput)
}

// The issue description
func (o WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearIssueCommentTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Body
	}).(pulumi.StringPtrOutput)
}

// The issue id
func (o WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput) IssueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearIssueCommentTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.IssueId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearIssueCommentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateLinearIssueTaskParams struct {
	// The assigned user's email
	AssignUserEmail *string `pulumi:"assignUserEmail"`
	// The issue description
	Description *string                                        `pulumi:"description"`
	Labels      []WorkflowTaskCreateLinearIssueTaskParamsLabel `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority map[string]string `pulumi:"priority"`
	// Map must contain two fields, `id` and `name`. The project id and display name
	Project map[string]string `pulumi:"project"`
	// Map must contain two fields, `id` and `name`. The state id and display name
	State    map[string]string `pulumi:"state"`
	TaskType *string           `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`. The team id and display name
	Team map[string]string `pulumi:"team"`
	// The issue title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateLinearIssueTaskParamsInput is an input type that accepts WorkflowTaskCreateLinearIssueTaskParamsArgs and WorkflowTaskCreateLinearIssueTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateLinearIssueTaskParamsInput` via:
//
//	WorkflowTaskCreateLinearIssueTaskParamsArgs{...}
type WorkflowTaskCreateLinearIssueTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateLinearIssueTaskParamsOutput() WorkflowTaskCreateLinearIssueTaskParamsOutput
	ToWorkflowTaskCreateLinearIssueTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateLinearIssueTaskParamsOutput
}

type WorkflowTaskCreateLinearIssueTaskParamsArgs struct {
	// The assigned user's email
	AssignUserEmail pulumi.StringPtrInput `pulumi:"assignUserEmail"`
	// The issue description
	Description pulumi.StringPtrInput                                  `pulumi:"description"`
	Labels      WorkflowTaskCreateLinearIssueTaskParamsLabelArrayInput `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority pulumi.StringMapInput `pulumi:"priority"`
	// Map must contain two fields, `id` and `name`. The project id and display name
	Project pulumi.StringMapInput `pulumi:"project"`
	// Map must contain two fields, `id` and `name`. The state id and display name
	State    pulumi.StringMapInput `pulumi:"state"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`. The team id and display name
	Team pulumi.StringMapInput `pulumi:"team"`
	// The issue title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateLinearIssueTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateLinearIssueTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateLinearIssueTaskParamsArgs) ToWorkflowTaskCreateLinearIssueTaskParamsOutput() WorkflowTaskCreateLinearIssueTaskParamsOutput {
	return i.ToWorkflowTaskCreateLinearIssueTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateLinearIssueTaskParamsArgs) ToWorkflowTaskCreateLinearIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearIssueTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateLinearIssueTaskParamsOutput)
}

func (i WorkflowTaskCreateLinearIssueTaskParamsArgs) ToWorkflowTaskCreateLinearIssueTaskParamsPtrOutput() WorkflowTaskCreateLinearIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateLinearIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateLinearIssueTaskParamsArgs) ToWorkflowTaskCreateLinearIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateLinearIssueTaskParamsOutput).ToWorkflowTaskCreateLinearIssueTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateLinearIssueTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateLinearIssueTaskParamsArgs, WorkflowTaskCreateLinearIssueTaskParamsPtr and WorkflowTaskCreateLinearIssueTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateLinearIssueTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateLinearIssueTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateLinearIssueTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateLinearIssueTaskParamsPtrOutput() WorkflowTaskCreateLinearIssueTaskParamsPtrOutput
	ToWorkflowTaskCreateLinearIssueTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateLinearIssueTaskParamsPtrOutput
}

type workflowTaskCreateLinearIssueTaskParamsPtrType WorkflowTaskCreateLinearIssueTaskParamsArgs

func WorkflowTaskCreateLinearIssueTaskParamsPtr(v *WorkflowTaskCreateLinearIssueTaskParamsArgs) WorkflowTaskCreateLinearIssueTaskParamsPtrInput {
	return (*workflowTaskCreateLinearIssueTaskParamsPtrType)(v)
}

func (*workflowTaskCreateLinearIssueTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateLinearIssueTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateLinearIssueTaskParamsPtrType) ToWorkflowTaskCreateLinearIssueTaskParamsPtrOutput() WorkflowTaskCreateLinearIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateLinearIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateLinearIssueTaskParamsPtrType) ToWorkflowTaskCreateLinearIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateLinearIssueTaskParamsPtrOutput)
}

type WorkflowTaskCreateLinearIssueTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateLinearIssueTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateLinearIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateLinearIssueTaskParamsOutput) ToWorkflowTaskCreateLinearIssueTaskParamsOutput() WorkflowTaskCreateLinearIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateLinearIssueTaskParamsOutput) ToWorkflowTaskCreateLinearIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateLinearIssueTaskParamsOutput) ToWorkflowTaskCreateLinearIssueTaskParamsPtrOutput() WorkflowTaskCreateLinearIssueTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateLinearIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateLinearIssueTaskParamsOutput) ToWorkflowTaskCreateLinearIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearIssueTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateLinearIssueTaskParams) *WorkflowTaskCreateLinearIssueTaskParams {
		return &v
	}).(WorkflowTaskCreateLinearIssueTaskParamsPtrOutput)
}

// The assigned user's email
func (o WorkflowTaskCreateLinearIssueTaskParamsOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearIssueTaskParams) *string { return v.AssignUserEmail }).(pulumi.StringPtrOutput)
}

// The issue description
func (o WorkflowTaskCreateLinearIssueTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearIssueTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateLinearIssueTaskParamsOutput) Labels() WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearIssueTaskParams) []WorkflowTaskCreateLinearIssueTaskParamsLabel {
		return v.Labels
	}).(WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskCreateLinearIssueTaskParamsOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearIssueTaskParams) map[string]string { return v.Priority }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The project id and display name
func (o WorkflowTaskCreateLinearIssueTaskParamsOutput) Project() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearIssueTaskParams) map[string]string { return v.Project }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The state id and display name
func (o WorkflowTaskCreateLinearIssueTaskParamsOutput) State() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearIssueTaskParams) map[string]string { return v.State }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateLinearIssueTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearIssueTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The team id and display name
func (o WorkflowTaskCreateLinearIssueTaskParamsOutput) Team() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearIssueTaskParams) map[string]string { return v.Team }).(pulumi.StringMapOutput)
}

// The issue title
func (o WorkflowTaskCreateLinearIssueTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearIssueTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateLinearIssueTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateLinearIssueTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateLinearIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateLinearIssueTaskParamsPtrOutput) ToWorkflowTaskCreateLinearIssueTaskParamsPtrOutput() WorkflowTaskCreateLinearIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateLinearIssueTaskParamsPtrOutput) ToWorkflowTaskCreateLinearIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateLinearIssueTaskParamsPtrOutput) Elem() WorkflowTaskCreateLinearIssueTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearIssueTaskParams) WorkflowTaskCreateLinearIssueTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateLinearIssueTaskParams
		return ret
	}).(WorkflowTaskCreateLinearIssueTaskParamsOutput)
}

// The assigned user's email
func (o WorkflowTaskCreateLinearIssueTaskParamsPtrOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.AssignUserEmail
	}).(pulumi.StringPtrOutput)
}

// The issue description
func (o WorkflowTaskCreateLinearIssueTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateLinearIssueTaskParamsPtrOutput) Labels() WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearIssueTaskParams) []WorkflowTaskCreateLinearIssueTaskParamsLabel {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskCreateLinearIssueTaskParamsPtrOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The project id and display name
func (o WorkflowTaskCreateLinearIssueTaskParamsPtrOutput) Project() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The state id and display name
func (o WorkflowTaskCreateLinearIssueTaskParamsPtrOutput) State() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateLinearIssueTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The team id and display name
func (o WorkflowTaskCreateLinearIssueTaskParamsPtrOutput) Team() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Team
	}).(pulumi.StringMapOutput)
}

// The issue title
func (o WorkflowTaskCreateLinearIssueTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateLinearIssueTaskParamsLabel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskCreateLinearIssueTaskParamsLabelInput is an input type that accepts WorkflowTaskCreateLinearIssueTaskParamsLabelArgs and WorkflowTaskCreateLinearIssueTaskParamsLabelOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateLinearIssueTaskParamsLabelInput` via:
//
//	WorkflowTaskCreateLinearIssueTaskParamsLabelArgs{...}
type WorkflowTaskCreateLinearIssueTaskParamsLabelInput interface {
	pulumi.Input

	ToWorkflowTaskCreateLinearIssueTaskParamsLabelOutput() WorkflowTaskCreateLinearIssueTaskParamsLabelOutput
	ToWorkflowTaskCreateLinearIssueTaskParamsLabelOutputWithContext(context.Context) WorkflowTaskCreateLinearIssueTaskParamsLabelOutput
}

type WorkflowTaskCreateLinearIssueTaskParamsLabelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskCreateLinearIssueTaskParamsLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateLinearIssueTaskParamsLabel)(nil)).Elem()
}

func (i WorkflowTaskCreateLinearIssueTaskParamsLabelArgs) ToWorkflowTaskCreateLinearIssueTaskParamsLabelOutput() WorkflowTaskCreateLinearIssueTaskParamsLabelOutput {
	return i.ToWorkflowTaskCreateLinearIssueTaskParamsLabelOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateLinearIssueTaskParamsLabelArgs) ToWorkflowTaskCreateLinearIssueTaskParamsLabelOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearIssueTaskParamsLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateLinearIssueTaskParamsLabelOutput)
}

// WorkflowTaskCreateLinearIssueTaskParamsLabelArrayInput is an input type that accepts WorkflowTaskCreateLinearIssueTaskParamsLabelArray and WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateLinearIssueTaskParamsLabelArrayInput` via:
//
//	WorkflowTaskCreateLinearIssueTaskParamsLabelArray{ WorkflowTaskCreateLinearIssueTaskParamsLabelArgs{...} }
type WorkflowTaskCreateLinearIssueTaskParamsLabelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput() WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput
	ToWorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutputWithContext(context.Context) WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput
}

type WorkflowTaskCreateLinearIssueTaskParamsLabelArray []WorkflowTaskCreateLinearIssueTaskParamsLabelInput

func (WorkflowTaskCreateLinearIssueTaskParamsLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateLinearIssueTaskParamsLabel)(nil)).Elem()
}

func (i WorkflowTaskCreateLinearIssueTaskParamsLabelArray) ToWorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput() WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput {
	return i.ToWorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateLinearIssueTaskParamsLabelArray) ToWorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput)
}

type WorkflowTaskCreateLinearIssueTaskParamsLabelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateLinearIssueTaskParamsLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateLinearIssueTaskParamsLabel)(nil)).Elem()
}

func (o WorkflowTaskCreateLinearIssueTaskParamsLabelOutput) ToWorkflowTaskCreateLinearIssueTaskParamsLabelOutput() WorkflowTaskCreateLinearIssueTaskParamsLabelOutput {
	return o
}

func (o WorkflowTaskCreateLinearIssueTaskParamsLabelOutput) ToWorkflowTaskCreateLinearIssueTaskParamsLabelOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearIssueTaskParamsLabelOutput {
	return o
}

func (o WorkflowTaskCreateLinearIssueTaskParamsLabelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearIssueTaskParamsLabel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateLinearIssueTaskParamsLabelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearIssueTaskParamsLabel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateLinearIssueTaskParamsLabel)(nil)).Elem()
}

func (o WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput) ToWorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput() WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput {
	return o
}

func (o WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput) ToWorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput {
	return o
}

func (o WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateLinearIssueTaskParamsLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskCreateLinearIssueTaskParamsLabel {
		return vs[0].([]WorkflowTaskCreateLinearIssueTaskParamsLabel)[vs[1].(int)]
	}).(WorkflowTaskCreateLinearIssueTaskParamsLabelOutput)
}

type WorkflowTaskCreateLinearSubtaskIssueTaskParams struct {
	// The assigned user's email
	AssignUserEmail *string `pulumi:"assignUserEmail"`
	// The issue description
	Description *string `pulumi:"description"`
	// The parent issue
	ParentIssueId string `pulumi:"parentIssueId"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority map[string]string `pulumi:"priority"`
	// Map must contain two fields, `id` and `name`. The state id and display name
	State    map[string]string `pulumi:"state"`
	TaskType *string           `pulumi:"taskType"`
	// The issue title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateLinearSubtaskIssueTaskParamsInput is an input type that accepts WorkflowTaskCreateLinearSubtaskIssueTaskParamsArgs and WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateLinearSubtaskIssueTaskParamsInput` via:
//
//	WorkflowTaskCreateLinearSubtaskIssueTaskParamsArgs{...}
type WorkflowTaskCreateLinearSubtaskIssueTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput() WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput
	ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput
}

type WorkflowTaskCreateLinearSubtaskIssueTaskParamsArgs struct {
	// The assigned user's email
	AssignUserEmail pulumi.StringPtrInput `pulumi:"assignUserEmail"`
	// The issue description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The parent issue
	ParentIssueId pulumi.StringInput `pulumi:"parentIssueId"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority pulumi.StringMapInput `pulumi:"priority"`
	// Map must contain two fields, `id` and `name`. The state id and display name
	State    pulumi.StringMapInput `pulumi:"state"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The issue title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateLinearSubtaskIssueTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateLinearSubtaskIssueTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateLinearSubtaskIssueTaskParamsArgs) ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput() WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput {
	return i.ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateLinearSubtaskIssueTaskParamsArgs) ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput)
}

func (i WorkflowTaskCreateLinearSubtaskIssueTaskParamsArgs) ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput() WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateLinearSubtaskIssueTaskParamsArgs) ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput).ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateLinearSubtaskIssueTaskParamsArgs, WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtr and WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateLinearSubtaskIssueTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput() WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput
	ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput
}

type workflowTaskCreateLinearSubtaskIssueTaskParamsPtrType WorkflowTaskCreateLinearSubtaskIssueTaskParamsArgs

func WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtr(v *WorkflowTaskCreateLinearSubtaskIssueTaskParamsArgs) WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrInput {
	return (*workflowTaskCreateLinearSubtaskIssueTaskParamsPtrType)(v)
}

func (*workflowTaskCreateLinearSubtaskIssueTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateLinearSubtaskIssueTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateLinearSubtaskIssueTaskParamsPtrType) ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput() WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateLinearSubtaskIssueTaskParamsPtrType) ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput)
}

type WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateLinearSubtaskIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput) ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput() WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput) ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput) ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput() WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput) ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateLinearSubtaskIssueTaskParams) *WorkflowTaskCreateLinearSubtaskIssueTaskParams {
		return &v
	}).(WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput)
}

// The assigned user's email
func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearSubtaskIssueTaskParams) *string { return v.AssignUserEmail }).(pulumi.StringPtrOutput)
}

// The issue description
func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearSubtaskIssueTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The parent issue
func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput) ParentIssueId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearSubtaskIssueTaskParams) string { return v.ParentIssueId }).(pulumi.StringOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearSubtaskIssueTaskParams) map[string]string { return v.Priority }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The state id and display name
func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput) State() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearSubtaskIssueTaskParams) map[string]string { return v.State }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearSubtaskIssueTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateLinearSubtaskIssueTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateLinearSubtaskIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput) ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput() WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput) ToWorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput) Elem() WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearSubtaskIssueTaskParams) WorkflowTaskCreateLinearSubtaskIssueTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateLinearSubtaskIssueTaskParams
		return ret
	}).(WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput)
}

// The assigned user's email
func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearSubtaskIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.AssignUserEmail
	}).(pulumi.StringPtrOutput)
}

// The issue description
func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearSubtaskIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The parent issue
func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput) ParentIssueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearSubtaskIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.ParentIssueId
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearSubtaskIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The state id and display name
func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput) State() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearSubtaskIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearSubtaskIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateLinearSubtaskIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams struct {
	// The meeting name
	Name string `pulumi:"name"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                                 `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	// We will invite Rootly Bot to your call and make the transcript available to you. Value must be one of true or false
	RecordMeeting *bool `pulumi:"recordMeeting"`
	// The meeting subject
	Subject  string  `pulumi:"subject"`
	TaskType *string `pulumi:"taskType"`
}

// WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsInput is an input type that accepts WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsArgs and WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsInput` via:
//
//	WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsArgs{...}
type WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput
	ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput
}

type WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsArgs struct {
	// The meeting name
	Name pulumi.StringInput `pulumi:"name"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                                           `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	// We will invite Rootly Bot to your call and make the transcript available to you. Value must be one of true or false
	RecordMeeting pulumi.BoolPtrInput `pulumi:"recordMeeting"`
	// The meeting subject
	Subject  pulumi.StringInput    `pulumi:"subject"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsArgs) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput {
	return i.ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsArgs) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput)
}

func (i WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsArgs) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsArgs) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput).ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsArgs, WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtr and WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput
	ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput
}

type workflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrType WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsArgs

func WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtr(v *WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsArgs) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrInput {
	return (*workflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrType)(v)
}

func (*workflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrType) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrType) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput)
}

type WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams) *WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams {
		return &v
	}).(WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput)
}

// The meeting name
func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams) string { return v.Name }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput) PostToSlackChannels() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams) []WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput)
}

// We will invite Rootly Bot to your call and make the transcript available to you. Value must be one of true or false
func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput) RecordMeeting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams) *bool { return v.RecordMeeting }).(pulumi.BoolPtrOutput)
}

// The meeting subject
func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams) string { return v.Subject }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput) Elem() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams
		return ret
	}).(WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput)
}

// The meeting name
func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams) []WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput)
}

// We will invite Rootly Bot to your call and make the transcript available to you. Value must be one of true or false
func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput) RecordMeeting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.RecordMeeting
	}).(pulumi.BoolPtrOutput)
}

// The meeting subject
func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateMicrosoftTeamsMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArgs and WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArgs) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArgs) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArray and WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArray{ WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArray []WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelInput

func (WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArray) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArray) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskCreateNotionPageTaskParams struct {
	// Value must be one of true or false
	MarkPostMortemAsPublished *bool `pulumi:"markPostMortemAsPublished"`
	// Map must contain two fields, `id` and `name`. The parent page id and display name
	ParentPage map[string]string `pulumi:"parentPage"`
	// Retrospective template to use when creating page task, if desired
	PostMortemTemplateId *string `pulumi:"postMortemTemplateId"`
	// Value must be one of true or false
	ShowActionItemsAsTable *bool `pulumi:"showActionItemsAsTable"`
	// Value must be one of true or false
	ShowTimelineAsTable *bool   `pulumi:"showTimelineAsTable"`
	TaskType            *string `pulumi:"taskType"`
	// The Notion page title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateNotionPageTaskParamsInput is an input type that accepts WorkflowTaskCreateNotionPageTaskParamsArgs and WorkflowTaskCreateNotionPageTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateNotionPageTaskParamsInput` via:
//
//	WorkflowTaskCreateNotionPageTaskParamsArgs{...}
type WorkflowTaskCreateNotionPageTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateNotionPageTaskParamsOutput() WorkflowTaskCreateNotionPageTaskParamsOutput
	ToWorkflowTaskCreateNotionPageTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateNotionPageTaskParamsOutput
}

type WorkflowTaskCreateNotionPageTaskParamsArgs struct {
	// Value must be one of true or false
	MarkPostMortemAsPublished pulumi.BoolPtrInput `pulumi:"markPostMortemAsPublished"`
	// Map must contain two fields, `id` and `name`. The parent page id and display name
	ParentPage pulumi.StringMapInput `pulumi:"parentPage"`
	// Retrospective template to use when creating page task, if desired
	PostMortemTemplateId pulumi.StringPtrInput `pulumi:"postMortemTemplateId"`
	// Value must be one of true or false
	ShowActionItemsAsTable pulumi.BoolPtrInput `pulumi:"showActionItemsAsTable"`
	// Value must be one of true or false
	ShowTimelineAsTable pulumi.BoolPtrInput   `pulumi:"showTimelineAsTable"`
	TaskType            pulumi.StringPtrInput `pulumi:"taskType"`
	// The Notion page title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateNotionPageTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateNotionPageTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateNotionPageTaskParamsArgs) ToWorkflowTaskCreateNotionPageTaskParamsOutput() WorkflowTaskCreateNotionPageTaskParamsOutput {
	return i.ToWorkflowTaskCreateNotionPageTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateNotionPageTaskParamsArgs) ToWorkflowTaskCreateNotionPageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateNotionPageTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateNotionPageTaskParamsOutput)
}

func (i WorkflowTaskCreateNotionPageTaskParamsArgs) ToWorkflowTaskCreateNotionPageTaskParamsPtrOutput() WorkflowTaskCreateNotionPageTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateNotionPageTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateNotionPageTaskParamsArgs) ToWorkflowTaskCreateNotionPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateNotionPageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateNotionPageTaskParamsOutput).ToWorkflowTaskCreateNotionPageTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateNotionPageTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateNotionPageTaskParamsArgs, WorkflowTaskCreateNotionPageTaskParamsPtr and WorkflowTaskCreateNotionPageTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateNotionPageTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateNotionPageTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateNotionPageTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateNotionPageTaskParamsPtrOutput() WorkflowTaskCreateNotionPageTaskParamsPtrOutput
	ToWorkflowTaskCreateNotionPageTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateNotionPageTaskParamsPtrOutput
}

type workflowTaskCreateNotionPageTaskParamsPtrType WorkflowTaskCreateNotionPageTaskParamsArgs

func WorkflowTaskCreateNotionPageTaskParamsPtr(v *WorkflowTaskCreateNotionPageTaskParamsArgs) WorkflowTaskCreateNotionPageTaskParamsPtrInput {
	return (*workflowTaskCreateNotionPageTaskParamsPtrType)(v)
}

func (*workflowTaskCreateNotionPageTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateNotionPageTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateNotionPageTaskParamsPtrType) ToWorkflowTaskCreateNotionPageTaskParamsPtrOutput() WorkflowTaskCreateNotionPageTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateNotionPageTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateNotionPageTaskParamsPtrType) ToWorkflowTaskCreateNotionPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateNotionPageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateNotionPageTaskParamsPtrOutput)
}

type WorkflowTaskCreateNotionPageTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateNotionPageTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateNotionPageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateNotionPageTaskParamsOutput) ToWorkflowTaskCreateNotionPageTaskParamsOutput() WorkflowTaskCreateNotionPageTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateNotionPageTaskParamsOutput) ToWorkflowTaskCreateNotionPageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateNotionPageTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateNotionPageTaskParamsOutput) ToWorkflowTaskCreateNotionPageTaskParamsPtrOutput() WorkflowTaskCreateNotionPageTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateNotionPageTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateNotionPageTaskParamsOutput) ToWorkflowTaskCreateNotionPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateNotionPageTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateNotionPageTaskParams) *WorkflowTaskCreateNotionPageTaskParams {
		return &v
	}).(WorkflowTaskCreateNotionPageTaskParamsPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateNotionPageTaskParamsOutput) MarkPostMortemAsPublished() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateNotionPageTaskParams) *bool { return v.MarkPostMortemAsPublished }).(pulumi.BoolPtrOutput)
}

// Map must contain two fields, `id` and `name`. The parent page id and display name
func (o WorkflowTaskCreateNotionPageTaskParamsOutput) ParentPage() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateNotionPageTaskParams) map[string]string { return v.ParentPage }).(pulumi.StringMapOutput)
}

// Retrospective template to use when creating page task, if desired
func (o WorkflowTaskCreateNotionPageTaskParamsOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateNotionPageTaskParams) *string { return v.PostMortemTemplateId }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateNotionPageTaskParamsOutput) ShowActionItemsAsTable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateNotionPageTaskParams) *bool { return v.ShowActionItemsAsTable }).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateNotionPageTaskParamsOutput) ShowTimelineAsTable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateNotionPageTaskParams) *bool { return v.ShowTimelineAsTable }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateNotionPageTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateNotionPageTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The Notion page title
func (o WorkflowTaskCreateNotionPageTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateNotionPageTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateNotionPageTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateNotionPageTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateNotionPageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateNotionPageTaskParamsPtrOutput) ToWorkflowTaskCreateNotionPageTaskParamsPtrOutput() WorkflowTaskCreateNotionPageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateNotionPageTaskParamsPtrOutput) ToWorkflowTaskCreateNotionPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateNotionPageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateNotionPageTaskParamsPtrOutput) Elem() WorkflowTaskCreateNotionPageTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateNotionPageTaskParams) WorkflowTaskCreateNotionPageTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateNotionPageTaskParams
		return ret
	}).(WorkflowTaskCreateNotionPageTaskParamsOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateNotionPageTaskParamsPtrOutput) MarkPostMortemAsPublished() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateNotionPageTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.MarkPostMortemAsPublished
	}).(pulumi.BoolPtrOutput)
}

// Map must contain two fields, `id` and `name`. The parent page id and display name
func (o WorkflowTaskCreateNotionPageTaskParamsPtrOutput) ParentPage() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateNotionPageTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.ParentPage
	}).(pulumi.StringMapOutput)
}

// Retrospective template to use when creating page task, if desired
func (o WorkflowTaskCreateNotionPageTaskParamsPtrOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateNotionPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.PostMortemTemplateId
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateNotionPageTaskParamsPtrOutput) ShowActionItemsAsTable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateNotionPageTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.ShowActionItemsAsTable
	}).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateNotionPageTaskParamsPtrOutput) ShowTimelineAsTable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateNotionPageTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.ShowTimelineAsTable
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateNotionPageTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateNotionPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The Notion page title
func (o WorkflowTaskCreateNotionPageTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateNotionPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateOpsgenieAlertTaskParams struct {
	// Description field of the alert that is generally used to provide a detailed information about the alert
	Description *string                                               `pulumi:"description"`
	Escalations []WorkflowTaskCreateOpsgenieAlertTaskParamsEscalation `pulumi:"escalations"`
	// Message of the alert
	Message string `pulumi:"message"`
	// Value must be one of `P1`, `P2`, `P3`, `P4`, `P5`, `auto`.
	Priority  *string                                             `pulumi:"priority"`
	Schedules []WorkflowTaskCreateOpsgenieAlertTaskParamsSchedule `pulumi:"schedules"`
	TaskType  *string                                             `pulumi:"taskType"`
	Teams     []WorkflowTaskCreateOpsgenieAlertTaskParamsTeam     `pulumi:"teams"`
	Users     []WorkflowTaskCreateOpsgenieAlertTaskParamsUser     `pulumi:"users"`
}

// WorkflowTaskCreateOpsgenieAlertTaskParamsInput is an input type that accepts WorkflowTaskCreateOpsgenieAlertTaskParamsArgs and WorkflowTaskCreateOpsgenieAlertTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateOpsgenieAlertTaskParamsInput` via:
//
//	WorkflowTaskCreateOpsgenieAlertTaskParamsArgs{...}
type WorkflowTaskCreateOpsgenieAlertTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateOpsgenieAlertTaskParamsOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsOutput
	ToWorkflowTaskCreateOpsgenieAlertTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsOutput
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsArgs struct {
	// Description field of the alert that is generally used to provide a detailed information about the alert
	Description pulumi.StringPtrInput                                         `pulumi:"description"`
	Escalations WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayInput `pulumi:"escalations"`
	// Message of the alert
	Message pulumi.StringInput `pulumi:"message"`
	// Value must be one of `P1`, `P2`, `P3`, `P4`, `P5`, `auto`.
	Priority  pulumi.StringPtrInput                                       `pulumi:"priority"`
	Schedules WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayInput `pulumi:"schedules"`
	TaskType  pulumi.StringPtrInput                                       `pulumi:"taskType"`
	Teams     WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayInput     `pulumi:"teams"`
	Users     WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayInput     `pulumi:"users"`
}

func (WorkflowTaskCreateOpsgenieAlertTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsArgs) ToWorkflowTaskCreateOpsgenieAlertTaskParamsOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsOutput {
	return i.ToWorkflowTaskCreateOpsgenieAlertTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsArgs) ToWorkflowTaskCreateOpsgenieAlertTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateOpsgenieAlertTaskParamsOutput)
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsArgs) ToWorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsArgs) ToWorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateOpsgenieAlertTaskParamsOutput).ToWorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateOpsgenieAlertTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateOpsgenieAlertTaskParamsArgs, WorkflowTaskCreateOpsgenieAlertTaskParamsPtr and WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateOpsgenieAlertTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateOpsgenieAlertTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateOpsgenieAlertTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput
	ToWorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput
}

type workflowTaskCreateOpsgenieAlertTaskParamsPtrType WorkflowTaskCreateOpsgenieAlertTaskParamsArgs

func WorkflowTaskCreateOpsgenieAlertTaskParamsPtr(v *WorkflowTaskCreateOpsgenieAlertTaskParamsArgs) WorkflowTaskCreateOpsgenieAlertTaskParamsPtrInput {
	return (*workflowTaskCreateOpsgenieAlertTaskParamsPtrType)(v)
}

func (*workflowTaskCreateOpsgenieAlertTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateOpsgenieAlertTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateOpsgenieAlertTaskParamsPtrType) ToWorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateOpsgenieAlertTaskParamsPtrType) ToWorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput)
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateOpsgenieAlertTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateOpsgenieAlertTaskParams) *WorkflowTaskCreateOpsgenieAlertTaskParams {
		return &v
	}).(WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput)
}

// Description field of the alert that is generally used to provide a detailed information about the alert
func (o WorkflowTaskCreateOpsgenieAlertTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOpsgenieAlertTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsOutput) Escalations() WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOpsgenieAlertTaskParams) []WorkflowTaskCreateOpsgenieAlertTaskParamsEscalation {
		return v.Escalations
	}).(WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput)
}

// Message of the alert
func (o WorkflowTaskCreateOpsgenieAlertTaskParamsOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOpsgenieAlertTaskParams) string { return v.Message }).(pulumi.StringOutput)
}

// Value must be one of `P1`, `P2`, `P3`, `P4`, `P5`, `auto`.
func (o WorkflowTaskCreateOpsgenieAlertTaskParamsOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOpsgenieAlertTaskParams) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsOutput) Schedules() WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOpsgenieAlertTaskParams) []WorkflowTaskCreateOpsgenieAlertTaskParamsSchedule {
		return v.Schedules
	}).(WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput)
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOpsgenieAlertTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsOutput) Teams() WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOpsgenieAlertTaskParams) []WorkflowTaskCreateOpsgenieAlertTaskParamsTeam {
		return v.Teams
	}).(WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput)
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsOutput) Users() WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOpsgenieAlertTaskParams) []WorkflowTaskCreateOpsgenieAlertTaskParamsUser {
		return v.Users
	}).(WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput)
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateOpsgenieAlertTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput) Elem() WorkflowTaskCreateOpsgenieAlertTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOpsgenieAlertTaskParams) WorkflowTaskCreateOpsgenieAlertTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateOpsgenieAlertTaskParams
		return ret
	}).(WorkflowTaskCreateOpsgenieAlertTaskParamsOutput)
}

// Description field of the alert that is generally used to provide a detailed information about the alert
func (o WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOpsgenieAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput) Escalations() WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOpsgenieAlertTaskParams) []WorkflowTaskCreateOpsgenieAlertTaskParamsEscalation {
		if v == nil {
			return nil
		}
		return v.Escalations
	}).(WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput)
}

// Message of the alert
func (o WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOpsgenieAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `P1`, `P2`, `P3`, `P4`, `P5`, `auto`.
func (o WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOpsgenieAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput) Schedules() WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOpsgenieAlertTaskParams) []WorkflowTaskCreateOpsgenieAlertTaskParamsSchedule {
		if v == nil {
			return nil
		}
		return v.Schedules
	}).(WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput)
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOpsgenieAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput) Teams() WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOpsgenieAlertTaskParams) []WorkflowTaskCreateOpsgenieAlertTaskParamsTeam {
		if v == nil {
			return nil
		}
		return v.Teams
	}).(WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput)
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput) Users() WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOpsgenieAlertTaskParams) []WorkflowTaskCreateOpsgenieAlertTaskParamsUser {
		if v == nil {
			return nil
		}
		return v.Users
	}).(WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput)
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsEscalation struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationInput is an input type that accepts WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArgs and WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationInput` via:
//
//	WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArgs{...}
type WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationInput interface {
	pulumi.Input

	ToWorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput
	ToWorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutputWithContext(context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsEscalation)(nil)).Elem()
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArgs) ToWorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput {
	return i.ToWorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArgs) ToWorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput)
}

// WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayInput is an input type that accepts WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArray and WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayInput` via:
//
//	WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArray{ WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArgs{...} }
type WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput
	ToWorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutputWithContext(context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArray []WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationInput

func (WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateOpsgenieAlertTaskParamsEscalation)(nil)).Elem()
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArray) ToWorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput {
	return i.ToWorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArray) ToWorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput)
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsEscalation)(nil)).Elem()
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOpsgenieAlertTaskParamsEscalation) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOpsgenieAlertTaskParamsEscalation) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateOpsgenieAlertTaskParamsEscalation)(nil)).Elem()
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskCreateOpsgenieAlertTaskParamsEscalation {
		return vs[0].([]WorkflowTaskCreateOpsgenieAlertTaskParamsEscalation)[vs[1].(int)]
	}).(WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput)
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsSchedule struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleInput is an input type that accepts WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArgs and WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleInput` via:
//
//	WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArgs{...}
type WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleInput interface {
	pulumi.Input

	ToWorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput
	ToWorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutputWithContext(context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsSchedule)(nil)).Elem()
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArgs) ToWorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput {
	return i.ToWorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArgs) ToWorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput)
}

// WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayInput is an input type that accepts WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArray and WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayInput` via:
//
//	WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArray{ WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArgs{...} }
type WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput
	ToWorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutputWithContext(context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArray []WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleInput

func (WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateOpsgenieAlertTaskParamsSchedule)(nil)).Elem()
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArray) ToWorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput {
	return i.ToWorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArray) ToWorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput)
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsSchedule)(nil)).Elem()
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOpsgenieAlertTaskParamsSchedule) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOpsgenieAlertTaskParamsSchedule) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateOpsgenieAlertTaskParamsSchedule)(nil)).Elem()
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskCreateOpsgenieAlertTaskParamsSchedule {
		return vs[0].([]WorkflowTaskCreateOpsgenieAlertTaskParamsSchedule)[vs[1].(int)]
	}).(WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput)
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsTeam struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskCreateOpsgenieAlertTaskParamsTeamInput is an input type that accepts WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArgs and WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateOpsgenieAlertTaskParamsTeamInput` via:
//
//	WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArgs{...}
type WorkflowTaskCreateOpsgenieAlertTaskParamsTeamInput interface {
	pulumi.Input

	ToWorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput
	ToWorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutputWithContext(context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsTeam)(nil)).Elem()
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArgs) ToWorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput {
	return i.ToWorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArgs) ToWorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput)
}

// WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayInput is an input type that accepts WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArray and WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayInput` via:
//
//	WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArray{ WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArgs{...} }
type WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput
	ToWorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutputWithContext(context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArray []WorkflowTaskCreateOpsgenieAlertTaskParamsTeamInput

func (WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateOpsgenieAlertTaskParamsTeam)(nil)).Elem()
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArray) ToWorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput {
	return i.ToWorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArray) ToWorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput)
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsTeam)(nil)).Elem()
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOpsgenieAlertTaskParamsTeam) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOpsgenieAlertTaskParamsTeam) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateOpsgenieAlertTaskParamsTeam)(nil)).Elem()
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskCreateOpsgenieAlertTaskParamsTeam {
		return vs[0].([]WorkflowTaskCreateOpsgenieAlertTaskParamsTeam)[vs[1].(int)]
	}).(WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput)
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsUser struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskCreateOpsgenieAlertTaskParamsUserInput is an input type that accepts WorkflowTaskCreateOpsgenieAlertTaskParamsUserArgs and WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateOpsgenieAlertTaskParamsUserInput` via:
//
//	WorkflowTaskCreateOpsgenieAlertTaskParamsUserArgs{...}
type WorkflowTaskCreateOpsgenieAlertTaskParamsUserInput interface {
	pulumi.Input

	ToWorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput
	ToWorkflowTaskCreateOpsgenieAlertTaskParamsUserOutputWithContext(context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsUserArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskCreateOpsgenieAlertTaskParamsUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsUser)(nil)).Elem()
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsUserArgs) ToWorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput {
	return i.ToWorkflowTaskCreateOpsgenieAlertTaskParamsUserOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsUserArgs) ToWorkflowTaskCreateOpsgenieAlertTaskParamsUserOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput)
}

// WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayInput is an input type that accepts WorkflowTaskCreateOpsgenieAlertTaskParamsUserArray and WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayInput` via:
//
//	WorkflowTaskCreateOpsgenieAlertTaskParamsUserArray{ WorkflowTaskCreateOpsgenieAlertTaskParamsUserArgs{...} }
type WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput
	ToWorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutputWithContext(context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsUserArray []WorkflowTaskCreateOpsgenieAlertTaskParamsUserInput

func (WorkflowTaskCreateOpsgenieAlertTaskParamsUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateOpsgenieAlertTaskParamsUser)(nil)).Elem()
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsUserArray) ToWorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput {
	return i.ToWorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateOpsgenieAlertTaskParamsUserArray) ToWorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput)
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsUser)(nil)).Elem()
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsUserOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOpsgenieAlertTaskParamsUser) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOpsgenieAlertTaskParamsUser) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateOpsgenieAlertTaskParamsUser)(nil)).Elem()
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput() WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput) ToWorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput {
	return o
}

func (o WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskCreateOpsgenieAlertTaskParamsUser {
		return vs[0].([]WorkflowTaskCreateOpsgenieAlertTaskParamsUser)[vs[1].(int)]
	}).(WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput)
}

type WorkflowTaskCreateOutlookEventTaskParams struct {
	// Emails of attendees
	Attendees []string `pulumi:"attendees"`
	// Map must contain two fields, `id` and `name`.
	Calendar map[string]string `pulumi:"calendar"`
	// The days until meeting
	DaysUntilMeeting int `pulumi:"daysUntilMeeting"`
	// The event description
	Description string `pulumi:"description"`
	// Value must be one of true or false
	ExcludeWeekends *bool `pulumi:"excludeWeekends"`
	// Meeting duration in format like '1 hour', '30 minutes'
	MeetingDuration string `pulumi:"meetingDuration"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                        `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	// The event summary
	Summary  string  `pulumi:"summary"`
	TaskType *string `pulumi:"taskType"`
	// Time of meeting in format HH:MM
	TimeOfMeeting string `pulumi:"timeOfMeeting"`
	// A valid IANA time zone name.
	TimeZone *string `pulumi:"timeZone"`
}

// WorkflowTaskCreateOutlookEventTaskParamsInput is an input type that accepts WorkflowTaskCreateOutlookEventTaskParamsArgs and WorkflowTaskCreateOutlookEventTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateOutlookEventTaskParamsInput` via:
//
//	WorkflowTaskCreateOutlookEventTaskParamsArgs{...}
type WorkflowTaskCreateOutlookEventTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateOutlookEventTaskParamsOutput() WorkflowTaskCreateOutlookEventTaskParamsOutput
	ToWorkflowTaskCreateOutlookEventTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateOutlookEventTaskParamsOutput
}

type WorkflowTaskCreateOutlookEventTaskParamsArgs struct {
	// Emails of attendees
	Attendees pulumi.StringArrayInput `pulumi:"attendees"`
	// Map must contain two fields, `id` and `name`.
	Calendar pulumi.StringMapInput `pulumi:"calendar"`
	// The days until meeting
	DaysUntilMeeting pulumi.IntInput `pulumi:"daysUntilMeeting"`
	// The event description
	Description pulumi.StringInput `pulumi:"description"`
	// Value must be one of true or false
	ExcludeWeekends pulumi.BoolPtrInput `pulumi:"excludeWeekends"`
	// Meeting duration in format like '1 hour', '30 minutes'
	MeetingDuration pulumi.StringInput `pulumi:"meetingDuration"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                                  `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	// The event summary
	Summary  pulumi.StringInput    `pulumi:"summary"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// Time of meeting in format HH:MM
	TimeOfMeeting pulumi.StringInput `pulumi:"timeOfMeeting"`
	// A valid IANA time zone name.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (WorkflowTaskCreateOutlookEventTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateOutlookEventTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateOutlookEventTaskParamsArgs) ToWorkflowTaskCreateOutlookEventTaskParamsOutput() WorkflowTaskCreateOutlookEventTaskParamsOutput {
	return i.ToWorkflowTaskCreateOutlookEventTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateOutlookEventTaskParamsArgs) ToWorkflowTaskCreateOutlookEventTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateOutlookEventTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateOutlookEventTaskParamsOutput)
}

func (i WorkflowTaskCreateOutlookEventTaskParamsArgs) ToWorkflowTaskCreateOutlookEventTaskParamsPtrOutput() WorkflowTaskCreateOutlookEventTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateOutlookEventTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateOutlookEventTaskParamsArgs) ToWorkflowTaskCreateOutlookEventTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateOutlookEventTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateOutlookEventTaskParamsOutput).ToWorkflowTaskCreateOutlookEventTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateOutlookEventTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateOutlookEventTaskParamsArgs, WorkflowTaskCreateOutlookEventTaskParamsPtr and WorkflowTaskCreateOutlookEventTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateOutlookEventTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateOutlookEventTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateOutlookEventTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateOutlookEventTaskParamsPtrOutput() WorkflowTaskCreateOutlookEventTaskParamsPtrOutput
	ToWorkflowTaskCreateOutlookEventTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateOutlookEventTaskParamsPtrOutput
}

type workflowTaskCreateOutlookEventTaskParamsPtrType WorkflowTaskCreateOutlookEventTaskParamsArgs

func WorkflowTaskCreateOutlookEventTaskParamsPtr(v *WorkflowTaskCreateOutlookEventTaskParamsArgs) WorkflowTaskCreateOutlookEventTaskParamsPtrInput {
	return (*workflowTaskCreateOutlookEventTaskParamsPtrType)(v)
}

func (*workflowTaskCreateOutlookEventTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateOutlookEventTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateOutlookEventTaskParamsPtrType) ToWorkflowTaskCreateOutlookEventTaskParamsPtrOutput() WorkflowTaskCreateOutlookEventTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateOutlookEventTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateOutlookEventTaskParamsPtrType) ToWorkflowTaskCreateOutlookEventTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateOutlookEventTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateOutlookEventTaskParamsPtrOutput)
}

type WorkflowTaskCreateOutlookEventTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateOutlookEventTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateOutlookEventTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateOutlookEventTaskParamsOutput) ToWorkflowTaskCreateOutlookEventTaskParamsOutput() WorkflowTaskCreateOutlookEventTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateOutlookEventTaskParamsOutput) ToWorkflowTaskCreateOutlookEventTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateOutlookEventTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateOutlookEventTaskParamsOutput) ToWorkflowTaskCreateOutlookEventTaskParamsPtrOutput() WorkflowTaskCreateOutlookEventTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateOutlookEventTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateOutlookEventTaskParamsOutput) ToWorkflowTaskCreateOutlookEventTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateOutlookEventTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateOutlookEventTaskParams) *WorkflowTaskCreateOutlookEventTaskParams {
		return &v
	}).(WorkflowTaskCreateOutlookEventTaskParamsPtrOutput)
}

// Emails of attendees
func (o WorkflowTaskCreateOutlookEventTaskParamsOutput) Attendees() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOutlookEventTaskParams) []string { return v.Attendees }).(pulumi.StringArrayOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateOutlookEventTaskParamsOutput) Calendar() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOutlookEventTaskParams) map[string]string { return v.Calendar }).(pulumi.StringMapOutput)
}

// The days until meeting
func (o WorkflowTaskCreateOutlookEventTaskParamsOutput) DaysUntilMeeting() pulumi.IntOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOutlookEventTaskParams) int { return v.DaysUntilMeeting }).(pulumi.IntOutput)
}

// The event description
func (o WorkflowTaskCreateOutlookEventTaskParamsOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOutlookEventTaskParams) string { return v.Description }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateOutlookEventTaskParamsOutput) ExcludeWeekends() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOutlookEventTaskParams) *bool { return v.ExcludeWeekends }).(pulumi.BoolPtrOutput)
}

// Meeting duration in format like '1 hour', '30 minutes'
func (o WorkflowTaskCreateOutlookEventTaskParamsOutput) MeetingDuration() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOutlookEventTaskParams) string { return v.MeetingDuration }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateOutlookEventTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOutlookEventTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateOutlookEventTaskParamsOutput) PostToSlackChannels() WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOutlookEventTaskParams) []WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput)
}

// The event summary
func (o WorkflowTaskCreateOutlookEventTaskParamsOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOutlookEventTaskParams) string { return v.Summary }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateOutlookEventTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOutlookEventTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Time of meeting in format HH:MM
func (o WorkflowTaskCreateOutlookEventTaskParamsOutput) TimeOfMeeting() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOutlookEventTaskParams) string { return v.TimeOfMeeting }).(pulumi.StringOutput)
}

// A valid IANA time zone name.
func (o WorkflowTaskCreateOutlookEventTaskParamsOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOutlookEventTaskParams) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateOutlookEventTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateOutlookEventTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateOutlookEventTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateOutlookEventTaskParamsPtrOutput) ToWorkflowTaskCreateOutlookEventTaskParamsPtrOutput() WorkflowTaskCreateOutlookEventTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateOutlookEventTaskParamsPtrOutput) ToWorkflowTaskCreateOutlookEventTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateOutlookEventTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateOutlookEventTaskParamsPtrOutput) Elem() WorkflowTaskCreateOutlookEventTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOutlookEventTaskParams) WorkflowTaskCreateOutlookEventTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateOutlookEventTaskParams
		return ret
	}).(WorkflowTaskCreateOutlookEventTaskParamsOutput)
}

// Emails of attendees
func (o WorkflowTaskCreateOutlookEventTaskParamsPtrOutput) Attendees() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOutlookEventTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.Attendees
	}).(pulumi.StringArrayOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateOutlookEventTaskParamsPtrOutput) Calendar() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOutlookEventTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Calendar
	}).(pulumi.StringMapOutput)
}

// The days until meeting
func (o WorkflowTaskCreateOutlookEventTaskParamsPtrOutput) DaysUntilMeeting() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOutlookEventTaskParams) *int {
		if v == nil {
			return nil
		}
		return &v.DaysUntilMeeting
	}).(pulumi.IntPtrOutput)
}

// The event description
func (o WorkflowTaskCreateOutlookEventTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOutlookEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateOutlookEventTaskParamsPtrOutput) ExcludeWeekends() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOutlookEventTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeWeekends
	}).(pulumi.BoolPtrOutput)
}

// Meeting duration in format like '1 hour', '30 minutes'
func (o WorkflowTaskCreateOutlookEventTaskParamsPtrOutput) MeetingDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOutlookEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.MeetingDuration
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateOutlookEventTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOutlookEventTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateOutlookEventTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOutlookEventTaskParams) []WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput)
}

// The event summary
func (o WorkflowTaskCreateOutlookEventTaskParamsPtrOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOutlookEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Summary
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateOutlookEventTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOutlookEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Time of meeting in format HH:MM
func (o WorkflowTaskCreateOutlookEventTaskParamsPtrOutput) TimeOfMeeting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOutlookEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.TimeOfMeeting
	}).(pulumi.StringPtrOutput)
}

// A valid IANA time zone name.
func (o WorkflowTaskCreateOutlookEventTaskParamsPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateOutlookEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArgs and WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArgs) ToWorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArgs) ToWorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArray and WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArray{ WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArray []WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelInput

func (WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArray) ToWorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArray) ToWorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput) ToWorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput) ToWorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskCreatePagerdutyStatusUpdateTaskParams struct {
	// A message outlining the incident's resolution in PagerDuty
	Message string `pulumi:"message"`
	// PagerDuty incident id
	PagerdutyIncidentId string  `pulumi:"pagerdutyIncidentId"`
	TaskType            *string `pulumi:"taskType"`
}

// WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsInput is an input type that accepts WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsArgs and WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsInput` via:
//
//	WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsArgs{...}
type WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput() WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput
	ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutputWithContext(context.Context) WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput
}

type WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsArgs struct {
	// A message outlining the incident's resolution in PagerDuty
	Message pulumi.StringInput `pulumi:"message"`
	// PagerDuty incident id
	PagerdutyIncidentId pulumi.StringInput    `pulumi:"pagerdutyIncidentId"`
	TaskType            pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreatePagerdutyStatusUpdateTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsArgs) ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput() WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput {
	return i.ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsArgs) ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput)
}

func (i WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsArgs) ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput() WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsArgs) ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput).ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrInput is an input type that accepts WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsArgs, WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtr and WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput() WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput
	ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput
}

type workflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrType WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsArgs

func WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtr(v *WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsArgs) WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrInput {
	return (*workflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrType)(v)
}

func (*workflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreatePagerdutyStatusUpdateTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrType) ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput() WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrType) ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput)
}

type WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreatePagerdutyStatusUpdateTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput) ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput() WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput) ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput) ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput() WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput) ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreatePagerdutyStatusUpdateTaskParams) *WorkflowTaskCreatePagerdutyStatusUpdateTaskParams {
		return &v
	}).(WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput)
}

// A message outlining the incident's resolution in PagerDuty
func (o WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreatePagerdutyStatusUpdateTaskParams) string { return v.Message }).(pulumi.StringOutput)
}

// PagerDuty incident id
func (o WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput) PagerdutyIncidentId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreatePagerdutyStatusUpdateTaskParams) string { return v.PagerdutyIncidentId }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreatePagerdutyStatusUpdateTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreatePagerdutyStatusUpdateTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput) ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput() WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput) ToWorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput) Elem() WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagerdutyStatusUpdateTaskParams) WorkflowTaskCreatePagerdutyStatusUpdateTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreatePagerdutyStatusUpdateTaskParams
		return ret
	}).(WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput)
}

// A message outlining the incident's resolution in PagerDuty
func (o WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagerdutyStatusUpdateTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// PagerDuty incident id
func (o WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput) PagerdutyIncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagerdutyStatusUpdateTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.PagerdutyIncidentId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagerdutyStatusUpdateTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreatePagertreeAlertTaskParams struct {
	// Description of alert as text
	Description *string `pulumi:"description"`
	// Setting to true makes an alert a Pagertree incident. Value must be one of true or false
	Incident *bool `pulumi:"incident"`
	// Value must be one of `auto`, `SEV-1`, `SEV-2`, `SEV-3`, `SEV-4`.
	Severity *string                                          `pulumi:"severity"`
	TaskType *string                                          `pulumi:"taskType"`
	Teams    []WorkflowTaskCreatePagertreeAlertTaskParamsTeam `pulumi:"teams"`
	// Title of alert as text
	Title *string `pulumi:"title"`
	// Value must be one of `auto`, `critical`, `high`, `medium`, `low`.
	Urgency *string                                          `pulumi:"urgency"`
	Users   []WorkflowTaskCreatePagertreeAlertTaskParamsUser `pulumi:"users"`
}

// WorkflowTaskCreatePagertreeAlertTaskParamsInput is an input type that accepts WorkflowTaskCreatePagertreeAlertTaskParamsArgs and WorkflowTaskCreatePagertreeAlertTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreatePagertreeAlertTaskParamsInput` via:
//
//	WorkflowTaskCreatePagertreeAlertTaskParamsArgs{...}
type WorkflowTaskCreatePagertreeAlertTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreatePagertreeAlertTaskParamsOutput() WorkflowTaskCreatePagertreeAlertTaskParamsOutput
	ToWorkflowTaskCreatePagertreeAlertTaskParamsOutputWithContext(context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsOutput
}

type WorkflowTaskCreatePagertreeAlertTaskParamsArgs struct {
	// Description of alert as text
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Setting to true makes an alert a Pagertree incident. Value must be one of true or false
	Incident pulumi.BoolPtrInput `pulumi:"incident"`
	// Value must be one of `auto`, `SEV-1`, `SEV-2`, `SEV-3`, `SEV-4`.
	Severity pulumi.StringPtrInput                                    `pulumi:"severity"`
	TaskType pulumi.StringPtrInput                                    `pulumi:"taskType"`
	Teams    WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayInput `pulumi:"teams"`
	// Title of alert as text
	Title pulumi.StringPtrInput `pulumi:"title"`
	// Value must be one of `auto`, `critical`, `high`, `medium`, `low`.
	Urgency pulumi.StringPtrInput                                    `pulumi:"urgency"`
	Users   WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayInput `pulumi:"users"`
}

func (WorkflowTaskCreatePagertreeAlertTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreatePagertreeAlertTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreatePagertreeAlertTaskParamsArgs) ToWorkflowTaskCreatePagertreeAlertTaskParamsOutput() WorkflowTaskCreatePagertreeAlertTaskParamsOutput {
	return i.ToWorkflowTaskCreatePagertreeAlertTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreatePagertreeAlertTaskParamsArgs) ToWorkflowTaskCreatePagertreeAlertTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreatePagertreeAlertTaskParamsOutput)
}

func (i WorkflowTaskCreatePagertreeAlertTaskParamsArgs) ToWorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput() WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreatePagertreeAlertTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreatePagertreeAlertTaskParamsArgs) ToWorkflowTaskCreatePagertreeAlertTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreatePagertreeAlertTaskParamsOutput).ToWorkflowTaskCreatePagertreeAlertTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreatePagertreeAlertTaskParamsPtrInput is an input type that accepts WorkflowTaskCreatePagertreeAlertTaskParamsArgs, WorkflowTaskCreatePagertreeAlertTaskParamsPtr and WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreatePagertreeAlertTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreatePagertreeAlertTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreatePagertreeAlertTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput() WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput
	ToWorkflowTaskCreatePagertreeAlertTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput
}

type workflowTaskCreatePagertreeAlertTaskParamsPtrType WorkflowTaskCreatePagertreeAlertTaskParamsArgs

func WorkflowTaskCreatePagertreeAlertTaskParamsPtr(v *WorkflowTaskCreatePagertreeAlertTaskParamsArgs) WorkflowTaskCreatePagertreeAlertTaskParamsPtrInput {
	return (*workflowTaskCreatePagertreeAlertTaskParamsPtrType)(v)
}

func (*workflowTaskCreatePagertreeAlertTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreatePagertreeAlertTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreatePagertreeAlertTaskParamsPtrType) ToWorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput() WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreatePagertreeAlertTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreatePagertreeAlertTaskParamsPtrType) ToWorkflowTaskCreatePagertreeAlertTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput)
}

type WorkflowTaskCreatePagertreeAlertTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreatePagertreeAlertTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreatePagertreeAlertTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsOutput) ToWorkflowTaskCreatePagertreeAlertTaskParamsOutput() WorkflowTaskCreatePagertreeAlertTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsOutput) ToWorkflowTaskCreatePagertreeAlertTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsOutput) ToWorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput() WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreatePagertreeAlertTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsOutput) ToWorkflowTaskCreatePagertreeAlertTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreatePagertreeAlertTaskParams) *WorkflowTaskCreatePagertreeAlertTaskParams {
		return &v
	}).(WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput)
}

// Description of alert as text
func (o WorkflowTaskCreatePagertreeAlertTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreatePagertreeAlertTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Setting to true makes an alert a Pagertree incident. Value must be one of true or false
func (o WorkflowTaskCreatePagertreeAlertTaskParamsOutput) Incident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreatePagertreeAlertTaskParams) *bool { return v.Incident }).(pulumi.BoolPtrOutput)
}

// Value must be one of `auto`, `SEV-1`, `SEV-2`, `SEV-3`, `SEV-4`.
func (o WorkflowTaskCreatePagertreeAlertTaskParamsOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreatePagertreeAlertTaskParams) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreatePagertreeAlertTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsOutput) Teams() WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreatePagertreeAlertTaskParams) []WorkflowTaskCreatePagertreeAlertTaskParamsTeam {
		return v.Teams
	}).(WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput)
}

// Title of alert as text
func (o WorkflowTaskCreatePagertreeAlertTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreatePagertreeAlertTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// Value must be one of `auto`, `critical`, `high`, `medium`, `low`.
func (o WorkflowTaskCreatePagertreeAlertTaskParamsOutput) Urgency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreatePagertreeAlertTaskParams) *string { return v.Urgency }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsOutput) Users() WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreatePagertreeAlertTaskParams) []WorkflowTaskCreatePagertreeAlertTaskParamsUser {
		return v.Users
	}).(WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput)
}

type WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreatePagertreeAlertTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput) ToWorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput() WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput) ToWorkflowTaskCreatePagertreeAlertTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput) Elem() WorkflowTaskCreatePagertreeAlertTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagertreeAlertTaskParams) WorkflowTaskCreatePagertreeAlertTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreatePagertreeAlertTaskParams
		return ret
	}).(WorkflowTaskCreatePagertreeAlertTaskParamsOutput)
}

// Description of alert as text
func (o WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagertreeAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Setting to true makes an alert a Pagertree incident. Value must be one of true or false
func (o WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput) Incident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagertreeAlertTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.Incident
	}).(pulumi.BoolPtrOutput)
}

// Value must be one of `auto`, `SEV-1`, `SEV-2`, `SEV-3`, `SEV-4`.
func (o WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagertreeAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagertreeAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput) Teams() WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagertreeAlertTaskParams) []WorkflowTaskCreatePagertreeAlertTaskParamsTeam {
		if v == nil {
			return nil
		}
		return v.Teams
	}).(WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput)
}

// Title of alert as text
func (o WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagertreeAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `auto`, `critical`, `high`, `medium`, `low`.
func (o WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput) Urgency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagertreeAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Urgency
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput) Users() WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagertreeAlertTaskParams) []WorkflowTaskCreatePagertreeAlertTaskParamsUser {
		if v == nil {
			return nil
		}
		return v.Users
	}).(WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput)
}

type WorkflowTaskCreatePagertreeAlertTaskParamsTeam struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskCreatePagertreeAlertTaskParamsTeamInput is an input type that accepts WorkflowTaskCreatePagertreeAlertTaskParamsTeamArgs and WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput values.
// You can construct a concrete instance of `WorkflowTaskCreatePagertreeAlertTaskParamsTeamInput` via:
//
//	WorkflowTaskCreatePagertreeAlertTaskParamsTeamArgs{...}
type WorkflowTaskCreatePagertreeAlertTaskParamsTeamInput interface {
	pulumi.Input

	ToWorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput() WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput
	ToWorkflowTaskCreatePagertreeAlertTaskParamsTeamOutputWithContext(context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput
}

type WorkflowTaskCreatePagertreeAlertTaskParamsTeamArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskCreatePagertreeAlertTaskParamsTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreatePagertreeAlertTaskParamsTeam)(nil)).Elem()
}

func (i WorkflowTaskCreatePagertreeAlertTaskParamsTeamArgs) ToWorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput() WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput {
	return i.ToWorkflowTaskCreatePagertreeAlertTaskParamsTeamOutputWithContext(context.Background())
}

func (i WorkflowTaskCreatePagertreeAlertTaskParamsTeamArgs) ToWorkflowTaskCreatePagertreeAlertTaskParamsTeamOutputWithContext(ctx context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput)
}

// WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayInput is an input type that accepts WorkflowTaskCreatePagertreeAlertTaskParamsTeamArray and WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayInput` via:
//
//	WorkflowTaskCreatePagertreeAlertTaskParamsTeamArray{ WorkflowTaskCreatePagertreeAlertTaskParamsTeamArgs{...} }
type WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput() WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput
	ToWorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutputWithContext(context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput
}

type WorkflowTaskCreatePagertreeAlertTaskParamsTeamArray []WorkflowTaskCreatePagertreeAlertTaskParamsTeamInput

func (WorkflowTaskCreatePagertreeAlertTaskParamsTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreatePagertreeAlertTaskParamsTeam)(nil)).Elem()
}

func (i WorkflowTaskCreatePagertreeAlertTaskParamsTeamArray) ToWorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput() WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput {
	return i.ToWorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreatePagertreeAlertTaskParamsTeamArray) ToWorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutputWithContext(ctx context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput)
}

type WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreatePagertreeAlertTaskParamsTeam)(nil)).Elem()
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput) ToWorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput() WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput {
	return o
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput) ToWorkflowTaskCreatePagertreeAlertTaskParamsTeamOutputWithContext(ctx context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput {
	return o
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreatePagertreeAlertTaskParamsTeam) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreatePagertreeAlertTaskParamsTeam) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreatePagertreeAlertTaskParamsTeam)(nil)).Elem()
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput) ToWorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput() WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput {
	return o
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput) ToWorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutputWithContext(ctx context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput {
	return o
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskCreatePagertreeAlertTaskParamsTeam {
		return vs[0].([]WorkflowTaskCreatePagertreeAlertTaskParamsTeam)[vs[1].(int)]
	}).(WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput)
}

type WorkflowTaskCreatePagertreeAlertTaskParamsUser struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskCreatePagertreeAlertTaskParamsUserInput is an input type that accepts WorkflowTaskCreatePagertreeAlertTaskParamsUserArgs and WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput values.
// You can construct a concrete instance of `WorkflowTaskCreatePagertreeAlertTaskParamsUserInput` via:
//
//	WorkflowTaskCreatePagertreeAlertTaskParamsUserArgs{...}
type WorkflowTaskCreatePagertreeAlertTaskParamsUserInput interface {
	pulumi.Input

	ToWorkflowTaskCreatePagertreeAlertTaskParamsUserOutput() WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput
	ToWorkflowTaskCreatePagertreeAlertTaskParamsUserOutputWithContext(context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput
}

type WorkflowTaskCreatePagertreeAlertTaskParamsUserArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskCreatePagertreeAlertTaskParamsUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreatePagertreeAlertTaskParamsUser)(nil)).Elem()
}

func (i WorkflowTaskCreatePagertreeAlertTaskParamsUserArgs) ToWorkflowTaskCreatePagertreeAlertTaskParamsUserOutput() WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput {
	return i.ToWorkflowTaskCreatePagertreeAlertTaskParamsUserOutputWithContext(context.Background())
}

func (i WorkflowTaskCreatePagertreeAlertTaskParamsUserArgs) ToWorkflowTaskCreatePagertreeAlertTaskParamsUserOutputWithContext(ctx context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput)
}

// WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayInput is an input type that accepts WorkflowTaskCreatePagertreeAlertTaskParamsUserArray and WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayInput` via:
//
//	WorkflowTaskCreatePagertreeAlertTaskParamsUserArray{ WorkflowTaskCreatePagertreeAlertTaskParamsUserArgs{...} }
type WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput() WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput
	ToWorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutputWithContext(context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput
}

type WorkflowTaskCreatePagertreeAlertTaskParamsUserArray []WorkflowTaskCreatePagertreeAlertTaskParamsUserInput

func (WorkflowTaskCreatePagertreeAlertTaskParamsUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreatePagertreeAlertTaskParamsUser)(nil)).Elem()
}

func (i WorkflowTaskCreatePagertreeAlertTaskParamsUserArray) ToWorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput() WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput {
	return i.ToWorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreatePagertreeAlertTaskParamsUserArray) ToWorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutputWithContext(ctx context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput)
}

type WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreatePagertreeAlertTaskParamsUser)(nil)).Elem()
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput) ToWorkflowTaskCreatePagertreeAlertTaskParamsUserOutput() WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput {
	return o
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput) ToWorkflowTaskCreatePagertreeAlertTaskParamsUserOutputWithContext(ctx context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput {
	return o
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreatePagertreeAlertTaskParamsUser) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreatePagertreeAlertTaskParamsUser) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreatePagertreeAlertTaskParamsUser)(nil)).Elem()
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput) ToWorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput() WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput {
	return o
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput) ToWorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutputWithContext(ctx context.Context) WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput {
	return o
}

func (o WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskCreatePagertreeAlertTaskParamsUser {
		return vs[0].([]WorkflowTaskCreatePagertreeAlertTaskParamsUser)[vs[1].(int)]
	}).(WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput)
}

type WorkflowTaskCreateQuipPageTaskParams struct {
	// The page content
	Content *string `pulumi:"content"`
	// Value must be one of true or false
	MarkPostMortemAsPublished *bool `pulumi:"markPostMortemAsPublished"`
	// The parent folder id
	ParentFolderId *string `pulumi:"parentFolderId"`
	// Retrospective template to use when creating page, if desired
	PostMortemTemplateId *string `pulumi:"postMortemTemplateId"`
	TaskType             *string `pulumi:"taskType"`
	// The Quip file ID to use as a template
	TemplateId *string `pulumi:"templateId"`
	// The page title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateQuipPageTaskParamsInput is an input type that accepts WorkflowTaskCreateQuipPageTaskParamsArgs and WorkflowTaskCreateQuipPageTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateQuipPageTaskParamsInput` via:
//
//	WorkflowTaskCreateQuipPageTaskParamsArgs{...}
type WorkflowTaskCreateQuipPageTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateQuipPageTaskParamsOutput() WorkflowTaskCreateQuipPageTaskParamsOutput
	ToWorkflowTaskCreateQuipPageTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateQuipPageTaskParamsOutput
}

type WorkflowTaskCreateQuipPageTaskParamsArgs struct {
	// The page content
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Value must be one of true or false
	MarkPostMortemAsPublished pulumi.BoolPtrInput `pulumi:"markPostMortemAsPublished"`
	// The parent folder id
	ParentFolderId pulumi.StringPtrInput `pulumi:"parentFolderId"`
	// Retrospective template to use when creating page, if desired
	PostMortemTemplateId pulumi.StringPtrInput `pulumi:"postMortemTemplateId"`
	TaskType             pulumi.StringPtrInput `pulumi:"taskType"`
	// The Quip file ID to use as a template
	TemplateId pulumi.StringPtrInput `pulumi:"templateId"`
	// The page title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateQuipPageTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateQuipPageTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateQuipPageTaskParamsArgs) ToWorkflowTaskCreateQuipPageTaskParamsOutput() WorkflowTaskCreateQuipPageTaskParamsOutput {
	return i.ToWorkflowTaskCreateQuipPageTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateQuipPageTaskParamsArgs) ToWorkflowTaskCreateQuipPageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateQuipPageTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateQuipPageTaskParamsOutput)
}

func (i WorkflowTaskCreateQuipPageTaskParamsArgs) ToWorkflowTaskCreateQuipPageTaskParamsPtrOutput() WorkflowTaskCreateQuipPageTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateQuipPageTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateQuipPageTaskParamsArgs) ToWorkflowTaskCreateQuipPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateQuipPageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateQuipPageTaskParamsOutput).ToWorkflowTaskCreateQuipPageTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateQuipPageTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateQuipPageTaskParamsArgs, WorkflowTaskCreateQuipPageTaskParamsPtr and WorkflowTaskCreateQuipPageTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateQuipPageTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateQuipPageTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateQuipPageTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateQuipPageTaskParamsPtrOutput() WorkflowTaskCreateQuipPageTaskParamsPtrOutput
	ToWorkflowTaskCreateQuipPageTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateQuipPageTaskParamsPtrOutput
}

type workflowTaskCreateQuipPageTaskParamsPtrType WorkflowTaskCreateQuipPageTaskParamsArgs

func WorkflowTaskCreateQuipPageTaskParamsPtr(v *WorkflowTaskCreateQuipPageTaskParamsArgs) WorkflowTaskCreateQuipPageTaskParamsPtrInput {
	return (*workflowTaskCreateQuipPageTaskParamsPtrType)(v)
}

func (*workflowTaskCreateQuipPageTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateQuipPageTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateQuipPageTaskParamsPtrType) ToWorkflowTaskCreateQuipPageTaskParamsPtrOutput() WorkflowTaskCreateQuipPageTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateQuipPageTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateQuipPageTaskParamsPtrType) ToWorkflowTaskCreateQuipPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateQuipPageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateQuipPageTaskParamsPtrOutput)
}

type WorkflowTaskCreateQuipPageTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateQuipPageTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateQuipPageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateQuipPageTaskParamsOutput) ToWorkflowTaskCreateQuipPageTaskParamsOutput() WorkflowTaskCreateQuipPageTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateQuipPageTaskParamsOutput) ToWorkflowTaskCreateQuipPageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateQuipPageTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateQuipPageTaskParamsOutput) ToWorkflowTaskCreateQuipPageTaskParamsPtrOutput() WorkflowTaskCreateQuipPageTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateQuipPageTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateQuipPageTaskParamsOutput) ToWorkflowTaskCreateQuipPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateQuipPageTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateQuipPageTaskParams) *WorkflowTaskCreateQuipPageTaskParams {
		return &v
	}).(WorkflowTaskCreateQuipPageTaskParamsPtrOutput)
}

// The page content
func (o WorkflowTaskCreateQuipPageTaskParamsOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateQuipPageTaskParams) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateQuipPageTaskParamsOutput) MarkPostMortemAsPublished() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateQuipPageTaskParams) *bool { return v.MarkPostMortemAsPublished }).(pulumi.BoolPtrOutput)
}

// The parent folder id
func (o WorkflowTaskCreateQuipPageTaskParamsOutput) ParentFolderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateQuipPageTaskParams) *string { return v.ParentFolderId }).(pulumi.StringPtrOutput)
}

// Retrospective template to use when creating page, if desired
func (o WorkflowTaskCreateQuipPageTaskParamsOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateQuipPageTaskParams) *string { return v.PostMortemTemplateId }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateQuipPageTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateQuipPageTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The Quip file ID to use as a template
func (o WorkflowTaskCreateQuipPageTaskParamsOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateQuipPageTaskParams) *string { return v.TemplateId }).(pulumi.StringPtrOutput)
}

// The page title
func (o WorkflowTaskCreateQuipPageTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateQuipPageTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateQuipPageTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateQuipPageTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateQuipPageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateQuipPageTaskParamsPtrOutput) ToWorkflowTaskCreateQuipPageTaskParamsPtrOutput() WorkflowTaskCreateQuipPageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateQuipPageTaskParamsPtrOutput) ToWorkflowTaskCreateQuipPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateQuipPageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateQuipPageTaskParamsPtrOutput) Elem() WorkflowTaskCreateQuipPageTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateQuipPageTaskParams) WorkflowTaskCreateQuipPageTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateQuipPageTaskParams
		return ret
	}).(WorkflowTaskCreateQuipPageTaskParamsOutput)
}

// The page content
func (o WorkflowTaskCreateQuipPageTaskParamsPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateQuipPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateQuipPageTaskParamsPtrOutput) MarkPostMortemAsPublished() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateQuipPageTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.MarkPostMortemAsPublished
	}).(pulumi.BoolPtrOutput)
}

// The parent folder id
func (o WorkflowTaskCreateQuipPageTaskParamsPtrOutput) ParentFolderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateQuipPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.ParentFolderId
	}).(pulumi.StringPtrOutput)
}

// Retrospective template to use when creating page, if desired
func (o WorkflowTaskCreateQuipPageTaskParamsPtrOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateQuipPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.PostMortemTemplateId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateQuipPageTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateQuipPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The Quip file ID to use as a template
func (o WorkflowTaskCreateQuipPageTaskParamsPtrOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateQuipPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TemplateId
	}).(pulumi.StringPtrOutput)
}

// The page title
func (o WorkflowTaskCreateQuipPageTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateQuipPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateServiceNowIncidentTaskParams struct {
	// Map must contain two fields, `id` and `name`. The completion id and display name
	Completion map[string]string `pulumi:"completion"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string `pulumi:"customFieldsMapping"`
	// The incident description
	Description *string `pulumi:"description"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority map[string]string `pulumi:"priority"`
	TaskType *string           `pulumi:"taskType"`
	// The incident title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateServiceNowIncidentTaskParamsInput is an input type that accepts WorkflowTaskCreateServiceNowIncidentTaskParamsArgs and WorkflowTaskCreateServiceNowIncidentTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateServiceNowIncidentTaskParamsInput` via:
//
//	WorkflowTaskCreateServiceNowIncidentTaskParamsArgs{...}
type WorkflowTaskCreateServiceNowIncidentTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateServiceNowIncidentTaskParamsOutput() WorkflowTaskCreateServiceNowIncidentTaskParamsOutput
	ToWorkflowTaskCreateServiceNowIncidentTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateServiceNowIncidentTaskParamsOutput
}

type WorkflowTaskCreateServiceNowIncidentTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`. The completion id and display name
	Completion pulumi.StringMapInput `pulumi:"completion"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput `pulumi:"customFieldsMapping"`
	// The incident description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority pulumi.StringMapInput `pulumi:"priority"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The incident title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateServiceNowIncidentTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateServiceNowIncidentTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateServiceNowIncidentTaskParamsArgs) ToWorkflowTaskCreateServiceNowIncidentTaskParamsOutput() WorkflowTaskCreateServiceNowIncidentTaskParamsOutput {
	return i.ToWorkflowTaskCreateServiceNowIncidentTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateServiceNowIncidentTaskParamsArgs) ToWorkflowTaskCreateServiceNowIncidentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateServiceNowIncidentTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateServiceNowIncidentTaskParamsOutput)
}

func (i WorkflowTaskCreateServiceNowIncidentTaskParamsArgs) ToWorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput() WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateServiceNowIncidentTaskParamsArgs) ToWorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateServiceNowIncidentTaskParamsOutput).ToWorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateServiceNowIncidentTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateServiceNowIncidentTaskParamsArgs, WorkflowTaskCreateServiceNowIncidentTaskParamsPtr and WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateServiceNowIncidentTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateServiceNowIncidentTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateServiceNowIncidentTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput() WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput
	ToWorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput
}

type workflowTaskCreateServiceNowIncidentTaskParamsPtrType WorkflowTaskCreateServiceNowIncidentTaskParamsArgs

func WorkflowTaskCreateServiceNowIncidentTaskParamsPtr(v *WorkflowTaskCreateServiceNowIncidentTaskParamsArgs) WorkflowTaskCreateServiceNowIncidentTaskParamsPtrInput {
	return (*workflowTaskCreateServiceNowIncidentTaskParamsPtrType)(v)
}

func (*workflowTaskCreateServiceNowIncidentTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateServiceNowIncidentTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateServiceNowIncidentTaskParamsPtrType) ToWorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput() WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateServiceNowIncidentTaskParamsPtrType) ToWorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput)
}

type WorkflowTaskCreateServiceNowIncidentTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateServiceNowIncidentTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateServiceNowIncidentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateServiceNowIncidentTaskParamsOutput) ToWorkflowTaskCreateServiceNowIncidentTaskParamsOutput() WorkflowTaskCreateServiceNowIncidentTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateServiceNowIncidentTaskParamsOutput) ToWorkflowTaskCreateServiceNowIncidentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateServiceNowIncidentTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateServiceNowIncidentTaskParamsOutput) ToWorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput() WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateServiceNowIncidentTaskParamsOutput) ToWorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateServiceNowIncidentTaskParams) *WorkflowTaskCreateServiceNowIncidentTaskParams {
		return &v
	}).(WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`. The completion id and display name
func (o WorkflowTaskCreateServiceNowIncidentTaskParamsOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateServiceNowIncidentTaskParams) map[string]string { return v.Completion }).(pulumi.StringMapOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateServiceNowIncidentTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateServiceNowIncidentTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

// The incident description
func (o WorkflowTaskCreateServiceNowIncidentTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateServiceNowIncidentTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskCreateServiceNowIncidentTaskParamsOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateServiceNowIncidentTaskParams) map[string]string { return v.Priority }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateServiceNowIncidentTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateServiceNowIncidentTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The incident title
func (o WorkflowTaskCreateServiceNowIncidentTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateServiceNowIncidentTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateServiceNowIncidentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput) ToWorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput() WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput) ToWorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput) Elem() WorkflowTaskCreateServiceNowIncidentTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateServiceNowIncidentTaskParams) WorkflowTaskCreateServiceNowIncidentTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateServiceNowIncidentTaskParams
		return ret
	}).(WorkflowTaskCreateServiceNowIncidentTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`. The completion id and display name
func (o WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateServiceNowIncidentTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Completion
	}).(pulumi.StringMapOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateServiceNowIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

// The incident description
func (o WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateServiceNowIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateServiceNowIncidentTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateServiceNowIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The incident title
func (o WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateServiceNowIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateSharepointPageTaskParams struct {
	// The page content
	Content *string `pulumi:"content"`
	// Map must contain two fields, `id` and `name`.
	Drive map[string]string `pulumi:"drive"`
	// Value must be one of true or false
	MarkPostMortemAsPublished *bool `pulumi:"markPostMortemAsPublished"`
	// Map must contain two fields, `id` and `name`.
	ParentFolder map[string]string `pulumi:"parentFolder"`
	// Retrospective template to use when creating page, if desired
	PostMortemTemplateId *string `pulumi:"postMortemTemplateId"`
	// Map must contain two fields, `id` and `name`.
	Site     map[string]string `pulumi:"site"`
	TaskType *string           `pulumi:"taskType"`
	// The SharePoint file ID to use as a template
	TemplateId *string `pulumi:"templateId"`
	// The page title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateSharepointPageTaskParamsInput is an input type that accepts WorkflowTaskCreateSharepointPageTaskParamsArgs and WorkflowTaskCreateSharepointPageTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateSharepointPageTaskParamsInput` via:
//
//	WorkflowTaskCreateSharepointPageTaskParamsArgs{...}
type WorkflowTaskCreateSharepointPageTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateSharepointPageTaskParamsOutput() WorkflowTaskCreateSharepointPageTaskParamsOutput
	ToWorkflowTaskCreateSharepointPageTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateSharepointPageTaskParamsOutput
}

type WorkflowTaskCreateSharepointPageTaskParamsArgs struct {
	// The page content
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Map must contain two fields, `id` and `name`.
	Drive pulumi.StringMapInput `pulumi:"drive"`
	// Value must be one of true or false
	MarkPostMortemAsPublished pulumi.BoolPtrInput `pulumi:"markPostMortemAsPublished"`
	// Map must contain two fields, `id` and `name`.
	ParentFolder pulumi.StringMapInput `pulumi:"parentFolder"`
	// Retrospective template to use when creating page, if desired
	PostMortemTemplateId pulumi.StringPtrInput `pulumi:"postMortemTemplateId"`
	// Map must contain two fields, `id` and `name`.
	Site     pulumi.StringMapInput `pulumi:"site"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The SharePoint file ID to use as a template
	TemplateId pulumi.StringPtrInput `pulumi:"templateId"`
	// The page title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateSharepointPageTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateSharepointPageTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateSharepointPageTaskParamsArgs) ToWorkflowTaskCreateSharepointPageTaskParamsOutput() WorkflowTaskCreateSharepointPageTaskParamsOutput {
	return i.ToWorkflowTaskCreateSharepointPageTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateSharepointPageTaskParamsArgs) ToWorkflowTaskCreateSharepointPageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateSharepointPageTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateSharepointPageTaskParamsOutput)
}

func (i WorkflowTaskCreateSharepointPageTaskParamsArgs) ToWorkflowTaskCreateSharepointPageTaskParamsPtrOutput() WorkflowTaskCreateSharepointPageTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateSharepointPageTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateSharepointPageTaskParamsArgs) ToWorkflowTaskCreateSharepointPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateSharepointPageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateSharepointPageTaskParamsOutput).ToWorkflowTaskCreateSharepointPageTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateSharepointPageTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateSharepointPageTaskParamsArgs, WorkflowTaskCreateSharepointPageTaskParamsPtr and WorkflowTaskCreateSharepointPageTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateSharepointPageTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateSharepointPageTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateSharepointPageTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateSharepointPageTaskParamsPtrOutput() WorkflowTaskCreateSharepointPageTaskParamsPtrOutput
	ToWorkflowTaskCreateSharepointPageTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateSharepointPageTaskParamsPtrOutput
}

type workflowTaskCreateSharepointPageTaskParamsPtrType WorkflowTaskCreateSharepointPageTaskParamsArgs

func WorkflowTaskCreateSharepointPageTaskParamsPtr(v *WorkflowTaskCreateSharepointPageTaskParamsArgs) WorkflowTaskCreateSharepointPageTaskParamsPtrInput {
	return (*workflowTaskCreateSharepointPageTaskParamsPtrType)(v)
}

func (*workflowTaskCreateSharepointPageTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateSharepointPageTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateSharepointPageTaskParamsPtrType) ToWorkflowTaskCreateSharepointPageTaskParamsPtrOutput() WorkflowTaskCreateSharepointPageTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateSharepointPageTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateSharepointPageTaskParamsPtrType) ToWorkflowTaskCreateSharepointPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateSharepointPageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateSharepointPageTaskParamsPtrOutput)
}

type WorkflowTaskCreateSharepointPageTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateSharepointPageTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateSharepointPageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateSharepointPageTaskParamsOutput) ToWorkflowTaskCreateSharepointPageTaskParamsOutput() WorkflowTaskCreateSharepointPageTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateSharepointPageTaskParamsOutput) ToWorkflowTaskCreateSharepointPageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateSharepointPageTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateSharepointPageTaskParamsOutput) ToWorkflowTaskCreateSharepointPageTaskParamsPtrOutput() WorkflowTaskCreateSharepointPageTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateSharepointPageTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateSharepointPageTaskParamsOutput) ToWorkflowTaskCreateSharepointPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateSharepointPageTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateSharepointPageTaskParams) *WorkflowTaskCreateSharepointPageTaskParams {
		return &v
	}).(WorkflowTaskCreateSharepointPageTaskParamsPtrOutput)
}

// The page content
func (o WorkflowTaskCreateSharepointPageTaskParamsOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateSharepointPageTaskParams) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateSharepointPageTaskParamsOutput) Drive() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateSharepointPageTaskParams) map[string]string { return v.Drive }).(pulumi.StringMapOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateSharepointPageTaskParamsOutput) MarkPostMortemAsPublished() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateSharepointPageTaskParams) *bool { return v.MarkPostMortemAsPublished }).(pulumi.BoolPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateSharepointPageTaskParamsOutput) ParentFolder() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateSharepointPageTaskParams) map[string]string { return v.ParentFolder }).(pulumi.StringMapOutput)
}

// Retrospective template to use when creating page, if desired
func (o WorkflowTaskCreateSharepointPageTaskParamsOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateSharepointPageTaskParams) *string { return v.PostMortemTemplateId }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateSharepointPageTaskParamsOutput) Site() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateSharepointPageTaskParams) map[string]string { return v.Site }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateSharepointPageTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateSharepointPageTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The SharePoint file ID to use as a template
func (o WorkflowTaskCreateSharepointPageTaskParamsOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateSharepointPageTaskParams) *string { return v.TemplateId }).(pulumi.StringPtrOutput)
}

// The page title
func (o WorkflowTaskCreateSharepointPageTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateSharepointPageTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateSharepointPageTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateSharepointPageTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateSharepointPageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateSharepointPageTaskParamsPtrOutput) ToWorkflowTaskCreateSharepointPageTaskParamsPtrOutput() WorkflowTaskCreateSharepointPageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateSharepointPageTaskParamsPtrOutput) ToWorkflowTaskCreateSharepointPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateSharepointPageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateSharepointPageTaskParamsPtrOutput) Elem() WorkflowTaskCreateSharepointPageTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSharepointPageTaskParams) WorkflowTaskCreateSharepointPageTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateSharepointPageTaskParams
		return ret
	}).(WorkflowTaskCreateSharepointPageTaskParamsOutput)
}

// The page content
func (o WorkflowTaskCreateSharepointPageTaskParamsPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSharepointPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateSharepointPageTaskParamsPtrOutput) Drive() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSharepointPageTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Drive
	}).(pulumi.StringMapOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateSharepointPageTaskParamsPtrOutput) MarkPostMortemAsPublished() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSharepointPageTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.MarkPostMortemAsPublished
	}).(pulumi.BoolPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateSharepointPageTaskParamsPtrOutput) ParentFolder() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSharepointPageTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.ParentFolder
	}).(pulumi.StringMapOutput)
}

// Retrospective template to use when creating page, if desired
func (o WorkflowTaskCreateSharepointPageTaskParamsPtrOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSharepointPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.PostMortemTemplateId
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateSharepointPageTaskParamsPtrOutput) Site() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSharepointPageTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Site
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateSharepointPageTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSharepointPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The SharePoint file ID to use as a template
func (o WorkflowTaskCreateSharepointPageTaskParamsPtrOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSharepointPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TemplateId
	}).(pulumi.StringPtrOutput)
}

// The page title
func (o WorkflowTaskCreateSharepointPageTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSharepointPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateShortcutStoryTaskParams struct {
	// Map must contain two fields, `id` and `name`. The archivation id and display name
	Archivation map[string]string `pulumi:"archivation"`
	// The incident description
	Description *string `pulumi:"description"`
	// The due date
	DueDate *string `pulumi:"dueDate"`
	// Value must be one of `bug`, `chore`, `feature`.
	Kind string `pulumi:"kind"`
	// The story labels
	Labels *string `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. The project id and display name
	Project  map[string]string `pulumi:"project"`
	TaskType *string           `pulumi:"taskType"`
	// The incident title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateShortcutStoryTaskParamsInput is an input type that accepts WorkflowTaskCreateShortcutStoryTaskParamsArgs and WorkflowTaskCreateShortcutStoryTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateShortcutStoryTaskParamsInput` via:
//
//	WorkflowTaskCreateShortcutStoryTaskParamsArgs{...}
type WorkflowTaskCreateShortcutStoryTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateShortcutStoryTaskParamsOutput() WorkflowTaskCreateShortcutStoryTaskParamsOutput
	ToWorkflowTaskCreateShortcutStoryTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateShortcutStoryTaskParamsOutput
}

type WorkflowTaskCreateShortcutStoryTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`. The archivation id and display name
	Archivation pulumi.StringMapInput `pulumi:"archivation"`
	// The incident description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The due date
	DueDate pulumi.StringPtrInput `pulumi:"dueDate"`
	// Value must be one of `bug`, `chore`, `feature`.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The story labels
	Labels pulumi.StringPtrInput `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. The project id and display name
	Project  pulumi.StringMapInput `pulumi:"project"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The incident title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateShortcutStoryTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateShortcutStoryTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateShortcutStoryTaskParamsArgs) ToWorkflowTaskCreateShortcutStoryTaskParamsOutput() WorkflowTaskCreateShortcutStoryTaskParamsOutput {
	return i.ToWorkflowTaskCreateShortcutStoryTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateShortcutStoryTaskParamsArgs) ToWorkflowTaskCreateShortcutStoryTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateShortcutStoryTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateShortcutStoryTaskParamsOutput)
}

func (i WorkflowTaskCreateShortcutStoryTaskParamsArgs) ToWorkflowTaskCreateShortcutStoryTaskParamsPtrOutput() WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateShortcutStoryTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateShortcutStoryTaskParamsArgs) ToWorkflowTaskCreateShortcutStoryTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateShortcutStoryTaskParamsOutput).ToWorkflowTaskCreateShortcutStoryTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateShortcutStoryTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateShortcutStoryTaskParamsArgs, WorkflowTaskCreateShortcutStoryTaskParamsPtr and WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateShortcutStoryTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateShortcutStoryTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateShortcutStoryTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateShortcutStoryTaskParamsPtrOutput() WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput
	ToWorkflowTaskCreateShortcutStoryTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput
}

type workflowTaskCreateShortcutStoryTaskParamsPtrType WorkflowTaskCreateShortcutStoryTaskParamsArgs

func WorkflowTaskCreateShortcutStoryTaskParamsPtr(v *WorkflowTaskCreateShortcutStoryTaskParamsArgs) WorkflowTaskCreateShortcutStoryTaskParamsPtrInput {
	return (*workflowTaskCreateShortcutStoryTaskParamsPtrType)(v)
}

func (*workflowTaskCreateShortcutStoryTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateShortcutStoryTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateShortcutStoryTaskParamsPtrType) ToWorkflowTaskCreateShortcutStoryTaskParamsPtrOutput() WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateShortcutStoryTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateShortcutStoryTaskParamsPtrType) ToWorkflowTaskCreateShortcutStoryTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput)
}

type WorkflowTaskCreateShortcutStoryTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateShortcutStoryTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateShortcutStoryTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateShortcutStoryTaskParamsOutput) ToWorkflowTaskCreateShortcutStoryTaskParamsOutput() WorkflowTaskCreateShortcutStoryTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateShortcutStoryTaskParamsOutput) ToWorkflowTaskCreateShortcutStoryTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateShortcutStoryTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateShortcutStoryTaskParamsOutput) ToWorkflowTaskCreateShortcutStoryTaskParamsPtrOutput() WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateShortcutStoryTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateShortcutStoryTaskParamsOutput) ToWorkflowTaskCreateShortcutStoryTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateShortcutStoryTaskParams) *WorkflowTaskCreateShortcutStoryTaskParams {
		return &v
	}).(WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`. The archivation id and display name
func (o WorkflowTaskCreateShortcutStoryTaskParamsOutput) Archivation() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateShortcutStoryTaskParams) map[string]string { return v.Archivation }).(pulumi.StringMapOutput)
}

// The incident description
func (o WorkflowTaskCreateShortcutStoryTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateShortcutStoryTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskCreateShortcutStoryTaskParamsOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateShortcutStoryTaskParams) *string { return v.DueDate }).(pulumi.StringPtrOutput)
}

// Value must be one of `bug`, `chore`, `feature`.
func (o WorkflowTaskCreateShortcutStoryTaskParamsOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateShortcutStoryTaskParams) string { return v.Kind }).(pulumi.StringOutput)
}

// The story labels
func (o WorkflowTaskCreateShortcutStoryTaskParamsOutput) Labels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateShortcutStoryTaskParams) *string { return v.Labels }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The project id and display name
func (o WorkflowTaskCreateShortcutStoryTaskParamsOutput) Project() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateShortcutStoryTaskParams) map[string]string { return v.Project }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateShortcutStoryTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateShortcutStoryTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The incident title
func (o WorkflowTaskCreateShortcutStoryTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateShortcutStoryTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateShortcutStoryTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput) ToWorkflowTaskCreateShortcutStoryTaskParamsPtrOutput() WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput) ToWorkflowTaskCreateShortcutStoryTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput) Elem() WorkflowTaskCreateShortcutStoryTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateShortcutStoryTaskParams) WorkflowTaskCreateShortcutStoryTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateShortcutStoryTaskParams
		return ret
	}).(WorkflowTaskCreateShortcutStoryTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`. The archivation id and display name
func (o WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput) Archivation() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateShortcutStoryTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Archivation
	}).(pulumi.StringMapOutput)
}

// The incident description
func (o WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateShortcutStoryTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateShortcutStoryTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DueDate
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `bug`, `chore`, `feature`.
func (o WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateShortcutStoryTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// The story labels
func (o WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput) Labels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateShortcutStoryTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The project id and display name
func (o WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput) Project() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateShortcutStoryTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateShortcutStoryTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The incident title
func (o WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateShortcutStoryTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateShortcutTaskTaskParams struct {
	// Map must contain two fields, `id` and `name`. The completion id and display name
	Completion map[string]string `pulumi:"completion"`
	// The task description
	Description string `pulumi:"description"`
	// The parent story
	ParentStoryId string  `pulumi:"parentStoryId"`
	TaskType      *string `pulumi:"taskType"`
}

// WorkflowTaskCreateShortcutTaskTaskParamsInput is an input type that accepts WorkflowTaskCreateShortcutTaskTaskParamsArgs and WorkflowTaskCreateShortcutTaskTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateShortcutTaskTaskParamsInput` via:
//
//	WorkflowTaskCreateShortcutTaskTaskParamsArgs{...}
type WorkflowTaskCreateShortcutTaskTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateShortcutTaskTaskParamsOutput() WorkflowTaskCreateShortcutTaskTaskParamsOutput
	ToWorkflowTaskCreateShortcutTaskTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateShortcutTaskTaskParamsOutput
}

type WorkflowTaskCreateShortcutTaskTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`. The completion id and display name
	Completion pulumi.StringMapInput `pulumi:"completion"`
	// The task description
	Description pulumi.StringInput `pulumi:"description"`
	// The parent story
	ParentStoryId pulumi.StringInput    `pulumi:"parentStoryId"`
	TaskType      pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskCreateShortcutTaskTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateShortcutTaskTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateShortcutTaskTaskParamsArgs) ToWorkflowTaskCreateShortcutTaskTaskParamsOutput() WorkflowTaskCreateShortcutTaskTaskParamsOutput {
	return i.ToWorkflowTaskCreateShortcutTaskTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateShortcutTaskTaskParamsArgs) ToWorkflowTaskCreateShortcutTaskTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateShortcutTaskTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateShortcutTaskTaskParamsOutput)
}

func (i WorkflowTaskCreateShortcutTaskTaskParamsArgs) ToWorkflowTaskCreateShortcutTaskTaskParamsPtrOutput() WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateShortcutTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateShortcutTaskTaskParamsArgs) ToWorkflowTaskCreateShortcutTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateShortcutTaskTaskParamsOutput).ToWorkflowTaskCreateShortcutTaskTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateShortcutTaskTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateShortcutTaskTaskParamsArgs, WorkflowTaskCreateShortcutTaskTaskParamsPtr and WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateShortcutTaskTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateShortcutTaskTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateShortcutTaskTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateShortcutTaskTaskParamsPtrOutput() WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput
	ToWorkflowTaskCreateShortcutTaskTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput
}

type workflowTaskCreateShortcutTaskTaskParamsPtrType WorkflowTaskCreateShortcutTaskTaskParamsArgs

func WorkflowTaskCreateShortcutTaskTaskParamsPtr(v *WorkflowTaskCreateShortcutTaskTaskParamsArgs) WorkflowTaskCreateShortcutTaskTaskParamsPtrInput {
	return (*workflowTaskCreateShortcutTaskTaskParamsPtrType)(v)
}

func (*workflowTaskCreateShortcutTaskTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateShortcutTaskTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateShortcutTaskTaskParamsPtrType) ToWorkflowTaskCreateShortcutTaskTaskParamsPtrOutput() WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateShortcutTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateShortcutTaskTaskParamsPtrType) ToWorkflowTaskCreateShortcutTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput)
}

type WorkflowTaskCreateShortcutTaskTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateShortcutTaskTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateShortcutTaskTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateShortcutTaskTaskParamsOutput) ToWorkflowTaskCreateShortcutTaskTaskParamsOutput() WorkflowTaskCreateShortcutTaskTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateShortcutTaskTaskParamsOutput) ToWorkflowTaskCreateShortcutTaskTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateShortcutTaskTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateShortcutTaskTaskParamsOutput) ToWorkflowTaskCreateShortcutTaskTaskParamsPtrOutput() WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateShortcutTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateShortcutTaskTaskParamsOutput) ToWorkflowTaskCreateShortcutTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateShortcutTaskTaskParams) *WorkflowTaskCreateShortcutTaskTaskParams {
		return &v
	}).(WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`. The completion id and display name
func (o WorkflowTaskCreateShortcutTaskTaskParamsOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateShortcutTaskTaskParams) map[string]string { return v.Completion }).(pulumi.StringMapOutput)
}

// The task description
func (o WorkflowTaskCreateShortcutTaskTaskParamsOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateShortcutTaskTaskParams) string { return v.Description }).(pulumi.StringOutput)
}

// The parent story
func (o WorkflowTaskCreateShortcutTaskTaskParamsOutput) ParentStoryId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateShortcutTaskTaskParams) string { return v.ParentStoryId }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateShortcutTaskTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateShortcutTaskTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateShortcutTaskTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput) ToWorkflowTaskCreateShortcutTaskTaskParamsPtrOutput() WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput) ToWorkflowTaskCreateShortcutTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput) Elem() WorkflowTaskCreateShortcutTaskTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateShortcutTaskTaskParams) WorkflowTaskCreateShortcutTaskTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateShortcutTaskTaskParams
		return ret
	}).(WorkflowTaskCreateShortcutTaskTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`. The completion id and display name
func (o WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateShortcutTaskTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Completion
	}).(pulumi.StringMapOutput)
}

// The task description
func (o WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateShortcutTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// The parent story
func (o WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput) ParentStoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateShortcutTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.ParentStoryId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateShortcutTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateSlackChannelTaskParams struct {
	// Value must be one of `auto`, `true`, `false`.
	Private  *string `pulumi:"private"`
	TaskType *string `pulumi:"taskType"`
	// Slack channel title
	Title string `pulumi:"title"`
	// Map must contain two fields, `id` and `name`.
	Workspace map[string]string `pulumi:"workspace"`
}

// WorkflowTaskCreateSlackChannelTaskParamsInput is an input type that accepts WorkflowTaskCreateSlackChannelTaskParamsArgs and WorkflowTaskCreateSlackChannelTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateSlackChannelTaskParamsInput` via:
//
//	WorkflowTaskCreateSlackChannelTaskParamsArgs{...}
type WorkflowTaskCreateSlackChannelTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateSlackChannelTaskParamsOutput() WorkflowTaskCreateSlackChannelTaskParamsOutput
	ToWorkflowTaskCreateSlackChannelTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateSlackChannelTaskParamsOutput
}

type WorkflowTaskCreateSlackChannelTaskParamsArgs struct {
	// Value must be one of `auto`, `true`, `false`.
	Private  pulumi.StringPtrInput `pulumi:"private"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// Slack channel title
	Title pulumi.StringInput `pulumi:"title"`
	// Map must contain two fields, `id` and `name`.
	Workspace pulumi.StringMapInput `pulumi:"workspace"`
}

func (WorkflowTaskCreateSlackChannelTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateSlackChannelTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateSlackChannelTaskParamsArgs) ToWorkflowTaskCreateSlackChannelTaskParamsOutput() WorkflowTaskCreateSlackChannelTaskParamsOutput {
	return i.ToWorkflowTaskCreateSlackChannelTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateSlackChannelTaskParamsArgs) ToWorkflowTaskCreateSlackChannelTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateSlackChannelTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateSlackChannelTaskParamsOutput)
}

func (i WorkflowTaskCreateSlackChannelTaskParamsArgs) ToWorkflowTaskCreateSlackChannelTaskParamsPtrOutput() WorkflowTaskCreateSlackChannelTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateSlackChannelTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateSlackChannelTaskParamsArgs) ToWorkflowTaskCreateSlackChannelTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateSlackChannelTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateSlackChannelTaskParamsOutput).ToWorkflowTaskCreateSlackChannelTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateSlackChannelTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateSlackChannelTaskParamsArgs, WorkflowTaskCreateSlackChannelTaskParamsPtr and WorkflowTaskCreateSlackChannelTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateSlackChannelTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateSlackChannelTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateSlackChannelTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateSlackChannelTaskParamsPtrOutput() WorkflowTaskCreateSlackChannelTaskParamsPtrOutput
	ToWorkflowTaskCreateSlackChannelTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateSlackChannelTaskParamsPtrOutput
}

type workflowTaskCreateSlackChannelTaskParamsPtrType WorkflowTaskCreateSlackChannelTaskParamsArgs

func WorkflowTaskCreateSlackChannelTaskParamsPtr(v *WorkflowTaskCreateSlackChannelTaskParamsArgs) WorkflowTaskCreateSlackChannelTaskParamsPtrInput {
	return (*workflowTaskCreateSlackChannelTaskParamsPtrType)(v)
}

func (*workflowTaskCreateSlackChannelTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateSlackChannelTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateSlackChannelTaskParamsPtrType) ToWorkflowTaskCreateSlackChannelTaskParamsPtrOutput() WorkflowTaskCreateSlackChannelTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateSlackChannelTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateSlackChannelTaskParamsPtrType) ToWorkflowTaskCreateSlackChannelTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateSlackChannelTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateSlackChannelTaskParamsPtrOutput)
}

type WorkflowTaskCreateSlackChannelTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateSlackChannelTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateSlackChannelTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateSlackChannelTaskParamsOutput) ToWorkflowTaskCreateSlackChannelTaskParamsOutput() WorkflowTaskCreateSlackChannelTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateSlackChannelTaskParamsOutput) ToWorkflowTaskCreateSlackChannelTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateSlackChannelTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateSlackChannelTaskParamsOutput) ToWorkflowTaskCreateSlackChannelTaskParamsPtrOutput() WorkflowTaskCreateSlackChannelTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateSlackChannelTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateSlackChannelTaskParamsOutput) ToWorkflowTaskCreateSlackChannelTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateSlackChannelTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateSlackChannelTaskParams) *WorkflowTaskCreateSlackChannelTaskParams {
		return &v
	}).(WorkflowTaskCreateSlackChannelTaskParamsPtrOutput)
}

// Value must be one of `auto`, `true`, `false`.
func (o WorkflowTaskCreateSlackChannelTaskParamsOutput) Private() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateSlackChannelTaskParams) *string { return v.Private }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateSlackChannelTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateSlackChannelTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Slack channel title
func (o WorkflowTaskCreateSlackChannelTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateSlackChannelTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateSlackChannelTaskParamsOutput) Workspace() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateSlackChannelTaskParams) map[string]string { return v.Workspace }).(pulumi.StringMapOutput)
}

type WorkflowTaskCreateSlackChannelTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateSlackChannelTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateSlackChannelTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateSlackChannelTaskParamsPtrOutput) ToWorkflowTaskCreateSlackChannelTaskParamsPtrOutput() WorkflowTaskCreateSlackChannelTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateSlackChannelTaskParamsPtrOutput) ToWorkflowTaskCreateSlackChannelTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateSlackChannelTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateSlackChannelTaskParamsPtrOutput) Elem() WorkflowTaskCreateSlackChannelTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSlackChannelTaskParams) WorkflowTaskCreateSlackChannelTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateSlackChannelTaskParams
		return ret
	}).(WorkflowTaskCreateSlackChannelTaskParamsOutput)
}

// Value must be one of `auto`, `true`, `false`.
func (o WorkflowTaskCreateSlackChannelTaskParamsPtrOutput) Private() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSlackChannelTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Private
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateSlackChannelTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSlackChannelTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Slack channel title
func (o WorkflowTaskCreateSlackChannelTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSlackChannelTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskCreateSlackChannelTaskParamsPtrOutput) Workspace() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateSlackChannelTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Workspace
	}).(pulumi.StringMapOutput)
}

type WorkflowTaskCreateTrelloCardTaskParams struct {
	// Map must contain two fields, `id` and `name`. The archivation id and display name
	Archivation map[string]string `pulumi:"archivation"`
	// Map must contain two fields, `id` and `name`. The board id and display name
	Board map[string]string `pulumi:"board"`
	// The card description
	Description *string `pulumi:"description"`
	// The due date
	DueDate *string                                       `pulumi:"dueDate"`
	Labels  []WorkflowTaskCreateTrelloCardTaskParamsLabel `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. The list id and display name
	List     map[string]string `pulumi:"list"`
	TaskType *string           `pulumi:"taskType"`
	// The card title
	Title string `pulumi:"title"`
}

// WorkflowTaskCreateTrelloCardTaskParamsInput is an input type that accepts WorkflowTaskCreateTrelloCardTaskParamsArgs and WorkflowTaskCreateTrelloCardTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateTrelloCardTaskParamsInput` via:
//
//	WorkflowTaskCreateTrelloCardTaskParamsArgs{...}
type WorkflowTaskCreateTrelloCardTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateTrelloCardTaskParamsOutput() WorkflowTaskCreateTrelloCardTaskParamsOutput
	ToWorkflowTaskCreateTrelloCardTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateTrelloCardTaskParamsOutput
}

type WorkflowTaskCreateTrelloCardTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`. The archivation id and display name
	Archivation pulumi.StringMapInput `pulumi:"archivation"`
	// Map must contain two fields, `id` and `name`. The board id and display name
	Board pulumi.StringMapInput `pulumi:"board"`
	// The card description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The due date
	DueDate pulumi.StringPtrInput                                 `pulumi:"dueDate"`
	Labels  WorkflowTaskCreateTrelloCardTaskParamsLabelArrayInput `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. The list id and display name
	List     pulumi.StringMapInput `pulumi:"list"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The card title
	Title pulumi.StringInput `pulumi:"title"`
}

func (WorkflowTaskCreateTrelloCardTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateTrelloCardTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateTrelloCardTaskParamsArgs) ToWorkflowTaskCreateTrelloCardTaskParamsOutput() WorkflowTaskCreateTrelloCardTaskParamsOutput {
	return i.ToWorkflowTaskCreateTrelloCardTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateTrelloCardTaskParamsArgs) ToWorkflowTaskCreateTrelloCardTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateTrelloCardTaskParamsOutput)
}

func (i WorkflowTaskCreateTrelloCardTaskParamsArgs) ToWorkflowTaskCreateTrelloCardTaskParamsPtrOutput() WorkflowTaskCreateTrelloCardTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateTrelloCardTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateTrelloCardTaskParamsArgs) ToWorkflowTaskCreateTrelloCardTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateTrelloCardTaskParamsOutput).ToWorkflowTaskCreateTrelloCardTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateTrelloCardTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateTrelloCardTaskParamsArgs, WorkflowTaskCreateTrelloCardTaskParamsPtr and WorkflowTaskCreateTrelloCardTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateTrelloCardTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateTrelloCardTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateTrelloCardTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateTrelloCardTaskParamsPtrOutput() WorkflowTaskCreateTrelloCardTaskParamsPtrOutput
	ToWorkflowTaskCreateTrelloCardTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateTrelloCardTaskParamsPtrOutput
}

type workflowTaskCreateTrelloCardTaskParamsPtrType WorkflowTaskCreateTrelloCardTaskParamsArgs

func WorkflowTaskCreateTrelloCardTaskParamsPtr(v *WorkflowTaskCreateTrelloCardTaskParamsArgs) WorkflowTaskCreateTrelloCardTaskParamsPtrInput {
	return (*workflowTaskCreateTrelloCardTaskParamsPtrType)(v)
}

func (*workflowTaskCreateTrelloCardTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateTrelloCardTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateTrelloCardTaskParamsPtrType) ToWorkflowTaskCreateTrelloCardTaskParamsPtrOutput() WorkflowTaskCreateTrelloCardTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateTrelloCardTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateTrelloCardTaskParamsPtrType) ToWorkflowTaskCreateTrelloCardTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateTrelloCardTaskParamsPtrOutput)
}

type WorkflowTaskCreateTrelloCardTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateTrelloCardTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateTrelloCardTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateTrelloCardTaskParamsOutput) ToWorkflowTaskCreateTrelloCardTaskParamsOutput() WorkflowTaskCreateTrelloCardTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateTrelloCardTaskParamsOutput) ToWorkflowTaskCreateTrelloCardTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateTrelloCardTaskParamsOutput) ToWorkflowTaskCreateTrelloCardTaskParamsPtrOutput() WorkflowTaskCreateTrelloCardTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateTrelloCardTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateTrelloCardTaskParamsOutput) ToWorkflowTaskCreateTrelloCardTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateTrelloCardTaskParams) *WorkflowTaskCreateTrelloCardTaskParams {
		return &v
	}).(WorkflowTaskCreateTrelloCardTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`. The archivation id and display name
func (o WorkflowTaskCreateTrelloCardTaskParamsOutput) Archivation() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateTrelloCardTaskParams) map[string]string { return v.Archivation }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The board id and display name
func (o WorkflowTaskCreateTrelloCardTaskParamsOutput) Board() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateTrelloCardTaskParams) map[string]string { return v.Board }).(pulumi.StringMapOutput)
}

// The card description
func (o WorkflowTaskCreateTrelloCardTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateTrelloCardTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskCreateTrelloCardTaskParamsOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateTrelloCardTaskParams) *string { return v.DueDate }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateTrelloCardTaskParamsOutput) Labels() WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateTrelloCardTaskParams) []WorkflowTaskCreateTrelloCardTaskParamsLabel {
		return v.Labels
	}).(WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput)
}

// Map must contain two fields, `id` and `name`. The list id and display name
func (o WorkflowTaskCreateTrelloCardTaskParamsOutput) List() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateTrelloCardTaskParams) map[string]string { return v.List }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateTrelloCardTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateTrelloCardTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The card title
func (o WorkflowTaskCreateTrelloCardTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateTrelloCardTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskCreateTrelloCardTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateTrelloCardTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateTrelloCardTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateTrelloCardTaskParamsPtrOutput) ToWorkflowTaskCreateTrelloCardTaskParamsPtrOutput() WorkflowTaskCreateTrelloCardTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateTrelloCardTaskParamsPtrOutput) ToWorkflowTaskCreateTrelloCardTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateTrelloCardTaskParamsPtrOutput) Elem() WorkflowTaskCreateTrelloCardTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateTrelloCardTaskParams) WorkflowTaskCreateTrelloCardTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateTrelloCardTaskParams
		return ret
	}).(WorkflowTaskCreateTrelloCardTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`. The archivation id and display name
func (o WorkflowTaskCreateTrelloCardTaskParamsPtrOutput) Archivation() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateTrelloCardTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Archivation
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The board id and display name
func (o WorkflowTaskCreateTrelloCardTaskParamsPtrOutput) Board() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateTrelloCardTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Board
	}).(pulumi.StringMapOutput)
}

// The card description
func (o WorkflowTaskCreateTrelloCardTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateTrelloCardTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskCreateTrelloCardTaskParamsPtrOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateTrelloCardTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DueDate
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateTrelloCardTaskParamsPtrOutput) Labels() WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateTrelloCardTaskParams) []WorkflowTaskCreateTrelloCardTaskParamsLabel {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput)
}

// Map must contain two fields, `id` and `name`. The list id and display name
func (o WorkflowTaskCreateTrelloCardTaskParamsPtrOutput) List() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateTrelloCardTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.List
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskCreateTrelloCardTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateTrelloCardTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The card title
func (o WorkflowTaskCreateTrelloCardTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateTrelloCardTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateTrelloCardTaskParamsLabel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskCreateTrelloCardTaskParamsLabelInput is an input type that accepts WorkflowTaskCreateTrelloCardTaskParamsLabelArgs and WorkflowTaskCreateTrelloCardTaskParamsLabelOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateTrelloCardTaskParamsLabelInput` via:
//
//	WorkflowTaskCreateTrelloCardTaskParamsLabelArgs{...}
type WorkflowTaskCreateTrelloCardTaskParamsLabelInput interface {
	pulumi.Input

	ToWorkflowTaskCreateTrelloCardTaskParamsLabelOutput() WorkflowTaskCreateTrelloCardTaskParamsLabelOutput
	ToWorkflowTaskCreateTrelloCardTaskParamsLabelOutputWithContext(context.Context) WorkflowTaskCreateTrelloCardTaskParamsLabelOutput
}

type WorkflowTaskCreateTrelloCardTaskParamsLabelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskCreateTrelloCardTaskParamsLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateTrelloCardTaskParamsLabel)(nil)).Elem()
}

func (i WorkflowTaskCreateTrelloCardTaskParamsLabelArgs) ToWorkflowTaskCreateTrelloCardTaskParamsLabelOutput() WorkflowTaskCreateTrelloCardTaskParamsLabelOutput {
	return i.ToWorkflowTaskCreateTrelloCardTaskParamsLabelOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateTrelloCardTaskParamsLabelArgs) ToWorkflowTaskCreateTrelloCardTaskParamsLabelOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardTaskParamsLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateTrelloCardTaskParamsLabelOutput)
}

// WorkflowTaskCreateTrelloCardTaskParamsLabelArrayInput is an input type that accepts WorkflowTaskCreateTrelloCardTaskParamsLabelArray and WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateTrelloCardTaskParamsLabelArrayInput` via:
//
//	WorkflowTaskCreateTrelloCardTaskParamsLabelArray{ WorkflowTaskCreateTrelloCardTaskParamsLabelArgs{...} }
type WorkflowTaskCreateTrelloCardTaskParamsLabelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput() WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput
	ToWorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutputWithContext(context.Context) WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput
}

type WorkflowTaskCreateTrelloCardTaskParamsLabelArray []WorkflowTaskCreateTrelloCardTaskParamsLabelInput

func (WorkflowTaskCreateTrelloCardTaskParamsLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateTrelloCardTaskParamsLabel)(nil)).Elem()
}

func (i WorkflowTaskCreateTrelloCardTaskParamsLabelArray) ToWorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput() WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput {
	return i.ToWorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateTrelloCardTaskParamsLabelArray) ToWorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput)
}

type WorkflowTaskCreateTrelloCardTaskParamsLabelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateTrelloCardTaskParamsLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateTrelloCardTaskParamsLabel)(nil)).Elem()
}

func (o WorkflowTaskCreateTrelloCardTaskParamsLabelOutput) ToWorkflowTaskCreateTrelloCardTaskParamsLabelOutput() WorkflowTaskCreateTrelloCardTaskParamsLabelOutput {
	return o
}

func (o WorkflowTaskCreateTrelloCardTaskParamsLabelOutput) ToWorkflowTaskCreateTrelloCardTaskParamsLabelOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardTaskParamsLabelOutput {
	return o
}

func (o WorkflowTaskCreateTrelloCardTaskParamsLabelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateTrelloCardTaskParamsLabel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateTrelloCardTaskParamsLabelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateTrelloCardTaskParamsLabel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateTrelloCardTaskParamsLabel)(nil)).Elem()
}

func (o WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput) ToWorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput() WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput {
	return o
}

func (o WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput) ToWorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput {
	return o
}

func (o WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateTrelloCardTaskParamsLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskCreateTrelloCardTaskParamsLabel {
		return vs[0].([]WorkflowTaskCreateTrelloCardTaskParamsLabel)[vs[1].(int)]
	}).(WorkflowTaskCreateTrelloCardTaskParamsLabelOutput)
}

type WorkflowTaskCreateWebexMeetingTaskParams struct {
	// The meeting password
	Password *string `pulumi:"password"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                        `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	// We will invite Rootly Bot to your call and make the transcript available to you. Value must be one of true or false
	RecordMeeting *bool   `pulumi:"recordMeeting"`
	TaskType      *string `pulumi:"taskType"`
	// The meeting topic
	Topic string `pulumi:"topic"`
}

// WorkflowTaskCreateWebexMeetingTaskParamsInput is an input type that accepts WorkflowTaskCreateWebexMeetingTaskParamsArgs and WorkflowTaskCreateWebexMeetingTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateWebexMeetingTaskParamsInput` via:
//
//	WorkflowTaskCreateWebexMeetingTaskParamsArgs{...}
type WorkflowTaskCreateWebexMeetingTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateWebexMeetingTaskParamsOutput() WorkflowTaskCreateWebexMeetingTaskParamsOutput
	ToWorkflowTaskCreateWebexMeetingTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateWebexMeetingTaskParamsOutput
}

type WorkflowTaskCreateWebexMeetingTaskParamsArgs struct {
	// The meeting password
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                                  `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	// We will invite Rootly Bot to your call and make the transcript available to you. Value must be one of true or false
	RecordMeeting pulumi.BoolPtrInput   `pulumi:"recordMeeting"`
	TaskType      pulumi.StringPtrInput `pulumi:"taskType"`
	// The meeting topic
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (WorkflowTaskCreateWebexMeetingTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateWebexMeetingTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateWebexMeetingTaskParamsArgs) ToWorkflowTaskCreateWebexMeetingTaskParamsOutput() WorkflowTaskCreateWebexMeetingTaskParamsOutput {
	return i.ToWorkflowTaskCreateWebexMeetingTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateWebexMeetingTaskParamsArgs) ToWorkflowTaskCreateWebexMeetingTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateWebexMeetingTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateWebexMeetingTaskParamsOutput)
}

func (i WorkflowTaskCreateWebexMeetingTaskParamsArgs) ToWorkflowTaskCreateWebexMeetingTaskParamsPtrOutput() WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateWebexMeetingTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateWebexMeetingTaskParamsArgs) ToWorkflowTaskCreateWebexMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateWebexMeetingTaskParamsOutput).ToWorkflowTaskCreateWebexMeetingTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateWebexMeetingTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateWebexMeetingTaskParamsArgs, WorkflowTaskCreateWebexMeetingTaskParamsPtr and WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateWebexMeetingTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateWebexMeetingTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateWebexMeetingTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateWebexMeetingTaskParamsPtrOutput() WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput
	ToWorkflowTaskCreateWebexMeetingTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput
}

type workflowTaskCreateWebexMeetingTaskParamsPtrType WorkflowTaskCreateWebexMeetingTaskParamsArgs

func WorkflowTaskCreateWebexMeetingTaskParamsPtr(v *WorkflowTaskCreateWebexMeetingTaskParamsArgs) WorkflowTaskCreateWebexMeetingTaskParamsPtrInput {
	return (*workflowTaskCreateWebexMeetingTaskParamsPtrType)(v)
}

func (*workflowTaskCreateWebexMeetingTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateWebexMeetingTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateWebexMeetingTaskParamsPtrType) ToWorkflowTaskCreateWebexMeetingTaskParamsPtrOutput() WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateWebexMeetingTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateWebexMeetingTaskParamsPtrType) ToWorkflowTaskCreateWebexMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput)
}

type WorkflowTaskCreateWebexMeetingTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateWebexMeetingTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateWebexMeetingTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsOutput) ToWorkflowTaskCreateWebexMeetingTaskParamsOutput() WorkflowTaskCreateWebexMeetingTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsOutput) ToWorkflowTaskCreateWebexMeetingTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateWebexMeetingTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsOutput) ToWorkflowTaskCreateWebexMeetingTaskParamsPtrOutput() WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateWebexMeetingTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsOutput) ToWorkflowTaskCreateWebexMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateWebexMeetingTaskParams) *WorkflowTaskCreateWebexMeetingTaskParams {
		return &v
	}).(WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput)
}

// The meeting password
func (o WorkflowTaskCreateWebexMeetingTaskParamsOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateWebexMeetingTaskParams) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateWebexMeetingTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateWebexMeetingTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsOutput) PostToSlackChannels() WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateWebexMeetingTaskParams) []WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput)
}

// We will invite Rootly Bot to your call and make the transcript available to you. Value must be one of true or false
func (o WorkflowTaskCreateWebexMeetingTaskParamsOutput) RecordMeeting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateWebexMeetingTaskParams) *bool { return v.RecordMeeting }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateWebexMeetingTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The meeting topic
func (o WorkflowTaskCreateWebexMeetingTaskParamsOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateWebexMeetingTaskParams) string { return v.Topic }).(pulumi.StringOutput)
}

type WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateWebexMeetingTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput) ToWorkflowTaskCreateWebexMeetingTaskParamsPtrOutput() WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput) ToWorkflowTaskCreateWebexMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput) Elem() WorkflowTaskCreateWebexMeetingTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateWebexMeetingTaskParams) WorkflowTaskCreateWebexMeetingTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateWebexMeetingTaskParams
		return ret
	}).(WorkflowTaskCreateWebexMeetingTaskParamsOutput)
}

// The meeting password
func (o WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateWebexMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateWebexMeetingTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateWebexMeetingTaskParams) []WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput)
}

// We will invite Rootly Bot to your call and make the transcript available to you. Value must be one of true or false
func (o WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput) RecordMeeting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateWebexMeetingTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.RecordMeeting
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateWebexMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The meeting topic
func (o WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateWebexMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Topic
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArgs and WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArgs) ToWorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArgs) ToWorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArray and WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArray{ WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArray []WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelInput

func (WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArray) ToWorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArray) ToWorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput) ToWorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput) ToWorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskCreateZendeskJiraLinkTaskParams struct {
	// Jira Issue Id.
	JiraIssueId string `pulumi:"jiraIssueId"`
	// Jira Issue Key.
	JiraIssueKey string  `pulumi:"jiraIssueKey"`
	TaskType     *string `pulumi:"taskType"`
	// Zendesk Ticket Id.
	ZendeskTicketId string `pulumi:"zendeskTicketId"`
}

// WorkflowTaskCreateZendeskJiraLinkTaskParamsInput is an input type that accepts WorkflowTaskCreateZendeskJiraLinkTaskParamsArgs and WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateZendeskJiraLinkTaskParamsInput` via:
//
//	WorkflowTaskCreateZendeskJiraLinkTaskParamsArgs{...}
type WorkflowTaskCreateZendeskJiraLinkTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateZendeskJiraLinkTaskParamsOutput() WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput
	ToWorkflowTaskCreateZendeskJiraLinkTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput
}

type WorkflowTaskCreateZendeskJiraLinkTaskParamsArgs struct {
	// Jira Issue Id.
	JiraIssueId pulumi.StringInput `pulumi:"jiraIssueId"`
	// Jira Issue Key.
	JiraIssueKey pulumi.StringInput    `pulumi:"jiraIssueKey"`
	TaskType     pulumi.StringPtrInput `pulumi:"taskType"`
	// Zendesk Ticket Id.
	ZendeskTicketId pulumi.StringInput `pulumi:"zendeskTicketId"`
}

func (WorkflowTaskCreateZendeskJiraLinkTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateZendeskJiraLinkTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateZendeskJiraLinkTaskParamsArgs) ToWorkflowTaskCreateZendeskJiraLinkTaskParamsOutput() WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput {
	return i.ToWorkflowTaskCreateZendeskJiraLinkTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateZendeskJiraLinkTaskParamsArgs) ToWorkflowTaskCreateZendeskJiraLinkTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput)
}

func (i WorkflowTaskCreateZendeskJiraLinkTaskParamsArgs) ToWorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput() WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateZendeskJiraLinkTaskParamsArgs) ToWorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput).ToWorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateZendeskJiraLinkTaskParamsArgs, WorkflowTaskCreateZendeskJiraLinkTaskParamsPtr and WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateZendeskJiraLinkTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput() WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput
	ToWorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput
}

type workflowTaskCreateZendeskJiraLinkTaskParamsPtrType WorkflowTaskCreateZendeskJiraLinkTaskParamsArgs

func WorkflowTaskCreateZendeskJiraLinkTaskParamsPtr(v *WorkflowTaskCreateZendeskJiraLinkTaskParamsArgs) WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrInput {
	return (*workflowTaskCreateZendeskJiraLinkTaskParamsPtrType)(v)
}

func (*workflowTaskCreateZendeskJiraLinkTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateZendeskJiraLinkTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateZendeskJiraLinkTaskParamsPtrType) ToWorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput() WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateZendeskJiraLinkTaskParamsPtrType) ToWorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput)
}

type WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateZendeskJiraLinkTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput) ToWorkflowTaskCreateZendeskJiraLinkTaskParamsOutput() WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput) ToWorkflowTaskCreateZendeskJiraLinkTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput) ToWorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput() WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput) ToWorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateZendeskJiraLinkTaskParams) *WorkflowTaskCreateZendeskJiraLinkTaskParams {
		return &v
	}).(WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput)
}

// Jira Issue Id.
func (o WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput) JiraIssueId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZendeskJiraLinkTaskParams) string { return v.JiraIssueId }).(pulumi.StringOutput)
}

// Jira Issue Key.
func (o WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput) JiraIssueKey() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZendeskJiraLinkTaskParams) string { return v.JiraIssueKey }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZendeskJiraLinkTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Zendesk Ticket Id.
func (o WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput) ZendeskTicketId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZendeskJiraLinkTaskParams) string { return v.ZendeskTicketId }).(pulumi.StringOutput)
}

type WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateZendeskJiraLinkTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput) ToWorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput() WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput) ToWorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput) Elem() WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZendeskJiraLinkTaskParams) WorkflowTaskCreateZendeskJiraLinkTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateZendeskJiraLinkTaskParams
		return ret
	}).(WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput)
}

// Jira Issue Id.
func (o WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput) JiraIssueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZendeskJiraLinkTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.JiraIssueId
	}).(pulumi.StringPtrOutput)
}

// Jira Issue Key.
func (o WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput) JiraIssueKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZendeskJiraLinkTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.JiraIssueKey
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZendeskJiraLinkTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Zendesk Ticket Id.
func (o WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput) ZendeskTicketId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZendeskJiraLinkTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.ZendeskTicketId
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateZendeskTicketTaskParams struct {
	// The ticket comment
	Comment *string `pulumi:"comment"`
	// Map must contain two fields, `id` and `name`. The completion id and display name
	Completion map[string]string `pulumi:"completion"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string `pulumi:"customFieldsMapping"`
	// Value must be one of `problem`, `incident`, `question`, `task`.
	Kind string `pulumi:"kind"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority map[string]string `pulumi:"priority"`
	// The ticket subject
	Subject string `pulumi:"subject"`
	// The ticket tags
	Tags     *string `pulumi:"tags"`
	TaskType *string `pulumi:"taskType"`
	// Additional Zendesk ticket attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
	TicketPayload *string `pulumi:"ticketPayload"`
}

// WorkflowTaskCreateZendeskTicketTaskParamsInput is an input type that accepts WorkflowTaskCreateZendeskTicketTaskParamsArgs and WorkflowTaskCreateZendeskTicketTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateZendeskTicketTaskParamsInput` via:
//
//	WorkflowTaskCreateZendeskTicketTaskParamsArgs{...}
type WorkflowTaskCreateZendeskTicketTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateZendeskTicketTaskParamsOutput() WorkflowTaskCreateZendeskTicketTaskParamsOutput
	ToWorkflowTaskCreateZendeskTicketTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateZendeskTicketTaskParamsOutput
}

type WorkflowTaskCreateZendeskTicketTaskParamsArgs struct {
	// The ticket comment
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Map must contain two fields, `id` and `name`. The completion id and display name
	Completion pulumi.StringMapInput `pulumi:"completion"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput `pulumi:"customFieldsMapping"`
	// Value must be one of `problem`, `incident`, `question`, `task`.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority pulumi.StringMapInput `pulumi:"priority"`
	// The ticket subject
	Subject pulumi.StringInput `pulumi:"subject"`
	// The ticket tags
	Tags     pulumi.StringPtrInput `pulumi:"tags"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// Additional Zendesk ticket attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
	TicketPayload pulumi.StringPtrInput `pulumi:"ticketPayload"`
}

func (WorkflowTaskCreateZendeskTicketTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateZendeskTicketTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateZendeskTicketTaskParamsArgs) ToWorkflowTaskCreateZendeskTicketTaskParamsOutput() WorkflowTaskCreateZendeskTicketTaskParamsOutput {
	return i.ToWorkflowTaskCreateZendeskTicketTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateZendeskTicketTaskParamsArgs) ToWorkflowTaskCreateZendeskTicketTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateZendeskTicketTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateZendeskTicketTaskParamsOutput)
}

func (i WorkflowTaskCreateZendeskTicketTaskParamsArgs) ToWorkflowTaskCreateZendeskTicketTaskParamsPtrOutput() WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateZendeskTicketTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateZendeskTicketTaskParamsArgs) ToWorkflowTaskCreateZendeskTicketTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateZendeskTicketTaskParamsOutput).ToWorkflowTaskCreateZendeskTicketTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateZendeskTicketTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateZendeskTicketTaskParamsArgs, WorkflowTaskCreateZendeskTicketTaskParamsPtr and WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateZendeskTicketTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateZendeskTicketTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateZendeskTicketTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateZendeskTicketTaskParamsPtrOutput() WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput
	ToWorkflowTaskCreateZendeskTicketTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput
}

type workflowTaskCreateZendeskTicketTaskParamsPtrType WorkflowTaskCreateZendeskTicketTaskParamsArgs

func WorkflowTaskCreateZendeskTicketTaskParamsPtr(v *WorkflowTaskCreateZendeskTicketTaskParamsArgs) WorkflowTaskCreateZendeskTicketTaskParamsPtrInput {
	return (*workflowTaskCreateZendeskTicketTaskParamsPtrType)(v)
}

func (*workflowTaskCreateZendeskTicketTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateZendeskTicketTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateZendeskTicketTaskParamsPtrType) ToWorkflowTaskCreateZendeskTicketTaskParamsPtrOutput() WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateZendeskTicketTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateZendeskTicketTaskParamsPtrType) ToWorkflowTaskCreateZendeskTicketTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput)
}

type WorkflowTaskCreateZendeskTicketTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateZendeskTicketTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateZendeskTicketTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateZendeskTicketTaskParamsOutput) ToWorkflowTaskCreateZendeskTicketTaskParamsOutput() WorkflowTaskCreateZendeskTicketTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateZendeskTicketTaskParamsOutput) ToWorkflowTaskCreateZendeskTicketTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateZendeskTicketTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateZendeskTicketTaskParamsOutput) ToWorkflowTaskCreateZendeskTicketTaskParamsPtrOutput() WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateZendeskTicketTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateZendeskTicketTaskParamsOutput) ToWorkflowTaskCreateZendeskTicketTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateZendeskTicketTaskParams) *WorkflowTaskCreateZendeskTicketTaskParams {
		return &v
	}).(WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput)
}

// The ticket comment
func (o WorkflowTaskCreateZendeskTicketTaskParamsOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZendeskTicketTaskParams) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The completion id and display name
func (o WorkflowTaskCreateZendeskTicketTaskParamsOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZendeskTicketTaskParams) map[string]string { return v.Completion }).(pulumi.StringMapOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateZendeskTicketTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZendeskTicketTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

// Value must be one of `problem`, `incident`, `question`, `task`.
func (o WorkflowTaskCreateZendeskTicketTaskParamsOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZendeskTicketTaskParams) string { return v.Kind }).(pulumi.StringOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskCreateZendeskTicketTaskParamsOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZendeskTicketTaskParams) map[string]string { return v.Priority }).(pulumi.StringMapOutput)
}

// The ticket subject
func (o WorkflowTaskCreateZendeskTicketTaskParamsOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZendeskTicketTaskParams) string { return v.Subject }).(pulumi.StringOutput)
}

// The ticket tags
func (o WorkflowTaskCreateZendeskTicketTaskParamsOutput) Tags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZendeskTicketTaskParams) *string { return v.Tags }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateZendeskTicketTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZendeskTicketTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Additional Zendesk ticket attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateZendeskTicketTaskParamsOutput) TicketPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZendeskTicketTaskParams) *string { return v.TicketPayload }).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateZendeskTicketTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput) ToWorkflowTaskCreateZendeskTicketTaskParamsPtrOutput() WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput) ToWorkflowTaskCreateZendeskTicketTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput) Elem() WorkflowTaskCreateZendeskTicketTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZendeskTicketTaskParams) WorkflowTaskCreateZendeskTicketTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateZendeskTicketTaskParams
		return ret
	}).(WorkflowTaskCreateZendeskTicketTaskParamsOutput)
}

// The ticket comment
func (o WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZendeskTicketTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The completion id and display name
func (o WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZendeskTicketTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Completion
	}).(pulumi.StringMapOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZendeskTicketTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `problem`, `incident`, `question`, `task`.
func (o WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZendeskTicketTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZendeskTicketTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringMapOutput)
}

// The ticket subject
func (o WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZendeskTicketTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The ticket tags
func (o WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput) Tags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZendeskTicketTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZendeskTicketTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Additional Zendesk ticket attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput) TicketPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZendeskTicketTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TicketPayload
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateZoomMeetingTaskParams struct {
	AlternativeHosts []string `pulumi:"alternativeHosts"`
	// Value must be one of `none`, `local`, `cloud`.
	AutoRecording *string `pulumi:"autoRecording"`
	// The email to use if creating as email
	CreateAsEmail *string `pulumi:"createAsEmail"`
	// The meeting password
	Password *string `pulumi:"password"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                       `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	// We will invite Rootly Bot to your call and make the transcript available to you. Value must be one of true or false
	RecordMeeting *bool   `pulumi:"recordMeeting"`
	TaskType      *string `pulumi:"taskType"`
	// The meeting topic
	Topic string `pulumi:"topic"`
}

// WorkflowTaskCreateZoomMeetingTaskParamsInput is an input type that accepts WorkflowTaskCreateZoomMeetingTaskParamsArgs and WorkflowTaskCreateZoomMeetingTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateZoomMeetingTaskParamsInput` via:
//
//	WorkflowTaskCreateZoomMeetingTaskParamsArgs{...}
type WorkflowTaskCreateZoomMeetingTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateZoomMeetingTaskParamsOutput() WorkflowTaskCreateZoomMeetingTaskParamsOutput
	ToWorkflowTaskCreateZoomMeetingTaskParamsOutputWithContext(context.Context) WorkflowTaskCreateZoomMeetingTaskParamsOutput
}

type WorkflowTaskCreateZoomMeetingTaskParamsArgs struct {
	AlternativeHosts pulumi.StringArrayInput `pulumi:"alternativeHosts"`
	// Value must be one of `none`, `local`, `cloud`.
	AutoRecording pulumi.StringPtrInput `pulumi:"autoRecording"`
	// The email to use if creating as email
	CreateAsEmail pulumi.StringPtrInput `pulumi:"createAsEmail"`
	// The meeting password
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                                 `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	// We will invite Rootly Bot to your call and make the transcript available to you. Value must be one of true or false
	RecordMeeting pulumi.BoolPtrInput   `pulumi:"recordMeeting"`
	TaskType      pulumi.StringPtrInput `pulumi:"taskType"`
	// The meeting topic
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (WorkflowTaskCreateZoomMeetingTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateZoomMeetingTaskParams)(nil)).Elem()
}

func (i WorkflowTaskCreateZoomMeetingTaskParamsArgs) ToWorkflowTaskCreateZoomMeetingTaskParamsOutput() WorkflowTaskCreateZoomMeetingTaskParamsOutput {
	return i.ToWorkflowTaskCreateZoomMeetingTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateZoomMeetingTaskParamsArgs) ToWorkflowTaskCreateZoomMeetingTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateZoomMeetingTaskParamsOutput)
}

func (i WorkflowTaskCreateZoomMeetingTaskParamsArgs) ToWorkflowTaskCreateZoomMeetingTaskParamsPtrOutput() WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateZoomMeetingTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateZoomMeetingTaskParamsArgs) ToWorkflowTaskCreateZoomMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateZoomMeetingTaskParamsOutput).ToWorkflowTaskCreateZoomMeetingTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskCreateZoomMeetingTaskParamsPtrInput is an input type that accepts WorkflowTaskCreateZoomMeetingTaskParamsArgs, WorkflowTaskCreateZoomMeetingTaskParamsPtr and WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateZoomMeetingTaskParamsPtrInput` via:
//
//	        WorkflowTaskCreateZoomMeetingTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskCreateZoomMeetingTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskCreateZoomMeetingTaskParamsPtrOutput() WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput
	ToWorkflowTaskCreateZoomMeetingTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput
}

type workflowTaskCreateZoomMeetingTaskParamsPtrType WorkflowTaskCreateZoomMeetingTaskParamsArgs

func WorkflowTaskCreateZoomMeetingTaskParamsPtr(v *WorkflowTaskCreateZoomMeetingTaskParamsArgs) WorkflowTaskCreateZoomMeetingTaskParamsPtrInput {
	return (*workflowTaskCreateZoomMeetingTaskParamsPtrType)(v)
}

func (*workflowTaskCreateZoomMeetingTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateZoomMeetingTaskParams)(nil)).Elem()
}

func (i *workflowTaskCreateZoomMeetingTaskParamsPtrType) ToWorkflowTaskCreateZoomMeetingTaskParamsPtrOutput() WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput {
	return i.ToWorkflowTaskCreateZoomMeetingTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskCreateZoomMeetingTaskParamsPtrType) ToWorkflowTaskCreateZoomMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput)
}

type WorkflowTaskCreateZoomMeetingTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateZoomMeetingTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateZoomMeetingTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsOutput) ToWorkflowTaskCreateZoomMeetingTaskParamsOutput() WorkflowTaskCreateZoomMeetingTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsOutput) ToWorkflowTaskCreateZoomMeetingTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingTaskParamsOutput {
	return o
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsOutput) ToWorkflowTaskCreateZoomMeetingTaskParamsPtrOutput() WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput {
	return o.ToWorkflowTaskCreateZoomMeetingTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsOutput) ToWorkflowTaskCreateZoomMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskCreateZoomMeetingTaskParams) *WorkflowTaskCreateZoomMeetingTaskParams {
		return &v
	}).(WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput)
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsOutput) AlternativeHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZoomMeetingTaskParams) []string { return v.AlternativeHosts }).(pulumi.StringArrayOutput)
}

// Value must be one of `none`, `local`, `cloud`.
func (o WorkflowTaskCreateZoomMeetingTaskParamsOutput) AutoRecording() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZoomMeetingTaskParams) *string { return v.AutoRecording }).(pulumi.StringPtrOutput)
}

// The email to use if creating as email
func (o WorkflowTaskCreateZoomMeetingTaskParamsOutput) CreateAsEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZoomMeetingTaskParams) *string { return v.CreateAsEmail }).(pulumi.StringPtrOutput)
}

// The meeting password
func (o WorkflowTaskCreateZoomMeetingTaskParamsOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZoomMeetingTaskParams) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateZoomMeetingTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZoomMeetingTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsOutput) PostToSlackChannels() WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZoomMeetingTaskParams) []WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput)
}

// We will invite Rootly Bot to your call and make the transcript available to you. Value must be one of true or false
func (o WorkflowTaskCreateZoomMeetingTaskParamsOutput) RecordMeeting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZoomMeetingTaskParams) *bool { return v.RecordMeeting }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZoomMeetingTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The meeting topic
func (o WorkflowTaskCreateZoomMeetingTaskParamsOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZoomMeetingTaskParams) string { return v.Topic }).(pulumi.StringOutput)
}

type WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateZoomMeetingTaskParams)(nil)).Elem()
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput) ToWorkflowTaskCreateZoomMeetingTaskParamsPtrOutput() WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput) ToWorkflowTaskCreateZoomMeetingTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput) Elem() WorkflowTaskCreateZoomMeetingTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZoomMeetingTaskParams) WorkflowTaskCreateZoomMeetingTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskCreateZoomMeetingTaskParams
		return ret
	}).(WorkflowTaskCreateZoomMeetingTaskParamsOutput)
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput) AlternativeHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZoomMeetingTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.AlternativeHosts
	}).(pulumi.StringArrayOutput)
}

// Value must be one of `none`, `local`, `cloud`.
func (o WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput) AutoRecording() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZoomMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.AutoRecording
	}).(pulumi.StringPtrOutput)
}

// The email to use if creating as email
func (o WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput) CreateAsEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZoomMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CreateAsEmail
	}).(pulumi.StringPtrOutput)
}

// The meeting password
func (o WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZoomMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZoomMeetingTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZoomMeetingTaskParams) []WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput)
}

// We will invite Rootly Bot to your call and make the transcript available to you. Value must be one of true or false
func (o WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput) RecordMeeting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZoomMeetingTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.RecordMeeting
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZoomMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The meeting topic
func (o WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZoomMeetingTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Topic
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArgs and WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArgs) ToWorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArgs) ToWorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArray and WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArray{ WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArray []WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelInput

func (WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArray) ToWorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArray) ToWorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput) ToWorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput() WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput) ToWorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskGetAlertsTaskParams struct {
	EnvironmentIds []string `pulumi:"environmentIds"`
	// Value must be one of true or false
	EnvironmentsImpactedByIncident *bool    `pulumi:"environmentsImpactedByIncident"`
	Labels                         []string `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
	ParentMessageThreadTask map[string]string `pulumi:"parentMessageThreadTask"`
	// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
	PastDuration string `pulumi:"pastDuration"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                               `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskGetAlertsTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	ServiceIds             []string                                            `pulumi:"serviceIds"`
	// Value must be one of true or false
	ServicesImpactedByIncident *bool    `pulumi:"servicesImpactedByIncident"`
	Sources                    []string `pulumi:"sources"`
	TaskType                   *string  `pulumi:"taskType"`
}

// WorkflowTaskGetAlertsTaskParamsInput is an input type that accepts WorkflowTaskGetAlertsTaskParamsArgs and WorkflowTaskGetAlertsTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskGetAlertsTaskParamsInput` via:
//
//	WorkflowTaskGetAlertsTaskParamsArgs{...}
type WorkflowTaskGetAlertsTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskGetAlertsTaskParamsOutput() WorkflowTaskGetAlertsTaskParamsOutput
	ToWorkflowTaskGetAlertsTaskParamsOutputWithContext(context.Context) WorkflowTaskGetAlertsTaskParamsOutput
}

type WorkflowTaskGetAlertsTaskParamsArgs struct {
	EnvironmentIds pulumi.StringArrayInput `pulumi:"environmentIds"`
	// Value must be one of true or false
	EnvironmentsImpactedByIncident pulumi.BoolPtrInput     `pulumi:"environmentsImpactedByIncident"`
	Labels                         pulumi.StringArrayInput `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
	ParentMessageThreadTask pulumi.StringMapInput `pulumi:"parentMessageThreadTask"`
	// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
	PastDuration pulumi.StringInput `pulumi:"pastDuration"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                         `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	ServiceIds             pulumi.StringArrayInput                                     `pulumi:"serviceIds"`
	// Value must be one of true or false
	ServicesImpactedByIncident pulumi.BoolPtrInput     `pulumi:"servicesImpactedByIncident"`
	Sources                    pulumi.StringArrayInput `pulumi:"sources"`
	TaskType                   pulumi.StringPtrInput   `pulumi:"taskType"`
}

func (WorkflowTaskGetAlertsTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskGetAlertsTaskParams)(nil)).Elem()
}

func (i WorkflowTaskGetAlertsTaskParamsArgs) ToWorkflowTaskGetAlertsTaskParamsOutput() WorkflowTaskGetAlertsTaskParamsOutput {
	return i.ToWorkflowTaskGetAlertsTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskGetAlertsTaskParamsArgs) ToWorkflowTaskGetAlertsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskGetAlertsTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetAlertsTaskParamsOutput)
}

func (i WorkflowTaskGetAlertsTaskParamsArgs) ToWorkflowTaskGetAlertsTaskParamsPtrOutput() WorkflowTaskGetAlertsTaskParamsPtrOutput {
	return i.ToWorkflowTaskGetAlertsTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskGetAlertsTaskParamsArgs) ToWorkflowTaskGetAlertsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskGetAlertsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetAlertsTaskParamsOutput).ToWorkflowTaskGetAlertsTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskGetAlertsTaskParamsPtrInput is an input type that accepts WorkflowTaskGetAlertsTaskParamsArgs, WorkflowTaskGetAlertsTaskParamsPtr and WorkflowTaskGetAlertsTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskGetAlertsTaskParamsPtrInput` via:
//
//	        WorkflowTaskGetAlertsTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskGetAlertsTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskGetAlertsTaskParamsPtrOutput() WorkflowTaskGetAlertsTaskParamsPtrOutput
	ToWorkflowTaskGetAlertsTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskGetAlertsTaskParamsPtrOutput
}

type workflowTaskGetAlertsTaskParamsPtrType WorkflowTaskGetAlertsTaskParamsArgs

func WorkflowTaskGetAlertsTaskParamsPtr(v *WorkflowTaskGetAlertsTaskParamsArgs) WorkflowTaskGetAlertsTaskParamsPtrInput {
	return (*workflowTaskGetAlertsTaskParamsPtrType)(v)
}

func (*workflowTaskGetAlertsTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskGetAlertsTaskParams)(nil)).Elem()
}

func (i *workflowTaskGetAlertsTaskParamsPtrType) ToWorkflowTaskGetAlertsTaskParamsPtrOutput() WorkflowTaskGetAlertsTaskParamsPtrOutput {
	return i.ToWorkflowTaskGetAlertsTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskGetAlertsTaskParamsPtrType) ToWorkflowTaskGetAlertsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskGetAlertsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetAlertsTaskParamsPtrOutput)
}

type WorkflowTaskGetAlertsTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskGetAlertsTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskGetAlertsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskGetAlertsTaskParamsOutput) ToWorkflowTaskGetAlertsTaskParamsOutput() WorkflowTaskGetAlertsTaskParamsOutput {
	return o
}

func (o WorkflowTaskGetAlertsTaskParamsOutput) ToWorkflowTaskGetAlertsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskGetAlertsTaskParamsOutput {
	return o
}

func (o WorkflowTaskGetAlertsTaskParamsOutput) ToWorkflowTaskGetAlertsTaskParamsPtrOutput() WorkflowTaskGetAlertsTaskParamsPtrOutput {
	return o.ToWorkflowTaskGetAlertsTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskGetAlertsTaskParamsOutput) ToWorkflowTaskGetAlertsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskGetAlertsTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskGetAlertsTaskParams) *WorkflowTaskGetAlertsTaskParams {
		return &v
	}).(WorkflowTaskGetAlertsTaskParamsPtrOutput)
}

func (o WorkflowTaskGetAlertsTaskParamsOutput) EnvironmentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetAlertsTaskParams) []string { return v.EnvironmentIds }).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetAlertsTaskParamsOutput) EnvironmentsImpactedByIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskGetAlertsTaskParams) *bool { return v.EnvironmentsImpactedByIncident }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetAlertsTaskParamsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetAlertsTaskParams) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
func (o WorkflowTaskGetAlertsTaskParamsOutput) ParentMessageThreadTask() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskGetAlertsTaskParams) map[string]string { return v.ParentMessageThreadTask }).(pulumi.StringMapOutput)
}

// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
func (o WorkflowTaskGetAlertsTaskParamsOutput) PastDuration() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskGetAlertsTaskParams) string { return v.PastDuration }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetAlertsTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskGetAlertsTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetAlertsTaskParamsOutput) PostToSlackChannels() WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetAlertsTaskParams) []WorkflowTaskGetAlertsTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskGetAlertsTaskParamsOutput) ServiceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetAlertsTaskParams) []string { return v.ServiceIds }).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetAlertsTaskParamsOutput) ServicesImpactedByIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskGetAlertsTaskParams) *bool { return v.ServicesImpactedByIncident }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetAlertsTaskParamsOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetAlertsTaskParams) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskGetAlertsTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskGetAlertsTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskGetAlertsTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskGetAlertsTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskGetAlertsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskGetAlertsTaskParamsPtrOutput) ToWorkflowTaskGetAlertsTaskParamsPtrOutput() WorkflowTaskGetAlertsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskGetAlertsTaskParamsPtrOutput) ToWorkflowTaskGetAlertsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskGetAlertsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskGetAlertsTaskParamsPtrOutput) Elem() WorkflowTaskGetAlertsTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskGetAlertsTaskParams) WorkflowTaskGetAlertsTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskGetAlertsTaskParams
		return ret
	}).(WorkflowTaskGetAlertsTaskParamsOutput)
}

func (o WorkflowTaskGetAlertsTaskParamsPtrOutput) EnvironmentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetAlertsTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.EnvironmentIds
	}).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetAlertsTaskParamsPtrOutput) EnvironmentsImpactedByIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetAlertsTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.EnvironmentsImpactedByIncident
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetAlertsTaskParamsPtrOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetAlertsTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
func (o WorkflowTaskGetAlertsTaskParamsPtrOutput) ParentMessageThreadTask() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskGetAlertsTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.ParentMessageThreadTask
	}).(pulumi.StringMapOutput)
}

// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
func (o WorkflowTaskGetAlertsTaskParamsPtrOutput) PastDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetAlertsTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.PastDuration
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetAlertsTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetAlertsTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetAlertsTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetAlertsTaskParams) []WorkflowTaskGetAlertsTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskGetAlertsTaskParamsPtrOutput) ServiceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetAlertsTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.ServiceIds
	}).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetAlertsTaskParamsPtrOutput) ServicesImpactedByIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetAlertsTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.ServicesImpactedByIncident
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetAlertsTaskParamsPtrOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetAlertsTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.Sources
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskGetAlertsTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetAlertsTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskGetAlertsTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskGetAlertsTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArgs and WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskGetAlertsTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskGetAlertsTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput() WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskGetAlertsTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArgs) ToWorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput() WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArgs) ToWorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArray and WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArray{ WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArray []WorkflowTaskGetAlertsTaskParamsPostToSlackChannelInput

func (WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskGetAlertsTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArray) ToWorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArray) ToWorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskGetAlertsTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput) ToWorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput() WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput) ToWorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskGetAlertsTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskGetAlertsTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskGetAlertsTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskGetAlertsTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskGetAlertsTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskGetGithubCommitsTaskParams struct {
	// The branch
	Branch                string   `pulumi:"branch"`
	GithubRepositoryNames []string `pulumi:"githubRepositoryNames"`
	// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
	PastDuration string `pulumi:"pastDuration"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                      `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	ServiceIds             []string                                                   `pulumi:"serviceIds"`
	// Value must be one of true or false
	ServicesImpactedByIncident *bool   `pulumi:"servicesImpactedByIncident"`
	TaskType                   *string `pulumi:"taskType"`
}

// WorkflowTaskGetGithubCommitsTaskParamsInput is an input type that accepts WorkflowTaskGetGithubCommitsTaskParamsArgs and WorkflowTaskGetGithubCommitsTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskGetGithubCommitsTaskParamsInput` via:
//
//	WorkflowTaskGetGithubCommitsTaskParamsArgs{...}
type WorkflowTaskGetGithubCommitsTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskGetGithubCommitsTaskParamsOutput() WorkflowTaskGetGithubCommitsTaskParamsOutput
	ToWorkflowTaskGetGithubCommitsTaskParamsOutputWithContext(context.Context) WorkflowTaskGetGithubCommitsTaskParamsOutput
}

type WorkflowTaskGetGithubCommitsTaskParamsArgs struct {
	// The branch
	Branch                pulumi.StringInput      `pulumi:"branch"`
	GithubRepositoryNames pulumi.StringArrayInput `pulumi:"githubRepositoryNames"`
	// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
	PastDuration pulumi.StringInput `pulumi:"pastDuration"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                                `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	ServiceIds             pulumi.StringArrayInput                                            `pulumi:"serviceIds"`
	// Value must be one of true or false
	ServicesImpactedByIncident pulumi.BoolPtrInput   `pulumi:"servicesImpactedByIncident"`
	TaskType                   pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskGetGithubCommitsTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskGetGithubCommitsTaskParams)(nil)).Elem()
}

func (i WorkflowTaskGetGithubCommitsTaskParamsArgs) ToWorkflowTaskGetGithubCommitsTaskParamsOutput() WorkflowTaskGetGithubCommitsTaskParamsOutput {
	return i.ToWorkflowTaskGetGithubCommitsTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskGetGithubCommitsTaskParamsArgs) ToWorkflowTaskGetGithubCommitsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskGetGithubCommitsTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetGithubCommitsTaskParamsOutput)
}

func (i WorkflowTaskGetGithubCommitsTaskParamsArgs) ToWorkflowTaskGetGithubCommitsTaskParamsPtrOutput() WorkflowTaskGetGithubCommitsTaskParamsPtrOutput {
	return i.ToWorkflowTaskGetGithubCommitsTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskGetGithubCommitsTaskParamsArgs) ToWorkflowTaskGetGithubCommitsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskGetGithubCommitsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetGithubCommitsTaskParamsOutput).ToWorkflowTaskGetGithubCommitsTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskGetGithubCommitsTaskParamsPtrInput is an input type that accepts WorkflowTaskGetGithubCommitsTaskParamsArgs, WorkflowTaskGetGithubCommitsTaskParamsPtr and WorkflowTaskGetGithubCommitsTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskGetGithubCommitsTaskParamsPtrInput` via:
//
//	        WorkflowTaskGetGithubCommitsTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskGetGithubCommitsTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskGetGithubCommitsTaskParamsPtrOutput() WorkflowTaskGetGithubCommitsTaskParamsPtrOutput
	ToWorkflowTaskGetGithubCommitsTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskGetGithubCommitsTaskParamsPtrOutput
}

type workflowTaskGetGithubCommitsTaskParamsPtrType WorkflowTaskGetGithubCommitsTaskParamsArgs

func WorkflowTaskGetGithubCommitsTaskParamsPtr(v *WorkflowTaskGetGithubCommitsTaskParamsArgs) WorkflowTaskGetGithubCommitsTaskParamsPtrInput {
	return (*workflowTaskGetGithubCommitsTaskParamsPtrType)(v)
}

func (*workflowTaskGetGithubCommitsTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskGetGithubCommitsTaskParams)(nil)).Elem()
}

func (i *workflowTaskGetGithubCommitsTaskParamsPtrType) ToWorkflowTaskGetGithubCommitsTaskParamsPtrOutput() WorkflowTaskGetGithubCommitsTaskParamsPtrOutput {
	return i.ToWorkflowTaskGetGithubCommitsTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskGetGithubCommitsTaskParamsPtrType) ToWorkflowTaskGetGithubCommitsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskGetGithubCommitsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetGithubCommitsTaskParamsPtrOutput)
}

type WorkflowTaskGetGithubCommitsTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskGetGithubCommitsTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskGetGithubCommitsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskGetGithubCommitsTaskParamsOutput) ToWorkflowTaskGetGithubCommitsTaskParamsOutput() WorkflowTaskGetGithubCommitsTaskParamsOutput {
	return o
}

func (o WorkflowTaskGetGithubCommitsTaskParamsOutput) ToWorkflowTaskGetGithubCommitsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskGetGithubCommitsTaskParamsOutput {
	return o
}

func (o WorkflowTaskGetGithubCommitsTaskParamsOutput) ToWorkflowTaskGetGithubCommitsTaskParamsPtrOutput() WorkflowTaskGetGithubCommitsTaskParamsPtrOutput {
	return o.ToWorkflowTaskGetGithubCommitsTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskGetGithubCommitsTaskParamsOutput) ToWorkflowTaskGetGithubCommitsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskGetGithubCommitsTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskGetGithubCommitsTaskParams) *WorkflowTaskGetGithubCommitsTaskParams {
		return &v
	}).(WorkflowTaskGetGithubCommitsTaskParamsPtrOutput)
}

// The branch
func (o WorkflowTaskGetGithubCommitsTaskParamsOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskGetGithubCommitsTaskParams) string { return v.Branch }).(pulumi.StringOutput)
}

func (o WorkflowTaskGetGithubCommitsTaskParamsOutput) GithubRepositoryNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetGithubCommitsTaskParams) []string { return v.GithubRepositoryNames }).(pulumi.StringArrayOutput)
}

// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
func (o WorkflowTaskGetGithubCommitsTaskParamsOutput) PastDuration() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskGetGithubCommitsTaskParams) string { return v.PastDuration }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetGithubCommitsTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskGetGithubCommitsTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetGithubCommitsTaskParamsOutput) PostToSlackChannels() WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetGithubCommitsTaskParams) []WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskGetGithubCommitsTaskParamsOutput) ServiceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetGithubCommitsTaskParams) []string { return v.ServiceIds }).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetGithubCommitsTaskParamsOutput) ServicesImpactedByIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskGetGithubCommitsTaskParams) *bool { return v.ServicesImpactedByIncident }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetGithubCommitsTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskGetGithubCommitsTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskGetGithubCommitsTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskGetGithubCommitsTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskGetGithubCommitsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskGetGithubCommitsTaskParamsPtrOutput) ToWorkflowTaskGetGithubCommitsTaskParamsPtrOutput() WorkflowTaskGetGithubCommitsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskGetGithubCommitsTaskParamsPtrOutput) ToWorkflowTaskGetGithubCommitsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskGetGithubCommitsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskGetGithubCommitsTaskParamsPtrOutput) Elem() WorkflowTaskGetGithubCommitsTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGithubCommitsTaskParams) WorkflowTaskGetGithubCommitsTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskGetGithubCommitsTaskParams
		return ret
	}).(WorkflowTaskGetGithubCommitsTaskParamsOutput)
}

// The branch
func (o WorkflowTaskGetGithubCommitsTaskParamsPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGithubCommitsTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Branch
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskGetGithubCommitsTaskParamsPtrOutput) GithubRepositoryNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGithubCommitsTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.GithubRepositoryNames
	}).(pulumi.StringArrayOutput)
}

// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
func (o WorkflowTaskGetGithubCommitsTaskParamsPtrOutput) PastDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGithubCommitsTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.PastDuration
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetGithubCommitsTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGithubCommitsTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetGithubCommitsTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGithubCommitsTaskParams) []WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskGetGithubCommitsTaskParamsPtrOutput) ServiceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGithubCommitsTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.ServiceIds
	}).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetGithubCommitsTaskParamsPtrOutput) ServicesImpactedByIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGithubCommitsTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.ServicesImpactedByIncident
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetGithubCommitsTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGithubCommitsTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArgs and WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput() WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArgs) ToWorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput() WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArgs) ToWorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArray and WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArray{ WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArray []WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelInput

func (WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArray) ToWorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArray) ToWorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput) ToWorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput() WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput) ToWorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskGetGitlabCommitsTaskParams struct {
	// The branch
	Branch                string   `pulumi:"branch"`
	GitlabRepositoryNames []string `pulumi:"gitlabRepositoryNames"`
	// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
	PastDuration string `pulumi:"pastDuration"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                      `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	ServiceIds             []string                                                   `pulumi:"serviceIds"`
	// Value must be one of true or false
	ServicesImpactedByIncident *bool   `pulumi:"servicesImpactedByIncident"`
	TaskType                   *string `pulumi:"taskType"`
}

// WorkflowTaskGetGitlabCommitsTaskParamsInput is an input type that accepts WorkflowTaskGetGitlabCommitsTaskParamsArgs and WorkflowTaskGetGitlabCommitsTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskGetGitlabCommitsTaskParamsInput` via:
//
//	WorkflowTaskGetGitlabCommitsTaskParamsArgs{...}
type WorkflowTaskGetGitlabCommitsTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskGetGitlabCommitsTaskParamsOutput() WorkflowTaskGetGitlabCommitsTaskParamsOutput
	ToWorkflowTaskGetGitlabCommitsTaskParamsOutputWithContext(context.Context) WorkflowTaskGetGitlabCommitsTaskParamsOutput
}

type WorkflowTaskGetGitlabCommitsTaskParamsArgs struct {
	// The branch
	Branch                pulumi.StringInput      `pulumi:"branch"`
	GitlabRepositoryNames pulumi.StringArrayInput `pulumi:"gitlabRepositoryNames"`
	// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
	PastDuration pulumi.StringInput `pulumi:"pastDuration"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                                `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	ServiceIds             pulumi.StringArrayInput                                            `pulumi:"serviceIds"`
	// Value must be one of true or false
	ServicesImpactedByIncident pulumi.BoolPtrInput   `pulumi:"servicesImpactedByIncident"`
	TaskType                   pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskGetGitlabCommitsTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskGetGitlabCommitsTaskParams)(nil)).Elem()
}

func (i WorkflowTaskGetGitlabCommitsTaskParamsArgs) ToWorkflowTaskGetGitlabCommitsTaskParamsOutput() WorkflowTaskGetGitlabCommitsTaskParamsOutput {
	return i.ToWorkflowTaskGetGitlabCommitsTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskGetGitlabCommitsTaskParamsArgs) ToWorkflowTaskGetGitlabCommitsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskGetGitlabCommitsTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetGitlabCommitsTaskParamsOutput)
}

func (i WorkflowTaskGetGitlabCommitsTaskParamsArgs) ToWorkflowTaskGetGitlabCommitsTaskParamsPtrOutput() WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput {
	return i.ToWorkflowTaskGetGitlabCommitsTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskGetGitlabCommitsTaskParamsArgs) ToWorkflowTaskGetGitlabCommitsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetGitlabCommitsTaskParamsOutput).ToWorkflowTaskGetGitlabCommitsTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskGetGitlabCommitsTaskParamsPtrInput is an input type that accepts WorkflowTaskGetGitlabCommitsTaskParamsArgs, WorkflowTaskGetGitlabCommitsTaskParamsPtr and WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskGetGitlabCommitsTaskParamsPtrInput` via:
//
//	        WorkflowTaskGetGitlabCommitsTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskGetGitlabCommitsTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskGetGitlabCommitsTaskParamsPtrOutput() WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput
	ToWorkflowTaskGetGitlabCommitsTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput
}

type workflowTaskGetGitlabCommitsTaskParamsPtrType WorkflowTaskGetGitlabCommitsTaskParamsArgs

func WorkflowTaskGetGitlabCommitsTaskParamsPtr(v *WorkflowTaskGetGitlabCommitsTaskParamsArgs) WorkflowTaskGetGitlabCommitsTaskParamsPtrInput {
	return (*workflowTaskGetGitlabCommitsTaskParamsPtrType)(v)
}

func (*workflowTaskGetGitlabCommitsTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskGetGitlabCommitsTaskParams)(nil)).Elem()
}

func (i *workflowTaskGetGitlabCommitsTaskParamsPtrType) ToWorkflowTaskGetGitlabCommitsTaskParamsPtrOutput() WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput {
	return i.ToWorkflowTaskGetGitlabCommitsTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskGetGitlabCommitsTaskParamsPtrType) ToWorkflowTaskGetGitlabCommitsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput)
}

type WorkflowTaskGetGitlabCommitsTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskGetGitlabCommitsTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskGetGitlabCommitsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsOutput) ToWorkflowTaskGetGitlabCommitsTaskParamsOutput() WorkflowTaskGetGitlabCommitsTaskParamsOutput {
	return o
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsOutput) ToWorkflowTaskGetGitlabCommitsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskGetGitlabCommitsTaskParamsOutput {
	return o
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsOutput) ToWorkflowTaskGetGitlabCommitsTaskParamsPtrOutput() WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput {
	return o.ToWorkflowTaskGetGitlabCommitsTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsOutput) ToWorkflowTaskGetGitlabCommitsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskGetGitlabCommitsTaskParams) *WorkflowTaskGetGitlabCommitsTaskParams {
		return &v
	}).(WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput)
}

// The branch
func (o WorkflowTaskGetGitlabCommitsTaskParamsOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskGetGitlabCommitsTaskParams) string { return v.Branch }).(pulumi.StringOutput)
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsOutput) GitlabRepositoryNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetGitlabCommitsTaskParams) []string { return v.GitlabRepositoryNames }).(pulumi.StringArrayOutput)
}

// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
func (o WorkflowTaskGetGitlabCommitsTaskParamsOutput) PastDuration() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskGetGitlabCommitsTaskParams) string { return v.PastDuration }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetGitlabCommitsTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskGetGitlabCommitsTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsOutput) PostToSlackChannels() WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetGitlabCommitsTaskParams) []WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsOutput) ServiceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetGitlabCommitsTaskParams) []string { return v.ServiceIds }).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetGitlabCommitsTaskParamsOutput) ServicesImpactedByIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskGetGitlabCommitsTaskParams) *bool { return v.ServicesImpactedByIncident }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskGetGitlabCommitsTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskGetGitlabCommitsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput) ToWorkflowTaskGetGitlabCommitsTaskParamsPtrOutput() WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput) ToWorkflowTaskGetGitlabCommitsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput) Elem() WorkflowTaskGetGitlabCommitsTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGitlabCommitsTaskParams) WorkflowTaskGetGitlabCommitsTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskGetGitlabCommitsTaskParams
		return ret
	}).(WorkflowTaskGetGitlabCommitsTaskParamsOutput)
}

// The branch
func (o WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGitlabCommitsTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Branch
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput) GitlabRepositoryNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGitlabCommitsTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.GitlabRepositoryNames
	}).(pulumi.StringArrayOutput)
}

// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
func (o WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput) PastDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGitlabCommitsTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.PastDuration
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGitlabCommitsTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGitlabCommitsTaskParams) []WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput) ServiceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGitlabCommitsTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.ServiceIds
	}).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput) ServicesImpactedByIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGitlabCommitsTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.ServicesImpactedByIncident
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetGitlabCommitsTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArgs and WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput() WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArgs) ToWorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput() WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArgs) ToWorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArray and WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArray{ WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArray []WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelInput

func (WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArray) ToWorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArray) ToWorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput) ToWorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput() WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput) ToWorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskGetPulsesTaskParams struct {
	EnvironmentIds []string `pulumi:"environmentIds"`
	// Value must be one of true or false
	EnvironmentsImpactedByIncident *bool    `pulumi:"environmentsImpactedByIncident"`
	Labels                         []string `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
	ParentMessageThreadTask map[string]string `pulumi:"parentMessageThreadTask"`
	// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
	PastDuration string `pulumi:"pastDuration"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                               `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskGetPulsesTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	Refs                   []string                                            `pulumi:"refs"`
	ServiceIds             []string                                            `pulumi:"serviceIds"`
	// Value must be one of true or false
	ServicesImpactedByIncident *bool    `pulumi:"servicesImpactedByIncident"`
	Sources                    []string `pulumi:"sources"`
	TaskType                   *string  `pulumi:"taskType"`
}

// WorkflowTaskGetPulsesTaskParamsInput is an input type that accepts WorkflowTaskGetPulsesTaskParamsArgs and WorkflowTaskGetPulsesTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskGetPulsesTaskParamsInput` via:
//
//	WorkflowTaskGetPulsesTaskParamsArgs{...}
type WorkflowTaskGetPulsesTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskGetPulsesTaskParamsOutput() WorkflowTaskGetPulsesTaskParamsOutput
	ToWorkflowTaskGetPulsesTaskParamsOutputWithContext(context.Context) WorkflowTaskGetPulsesTaskParamsOutput
}

type WorkflowTaskGetPulsesTaskParamsArgs struct {
	EnvironmentIds pulumi.StringArrayInput `pulumi:"environmentIds"`
	// Value must be one of true or false
	EnvironmentsImpactedByIncident pulumi.BoolPtrInput     `pulumi:"environmentsImpactedByIncident"`
	Labels                         pulumi.StringArrayInput `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
	ParentMessageThreadTask pulumi.StringMapInput `pulumi:"parentMessageThreadTask"`
	// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
	PastDuration pulumi.StringInput `pulumi:"pastDuration"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                         `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	Refs                   pulumi.StringArrayInput                                     `pulumi:"refs"`
	ServiceIds             pulumi.StringArrayInput                                     `pulumi:"serviceIds"`
	// Value must be one of true or false
	ServicesImpactedByIncident pulumi.BoolPtrInput     `pulumi:"servicesImpactedByIncident"`
	Sources                    pulumi.StringArrayInput `pulumi:"sources"`
	TaskType                   pulumi.StringPtrInput   `pulumi:"taskType"`
}

func (WorkflowTaskGetPulsesTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskGetPulsesTaskParams)(nil)).Elem()
}

func (i WorkflowTaskGetPulsesTaskParamsArgs) ToWorkflowTaskGetPulsesTaskParamsOutput() WorkflowTaskGetPulsesTaskParamsOutput {
	return i.ToWorkflowTaskGetPulsesTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskGetPulsesTaskParamsArgs) ToWorkflowTaskGetPulsesTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskGetPulsesTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetPulsesTaskParamsOutput)
}

func (i WorkflowTaskGetPulsesTaskParamsArgs) ToWorkflowTaskGetPulsesTaskParamsPtrOutput() WorkflowTaskGetPulsesTaskParamsPtrOutput {
	return i.ToWorkflowTaskGetPulsesTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskGetPulsesTaskParamsArgs) ToWorkflowTaskGetPulsesTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskGetPulsesTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetPulsesTaskParamsOutput).ToWorkflowTaskGetPulsesTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskGetPulsesTaskParamsPtrInput is an input type that accepts WorkflowTaskGetPulsesTaskParamsArgs, WorkflowTaskGetPulsesTaskParamsPtr and WorkflowTaskGetPulsesTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskGetPulsesTaskParamsPtrInput` via:
//
//	        WorkflowTaskGetPulsesTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskGetPulsesTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskGetPulsesTaskParamsPtrOutput() WorkflowTaskGetPulsesTaskParamsPtrOutput
	ToWorkflowTaskGetPulsesTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskGetPulsesTaskParamsPtrOutput
}

type workflowTaskGetPulsesTaskParamsPtrType WorkflowTaskGetPulsesTaskParamsArgs

func WorkflowTaskGetPulsesTaskParamsPtr(v *WorkflowTaskGetPulsesTaskParamsArgs) WorkflowTaskGetPulsesTaskParamsPtrInput {
	return (*workflowTaskGetPulsesTaskParamsPtrType)(v)
}

func (*workflowTaskGetPulsesTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskGetPulsesTaskParams)(nil)).Elem()
}

func (i *workflowTaskGetPulsesTaskParamsPtrType) ToWorkflowTaskGetPulsesTaskParamsPtrOutput() WorkflowTaskGetPulsesTaskParamsPtrOutput {
	return i.ToWorkflowTaskGetPulsesTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskGetPulsesTaskParamsPtrType) ToWorkflowTaskGetPulsesTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskGetPulsesTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetPulsesTaskParamsPtrOutput)
}

type WorkflowTaskGetPulsesTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskGetPulsesTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskGetPulsesTaskParams)(nil)).Elem()
}

func (o WorkflowTaskGetPulsesTaskParamsOutput) ToWorkflowTaskGetPulsesTaskParamsOutput() WorkflowTaskGetPulsesTaskParamsOutput {
	return o
}

func (o WorkflowTaskGetPulsesTaskParamsOutput) ToWorkflowTaskGetPulsesTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskGetPulsesTaskParamsOutput {
	return o
}

func (o WorkflowTaskGetPulsesTaskParamsOutput) ToWorkflowTaskGetPulsesTaskParamsPtrOutput() WorkflowTaskGetPulsesTaskParamsPtrOutput {
	return o.ToWorkflowTaskGetPulsesTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskGetPulsesTaskParamsOutput) ToWorkflowTaskGetPulsesTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskGetPulsesTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskGetPulsesTaskParams) *WorkflowTaskGetPulsesTaskParams {
		return &v
	}).(WorkflowTaskGetPulsesTaskParamsPtrOutput)
}

func (o WorkflowTaskGetPulsesTaskParamsOutput) EnvironmentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetPulsesTaskParams) []string { return v.EnvironmentIds }).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetPulsesTaskParamsOutput) EnvironmentsImpactedByIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskGetPulsesTaskParams) *bool { return v.EnvironmentsImpactedByIncident }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetPulsesTaskParamsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetPulsesTaskParams) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
func (o WorkflowTaskGetPulsesTaskParamsOutput) ParentMessageThreadTask() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskGetPulsesTaskParams) map[string]string { return v.ParentMessageThreadTask }).(pulumi.StringMapOutput)
}

// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
func (o WorkflowTaskGetPulsesTaskParamsOutput) PastDuration() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskGetPulsesTaskParams) string { return v.PastDuration }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetPulsesTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskGetPulsesTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetPulsesTaskParamsOutput) PostToSlackChannels() WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetPulsesTaskParams) []WorkflowTaskGetPulsesTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskGetPulsesTaskParamsOutput) Refs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetPulsesTaskParams) []string { return v.Refs }).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskGetPulsesTaskParamsOutput) ServiceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetPulsesTaskParams) []string { return v.ServiceIds }).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetPulsesTaskParamsOutput) ServicesImpactedByIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskGetPulsesTaskParams) *bool { return v.ServicesImpactedByIncident }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetPulsesTaskParamsOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskGetPulsesTaskParams) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskGetPulsesTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskGetPulsesTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskGetPulsesTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskGetPulsesTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskGetPulsesTaskParams)(nil)).Elem()
}

func (o WorkflowTaskGetPulsesTaskParamsPtrOutput) ToWorkflowTaskGetPulsesTaskParamsPtrOutput() WorkflowTaskGetPulsesTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskGetPulsesTaskParamsPtrOutput) ToWorkflowTaskGetPulsesTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskGetPulsesTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskGetPulsesTaskParamsPtrOutput) Elem() WorkflowTaskGetPulsesTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskGetPulsesTaskParams) WorkflowTaskGetPulsesTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskGetPulsesTaskParams
		return ret
	}).(WorkflowTaskGetPulsesTaskParamsOutput)
}

func (o WorkflowTaskGetPulsesTaskParamsPtrOutput) EnvironmentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetPulsesTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.EnvironmentIds
	}).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetPulsesTaskParamsPtrOutput) EnvironmentsImpactedByIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetPulsesTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.EnvironmentsImpactedByIncident
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetPulsesTaskParamsPtrOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetPulsesTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
func (o WorkflowTaskGetPulsesTaskParamsPtrOutput) ParentMessageThreadTask() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskGetPulsesTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.ParentMessageThreadTask
	}).(pulumi.StringMapOutput)
}

// How far back to fetch commits (in format '1 minute', '30 days', '3 months', etc.)
func (o WorkflowTaskGetPulsesTaskParamsPtrOutput) PastDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetPulsesTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.PastDuration
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetPulsesTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetPulsesTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetPulsesTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetPulsesTaskParams) []WorkflowTaskGetPulsesTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskGetPulsesTaskParamsPtrOutput) Refs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetPulsesTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.Refs
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskGetPulsesTaskParamsPtrOutput) ServiceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetPulsesTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.ServiceIds
	}).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskGetPulsesTaskParamsPtrOutput) ServicesImpactedByIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetPulsesTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.ServicesImpactedByIncident
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskGetPulsesTaskParamsPtrOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskGetPulsesTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.Sources
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskGetPulsesTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskGetPulsesTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskGetPulsesTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskGetPulsesTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArgs and WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskGetPulsesTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskGetPulsesTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput() WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskGetPulsesTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArgs) ToWorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput() WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArgs) ToWorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArray and WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArray{ WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArray []WorkflowTaskGetPulsesTaskParamsPostToSlackChannelInput

func (WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskGetPulsesTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArray) ToWorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArray) ToWorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskGetPulsesTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput) ToWorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput() WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput) ToWorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskGetPulsesTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskGetPulsesTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskGetPulsesTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskGetPulsesTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskGetPulsesTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskHttpClientTaskParams struct {
	// HTTP body
	Body         *string `pulumi:"body"`
	EventMessage *string `pulumi:"eventMessage"`
	EventUrl     *string `pulumi:"eventUrl"`
	// JSON map of HTTP headers
	Headers *string `pulumi:"headers"`
	// HTTP method. Value must be one of `GET`, `POST`, `PATCH`, `PUT`, `DELETE`, `OPTIONS`.
	Method *string `pulumi:"method"`
	// JSON map of HTTP query parameters
	Params *string `pulumi:"params"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskHttpClientTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	// HTTP status code expected. Can be a regular expression. Eg: 200, 200|203, 20[0-3]
	SucceedOnStatus string  `pulumi:"succeedOnStatus"`
	TaskType        *string `pulumi:"taskType"`
	// URL endpoint
	Url string `pulumi:"url"`
}

// WorkflowTaskHttpClientTaskParamsInput is an input type that accepts WorkflowTaskHttpClientTaskParamsArgs and WorkflowTaskHttpClientTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskHttpClientTaskParamsInput` via:
//
//	WorkflowTaskHttpClientTaskParamsArgs{...}
type WorkflowTaskHttpClientTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskHttpClientTaskParamsOutput() WorkflowTaskHttpClientTaskParamsOutput
	ToWorkflowTaskHttpClientTaskParamsOutputWithContext(context.Context) WorkflowTaskHttpClientTaskParamsOutput
}

type WorkflowTaskHttpClientTaskParamsArgs struct {
	// HTTP body
	Body         pulumi.StringPtrInput `pulumi:"body"`
	EventMessage pulumi.StringPtrInput `pulumi:"eventMessage"`
	EventUrl     pulumi.StringPtrInput `pulumi:"eventUrl"`
	// JSON map of HTTP headers
	Headers pulumi.StringPtrInput `pulumi:"headers"`
	// HTTP method. Value must be one of `GET`, `POST`, `PATCH`, `PUT`, `DELETE`, `OPTIONS`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// JSON map of HTTP query parameters
	Params pulumi.StringPtrInput `pulumi:"params"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                          `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	// HTTP status code expected. Can be a regular expression. Eg: 200, 200|203, 20[0-3]
	SucceedOnStatus pulumi.StringInput    `pulumi:"succeedOnStatus"`
	TaskType        pulumi.StringPtrInput `pulumi:"taskType"`
	// URL endpoint
	Url pulumi.StringInput `pulumi:"url"`
}

func (WorkflowTaskHttpClientTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskHttpClientTaskParams)(nil)).Elem()
}

func (i WorkflowTaskHttpClientTaskParamsArgs) ToWorkflowTaskHttpClientTaskParamsOutput() WorkflowTaskHttpClientTaskParamsOutput {
	return i.ToWorkflowTaskHttpClientTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskHttpClientTaskParamsArgs) ToWorkflowTaskHttpClientTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskHttpClientTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskHttpClientTaskParamsOutput)
}

func (i WorkflowTaskHttpClientTaskParamsArgs) ToWorkflowTaskHttpClientTaskParamsPtrOutput() WorkflowTaskHttpClientTaskParamsPtrOutput {
	return i.ToWorkflowTaskHttpClientTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskHttpClientTaskParamsArgs) ToWorkflowTaskHttpClientTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskHttpClientTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskHttpClientTaskParamsOutput).ToWorkflowTaskHttpClientTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskHttpClientTaskParamsPtrInput is an input type that accepts WorkflowTaskHttpClientTaskParamsArgs, WorkflowTaskHttpClientTaskParamsPtr and WorkflowTaskHttpClientTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskHttpClientTaskParamsPtrInput` via:
//
//	        WorkflowTaskHttpClientTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskHttpClientTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskHttpClientTaskParamsPtrOutput() WorkflowTaskHttpClientTaskParamsPtrOutput
	ToWorkflowTaskHttpClientTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskHttpClientTaskParamsPtrOutput
}

type workflowTaskHttpClientTaskParamsPtrType WorkflowTaskHttpClientTaskParamsArgs

func WorkflowTaskHttpClientTaskParamsPtr(v *WorkflowTaskHttpClientTaskParamsArgs) WorkflowTaskHttpClientTaskParamsPtrInput {
	return (*workflowTaskHttpClientTaskParamsPtrType)(v)
}

func (*workflowTaskHttpClientTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskHttpClientTaskParams)(nil)).Elem()
}

func (i *workflowTaskHttpClientTaskParamsPtrType) ToWorkflowTaskHttpClientTaskParamsPtrOutput() WorkflowTaskHttpClientTaskParamsPtrOutput {
	return i.ToWorkflowTaskHttpClientTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskHttpClientTaskParamsPtrType) ToWorkflowTaskHttpClientTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskHttpClientTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskHttpClientTaskParamsPtrOutput)
}

type WorkflowTaskHttpClientTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskHttpClientTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskHttpClientTaskParams)(nil)).Elem()
}

func (o WorkflowTaskHttpClientTaskParamsOutput) ToWorkflowTaskHttpClientTaskParamsOutput() WorkflowTaskHttpClientTaskParamsOutput {
	return o
}

func (o WorkflowTaskHttpClientTaskParamsOutput) ToWorkflowTaskHttpClientTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskHttpClientTaskParamsOutput {
	return o
}

func (o WorkflowTaskHttpClientTaskParamsOutput) ToWorkflowTaskHttpClientTaskParamsPtrOutput() WorkflowTaskHttpClientTaskParamsPtrOutput {
	return o.ToWorkflowTaskHttpClientTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskHttpClientTaskParamsOutput) ToWorkflowTaskHttpClientTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskHttpClientTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskHttpClientTaskParams) *WorkflowTaskHttpClientTaskParams {
		return &v
	}).(WorkflowTaskHttpClientTaskParamsPtrOutput)
}

// HTTP body
func (o WorkflowTaskHttpClientTaskParamsOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskHttpClientTaskParams) *string { return v.Body }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskHttpClientTaskParamsOutput) EventMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskHttpClientTaskParams) *string { return v.EventMessage }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskHttpClientTaskParamsOutput) EventUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskHttpClientTaskParams) *string { return v.EventUrl }).(pulumi.StringPtrOutput)
}

// JSON map of HTTP headers
func (o WorkflowTaskHttpClientTaskParamsOutput) Headers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskHttpClientTaskParams) *string { return v.Headers }).(pulumi.StringPtrOutput)
}

// HTTP method. Value must be one of `GET`, `POST`, `PATCH`, `PUT`, `DELETE`, `OPTIONS`.
func (o WorkflowTaskHttpClientTaskParamsOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskHttpClientTaskParams) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// JSON map of HTTP query parameters
func (o WorkflowTaskHttpClientTaskParamsOutput) Params() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskHttpClientTaskParams) *string { return v.Params }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskHttpClientTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskHttpClientTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskHttpClientTaskParamsOutput) PostToSlackChannels() WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskHttpClientTaskParams) []WorkflowTaskHttpClientTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput)
}

// HTTP status code expected. Can be a regular expression. Eg: 200, 200|203, 20[0-3]
func (o WorkflowTaskHttpClientTaskParamsOutput) SucceedOnStatus() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskHttpClientTaskParams) string { return v.SucceedOnStatus }).(pulumi.StringOutput)
}

func (o WorkflowTaskHttpClientTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskHttpClientTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// URL endpoint
func (o WorkflowTaskHttpClientTaskParamsOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskHttpClientTaskParams) string { return v.Url }).(pulumi.StringOutput)
}

type WorkflowTaskHttpClientTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskHttpClientTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskHttpClientTaskParams)(nil)).Elem()
}

func (o WorkflowTaskHttpClientTaskParamsPtrOutput) ToWorkflowTaskHttpClientTaskParamsPtrOutput() WorkflowTaskHttpClientTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskHttpClientTaskParamsPtrOutput) ToWorkflowTaskHttpClientTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskHttpClientTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskHttpClientTaskParamsPtrOutput) Elem() WorkflowTaskHttpClientTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClientTaskParams) WorkflowTaskHttpClientTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskHttpClientTaskParams
		return ret
	}).(WorkflowTaskHttpClientTaskParamsOutput)
}

// HTTP body
func (o WorkflowTaskHttpClientTaskParamsPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClientTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskHttpClientTaskParamsPtrOutput) EventMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClientTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.EventMessage
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskHttpClientTaskParamsPtrOutput) EventUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClientTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.EventUrl
	}).(pulumi.StringPtrOutput)
}

// JSON map of HTTP headers
func (o WorkflowTaskHttpClientTaskParamsPtrOutput) Headers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClientTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringPtrOutput)
}

// HTTP method. Value must be one of `GET`, `POST`, `PATCH`, `PUT`, `DELETE`, `OPTIONS`.
func (o WorkflowTaskHttpClientTaskParamsPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClientTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// JSON map of HTTP query parameters
func (o WorkflowTaskHttpClientTaskParamsPtrOutput) Params() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClientTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Params
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskHttpClientTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClientTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskHttpClientTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClientTaskParams) []WorkflowTaskHttpClientTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput)
}

// HTTP status code expected. Can be a regular expression. Eg: 200, 200|203, 20[0-3]
func (o WorkflowTaskHttpClientTaskParamsPtrOutput) SucceedOnStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClientTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.SucceedOnStatus
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskHttpClientTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClientTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// URL endpoint
func (o WorkflowTaskHttpClientTaskParamsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClientTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskHttpClientTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskHttpClientTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskHttpClientTaskParamsPostToSlackChannelArgs and WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskHttpClientTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskHttpClientTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskHttpClientTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput() WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskHttpClientTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskHttpClientTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskHttpClientTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskHttpClientTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskHttpClientTaskParamsPostToSlackChannelArgs) ToWorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput() WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskHttpClientTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskHttpClientTaskParamsPostToSlackChannelArgs) ToWorkflowTaskHttpClientTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskHttpClientTaskParamsPostToSlackChannelArray and WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskHttpClientTaskParamsPostToSlackChannelArray{ WorkflowTaskHttpClientTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskHttpClientTaskParamsPostToSlackChannelArray []WorkflowTaskHttpClientTaskParamsPostToSlackChannelInput

func (WorkflowTaskHttpClientTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskHttpClientTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskHttpClientTaskParamsPostToSlackChannelArray) ToWorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskHttpClientTaskParamsPostToSlackChannelArray) ToWorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskHttpClientTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput) ToWorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput() WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput) ToWorkflowTaskHttpClientTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskHttpClientTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskHttpClientTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskHttpClientTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskHttpClientTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskHttpClientTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskInviteToSlackChannelOpsgenieTaskParams struct {
	Channels []WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannel `pulumi:"channels"`
	// Map must contain two fields, `id` and `name`.
	Schedule map[string]string `pulumi:"schedule"`
	TaskType *string           `pulumi:"taskType"`
}

// WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsInput is an input type that accepts WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsArgs and WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsInput` via:
//
//	WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsArgs{...}
type WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput
	ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput
}

type WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsArgs struct {
	Channels WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayInput `pulumi:"channels"`
	// Map must contain two fields, `id` and `name`.
	Schedule pulumi.StringMapInput `pulumi:"schedule"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelOpsgenieTaskParams)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput {
	return i.ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput)
}

func (i WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput {
	return i.ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput).ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrInput is an input type that accepts WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsArgs, WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtr and WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrInput` via:
//
//	        WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput
	ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput
}

type workflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrType WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsArgs

func WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtr(v *WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsArgs) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrInput {
	return (*workflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrType)(v)
}

func (*workflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskInviteToSlackChannelOpsgenieTaskParams)(nil)).Elem()
}

func (i *workflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrType) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput {
	return i.ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrType) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput)
}

type WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelOpsgenieTaskParams)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput {
	return o.ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskInviteToSlackChannelOpsgenieTaskParams) *WorkflowTaskInviteToSlackChannelOpsgenieTaskParams {
		return &v
	}).(WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput)
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput) Channels() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelOpsgenieTaskParams) []WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannel {
		return v.Channels
	}).(WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput) Schedule() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelOpsgenieTaskParams) map[string]string { return v.Schedule }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelOpsgenieTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskInviteToSlackChannelOpsgenieTaskParams)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput) Elem() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelOpsgenieTaskParams) WorkflowTaskInviteToSlackChannelOpsgenieTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskInviteToSlackChannelOpsgenieTaskParams
		return ret
	}).(WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput)
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput) Channels() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelOpsgenieTaskParams) []WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannel {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput) Schedule() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelOpsgenieTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelOpsgenieTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelInput is an input type that accepts WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArgs and WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelInput` via:
//
//	WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArgs{...}
type WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput
	ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput
}

type WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannel)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArgs) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput {
	return i.ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArgs) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput)
}

// WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayInput is an input type that accepts WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArray and WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayInput` via:
//
//	WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArray{ WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArgs{...} }
type WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput
	ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput
}

type WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArray []WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelInput

func (WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannel)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArray) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput {
	return i.ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArray) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput)
}

type WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannel)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannel)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput) ToWorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannel {
		return vs[0].([]WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannel)[vs[1].(int)]
	}).(WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput)
}

type WorkflowTaskInviteToSlackChannelPagerdutyTaskParams struct {
	Channels []WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannel `pulumi:"channels"`
	// Map must contain two fields, `id` and `name`.
	EscalationPolicy map[string]string `pulumi:"escalationPolicy"`
	// Map must contain two fields, `id` and `name`.
	Schedule map[string]string `pulumi:"schedule"`
	// Map must contain two fields, `id` and `name`.
	Service  map[string]string `pulumi:"service"`
	TaskType *string           `pulumi:"taskType"`
}

// WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsInput is an input type that accepts WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsArgs and WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsInput` via:
//
//	WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsArgs{...}
type WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput
	ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput
}

type WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsArgs struct {
	Channels WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayInput `pulumi:"channels"`
	// Map must contain two fields, `id` and `name`.
	EscalationPolicy pulumi.StringMapInput `pulumi:"escalationPolicy"`
	// Map must contain two fields, `id` and `name`.
	Schedule pulumi.StringMapInput `pulumi:"schedule"`
	// Map must contain two fields, `id` and `name`.
	Service  pulumi.StringMapInput `pulumi:"service"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelPagerdutyTaskParams)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput {
	return i.ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput)
}

func (i WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput {
	return i.ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput).ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrInput is an input type that accepts WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsArgs, WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtr and WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrInput` via:
//
//	        WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput
	ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput
}

type workflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrType WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsArgs

func WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtr(v *WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsArgs) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrInput {
	return (*workflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrType)(v)
}

func (*workflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskInviteToSlackChannelPagerdutyTaskParams)(nil)).Elem()
}

func (i *workflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrType) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput {
	return i.ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrType) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput)
}

type WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelPagerdutyTaskParams)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput {
	return o.ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskInviteToSlackChannelPagerdutyTaskParams) *WorkflowTaskInviteToSlackChannelPagerdutyTaskParams {
		return &v
	}).(WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput)
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput) Channels() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelPagerdutyTaskParams) []WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannel {
		return v.Channels
	}).(WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput) EscalationPolicy() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelPagerdutyTaskParams) map[string]string {
		return v.EscalationPolicy
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput) Schedule() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelPagerdutyTaskParams) map[string]string { return v.Schedule }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput) Service() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelPagerdutyTaskParams) map[string]string { return v.Service }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelPagerdutyTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskInviteToSlackChannelPagerdutyTaskParams)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput) Elem() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelPagerdutyTaskParams) WorkflowTaskInviteToSlackChannelPagerdutyTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskInviteToSlackChannelPagerdutyTaskParams
		return ret
	}).(WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput)
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput) Channels() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelPagerdutyTaskParams) []WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannel {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput) EscalationPolicy() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelPagerdutyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.EscalationPolicy
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput) Schedule() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelPagerdutyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput) Service() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelPagerdutyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelPagerdutyTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelInput is an input type that accepts WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArgs and WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelInput` via:
//
//	WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArgs{...}
type WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput
	ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput
}

type WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannel)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArgs) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput {
	return i.ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArgs) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput)
}

// WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayInput is an input type that accepts WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArray and WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayInput` via:
//
//	WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArray{ WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArgs{...} }
type WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput
	ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput
}

type WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArray []WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelInput

func (WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannel)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArray) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput {
	return i.ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArray) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput)
}

type WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannel)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannel)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput() WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput) ToWorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannel {
		return vs[0].([]WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannel)[vs[1].(int)]
	}).(WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput)
}

type WorkflowTaskInviteToSlackChannelRootlyTaskParams struct {
	Channels []WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannel `pulumi:"channels"`
	// Map must contain two fields, `id` and `name`.
	EscalationPolicyTarget map[string]string `pulumi:"escalationPolicyTarget"`
	// Map must contain two fields, `id` and `name`.
	GroupTarget map[string]string `pulumi:"groupTarget"`
	// Map must contain two fields, `id` and `name`.
	ScheduleTarget map[string]string `pulumi:"scheduleTarget"`
	// Map must contain two fields, `id` and `name`.
	ServiceTarget map[string]string `pulumi:"serviceTarget"`
	TaskType      *string           `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`.
	UserTarget map[string]string `pulumi:"userTarget"`
}

// WorkflowTaskInviteToSlackChannelRootlyTaskParamsInput is an input type that accepts WorkflowTaskInviteToSlackChannelRootlyTaskParamsArgs and WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelRootlyTaskParamsInput` via:
//
//	WorkflowTaskInviteToSlackChannelRootlyTaskParamsArgs{...}
type WorkflowTaskInviteToSlackChannelRootlyTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput() WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput
	ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput
}

type WorkflowTaskInviteToSlackChannelRootlyTaskParamsArgs struct {
	Channels WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayInput `pulumi:"channels"`
	// Map must contain two fields, `id` and `name`.
	EscalationPolicyTarget pulumi.StringMapInput `pulumi:"escalationPolicyTarget"`
	// Map must contain two fields, `id` and `name`.
	GroupTarget pulumi.StringMapInput `pulumi:"groupTarget"`
	// Map must contain two fields, `id` and `name`.
	ScheduleTarget pulumi.StringMapInput `pulumi:"scheduleTarget"`
	// Map must contain two fields, `id` and `name`.
	ServiceTarget pulumi.StringMapInput `pulumi:"serviceTarget"`
	TaskType      pulumi.StringPtrInput `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`.
	UserTarget pulumi.StringMapInput `pulumi:"userTarget"`
}

func (WorkflowTaskInviteToSlackChannelRootlyTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelRootlyTaskParams)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelRootlyTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput() WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput {
	return i.ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelRootlyTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput)
}

func (i WorkflowTaskInviteToSlackChannelRootlyTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput {
	return i.ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelRootlyTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput).ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrInput is an input type that accepts WorkflowTaskInviteToSlackChannelRootlyTaskParamsArgs, WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtr and WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrInput` via:
//
//	        WorkflowTaskInviteToSlackChannelRootlyTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput
	ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput
}

type workflowTaskInviteToSlackChannelRootlyTaskParamsPtrType WorkflowTaskInviteToSlackChannelRootlyTaskParamsArgs

func WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtr(v *WorkflowTaskInviteToSlackChannelRootlyTaskParamsArgs) WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrInput {
	return (*workflowTaskInviteToSlackChannelRootlyTaskParamsPtrType)(v)
}

func (*workflowTaskInviteToSlackChannelRootlyTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskInviteToSlackChannelRootlyTaskParams)(nil)).Elem()
}

func (i *workflowTaskInviteToSlackChannelRootlyTaskParamsPtrType) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput {
	return i.ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskInviteToSlackChannelRootlyTaskParamsPtrType) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput)
}

type WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelRootlyTaskParams)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput() WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput {
	return o.ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskInviteToSlackChannelRootlyTaskParams) *WorkflowTaskInviteToSlackChannelRootlyTaskParams {
		return &v
	}).(WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput)
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput) Channels() WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelRootlyTaskParams) []WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannel {
		return v.Channels
	}).(WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput) EscalationPolicyTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelRootlyTaskParams) map[string]string {
		return v.EscalationPolicyTarget
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput) GroupTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelRootlyTaskParams) map[string]string { return v.GroupTarget }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput) ScheduleTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelRootlyTaskParams) map[string]string { return v.ScheduleTarget }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput) ServiceTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelRootlyTaskParams) map[string]string { return v.ServiceTarget }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelRootlyTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput) UserTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelRootlyTaskParams) map[string]string { return v.UserTarget }).(pulumi.StringMapOutput)
}

type WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskInviteToSlackChannelRootlyTaskParams)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput) Elem() WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelRootlyTaskParams) WorkflowTaskInviteToSlackChannelRootlyTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskInviteToSlackChannelRootlyTaskParams
		return ret
	}).(WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput)
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput) Channels() WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelRootlyTaskParams) []WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannel {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput) EscalationPolicyTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelRootlyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.EscalationPolicyTarget
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput) GroupTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelRootlyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.GroupTarget
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput) ScheduleTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelRootlyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.ScheduleTarget
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput) ServiceTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelRootlyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.ServiceTarget
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelRootlyTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput) UserTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelRootlyTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserTarget
	}).(pulumi.StringMapOutput)
}

type WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelInput is an input type that accepts WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArgs and WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelInput` via:
//
//	WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArgs{...}
type WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput() WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput
	ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput
}

type WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannel)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArgs) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput() WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput {
	return i.ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArgs) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput)
}

// WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayInput is an input type that accepts WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArray and WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayInput` via:
//
//	WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArray{ WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArgs{...} }
type WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput() WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput
	ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput
}

type WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArray []WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelInput

func (WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannel)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArray) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput() WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput {
	return i.ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArray) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput)
}

type WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannel)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput() WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannel)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput() WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput) ToWorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannel {
		return vs[0].([]WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannel)[vs[1].(int)]
	}).(WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput)
}

type WorkflowTaskInviteToSlackChannelTaskParams struct {
	// Map must contain two fields, `id` and `name`.
	Channel         map[string]string                                          `pulumi:"channel"`
	SlackUserGroups []WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup `pulumi:"slackUserGroups"`
	SlackUsers      []WorkflowTaskInviteToSlackChannelTaskParamsSlackUser      `pulumi:"slackUsers"`
	TaskType        *string                                                    `pulumi:"taskType"`
}

// WorkflowTaskInviteToSlackChannelTaskParamsInput is an input type that accepts WorkflowTaskInviteToSlackChannelTaskParamsArgs and WorkflowTaskInviteToSlackChannelTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelTaskParamsInput` via:
//
//	WorkflowTaskInviteToSlackChannelTaskParamsArgs{...}
type WorkflowTaskInviteToSlackChannelTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelTaskParamsOutput() WorkflowTaskInviteToSlackChannelTaskParamsOutput
	ToWorkflowTaskInviteToSlackChannelTaskParamsOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelTaskParamsOutput
}

type WorkflowTaskInviteToSlackChannelTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`.
	Channel         pulumi.StringMapInput                                              `pulumi:"channel"`
	SlackUserGroups WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayInput `pulumi:"slackUserGroups"`
	SlackUsers      WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayInput      `pulumi:"slackUsers"`
	TaskType        pulumi.StringPtrInput                                              `pulumi:"taskType"`
}

func (WorkflowTaskInviteToSlackChannelTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelTaskParams)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelTaskParamsOutput() WorkflowTaskInviteToSlackChannelTaskParamsOutput {
	return i.ToWorkflowTaskInviteToSlackChannelTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelTaskParamsOutput)
}

func (i WorkflowTaskInviteToSlackChannelTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput {
	return i.ToWorkflowTaskInviteToSlackChannelTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelTaskParamsOutput).ToWorkflowTaskInviteToSlackChannelTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskInviteToSlackChannelTaskParamsPtrInput is an input type that accepts WorkflowTaskInviteToSlackChannelTaskParamsArgs, WorkflowTaskInviteToSlackChannelTaskParamsPtr and WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelTaskParamsPtrInput` via:
//
//	        WorkflowTaskInviteToSlackChannelTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskInviteToSlackChannelTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput
	ToWorkflowTaskInviteToSlackChannelTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput
}

type workflowTaskInviteToSlackChannelTaskParamsPtrType WorkflowTaskInviteToSlackChannelTaskParamsArgs

func WorkflowTaskInviteToSlackChannelTaskParamsPtr(v *WorkflowTaskInviteToSlackChannelTaskParamsArgs) WorkflowTaskInviteToSlackChannelTaskParamsPtrInput {
	return (*workflowTaskInviteToSlackChannelTaskParamsPtrType)(v)
}

func (*workflowTaskInviteToSlackChannelTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskInviteToSlackChannelTaskParams)(nil)).Elem()
}

func (i *workflowTaskInviteToSlackChannelTaskParamsPtrType) ToWorkflowTaskInviteToSlackChannelTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput {
	return i.ToWorkflowTaskInviteToSlackChannelTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskInviteToSlackChannelTaskParamsPtrType) ToWorkflowTaskInviteToSlackChannelTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput)
}

type WorkflowTaskInviteToSlackChannelTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelTaskParams)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelTaskParamsOutput() WorkflowTaskInviteToSlackChannelTaskParamsOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelTaskParamsOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput {
	return o.ToWorkflowTaskInviteToSlackChannelTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskInviteToSlackChannelTaskParams) *WorkflowTaskInviteToSlackChannelTaskParams {
		return &v
	}).(WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelTaskParamsOutput) Channel() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelTaskParams) map[string]string { return v.Channel }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsOutput) SlackUserGroups() WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelTaskParams) []WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup {
		return v.SlackUserGroups
	}).(WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput)
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsOutput) SlackUsers() WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelTaskParams) []WorkflowTaskInviteToSlackChannelTaskParamsSlackUser {
		return v.SlackUsers
	}).(WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput)
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskInviteToSlackChannelTaskParams)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput) ToWorkflowTaskInviteToSlackChannelTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput) ToWorkflowTaskInviteToSlackChannelTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput) Elem() WorkflowTaskInviteToSlackChannelTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelTaskParams) WorkflowTaskInviteToSlackChannelTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskInviteToSlackChannelTaskParams
		return ret
	}).(WorkflowTaskInviteToSlackChannelTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput) Channel() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput) SlackUserGroups() WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelTaskParams) []WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup {
		if v == nil {
			return nil
		}
		return v.SlackUserGroups
	}).(WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput)
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput) SlackUsers() WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelTaskParams) []WorkflowTaskInviteToSlackChannelTaskParamsSlackUser {
		if v == nil {
			return nil
		}
		return v.SlackUsers
	}).(WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput)
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskInviteToSlackChannelTaskParamsSlackUser struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskInviteToSlackChannelTaskParamsSlackUserInput is an input type that accepts WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArgs and WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelTaskParamsSlackUserInput` via:
//
//	WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArgs{...}
type WorkflowTaskInviteToSlackChannelTaskParamsSlackUserInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput() WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput
	ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput
}

type WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelTaskParamsSlackUser)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArgs) ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput() WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput {
	return i.ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArgs) ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput)
}

// WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayInput is an input type that accepts WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArray and WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayInput` via:
//
//	WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArray{ WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArgs{...} }
type WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput() WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput
	ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput
}

type WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArray []WorkflowTaskInviteToSlackChannelTaskParamsSlackUserInput

func (WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskInviteToSlackChannelTaskParamsSlackUser)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArray) ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput() WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput {
	return i.ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArray) ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput)
}

type WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelTaskParamsSlackUser)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput) ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput() WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput) ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelTaskParamsSlackUser) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelTaskParamsSlackUser) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskInviteToSlackChannelTaskParamsSlackUser)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput) ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput() WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput) ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput) Index(i pulumi.IntInput) WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskInviteToSlackChannelTaskParamsSlackUser {
		return vs[0].([]WorkflowTaskInviteToSlackChannelTaskParamsSlackUser)[vs[1].(int)]
	}).(WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput)
}

type WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupInput is an input type that accepts WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArgs and WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupInput` via:
//
//	WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArgs{...}
type WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput() WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput
	ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput
}

type WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArgs) ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput() WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput {
	return i.ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArgs) ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput)
}

// WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayInput is an input type that accepts WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArray and WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayInput` via:
//
//	WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArray{ WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArgs{...} }
type WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput() WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput
	ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput
}

type WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArray []WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupInput

func (WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArray) ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput() WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput {
	return i.ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArray) ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput)
}

type WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput) ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput() WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput) ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput) ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput() WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput) ToWorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput) Index(i pulumi.IntInput) WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup {
		return vs[0].([]WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroup)[vs[1].(int)]
	}).(WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput)
}

type WorkflowTaskInviteToSlackChannelVictorOpsTaskParams struct {
	Channels []WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannel `pulumi:"channels"`
	TaskType *string                                                      `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`.
	Team map[string]string `pulumi:"team"`
}

// WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsInput is an input type that accepts WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsArgs and WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsInput` via:
//
//	WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsArgs{...}
type WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput
	ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput
}

type WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsArgs struct {
	Channels WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayInput `pulumi:"channels"`
	TaskType pulumi.StringPtrInput                                                `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`.
	Team pulumi.StringMapInput `pulumi:"team"`
}

func (WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelVictorOpsTaskParams)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput {
	return i.ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput)
}

func (i WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput {
	return i.ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsArgs) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput).ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrInput is an input type that accepts WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsArgs, WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtr and WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrInput` via:
//
//	        WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput
	ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput
}

type workflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrType WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsArgs

func WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtr(v *WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsArgs) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrInput {
	return (*workflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrType)(v)
}

func (*workflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskInviteToSlackChannelVictorOpsTaskParams)(nil)).Elem()
}

func (i *workflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrType) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput {
	return i.ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrType) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput)
}

type WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelVictorOpsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput {
	return o.ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskInviteToSlackChannelVictorOpsTaskParams) *WorkflowTaskInviteToSlackChannelVictorOpsTaskParams {
		return &v
	}).(WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput)
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput) Channels() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelVictorOpsTaskParams) []WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannel {
		return v.Channels
	}).(WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput)
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelVictorOpsTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput) Team() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelVictorOpsTaskParams) map[string]string { return v.Team }).(pulumi.StringMapOutput)
}

type WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskInviteToSlackChannelVictorOpsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput) Elem() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelVictorOpsTaskParams) WorkflowTaskInviteToSlackChannelVictorOpsTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskInviteToSlackChannelVictorOpsTaskParams
		return ret
	}).(WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput)
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput) Channels() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelVictorOpsTaskParams) []WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannel {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput)
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelVictorOpsTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput) Team() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelVictorOpsTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Team
	}).(pulumi.StringMapOutput)
}

type WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelInput is an input type that accepts WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArgs and WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelInput` via:
//
//	WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArgs{...}
type WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput
	ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput
}

type WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannel)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArgs) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput {
	return i.ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArgs) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput)
}

// WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayInput is an input type that accepts WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArray and WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayInput` via:
//
//	WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArray{ WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArgs{...} }
type WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput
	ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput
}

type WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArray []WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelInput

func (WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannel)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArray) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput {
	return i.ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArray) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput)
}

type WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannel)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannel)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput) ToWorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannel {
		return vs[0].([]WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannel)[vs[1].(int)]
	}).(WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput)
}

type WorkflowTaskPageOpsgenieOnCallRespondersTaskParams struct {
	// Description field of the incident that is generally used to provide a detailed information about the incident
	Description *string `pulumi:"description"`
	// Message of the incident
	Message *string `pulumi:"message"`
	// Value must be one of `P1`, `P2`, `P3`, `P4`, `P5`, `auto`.
	Priority *string                                                  `pulumi:"priority"`
	TaskType *string                                                  `pulumi:"taskType"`
	Teams    []WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam `pulumi:"teams"`
	// Incident title.
	Title *string                                                  `pulumi:"title"`
	Users []WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser `pulumi:"users"`
}

// WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsInput is an input type that accepts WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsArgs and WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsInput` via:
//
//	WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsArgs{...}
type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput
	ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutputWithContext(context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput
}

type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsArgs struct {
	// Description field of the incident that is generally used to provide a detailed information about the incident
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Message of the incident
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Value must be one of `P1`, `P2`, `P3`, `P4`, `P5`, `auto`.
	Priority pulumi.StringPtrInput                                            `pulumi:"priority"`
	TaskType pulumi.StringPtrInput                                            `pulumi:"taskType"`
	Teams    WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayInput `pulumi:"teams"`
	// Incident title.
	Title pulumi.StringPtrInput                                            `pulumi:"title"`
	Users WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayInput `pulumi:"users"`
}

func (WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPageOpsgenieOnCallRespondersTaskParams)(nil)).Elem()
}

func (i WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsArgs) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput {
	return i.ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsArgs) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput)
}

func (i WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsArgs) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput {
	return i.ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsArgs) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput).ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrInput is an input type that accepts WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsArgs, WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtr and WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrInput` via:
//
//	        WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput
	ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput
}

type workflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrType WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsArgs

func WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtr(v *WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsArgs) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrInput {
	return (*workflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrType)(v)
}

func (*workflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPageOpsgenieOnCallRespondersTaskParams)(nil)).Elem()
}

func (i *workflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrType) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput {
	return i.ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrType) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput)
}

type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPageOpsgenieOnCallRespondersTaskParams)(nil)).Elem()
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput {
	return o.ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskPageOpsgenieOnCallRespondersTaskParams) *WorkflowTaskPageOpsgenieOnCallRespondersTaskParams {
		return &v
	}).(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput)
}

// Description field of the incident that is generally used to provide a detailed information about the incident
func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPageOpsgenieOnCallRespondersTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Message of the incident
func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPageOpsgenieOnCallRespondersTaskParams) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Value must be one of `P1`, `P2`, `P3`, `P4`, `P5`, `auto`.
func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPageOpsgenieOnCallRespondersTaskParams) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPageOpsgenieOnCallRespondersTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput) Teams() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput {
	return o.ApplyT(func(v WorkflowTaskPageOpsgenieOnCallRespondersTaskParams) []WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam {
		return v.Teams
	}).(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput)
}

// Incident title.
func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPageOpsgenieOnCallRespondersTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput) Users() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput {
	return o.ApplyT(func(v WorkflowTaskPageOpsgenieOnCallRespondersTaskParams) []WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser {
		return v.Users
	}).(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput)
}

type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPageOpsgenieOnCallRespondersTaskParams)(nil)).Elem()
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput) Elem() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskPageOpsgenieOnCallRespondersTaskParams) WorkflowTaskPageOpsgenieOnCallRespondersTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskPageOpsgenieOnCallRespondersTaskParams
		return ret
	}).(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput)
}

// Description field of the incident that is generally used to provide a detailed information about the incident
func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageOpsgenieOnCallRespondersTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Message of the incident
func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageOpsgenieOnCallRespondersTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `P1`, `P2`, `P3`, `P4`, `P5`, `auto`.
func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageOpsgenieOnCallRespondersTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageOpsgenieOnCallRespondersTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput) Teams() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskPageOpsgenieOnCallRespondersTaskParams) []WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam {
		if v == nil {
			return nil
		}
		return v.Teams
	}).(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput)
}

// Incident title.
func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageOpsgenieOnCallRespondersTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput) Users() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskPageOpsgenieOnCallRespondersTaskParams) []WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser {
		if v == nil {
			return nil
		}
		return v.Users
	}).(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput)
}

type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamInput is an input type that accepts WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArgs and WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput values.
// You can construct a concrete instance of `WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamInput` via:
//
//	WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArgs{...}
type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamInput interface {
	pulumi.Input

	ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput
	ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutputWithContext(context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput
}

type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam)(nil)).Elem()
}

func (i WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArgs) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput {
	return i.ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutputWithContext(context.Background())
}

func (i WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArgs) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput)
}

// WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayInput is an input type that accepts WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArray and WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayInput` via:
//
//	WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArray{ WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArgs{...} }
type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayInput interface {
	pulumi.Input

	ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput
	ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutputWithContext(context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput
}

type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArray []WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamInput

func (WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam)(nil)).Elem()
}

func (i WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArray) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput {
	return i.ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArray) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput)
}

type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam)(nil)).Elem()
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam)(nil)).Elem()
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput) Index(i pulumi.IntInput) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam {
		return vs[0].([]WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeam)[vs[1].(int)]
	}).(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput)
}

type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserInput is an input type that accepts WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArgs and WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput values.
// You can construct a concrete instance of `WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserInput` via:
//
//	WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArgs{...}
type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserInput interface {
	pulumi.Input

	ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput
	ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutputWithContext(context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput
}

type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser)(nil)).Elem()
}

func (i WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArgs) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput {
	return i.ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutputWithContext(context.Background())
}

func (i WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArgs) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput)
}

// WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayInput is an input type that accepts WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArray and WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayInput` via:
//
//	WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArray{ WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArgs{...} }
type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayInput interface {
	pulumi.Input

	ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput
	ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutputWithContext(context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput
}

type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArray []WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserInput

func (WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser)(nil)).Elem()
}

func (i WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArray) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput {
	return i.ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArray) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput)
}

type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser)(nil)).Elem()
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser)(nil)).Elem()
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput) Index(i pulumi.IntInput) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser {
		return vs[0].([]WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUser)[vs[1].(int)]
	}).(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput)
}

type WorkflowTaskPagePagerdutyOnCallRespondersTaskParams struct {
	// Rootly only supports linking to a single PagerDuty incident. If this feature is disabled Rootly will add responders from any additional pages to the existing PagerDuty incident that is linked to the Rootly incident. If enabled, Rootly will create a new PagerDuty incident that is not linked to any Rootly incidents. Value must be one of true or false
	CreateNewIncidentOnConflict *bool                                                                 `pulumi:"createNewIncidentOnConflict"`
	EscalationPolicies          []WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy `pulumi:"escalationPolicies"`
	Message                     *string                                                               `pulumi:"message"`
	// PagerDuty incident priority, selecting auto will let Rootly auto map our incident severity
	Priority *string `pulumi:"priority"`
	// Map must contain two fields, `id` and `name`.
	Service  map[string]string `pulumi:"service"`
	TaskType *string           `pulumi:"taskType"`
	// Incident title.
	Title *string `pulumi:"title"`
	// Value must be one of `high`, `low`, `auto`.
	Urgency *string                                                   `pulumi:"urgency"`
	Users   []WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser `pulumi:"users"`
}

// WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsInput is an input type that accepts WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsArgs and WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsInput` via:
//
//	WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsArgs{...}
type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput
	ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutputWithContext(context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput
}

type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsArgs struct {
	// Rootly only supports linking to a single PagerDuty incident. If this feature is disabled Rootly will add responders from any additional pages to the existing PagerDuty incident that is linked to the Rootly incident. If enabled, Rootly will create a new PagerDuty incident that is not linked to any Rootly incidents. Value must be one of true or false
	CreateNewIncidentOnConflict pulumi.BoolPtrInput                                                           `pulumi:"createNewIncidentOnConflict"`
	EscalationPolicies          WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayInput `pulumi:"escalationPolicies"`
	Message                     pulumi.StringPtrInput                                                         `pulumi:"message"`
	// PagerDuty incident priority, selecting auto will let Rootly auto map our incident severity
	Priority pulumi.StringPtrInput `pulumi:"priority"`
	// Map must contain two fields, `id` and `name`.
	Service  pulumi.StringMapInput `pulumi:"service"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// Incident title.
	Title pulumi.StringPtrInput `pulumi:"title"`
	// Value must be one of `high`, `low`, `auto`.
	Urgency pulumi.StringPtrInput                                             `pulumi:"urgency"`
	Users   WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayInput `pulumi:"users"`
}

func (WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPagePagerdutyOnCallRespondersTaskParams)(nil)).Elem()
}

func (i WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsArgs) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput {
	return i.ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsArgs) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput)
}

func (i WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsArgs) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput {
	return i.ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsArgs) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput).ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrInput is an input type that accepts WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsArgs, WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtr and WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrInput` via:
//
//	        WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput
	ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput
}

type workflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrType WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsArgs

func WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtr(v *WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsArgs) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrInput {
	return (*workflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrType)(v)
}

func (*workflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPagePagerdutyOnCallRespondersTaskParams)(nil)).Elem()
}

func (i *workflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrType) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput {
	return i.ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrType) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput)
}

type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPagePagerdutyOnCallRespondersTaskParams)(nil)).Elem()
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput {
	return o
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput {
	return o
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput {
	return o.ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) *WorkflowTaskPagePagerdutyOnCallRespondersTaskParams {
		return &v
	}).(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput)
}

// Rootly only supports linking to a single PagerDuty incident. If this feature is disabled Rootly will add responders from any additional pages to the existing PagerDuty incident that is linked to the Rootly incident. If enabled, Rootly will create a new PagerDuty incident that is not linked to any Rootly incidents. Value must be one of true or false
func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput) CreateNewIncidentOnConflict() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) *bool {
		return v.CreateNewIncidentOnConflict
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput) EscalationPolicies() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput {
	return o.ApplyT(func(v WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) []WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy {
		return v.EscalationPolicies
	}).(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput)
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// PagerDuty incident priority, selecting auto will let Rootly auto map our incident severity
func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput) Service() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) map[string]string { return v.Service }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Incident title.
func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// Value must be one of `high`, `low`, `auto`.
func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput) Urgency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) *string { return v.Urgency }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput) Users() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput {
	return o.ApplyT(func(v WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) []WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser {
		return v.Users
	}).(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput)
}

type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPagePagerdutyOnCallRespondersTaskParams)(nil)).Elem()
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput) Elem() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) WorkflowTaskPagePagerdutyOnCallRespondersTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskPagePagerdutyOnCallRespondersTaskParams
		return ret
	}).(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput)
}

// Rootly only supports linking to a single PagerDuty incident. If this feature is disabled Rootly will add responders from any additional pages to the existing PagerDuty incident that is linked to the Rootly incident. If enabled, Rootly will create a new PagerDuty incident that is not linked to any Rootly incidents. Value must be one of true or false
func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput) CreateNewIncidentOnConflict() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.CreateNewIncidentOnConflict
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput) EscalationPolicies() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) []WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy {
		if v == nil {
			return nil
		}
		return v.EscalationPolicies
	}).(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput)
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// PagerDuty incident priority, selecting auto will let Rootly auto map our incident severity
func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput) Service() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Incident title.
func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `high`, `low`, `auto`.
func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput) Urgency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Urgency
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput) Users() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskPagePagerdutyOnCallRespondersTaskParams) []WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser {
		if v == nil {
			return nil
		}
		return v.Users
	}).(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput)
}

type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyInput is an input type that accepts WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArgs and WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput values.
// You can construct a concrete instance of `WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyInput` via:
//
//	WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArgs{...}
type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyInput interface {
	pulumi.Input

	ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput
	ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutputWithContext(context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput
}

type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy)(nil)).Elem()
}

func (i WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArgs) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput {
	return i.ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutputWithContext(context.Background())
}

func (i WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArgs) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutputWithContext(ctx context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput)
}

// WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayInput is an input type that accepts WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArray and WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayInput` via:
//
//	WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArray{ WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArgs{...} }
type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayInput interface {
	pulumi.Input

	ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput
	ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutputWithContext(context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput
}

type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArray []WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyInput

func (WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy)(nil)).Elem()
}

func (i WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArray) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput {
	return i.ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArray) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutputWithContext(ctx context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput)
}

type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy)(nil)).Elem()
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput {
	return o
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutputWithContext(ctx context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput {
	return o
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy)(nil)).Elem()
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput {
	return o
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutputWithContext(ctx context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput {
	return o
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput) Index(i pulumi.IntInput) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy {
		return vs[0].([]WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicy)[vs[1].(int)]
	}).(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput)
}

type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserInput is an input type that accepts WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArgs and WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput values.
// You can construct a concrete instance of `WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserInput` via:
//
//	WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArgs{...}
type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserInput interface {
	pulumi.Input

	ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput
	ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutputWithContext(context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput
}

type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser)(nil)).Elem()
}

func (i WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArgs) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput {
	return i.ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutputWithContext(context.Background())
}

func (i WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArgs) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutputWithContext(ctx context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput)
}

// WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayInput is an input type that accepts WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArray and WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayInput` via:
//
//	WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArray{ WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArgs{...} }
type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayInput interface {
	pulumi.Input

	ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput
	ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutputWithContext(context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput
}

type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArray []WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserInput

func (WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser)(nil)).Elem()
}

func (i WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArray) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput {
	return i.ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArray) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutputWithContext(ctx context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput)
}

type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser)(nil)).Elem()
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput {
	return o
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutputWithContext(ctx context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput {
	return o
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser)(nil)).Elem()
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput() WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput {
	return o
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput) ToWorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutputWithContext(ctx context.Context) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput {
	return o
}

func (o WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput) Index(i pulumi.IntInput) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser {
		return vs[0].([]WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUser)[vs[1].(int)]
	}).(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput)
}

type WorkflowTaskPageRootlyOnCallRespondersTaskParams struct {
	// Alert urgency ID
	AlertUrgencyId *string `pulumi:"alertUrgencyId"`
	EscalationNote *string `pulumi:"escalationNote"`
	// Map must contain two fields, `id` and `name`.
	EscalationPolicyTarget map[string]string `pulumi:"escalationPolicyTarget"`
	// Map must contain two fields, `id` and `name`.
	GroupTarget map[string]string `pulumi:"groupTarget"`
	// Map must contain two fields, `id` and `name`.
	ServiceTarget map[string]string `pulumi:"serviceTarget"`
	Summary       string            `pulumi:"summary"`
	TaskType      *string           `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`.
	UserTarget map[string]string `pulumi:"userTarget"`
}

// WorkflowTaskPageRootlyOnCallRespondersTaskParamsInput is an input type that accepts WorkflowTaskPageRootlyOnCallRespondersTaskParamsArgs and WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskPageRootlyOnCallRespondersTaskParamsInput` via:
//
//	WorkflowTaskPageRootlyOnCallRespondersTaskParamsArgs{...}
type WorkflowTaskPageRootlyOnCallRespondersTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput() WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput
	ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsOutputWithContext(context.Context) WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput
}

type WorkflowTaskPageRootlyOnCallRespondersTaskParamsArgs struct {
	// Alert urgency ID
	AlertUrgencyId pulumi.StringPtrInput `pulumi:"alertUrgencyId"`
	EscalationNote pulumi.StringPtrInput `pulumi:"escalationNote"`
	// Map must contain two fields, `id` and `name`.
	EscalationPolicyTarget pulumi.StringMapInput `pulumi:"escalationPolicyTarget"`
	// Map must contain two fields, `id` and `name`.
	GroupTarget pulumi.StringMapInput `pulumi:"groupTarget"`
	// Map must contain two fields, `id` and `name`.
	ServiceTarget pulumi.StringMapInput `pulumi:"serviceTarget"`
	Summary       pulumi.StringInput    `pulumi:"summary"`
	TaskType      pulumi.StringPtrInput `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`.
	UserTarget pulumi.StringMapInput `pulumi:"userTarget"`
}

func (WorkflowTaskPageRootlyOnCallRespondersTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPageRootlyOnCallRespondersTaskParams)(nil)).Elem()
}

func (i WorkflowTaskPageRootlyOnCallRespondersTaskParamsArgs) ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput() WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput {
	return i.ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskPageRootlyOnCallRespondersTaskParamsArgs) ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput)
}

func (i WorkflowTaskPageRootlyOnCallRespondersTaskParamsArgs) ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput {
	return i.ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskPageRootlyOnCallRespondersTaskParamsArgs) ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput).ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrInput is an input type that accepts WorkflowTaskPageRootlyOnCallRespondersTaskParamsArgs, WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtr and WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrInput` via:
//
//	        WorkflowTaskPageRootlyOnCallRespondersTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput
	ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput
}

type workflowTaskPageRootlyOnCallRespondersTaskParamsPtrType WorkflowTaskPageRootlyOnCallRespondersTaskParamsArgs

func WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtr(v *WorkflowTaskPageRootlyOnCallRespondersTaskParamsArgs) WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrInput {
	return (*workflowTaskPageRootlyOnCallRespondersTaskParamsPtrType)(v)
}

func (*workflowTaskPageRootlyOnCallRespondersTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPageRootlyOnCallRespondersTaskParams)(nil)).Elem()
}

func (i *workflowTaskPageRootlyOnCallRespondersTaskParamsPtrType) ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput {
	return i.ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskPageRootlyOnCallRespondersTaskParamsPtrType) ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput)
}

type WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPageRootlyOnCallRespondersTaskParams)(nil)).Elem()
}

func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput) ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput() WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput {
	return o
}

func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput) ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput {
	return o
}

func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput) ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput {
	return o.ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput) ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskPageRootlyOnCallRespondersTaskParams) *WorkflowTaskPageRootlyOnCallRespondersTaskParams {
		return &v
	}).(WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput)
}

// Alert urgency ID
func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput) AlertUrgencyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPageRootlyOnCallRespondersTaskParams) *string { return v.AlertUrgencyId }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput) EscalationNote() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPageRootlyOnCallRespondersTaskParams) *string { return v.EscalationNote }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput) EscalationPolicyTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskPageRootlyOnCallRespondersTaskParams) map[string]string {
		return v.EscalationPolicyTarget
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput) GroupTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskPageRootlyOnCallRespondersTaskParams) map[string]string { return v.GroupTarget }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput) ServiceTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskPageRootlyOnCallRespondersTaskParams) map[string]string { return v.ServiceTarget }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPageRootlyOnCallRespondersTaskParams) string { return v.Summary }).(pulumi.StringOutput)
}

func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPageRootlyOnCallRespondersTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput) UserTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskPageRootlyOnCallRespondersTaskParams) map[string]string { return v.UserTarget }).(pulumi.StringMapOutput)
}

type WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPageRootlyOnCallRespondersTaskParams)(nil)).Elem()
}

func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput) ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput) ToWorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput) Elem() WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskPageRootlyOnCallRespondersTaskParams) WorkflowTaskPageRootlyOnCallRespondersTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskPageRootlyOnCallRespondersTaskParams
		return ret
	}).(WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput)
}

// Alert urgency ID
func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput) AlertUrgencyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageRootlyOnCallRespondersTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.AlertUrgencyId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput) EscalationNote() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageRootlyOnCallRespondersTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.EscalationNote
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput) EscalationPolicyTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskPageRootlyOnCallRespondersTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.EscalationPolicyTarget
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput) GroupTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskPageRootlyOnCallRespondersTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.GroupTarget
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput) ServiceTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskPageRootlyOnCallRespondersTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.ServiceTarget
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageRootlyOnCallRespondersTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Summary
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageRootlyOnCallRespondersTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput) UserTarget() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskPageRootlyOnCallRespondersTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserTarget
	}).(pulumi.StringMapOutput)
}

type WorkflowTaskPageVictorOpsOnCallRespondersTaskParams struct {
	EscalationPolicies []WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy `pulumi:"escalationPolicies"`
	TaskType           *string                                                               `pulumi:"taskType"`
	// Alert title.
	Title *string                                                   `pulumi:"title"`
	Users []WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser `pulumi:"users"`
}

// WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsInput is an input type that accepts WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsArgs and WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsInput` via:
//
//	WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsArgs{...}
type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput
	ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutputWithContext(context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput
}

type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsArgs struct {
	EscalationPolicies WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayInput `pulumi:"escalationPolicies"`
	TaskType           pulumi.StringPtrInput                                                         `pulumi:"taskType"`
	// Alert title.
	Title pulumi.StringPtrInput                                             `pulumi:"title"`
	Users WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayInput `pulumi:"users"`
}

func (WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPageVictorOpsOnCallRespondersTaskParams)(nil)).Elem()
}

func (i WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsArgs) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput {
	return i.ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsArgs) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput)
}

func (i WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsArgs) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput {
	return i.ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsArgs) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput).ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrInput is an input type that accepts WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsArgs, WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtr and WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrInput` via:
//
//	        WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput
	ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput
}

type workflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrType WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsArgs

func WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtr(v *WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsArgs) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrInput {
	return (*workflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrType)(v)
}

func (*workflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPageVictorOpsOnCallRespondersTaskParams)(nil)).Elem()
}

func (i *workflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrType) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput {
	return i.ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrType) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput)
}

type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPageVictorOpsOnCallRespondersTaskParams)(nil)).Elem()
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput {
	return o.ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskPageVictorOpsOnCallRespondersTaskParams) *WorkflowTaskPageVictorOpsOnCallRespondersTaskParams {
		return &v
	}).(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput)
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput) EscalationPolicies() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput {
	return o.ApplyT(func(v WorkflowTaskPageVictorOpsOnCallRespondersTaskParams) []WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy {
		return v.EscalationPolicies
	}).(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput)
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPageVictorOpsOnCallRespondersTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Alert title.
func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPageVictorOpsOnCallRespondersTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput) Users() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput {
	return o.ApplyT(func(v WorkflowTaskPageVictorOpsOnCallRespondersTaskParams) []WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser {
		return v.Users
	}).(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput)
}

type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPageVictorOpsOnCallRespondersTaskParams)(nil)).Elem()
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput) Elem() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskPageVictorOpsOnCallRespondersTaskParams) WorkflowTaskPageVictorOpsOnCallRespondersTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskPageVictorOpsOnCallRespondersTaskParams
		return ret
	}).(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput)
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput) EscalationPolicies() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskPageVictorOpsOnCallRespondersTaskParams) []WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy {
		if v == nil {
			return nil
		}
		return v.EscalationPolicies
	}).(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput)
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageVictorOpsOnCallRespondersTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Alert title.
func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageVictorOpsOnCallRespondersTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput) Users() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskPageVictorOpsOnCallRespondersTaskParams) []WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser {
		if v == nil {
			return nil
		}
		return v.Users
	}).(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput)
}

type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyInput is an input type that accepts WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArgs and WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput values.
// You can construct a concrete instance of `WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyInput` via:
//
//	WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArgs{...}
type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyInput interface {
	pulumi.Input

	ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput
	ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutputWithContext(context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput
}

type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy)(nil)).Elem()
}

func (i WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArgs) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput {
	return i.ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutputWithContext(context.Background())
}

func (i WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArgs) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput)
}

// WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayInput is an input type that accepts WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArray and WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayInput` via:
//
//	WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArray{ WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArgs{...} }
type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayInput interface {
	pulumi.Input

	ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput
	ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutputWithContext(context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput
}

type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArray []WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyInput

func (WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy)(nil)).Elem()
}

func (i WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArray) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput {
	return i.ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArray) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput)
}

type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy)(nil)).Elem()
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy)(nil)).Elem()
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput) Index(i pulumi.IntInput) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy {
		return vs[0].([]WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicy)[vs[1].(int)]
	}).(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput)
}

type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserInput is an input type that accepts WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArgs and WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput values.
// You can construct a concrete instance of `WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserInput` via:
//
//	WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArgs{...}
type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserInput interface {
	pulumi.Input

	ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput
	ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutputWithContext(context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput
}

type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser)(nil)).Elem()
}

func (i WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArgs) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput {
	return i.ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutputWithContext(context.Background())
}

func (i WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArgs) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput)
}

// WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayInput is an input type that accepts WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArray and WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayInput` via:
//
//	WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArray{ WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArgs{...} }
type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayInput interface {
	pulumi.Input

	ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput
	ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutputWithContext(context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput
}

type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArray []WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserInput

func (WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser)(nil)).Elem()
}

func (i WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArray) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput {
	return i.ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArray) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput)
}

type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser)(nil)).Elem()
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser)(nil)).Elem()
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput) Index(i pulumi.IntInput) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser {
		return vs[0].([]WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUser)[vs[1].(int)]
	}).(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput)
}

type WorkflowTaskPrintTaskParams struct {
	// The message to print
	Message  string  `pulumi:"message"`
	TaskType *string `pulumi:"taskType"`
}

// WorkflowTaskPrintTaskParamsInput is an input type that accepts WorkflowTaskPrintTaskParamsArgs and WorkflowTaskPrintTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskPrintTaskParamsInput` via:
//
//	WorkflowTaskPrintTaskParamsArgs{...}
type WorkflowTaskPrintTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskPrintTaskParamsOutput() WorkflowTaskPrintTaskParamsOutput
	ToWorkflowTaskPrintTaskParamsOutputWithContext(context.Context) WorkflowTaskPrintTaskParamsOutput
}

type WorkflowTaskPrintTaskParamsArgs struct {
	// The message to print
	Message  pulumi.StringInput    `pulumi:"message"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskPrintTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPrintTaskParams)(nil)).Elem()
}

func (i WorkflowTaskPrintTaskParamsArgs) ToWorkflowTaskPrintTaskParamsOutput() WorkflowTaskPrintTaskParamsOutput {
	return i.ToWorkflowTaskPrintTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskPrintTaskParamsArgs) ToWorkflowTaskPrintTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskPrintTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPrintTaskParamsOutput)
}

func (i WorkflowTaskPrintTaskParamsArgs) ToWorkflowTaskPrintTaskParamsPtrOutput() WorkflowTaskPrintTaskParamsPtrOutput {
	return i.ToWorkflowTaskPrintTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskPrintTaskParamsArgs) ToWorkflowTaskPrintTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPrintTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPrintTaskParamsOutput).ToWorkflowTaskPrintTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskPrintTaskParamsPtrInput is an input type that accepts WorkflowTaskPrintTaskParamsArgs, WorkflowTaskPrintTaskParamsPtr and WorkflowTaskPrintTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskPrintTaskParamsPtrInput` via:
//
//	        WorkflowTaskPrintTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskPrintTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskPrintTaskParamsPtrOutput() WorkflowTaskPrintTaskParamsPtrOutput
	ToWorkflowTaskPrintTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskPrintTaskParamsPtrOutput
}

type workflowTaskPrintTaskParamsPtrType WorkflowTaskPrintTaskParamsArgs

func WorkflowTaskPrintTaskParamsPtr(v *WorkflowTaskPrintTaskParamsArgs) WorkflowTaskPrintTaskParamsPtrInput {
	return (*workflowTaskPrintTaskParamsPtrType)(v)
}

func (*workflowTaskPrintTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPrintTaskParams)(nil)).Elem()
}

func (i *workflowTaskPrintTaskParamsPtrType) ToWorkflowTaskPrintTaskParamsPtrOutput() WorkflowTaskPrintTaskParamsPtrOutput {
	return i.ToWorkflowTaskPrintTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskPrintTaskParamsPtrType) ToWorkflowTaskPrintTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPrintTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPrintTaskParamsPtrOutput)
}

type WorkflowTaskPrintTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPrintTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPrintTaskParams)(nil)).Elem()
}

func (o WorkflowTaskPrintTaskParamsOutput) ToWorkflowTaskPrintTaskParamsOutput() WorkflowTaskPrintTaskParamsOutput {
	return o
}

func (o WorkflowTaskPrintTaskParamsOutput) ToWorkflowTaskPrintTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskPrintTaskParamsOutput {
	return o
}

func (o WorkflowTaskPrintTaskParamsOutput) ToWorkflowTaskPrintTaskParamsPtrOutput() WorkflowTaskPrintTaskParamsPtrOutput {
	return o.ToWorkflowTaskPrintTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskPrintTaskParamsOutput) ToWorkflowTaskPrintTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPrintTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskPrintTaskParams) *WorkflowTaskPrintTaskParams {
		return &v
	}).(WorkflowTaskPrintTaskParamsPtrOutput)
}

// The message to print
func (o WorkflowTaskPrintTaskParamsOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPrintTaskParams) string { return v.Message }).(pulumi.StringOutput)
}

func (o WorkflowTaskPrintTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPrintTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskPrintTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPrintTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPrintTaskParams)(nil)).Elem()
}

func (o WorkflowTaskPrintTaskParamsPtrOutput) ToWorkflowTaskPrintTaskParamsPtrOutput() WorkflowTaskPrintTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskPrintTaskParamsPtrOutput) ToWorkflowTaskPrintTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPrintTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskPrintTaskParamsPtrOutput) Elem() WorkflowTaskPrintTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskPrintTaskParams) WorkflowTaskPrintTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskPrintTaskParams
		return ret
	}).(WorkflowTaskPrintTaskParamsOutput)
}

// The message to print
func (o WorkflowTaskPrintTaskParamsPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPrintTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskPrintTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPrintTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskPublishIncidentTaskParams struct {
	// Incident event description
	Event *string `pulumi:"event"`
	// Map must contain two fields, `id` and `name`.
	Incident map[string]string `pulumi:"incident"`
	// Additional API Payload you can pass to statuspage.io for example. Can contain liquid markup and need to be valid JSON
	IntegrationPayload *string `pulumi:"integrationPayload"`
	// When true notifies subscribers of the status page by email/text. Value must be one of true or false
	NotifySubscribers *bool  `pulumi:"notifySubscribers"`
	PublicTitle       string `pulumi:"publicTitle"`
	// For Statuspage.io integrated pages auto publishes a tweet for your update. Value must be one of true or false
	ShouldTweet *bool `pulumi:"shouldTweet"`
	// Value must be one of `investigating`, `identified`, `monitoring`, `resolved`, `scheduled`, `inProgress`, `verifying`, `completed`.
	Status       string `pulumi:"status"`
	StatusPageId string `pulumi:"statusPageId"`
	// Map must contain two fields, `id` and `name`.
	StatusPageTemplate map[string]string `pulumi:"statusPageTemplate"`
	TaskType           *string           `pulumi:"taskType"`
}

// WorkflowTaskPublishIncidentTaskParamsInput is an input type that accepts WorkflowTaskPublishIncidentTaskParamsArgs and WorkflowTaskPublishIncidentTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskPublishIncidentTaskParamsInput` via:
//
//	WorkflowTaskPublishIncidentTaskParamsArgs{...}
type WorkflowTaskPublishIncidentTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskPublishIncidentTaskParamsOutput() WorkflowTaskPublishIncidentTaskParamsOutput
	ToWorkflowTaskPublishIncidentTaskParamsOutputWithContext(context.Context) WorkflowTaskPublishIncidentTaskParamsOutput
}

type WorkflowTaskPublishIncidentTaskParamsArgs struct {
	// Incident event description
	Event pulumi.StringPtrInput `pulumi:"event"`
	// Map must contain two fields, `id` and `name`.
	Incident pulumi.StringMapInput `pulumi:"incident"`
	// Additional API Payload you can pass to statuspage.io for example. Can contain liquid markup and need to be valid JSON
	IntegrationPayload pulumi.StringPtrInput `pulumi:"integrationPayload"`
	// When true notifies subscribers of the status page by email/text. Value must be one of true or false
	NotifySubscribers pulumi.BoolPtrInput `pulumi:"notifySubscribers"`
	PublicTitle       pulumi.StringInput  `pulumi:"publicTitle"`
	// For Statuspage.io integrated pages auto publishes a tweet for your update. Value must be one of true or false
	ShouldTweet pulumi.BoolPtrInput `pulumi:"shouldTweet"`
	// Value must be one of `investigating`, `identified`, `monitoring`, `resolved`, `scheduled`, `inProgress`, `verifying`, `completed`.
	Status       pulumi.StringInput `pulumi:"status"`
	StatusPageId pulumi.StringInput `pulumi:"statusPageId"`
	// Map must contain two fields, `id` and `name`.
	StatusPageTemplate pulumi.StringMapInput `pulumi:"statusPageTemplate"`
	TaskType           pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskPublishIncidentTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPublishIncidentTaskParams)(nil)).Elem()
}

func (i WorkflowTaskPublishIncidentTaskParamsArgs) ToWorkflowTaskPublishIncidentTaskParamsOutput() WorkflowTaskPublishIncidentTaskParamsOutput {
	return i.ToWorkflowTaskPublishIncidentTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskPublishIncidentTaskParamsArgs) ToWorkflowTaskPublishIncidentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskPublishIncidentTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPublishIncidentTaskParamsOutput)
}

func (i WorkflowTaskPublishIncidentTaskParamsArgs) ToWorkflowTaskPublishIncidentTaskParamsPtrOutput() WorkflowTaskPublishIncidentTaskParamsPtrOutput {
	return i.ToWorkflowTaskPublishIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskPublishIncidentTaskParamsArgs) ToWorkflowTaskPublishIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPublishIncidentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPublishIncidentTaskParamsOutput).ToWorkflowTaskPublishIncidentTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskPublishIncidentTaskParamsPtrInput is an input type that accepts WorkflowTaskPublishIncidentTaskParamsArgs, WorkflowTaskPublishIncidentTaskParamsPtr and WorkflowTaskPublishIncidentTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskPublishIncidentTaskParamsPtrInput` via:
//
//	        WorkflowTaskPublishIncidentTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskPublishIncidentTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskPublishIncidentTaskParamsPtrOutput() WorkflowTaskPublishIncidentTaskParamsPtrOutput
	ToWorkflowTaskPublishIncidentTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskPublishIncidentTaskParamsPtrOutput
}

type workflowTaskPublishIncidentTaskParamsPtrType WorkflowTaskPublishIncidentTaskParamsArgs

func WorkflowTaskPublishIncidentTaskParamsPtr(v *WorkflowTaskPublishIncidentTaskParamsArgs) WorkflowTaskPublishIncidentTaskParamsPtrInput {
	return (*workflowTaskPublishIncidentTaskParamsPtrType)(v)
}

func (*workflowTaskPublishIncidentTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPublishIncidentTaskParams)(nil)).Elem()
}

func (i *workflowTaskPublishIncidentTaskParamsPtrType) ToWorkflowTaskPublishIncidentTaskParamsPtrOutput() WorkflowTaskPublishIncidentTaskParamsPtrOutput {
	return i.ToWorkflowTaskPublishIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskPublishIncidentTaskParamsPtrType) ToWorkflowTaskPublishIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPublishIncidentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPublishIncidentTaskParamsPtrOutput)
}

type WorkflowTaskPublishIncidentTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPublishIncidentTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskPublishIncidentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskPublishIncidentTaskParamsOutput) ToWorkflowTaskPublishIncidentTaskParamsOutput() WorkflowTaskPublishIncidentTaskParamsOutput {
	return o
}

func (o WorkflowTaskPublishIncidentTaskParamsOutput) ToWorkflowTaskPublishIncidentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskPublishIncidentTaskParamsOutput {
	return o
}

func (o WorkflowTaskPublishIncidentTaskParamsOutput) ToWorkflowTaskPublishIncidentTaskParamsPtrOutput() WorkflowTaskPublishIncidentTaskParamsPtrOutput {
	return o.ToWorkflowTaskPublishIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskPublishIncidentTaskParamsOutput) ToWorkflowTaskPublishIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPublishIncidentTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskPublishIncidentTaskParams) *WorkflowTaskPublishIncidentTaskParams {
		return &v
	}).(WorkflowTaskPublishIncidentTaskParamsPtrOutput)
}

// Incident event description
func (o WorkflowTaskPublishIncidentTaskParamsOutput) Event() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPublishIncidentTaskParams) *string { return v.Event }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskPublishIncidentTaskParamsOutput) Incident() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskPublishIncidentTaskParams) map[string]string { return v.Incident }).(pulumi.StringMapOutput)
}

// Additional API Payload you can pass to statuspage.io for example. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskPublishIncidentTaskParamsOutput) IntegrationPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPublishIncidentTaskParams) *string { return v.IntegrationPayload }).(pulumi.StringPtrOutput)
}

// When true notifies subscribers of the status page by email/text. Value must be one of true or false
func (o WorkflowTaskPublishIncidentTaskParamsOutput) NotifySubscribers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPublishIncidentTaskParams) *bool { return v.NotifySubscribers }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskPublishIncidentTaskParamsOutput) PublicTitle() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPublishIncidentTaskParams) string { return v.PublicTitle }).(pulumi.StringOutput)
}

// For Statuspage.io integrated pages auto publishes a tweet for your update. Value must be one of true or false
func (o WorkflowTaskPublishIncidentTaskParamsOutput) ShouldTweet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPublishIncidentTaskParams) *bool { return v.ShouldTweet }).(pulumi.BoolPtrOutput)
}

// Value must be one of `investigating`, `identified`, `monitoring`, `resolved`, `scheduled`, `inProgress`, `verifying`, `completed`.
func (o WorkflowTaskPublishIncidentTaskParamsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPublishIncidentTaskParams) string { return v.Status }).(pulumi.StringOutput)
}

func (o WorkflowTaskPublishIncidentTaskParamsOutput) StatusPageId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskPublishIncidentTaskParams) string { return v.StatusPageId }).(pulumi.StringOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskPublishIncidentTaskParamsOutput) StatusPageTemplate() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskPublishIncidentTaskParams) map[string]string { return v.StatusPageTemplate }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskPublishIncidentTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskPublishIncidentTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskPublishIncidentTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPublishIncidentTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPublishIncidentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskPublishIncidentTaskParamsPtrOutput) ToWorkflowTaskPublishIncidentTaskParamsPtrOutput() WorkflowTaskPublishIncidentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskPublishIncidentTaskParamsPtrOutput) ToWorkflowTaskPublishIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskPublishIncidentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskPublishIncidentTaskParamsPtrOutput) Elem() WorkflowTaskPublishIncidentTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskPublishIncidentTaskParams) WorkflowTaskPublishIncidentTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskPublishIncidentTaskParams
		return ret
	}).(WorkflowTaskPublishIncidentTaskParamsOutput)
}

// Incident event description
func (o WorkflowTaskPublishIncidentTaskParamsPtrOutput) Event() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPublishIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Event
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskPublishIncidentTaskParamsPtrOutput) Incident() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskPublishIncidentTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Incident
	}).(pulumi.StringMapOutput)
}

// Additional API Payload you can pass to statuspage.io for example. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskPublishIncidentTaskParamsPtrOutput) IntegrationPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPublishIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.IntegrationPayload
	}).(pulumi.StringPtrOutput)
}

// When true notifies subscribers of the status page by email/text. Value must be one of true or false
func (o WorkflowTaskPublishIncidentTaskParamsPtrOutput) NotifySubscribers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPublishIncidentTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.NotifySubscribers
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskPublishIncidentTaskParamsPtrOutput) PublicTitle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPublishIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.PublicTitle
	}).(pulumi.StringPtrOutput)
}

// For Statuspage.io integrated pages auto publishes a tweet for your update. Value must be one of true or false
func (o WorkflowTaskPublishIncidentTaskParamsPtrOutput) ShouldTweet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPublishIncidentTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.ShouldTweet
	}).(pulumi.BoolPtrOutput)
}

// Value must be one of `investigating`, `identified`, `monitoring`, `resolved`, `scheduled`, `inProgress`, `verifying`, `completed`.
func (o WorkflowTaskPublishIncidentTaskParamsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPublishIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskPublishIncidentTaskParamsPtrOutput) StatusPageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPublishIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.StatusPageId
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskPublishIncidentTaskParamsPtrOutput) StatusPageTemplate() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskPublishIncidentTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.StatusPageTemplate
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskPublishIncidentTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPublishIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskRedisClientTaskParams struct {
	Commands     string  `pulumi:"commands"`
	EventMessage *string `pulumi:"eventMessage"`
	EventUrl     *string `pulumi:"eventUrl"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                 `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskRedisClientTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	TaskType               *string                                               `pulumi:"taskType"`
	Url                    string                                                `pulumi:"url"`
}

// WorkflowTaskRedisClientTaskParamsInput is an input type that accepts WorkflowTaskRedisClientTaskParamsArgs and WorkflowTaskRedisClientTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskRedisClientTaskParamsInput` via:
//
//	WorkflowTaskRedisClientTaskParamsArgs{...}
type WorkflowTaskRedisClientTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskRedisClientTaskParamsOutput() WorkflowTaskRedisClientTaskParamsOutput
	ToWorkflowTaskRedisClientTaskParamsOutputWithContext(context.Context) WorkflowTaskRedisClientTaskParamsOutput
}

type WorkflowTaskRedisClientTaskParamsArgs struct {
	Commands     pulumi.StringInput    `pulumi:"commands"`
	EventMessage pulumi.StringPtrInput `pulumi:"eventMessage"`
	EventUrl     pulumi.StringPtrInput `pulumi:"eventUrl"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                           `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	TaskType               pulumi.StringPtrInput                                         `pulumi:"taskType"`
	Url                    pulumi.StringInput                                            `pulumi:"url"`
}

func (WorkflowTaskRedisClientTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskRedisClientTaskParams)(nil)).Elem()
}

func (i WorkflowTaskRedisClientTaskParamsArgs) ToWorkflowTaskRedisClientTaskParamsOutput() WorkflowTaskRedisClientTaskParamsOutput {
	return i.ToWorkflowTaskRedisClientTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskRedisClientTaskParamsArgs) ToWorkflowTaskRedisClientTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskRedisClientTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRedisClientTaskParamsOutput)
}

func (i WorkflowTaskRedisClientTaskParamsArgs) ToWorkflowTaskRedisClientTaskParamsPtrOutput() WorkflowTaskRedisClientTaskParamsPtrOutput {
	return i.ToWorkflowTaskRedisClientTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskRedisClientTaskParamsArgs) ToWorkflowTaskRedisClientTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskRedisClientTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRedisClientTaskParamsOutput).ToWorkflowTaskRedisClientTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskRedisClientTaskParamsPtrInput is an input type that accepts WorkflowTaskRedisClientTaskParamsArgs, WorkflowTaskRedisClientTaskParamsPtr and WorkflowTaskRedisClientTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskRedisClientTaskParamsPtrInput` via:
//
//	        WorkflowTaskRedisClientTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskRedisClientTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskRedisClientTaskParamsPtrOutput() WorkflowTaskRedisClientTaskParamsPtrOutput
	ToWorkflowTaskRedisClientTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskRedisClientTaskParamsPtrOutput
}

type workflowTaskRedisClientTaskParamsPtrType WorkflowTaskRedisClientTaskParamsArgs

func WorkflowTaskRedisClientTaskParamsPtr(v *WorkflowTaskRedisClientTaskParamsArgs) WorkflowTaskRedisClientTaskParamsPtrInput {
	return (*workflowTaskRedisClientTaskParamsPtrType)(v)
}

func (*workflowTaskRedisClientTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskRedisClientTaskParams)(nil)).Elem()
}

func (i *workflowTaskRedisClientTaskParamsPtrType) ToWorkflowTaskRedisClientTaskParamsPtrOutput() WorkflowTaskRedisClientTaskParamsPtrOutput {
	return i.ToWorkflowTaskRedisClientTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskRedisClientTaskParamsPtrType) ToWorkflowTaskRedisClientTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskRedisClientTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRedisClientTaskParamsPtrOutput)
}

type WorkflowTaskRedisClientTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRedisClientTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskRedisClientTaskParams)(nil)).Elem()
}

func (o WorkflowTaskRedisClientTaskParamsOutput) ToWorkflowTaskRedisClientTaskParamsOutput() WorkflowTaskRedisClientTaskParamsOutput {
	return o
}

func (o WorkflowTaskRedisClientTaskParamsOutput) ToWorkflowTaskRedisClientTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskRedisClientTaskParamsOutput {
	return o
}

func (o WorkflowTaskRedisClientTaskParamsOutput) ToWorkflowTaskRedisClientTaskParamsPtrOutput() WorkflowTaskRedisClientTaskParamsPtrOutput {
	return o.ToWorkflowTaskRedisClientTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskRedisClientTaskParamsOutput) ToWorkflowTaskRedisClientTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskRedisClientTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskRedisClientTaskParams) *WorkflowTaskRedisClientTaskParams {
		return &v
	}).(WorkflowTaskRedisClientTaskParamsPtrOutput)
}

func (o WorkflowTaskRedisClientTaskParamsOutput) Commands() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskRedisClientTaskParams) string { return v.Commands }).(pulumi.StringOutput)
}

func (o WorkflowTaskRedisClientTaskParamsOutput) EventMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskRedisClientTaskParams) *string { return v.EventMessage }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskRedisClientTaskParamsOutput) EventUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskRedisClientTaskParams) *string { return v.EventUrl }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskRedisClientTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskRedisClientTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskRedisClientTaskParamsOutput) PostToSlackChannels() WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskRedisClientTaskParams) []WorkflowTaskRedisClientTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskRedisClientTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskRedisClientTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskRedisClientTaskParamsOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskRedisClientTaskParams) string { return v.Url }).(pulumi.StringOutput)
}

type WorkflowTaskRedisClientTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRedisClientTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskRedisClientTaskParams)(nil)).Elem()
}

func (o WorkflowTaskRedisClientTaskParamsPtrOutput) ToWorkflowTaskRedisClientTaskParamsPtrOutput() WorkflowTaskRedisClientTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskRedisClientTaskParamsPtrOutput) ToWorkflowTaskRedisClientTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskRedisClientTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskRedisClientTaskParamsPtrOutput) Elem() WorkflowTaskRedisClientTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskRedisClientTaskParams) WorkflowTaskRedisClientTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskRedisClientTaskParams
		return ret
	}).(WorkflowTaskRedisClientTaskParamsOutput)
}

func (o WorkflowTaskRedisClientTaskParamsPtrOutput) Commands() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRedisClientTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Commands
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskRedisClientTaskParamsPtrOutput) EventMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRedisClientTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.EventMessage
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskRedisClientTaskParamsPtrOutput) EventUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRedisClientTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.EventUrl
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskRedisClientTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRedisClientTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskRedisClientTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskRedisClientTaskParams) []WorkflowTaskRedisClientTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskRedisClientTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRedisClientTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskRedisClientTaskParamsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRedisClientTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskRedisClientTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskRedisClientTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskRedisClientTaskParamsPostToSlackChannelArgs and WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskRedisClientTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskRedisClientTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskRedisClientTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput() WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskRedisClientTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskRedisClientTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskRedisClientTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskRedisClientTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskRedisClientTaskParamsPostToSlackChannelArgs) ToWorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput() WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskRedisClientTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskRedisClientTaskParamsPostToSlackChannelArgs) ToWorkflowTaskRedisClientTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskRedisClientTaskParamsPostToSlackChannelArray and WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskRedisClientTaskParamsPostToSlackChannelArray{ WorkflowTaskRedisClientTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskRedisClientTaskParamsPostToSlackChannelArray []WorkflowTaskRedisClientTaskParamsPostToSlackChannelInput

func (WorkflowTaskRedisClientTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskRedisClientTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskRedisClientTaskParamsPostToSlackChannelArray) ToWorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskRedisClientTaskParamsPostToSlackChannelArray) ToWorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskRedisClientTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput) ToWorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput() WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput) ToWorkflowTaskRedisClientTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskRedisClientTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskRedisClientTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskRedisClientTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskRedisClientTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskRedisClientTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskRemoveGoogleDocsPermissionsTaskParams struct {
	// Value must be one of `type`, `role`, `emailAddress`.
	AttributeToQueryBy string `pulumi:"attributeToQueryBy"`
	// The Google Doc file ID
	FileId   string  `pulumi:"fileId"`
	TaskType *string `pulumi:"taskType"`
	Value    string  `pulumi:"value"`
}

// WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsInput is an input type that accepts WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsArgs and WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsInput` via:
//
//	WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsArgs{...}
type WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput() WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput
	ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutputWithContext(context.Context) WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput
}

type WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsArgs struct {
	// Value must be one of `type`, `role`, `emailAddress`.
	AttributeToQueryBy pulumi.StringInput `pulumi:"attributeToQueryBy"`
	// The Google Doc file ID
	FileId   pulumi.StringInput    `pulumi:"fileId"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	Value    pulumi.StringInput    `pulumi:"value"`
}

func (WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskRemoveGoogleDocsPermissionsTaskParams)(nil)).Elem()
}

func (i WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsArgs) ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput() WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput {
	return i.ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsArgs) ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput)
}

func (i WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsArgs) ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput() WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput {
	return i.ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsArgs) ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput).ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrInput is an input type that accepts WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsArgs, WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtr and WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrInput` via:
//
//	        WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput() WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput
	ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput
}

type workflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrType WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsArgs

func WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtr(v *WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsArgs) WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrInput {
	return (*workflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrType)(v)
}

func (*workflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskRemoveGoogleDocsPermissionsTaskParams)(nil)).Elem()
}

func (i *workflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrType) ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput() WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput {
	return i.ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrType) ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput)
}

type WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskRemoveGoogleDocsPermissionsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput) ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput() WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput {
	return o
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput) ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput {
	return o
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput) ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput() WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput {
	return o.ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput) ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskRemoveGoogleDocsPermissionsTaskParams) *WorkflowTaskRemoveGoogleDocsPermissionsTaskParams {
		return &v
	}).(WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput)
}

// Value must be one of `type`, `role`, `emailAddress`.
func (o WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput) AttributeToQueryBy() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskRemoveGoogleDocsPermissionsTaskParams) string { return v.AttributeToQueryBy }).(pulumi.StringOutput)
}

// The Google Doc file ID
func (o WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput) FileId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskRemoveGoogleDocsPermissionsTaskParams) string { return v.FileId }).(pulumi.StringOutput)
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskRemoveGoogleDocsPermissionsTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskRemoveGoogleDocsPermissionsTaskParams) string { return v.Value }).(pulumi.StringOutput)
}

type WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskRemoveGoogleDocsPermissionsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput) ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput() WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput) ToWorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput) Elem() WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskRemoveGoogleDocsPermissionsTaskParams) WorkflowTaskRemoveGoogleDocsPermissionsTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskRemoveGoogleDocsPermissionsTaskParams
		return ret
	}).(WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput)
}

// Value must be one of `type`, `role`, `emailAddress`.
func (o WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput) AttributeToQueryBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRemoveGoogleDocsPermissionsTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.AttributeToQueryBy
	}).(pulumi.StringPtrOutput)
}

// The Google Doc file ID
func (o WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput) FileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRemoveGoogleDocsPermissionsTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.FileId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRemoveGoogleDocsPermissionsTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRemoveGoogleDocsPermissionsTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskRenameSlackChannelTaskParams struct {
	// Map must contain two fields, `id` and `name`.
	Channel  map[string]string `pulumi:"channel"`
	TaskType *string           `pulumi:"taskType"`
	Title    string            `pulumi:"title"`
}

// WorkflowTaskRenameSlackChannelTaskParamsInput is an input type that accepts WorkflowTaskRenameSlackChannelTaskParamsArgs and WorkflowTaskRenameSlackChannelTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskRenameSlackChannelTaskParamsInput` via:
//
//	WorkflowTaskRenameSlackChannelTaskParamsArgs{...}
type WorkflowTaskRenameSlackChannelTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskRenameSlackChannelTaskParamsOutput() WorkflowTaskRenameSlackChannelTaskParamsOutput
	ToWorkflowTaskRenameSlackChannelTaskParamsOutputWithContext(context.Context) WorkflowTaskRenameSlackChannelTaskParamsOutput
}

type WorkflowTaskRenameSlackChannelTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`.
	Channel  pulumi.StringMapInput `pulumi:"channel"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	Title    pulumi.StringInput    `pulumi:"title"`
}

func (WorkflowTaskRenameSlackChannelTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskRenameSlackChannelTaskParams)(nil)).Elem()
}

func (i WorkflowTaskRenameSlackChannelTaskParamsArgs) ToWorkflowTaskRenameSlackChannelTaskParamsOutput() WorkflowTaskRenameSlackChannelTaskParamsOutput {
	return i.ToWorkflowTaskRenameSlackChannelTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskRenameSlackChannelTaskParamsArgs) ToWorkflowTaskRenameSlackChannelTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskRenameSlackChannelTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRenameSlackChannelTaskParamsOutput)
}

func (i WorkflowTaskRenameSlackChannelTaskParamsArgs) ToWorkflowTaskRenameSlackChannelTaskParamsPtrOutput() WorkflowTaskRenameSlackChannelTaskParamsPtrOutput {
	return i.ToWorkflowTaskRenameSlackChannelTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskRenameSlackChannelTaskParamsArgs) ToWorkflowTaskRenameSlackChannelTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskRenameSlackChannelTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRenameSlackChannelTaskParamsOutput).ToWorkflowTaskRenameSlackChannelTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskRenameSlackChannelTaskParamsPtrInput is an input type that accepts WorkflowTaskRenameSlackChannelTaskParamsArgs, WorkflowTaskRenameSlackChannelTaskParamsPtr and WorkflowTaskRenameSlackChannelTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskRenameSlackChannelTaskParamsPtrInput` via:
//
//	        WorkflowTaskRenameSlackChannelTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskRenameSlackChannelTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskRenameSlackChannelTaskParamsPtrOutput() WorkflowTaskRenameSlackChannelTaskParamsPtrOutput
	ToWorkflowTaskRenameSlackChannelTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskRenameSlackChannelTaskParamsPtrOutput
}

type workflowTaskRenameSlackChannelTaskParamsPtrType WorkflowTaskRenameSlackChannelTaskParamsArgs

func WorkflowTaskRenameSlackChannelTaskParamsPtr(v *WorkflowTaskRenameSlackChannelTaskParamsArgs) WorkflowTaskRenameSlackChannelTaskParamsPtrInput {
	return (*workflowTaskRenameSlackChannelTaskParamsPtrType)(v)
}

func (*workflowTaskRenameSlackChannelTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskRenameSlackChannelTaskParams)(nil)).Elem()
}

func (i *workflowTaskRenameSlackChannelTaskParamsPtrType) ToWorkflowTaskRenameSlackChannelTaskParamsPtrOutput() WorkflowTaskRenameSlackChannelTaskParamsPtrOutput {
	return i.ToWorkflowTaskRenameSlackChannelTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskRenameSlackChannelTaskParamsPtrType) ToWorkflowTaskRenameSlackChannelTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskRenameSlackChannelTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRenameSlackChannelTaskParamsPtrOutput)
}

type WorkflowTaskRenameSlackChannelTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRenameSlackChannelTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskRenameSlackChannelTaskParams)(nil)).Elem()
}

func (o WorkflowTaskRenameSlackChannelTaskParamsOutput) ToWorkflowTaskRenameSlackChannelTaskParamsOutput() WorkflowTaskRenameSlackChannelTaskParamsOutput {
	return o
}

func (o WorkflowTaskRenameSlackChannelTaskParamsOutput) ToWorkflowTaskRenameSlackChannelTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskRenameSlackChannelTaskParamsOutput {
	return o
}

func (o WorkflowTaskRenameSlackChannelTaskParamsOutput) ToWorkflowTaskRenameSlackChannelTaskParamsPtrOutput() WorkflowTaskRenameSlackChannelTaskParamsPtrOutput {
	return o.ToWorkflowTaskRenameSlackChannelTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskRenameSlackChannelTaskParamsOutput) ToWorkflowTaskRenameSlackChannelTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskRenameSlackChannelTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskRenameSlackChannelTaskParams) *WorkflowTaskRenameSlackChannelTaskParams {
		return &v
	}).(WorkflowTaskRenameSlackChannelTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskRenameSlackChannelTaskParamsOutput) Channel() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskRenameSlackChannelTaskParams) map[string]string { return v.Channel }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskRenameSlackChannelTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskRenameSlackChannelTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskRenameSlackChannelTaskParamsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskRenameSlackChannelTaskParams) string { return v.Title }).(pulumi.StringOutput)
}

type WorkflowTaskRenameSlackChannelTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRenameSlackChannelTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskRenameSlackChannelTaskParams)(nil)).Elem()
}

func (o WorkflowTaskRenameSlackChannelTaskParamsPtrOutput) ToWorkflowTaskRenameSlackChannelTaskParamsPtrOutput() WorkflowTaskRenameSlackChannelTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskRenameSlackChannelTaskParamsPtrOutput) ToWorkflowTaskRenameSlackChannelTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskRenameSlackChannelTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskRenameSlackChannelTaskParamsPtrOutput) Elem() WorkflowTaskRenameSlackChannelTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskRenameSlackChannelTaskParams) WorkflowTaskRenameSlackChannelTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskRenameSlackChannelTaskParams
		return ret
	}).(WorkflowTaskRenameSlackChannelTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskRenameSlackChannelTaskParamsPtrOutput) Channel() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskRenameSlackChannelTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskRenameSlackChannelTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRenameSlackChannelTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskRenameSlackChannelTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRenameSlackChannelTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskRunCommandHerokuTaskParams struct {
	AppName string `pulumi:"appName"`
	Command string `pulumi:"command"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                      `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	// Value must be one of `standard-1X`, `standard-2X`.
	Size     string  `pulumi:"size"`
	TaskType *string `pulumi:"taskType"`
}

// WorkflowTaskRunCommandHerokuTaskParamsInput is an input type that accepts WorkflowTaskRunCommandHerokuTaskParamsArgs and WorkflowTaskRunCommandHerokuTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskRunCommandHerokuTaskParamsInput` via:
//
//	WorkflowTaskRunCommandHerokuTaskParamsArgs{...}
type WorkflowTaskRunCommandHerokuTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskRunCommandHerokuTaskParamsOutput() WorkflowTaskRunCommandHerokuTaskParamsOutput
	ToWorkflowTaskRunCommandHerokuTaskParamsOutputWithContext(context.Context) WorkflowTaskRunCommandHerokuTaskParamsOutput
}

type WorkflowTaskRunCommandHerokuTaskParamsArgs struct {
	AppName pulumi.StringInput `pulumi:"appName"`
	Command pulumi.StringInput `pulumi:"command"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                                `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	// Value must be one of `standard-1X`, `standard-2X`.
	Size     pulumi.StringInput    `pulumi:"size"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskRunCommandHerokuTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskRunCommandHerokuTaskParams)(nil)).Elem()
}

func (i WorkflowTaskRunCommandHerokuTaskParamsArgs) ToWorkflowTaskRunCommandHerokuTaskParamsOutput() WorkflowTaskRunCommandHerokuTaskParamsOutput {
	return i.ToWorkflowTaskRunCommandHerokuTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskRunCommandHerokuTaskParamsArgs) ToWorkflowTaskRunCommandHerokuTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRunCommandHerokuTaskParamsOutput)
}

func (i WorkflowTaskRunCommandHerokuTaskParamsArgs) ToWorkflowTaskRunCommandHerokuTaskParamsPtrOutput() WorkflowTaskRunCommandHerokuTaskParamsPtrOutput {
	return i.ToWorkflowTaskRunCommandHerokuTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskRunCommandHerokuTaskParamsArgs) ToWorkflowTaskRunCommandHerokuTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRunCommandHerokuTaskParamsOutput).ToWorkflowTaskRunCommandHerokuTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskRunCommandHerokuTaskParamsPtrInput is an input type that accepts WorkflowTaskRunCommandHerokuTaskParamsArgs, WorkflowTaskRunCommandHerokuTaskParamsPtr and WorkflowTaskRunCommandHerokuTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskRunCommandHerokuTaskParamsPtrInput` via:
//
//	        WorkflowTaskRunCommandHerokuTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskRunCommandHerokuTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskRunCommandHerokuTaskParamsPtrOutput() WorkflowTaskRunCommandHerokuTaskParamsPtrOutput
	ToWorkflowTaskRunCommandHerokuTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskRunCommandHerokuTaskParamsPtrOutput
}

type workflowTaskRunCommandHerokuTaskParamsPtrType WorkflowTaskRunCommandHerokuTaskParamsArgs

func WorkflowTaskRunCommandHerokuTaskParamsPtr(v *WorkflowTaskRunCommandHerokuTaskParamsArgs) WorkflowTaskRunCommandHerokuTaskParamsPtrInput {
	return (*workflowTaskRunCommandHerokuTaskParamsPtrType)(v)
}

func (*workflowTaskRunCommandHerokuTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskRunCommandHerokuTaskParams)(nil)).Elem()
}

func (i *workflowTaskRunCommandHerokuTaskParamsPtrType) ToWorkflowTaskRunCommandHerokuTaskParamsPtrOutput() WorkflowTaskRunCommandHerokuTaskParamsPtrOutput {
	return i.ToWorkflowTaskRunCommandHerokuTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskRunCommandHerokuTaskParamsPtrType) ToWorkflowTaskRunCommandHerokuTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRunCommandHerokuTaskParamsPtrOutput)
}

type WorkflowTaskRunCommandHerokuTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRunCommandHerokuTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskRunCommandHerokuTaskParams)(nil)).Elem()
}

func (o WorkflowTaskRunCommandHerokuTaskParamsOutput) ToWorkflowTaskRunCommandHerokuTaskParamsOutput() WorkflowTaskRunCommandHerokuTaskParamsOutput {
	return o
}

func (o WorkflowTaskRunCommandHerokuTaskParamsOutput) ToWorkflowTaskRunCommandHerokuTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuTaskParamsOutput {
	return o
}

func (o WorkflowTaskRunCommandHerokuTaskParamsOutput) ToWorkflowTaskRunCommandHerokuTaskParamsPtrOutput() WorkflowTaskRunCommandHerokuTaskParamsPtrOutput {
	return o.ToWorkflowTaskRunCommandHerokuTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskRunCommandHerokuTaskParamsOutput) ToWorkflowTaskRunCommandHerokuTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskRunCommandHerokuTaskParams) *WorkflowTaskRunCommandHerokuTaskParams {
		return &v
	}).(WorkflowTaskRunCommandHerokuTaskParamsPtrOutput)
}

func (o WorkflowTaskRunCommandHerokuTaskParamsOutput) AppName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskRunCommandHerokuTaskParams) string { return v.AppName }).(pulumi.StringOutput)
}

func (o WorkflowTaskRunCommandHerokuTaskParamsOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskRunCommandHerokuTaskParams) string { return v.Command }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskRunCommandHerokuTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskRunCommandHerokuTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskRunCommandHerokuTaskParamsOutput) PostToSlackChannels() WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskRunCommandHerokuTaskParams) []WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput)
}

// Value must be one of `standard-1X`, `standard-2X`.
func (o WorkflowTaskRunCommandHerokuTaskParamsOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskRunCommandHerokuTaskParams) string { return v.Size }).(pulumi.StringOutput)
}

func (o WorkflowTaskRunCommandHerokuTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskRunCommandHerokuTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskRunCommandHerokuTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRunCommandHerokuTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskRunCommandHerokuTaskParams)(nil)).Elem()
}

func (o WorkflowTaskRunCommandHerokuTaskParamsPtrOutput) ToWorkflowTaskRunCommandHerokuTaskParamsPtrOutput() WorkflowTaskRunCommandHerokuTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskRunCommandHerokuTaskParamsPtrOutput) ToWorkflowTaskRunCommandHerokuTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskRunCommandHerokuTaskParamsPtrOutput) Elem() WorkflowTaskRunCommandHerokuTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskRunCommandHerokuTaskParams) WorkflowTaskRunCommandHerokuTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskRunCommandHerokuTaskParams
		return ret
	}).(WorkflowTaskRunCommandHerokuTaskParamsOutput)
}

func (o WorkflowTaskRunCommandHerokuTaskParamsPtrOutput) AppName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRunCommandHerokuTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.AppName
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskRunCommandHerokuTaskParamsPtrOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRunCommandHerokuTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Command
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskRunCommandHerokuTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRunCommandHerokuTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskRunCommandHerokuTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskRunCommandHerokuTaskParams) []WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput)
}

// Value must be one of `standard-1X`, `standard-2X`.
func (o WorkflowTaskRunCommandHerokuTaskParamsPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRunCommandHerokuTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskRunCommandHerokuTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRunCommandHerokuTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArgs and WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput() WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArgs) ToWorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput() WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArgs) ToWorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArray and WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArray{ WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArray []WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelInput

func (WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArray) ToWorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArray) ToWorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput) ToWorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput() WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput) ToWorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskSendDashboardReportTaskParams struct {
	// The email body
	Body         string   `pulumi:"body"`
	DashboardIds []string `pulumi:"dashboardIds"`
	// The from email address. Need to use SMTP integration if different than rootly.com
	From *string `pulumi:"from"`
	// The preheader
	Preheader *string `pulumi:"preheader"`
	// The subject
	Subject  string   `pulumi:"subject"`
	TaskType *string  `pulumi:"taskType"`
	Tos      []string `pulumi:"tos"`
}

// WorkflowTaskSendDashboardReportTaskParamsInput is an input type that accepts WorkflowTaskSendDashboardReportTaskParamsArgs and WorkflowTaskSendDashboardReportTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskSendDashboardReportTaskParamsInput` via:
//
//	WorkflowTaskSendDashboardReportTaskParamsArgs{...}
type WorkflowTaskSendDashboardReportTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskSendDashboardReportTaskParamsOutput() WorkflowTaskSendDashboardReportTaskParamsOutput
	ToWorkflowTaskSendDashboardReportTaskParamsOutputWithContext(context.Context) WorkflowTaskSendDashboardReportTaskParamsOutput
}

type WorkflowTaskSendDashboardReportTaskParamsArgs struct {
	// The email body
	Body         pulumi.StringInput      `pulumi:"body"`
	DashboardIds pulumi.StringArrayInput `pulumi:"dashboardIds"`
	// The from email address. Need to use SMTP integration if different than rootly.com
	From pulumi.StringPtrInput `pulumi:"from"`
	// The preheader
	Preheader pulumi.StringPtrInput `pulumi:"preheader"`
	// The subject
	Subject  pulumi.StringInput      `pulumi:"subject"`
	TaskType pulumi.StringPtrInput   `pulumi:"taskType"`
	Tos      pulumi.StringArrayInput `pulumi:"tos"`
}

func (WorkflowTaskSendDashboardReportTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendDashboardReportTaskParams)(nil)).Elem()
}

func (i WorkflowTaskSendDashboardReportTaskParamsArgs) ToWorkflowTaskSendDashboardReportTaskParamsOutput() WorkflowTaskSendDashboardReportTaskParamsOutput {
	return i.ToWorkflowTaskSendDashboardReportTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskSendDashboardReportTaskParamsArgs) ToWorkflowTaskSendDashboardReportTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSendDashboardReportTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendDashboardReportTaskParamsOutput)
}

func (i WorkflowTaskSendDashboardReportTaskParamsArgs) ToWorkflowTaskSendDashboardReportTaskParamsPtrOutput() WorkflowTaskSendDashboardReportTaskParamsPtrOutput {
	return i.ToWorkflowTaskSendDashboardReportTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskSendDashboardReportTaskParamsArgs) ToWorkflowTaskSendDashboardReportTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendDashboardReportTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendDashboardReportTaskParamsOutput).ToWorkflowTaskSendDashboardReportTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskSendDashboardReportTaskParamsPtrInput is an input type that accepts WorkflowTaskSendDashboardReportTaskParamsArgs, WorkflowTaskSendDashboardReportTaskParamsPtr and WorkflowTaskSendDashboardReportTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskSendDashboardReportTaskParamsPtrInput` via:
//
//	        WorkflowTaskSendDashboardReportTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskSendDashboardReportTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskSendDashboardReportTaskParamsPtrOutput() WorkflowTaskSendDashboardReportTaskParamsPtrOutput
	ToWorkflowTaskSendDashboardReportTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskSendDashboardReportTaskParamsPtrOutput
}

type workflowTaskSendDashboardReportTaskParamsPtrType WorkflowTaskSendDashboardReportTaskParamsArgs

func WorkflowTaskSendDashboardReportTaskParamsPtr(v *WorkflowTaskSendDashboardReportTaskParamsArgs) WorkflowTaskSendDashboardReportTaskParamsPtrInput {
	return (*workflowTaskSendDashboardReportTaskParamsPtrType)(v)
}

func (*workflowTaskSendDashboardReportTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSendDashboardReportTaskParams)(nil)).Elem()
}

func (i *workflowTaskSendDashboardReportTaskParamsPtrType) ToWorkflowTaskSendDashboardReportTaskParamsPtrOutput() WorkflowTaskSendDashboardReportTaskParamsPtrOutput {
	return i.ToWorkflowTaskSendDashboardReportTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskSendDashboardReportTaskParamsPtrType) ToWorkflowTaskSendDashboardReportTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendDashboardReportTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendDashboardReportTaskParamsPtrOutput)
}

type WorkflowTaskSendDashboardReportTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendDashboardReportTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendDashboardReportTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSendDashboardReportTaskParamsOutput) ToWorkflowTaskSendDashboardReportTaskParamsOutput() WorkflowTaskSendDashboardReportTaskParamsOutput {
	return o
}

func (o WorkflowTaskSendDashboardReportTaskParamsOutput) ToWorkflowTaskSendDashboardReportTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSendDashboardReportTaskParamsOutput {
	return o
}

func (o WorkflowTaskSendDashboardReportTaskParamsOutput) ToWorkflowTaskSendDashboardReportTaskParamsPtrOutput() WorkflowTaskSendDashboardReportTaskParamsPtrOutput {
	return o.ToWorkflowTaskSendDashboardReportTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskSendDashboardReportTaskParamsOutput) ToWorkflowTaskSendDashboardReportTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendDashboardReportTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskSendDashboardReportTaskParams) *WorkflowTaskSendDashboardReportTaskParams {
		return &v
	}).(WorkflowTaskSendDashboardReportTaskParamsPtrOutput)
}

// The email body
func (o WorkflowTaskSendDashboardReportTaskParamsOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendDashboardReportTaskParams) string { return v.Body }).(pulumi.StringOutput)
}

func (o WorkflowTaskSendDashboardReportTaskParamsOutput) DashboardIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSendDashboardReportTaskParams) []string { return v.DashboardIds }).(pulumi.StringArrayOutput)
}

// The from email address. Need to use SMTP integration if different than rootly.com
func (o WorkflowTaskSendDashboardReportTaskParamsOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendDashboardReportTaskParams) *string { return v.From }).(pulumi.StringPtrOutput)
}

// The preheader
func (o WorkflowTaskSendDashboardReportTaskParamsOutput) Preheader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendDashboardReportTaskParams) *string { return v.Preheader }).(pulumi.StringPtrOutput)
}

// The subject
func (o WorkflowTaskSendDashboardReportTaskParamsOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendDashboardReportTaskParams) string { return v.Subject }).(pulumi.StringOutput)
}

func (o WorkflowTaskSendDashboardReportTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendDashboardReportTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskSendDashboardReportTaskParamsOutput) Tos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSendDashboardReportTaskParams) []string { return v.Tos }).(pulumi.StringArrayOutput)
}

type WorkflowTaskSendDashboardReportTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendDashboardReportTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSendDashboardReportTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSendDashboardReportTaskParamsPtrOutput) ToWorkflowTaskSendDashboardReportTaskParamsPtrOutput() WorkflowTaskSendDashboardReportTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSendDashboardReportTaskParamsPtrOutput) ToWorkflowTaskSendDashboardReportTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendDashboardReportTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSendDashboardReportTaskParamsPtrOutput) Elem() WorkflowTaskSendDashboardReportTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskSendDashboardReportTaskParams) WorkflowTaskSendDashboardReportTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskSendDashboardReportTaskParams
		return ret
	}).(WorkflowTaskSendDashboardReportTaskParamsOutput)
}

// The email body
func (o WorkflowTaskSendDashboardReportTaskParamsPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendDashboardReportTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Body
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskSendDashboardReportTaskParamsPtrOutput) DashboardIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSendDashboardReportTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.DashboardIds
	}).(pulumi.StringArrayOutput)
}

// The from email address. Need to use SMTP integration if different than rootly.com
func (o WorkflowTaskSendDashboardReportTaskParamsPtrOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendDashboardReportTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.From
	}).(pulumi.StringPtrOutput)
}

// The preheader
func (o WorkflowTaskSendDashboardReportTaskParamsPtrOutput) Preheader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendDashboardReportTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Preheader
	}).(pulumi.StringPtrOutput)
}

// The subject
func (o WorkflowTaskSendDashboardReportTaskParamsPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendDashboardReportTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskSendDashboardReportTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendDashboardReportTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskSendDashboardReportTaskParamsPtrOutput) Tos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSendDashboardReportTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.Tos
	}).(pulumi.StringArrayOutput)
}

type WorkflowTaskSendEmailTaskParams struct {
	Bccs []string `pulumi:"bccs"`
	// The email body
	Body string   `pulumi:"body"`
	Ccs  []string `pulumi:"ccs"`
	// URL to your custom email logo
	CustomLogoUrl *string `pulumi:"customLogoUrl"`
	// The from email address. Need to use SMTP integration if different than rootly.com
	From *string `pulumi:"from"`
	// Value must be one of true or false
	IncludeFooter *bool `pulumi:"includeFooter"`
	// Value must be one of true or false
	IncludeHeader *bool `pulumi:"includeHeader"`
	// The preheader
	Preheader *string `pulumi:"preheader"`
	// The subject
	Subject  string   `pulumi:"subject"`
	TaskType *string  `pulumi:"taskType"`
	Tos      []string `pulumi:"tos"`
}

// WorkflowTaskSendEmailTaskParamsInput is an input type that accepts WorkflowTaskSendEmailTaskParamsArgs and WorkflowTaskSendEmailTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskSendEmailTaskParamsInput` via:
//
//	WorkflowTaskSendEmailTaskParamsArgs{...}
type WorkflowTaskSendEmailTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskSendEmailTaskParamsOutput() WorkflowTaskSendEmailTaskParamsOutput
	ToWorkflowTaskSendEmailTaskParamsOutputWithContext(context.Context) WorkflowTaskSendEmailTaskParamsOutput
}

type WorkflowTaskSendEmailTaskParamsArgs struct {
	Bccs pulumi.StringArrayInput `pulumi:"bccs"`
	// The email body
	Body pulumi.StringInput      `pulumi:"body"`
	Ccs  pulumi.StringArrayInput `pulumi:"ccs"`
	// URL to your custom email logo
	CustomLogoUrl pulumi.StringPtrInput `pulumi:"customLogoUrl"`
	// The from email address. Need to use SMTP integration if different than rootly.com
	From pulumi.StringPtrInput `pulumi:"from"`
	// Value must be one of true or false
	IncludeFooter pulumi.BoolPtrInput `pulumi:"includeFooter"`
	// Value must be one of true or false
	IncludeHeader pulumi.BoolPtrInput `pulumi:"includeHeader"`
	// The preheader
	Preheader pulumi.StringPtrInput `pulumi:"preheader"`
	// The subject
	Subject  pulumi.StringInput      `pulumi:"subject"`
	TaskType pulumi.StringPtrInput   `pulumi:"taskType"`
	Tos      pulumi.StringArrayInput `pulumi:"tos"`
}

func (WorkflowTaskSendEmailTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendEmailTaskParams)(nil)).Elem()
}

func (i WorkflowTaskSendEmailTaskParamsArgs) ToWorkflowTaskSendEmailTaskParamsOutput() WorkflowTaskSendEmailTaskParamsOutput {
	return i.ToWorkflowTaskSendEmailTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskSendEmailTaskParamsArgs) ToWorkflowTaskSendEmailTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSendEmailTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendEmailTaskParamsOutput)
}

func (i WorkflowTaskSendEmailTaskParamsArgs) ToWorkflowTaskSendEmailTaskParamsPtrOutput() WorkflowTaskSendEmailTaskParamsPtrOutput {
	return i.ToWorkflowTaskSendEmailTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskSendEmailTaskParamsArgs) ToWorkflowTaskSendEmailTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendEmailTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendEmailTaskParamsOutput).ToWorkflowTaskSendEmailTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskSendEmailTaskParamsPtrInput is an input type that accepts WorkflowTaskSendEmailTaskParamsArgs, WorkflowTaskSendEmailTaskParamsPtr and WorkflowTaskSendEmailTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskSendEmailTaskParamsPtrInput` via:
//
//	        WorkflowTaskSendEmailTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskSendEmailTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskSendEmailTaskParamsPtrOutput() WorkflowTaskSendEmailTaskParamsPtrOutput
	ToWorkflowTaskSendEmailTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskSendEmailTaskParamsPtrOutput
}

type workflowTaskSendEmailTaskParamsPtrType WorkflowTaskSendEmailTaskParamsArgs

func WorkflowTaskSendEmailTaskParamsPtr(v *WorkflowTaskSendEmailTaskParamsArgs) WorkflowTaskSendEmailTaskParamsPtrInput {
	return (*workflowTaskSendEmailTaskParamsPtrType)(v)
}

func (*workflowTaskSendEmailTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSendEmailTaskParams)(nil)).Elem()
}

func (i *workflowTaskSendEmailTaskParamsPtrType) ToWorkflowTaskSendEmailTaskParamsPtrOutput() WorkflowTaskSendEmailTaskParamsPtrOutput {
	return i.ToWorkflowTaskSendEmailTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskSendEmailTaskParamsPtrType) ToWorkflowTaskSendEmailTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendEmailTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendEmailTaskParamsPtrOutput)
}

type WorkflowTaskSendEmailTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendEmailTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendEmailTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSendEmailTaskParamsOutput) ToWorkflowTaskSendEmailTaskParamsOutput() WorkflowTaskSendEmailTaskParamsOutput {
	return o
}

func (o WorkflowTaskSendEmailTaskParamsOutput) ToWorkflowTaskSendEmailTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSendEmailTaskParamsOutput {
	return o
}

func (o WorkflowTaskSendEmailTaskParamsOutput) ToWorkflowTaskSendEmailTaskParamsPtrOutput() WorkflowTaskSendEmailTaskParamsPtrOutput {
	return o.ToWorkflowTaskSendEmailTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskSendEmailTaskParamsOutput) ToWorkflowTaskSendEmailTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendEmailTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskSendEmailTaskParams) *WorkflowTaskSendEmailTaskParams {
		return &v
	}).(WorkflowTaskSendEmailTaskParamsPtrOutput)
}

func (o WorkflowTaskSendEmailTaskParamsOutput) Bccs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSendEmailTaskParams) []string { return v.Bccs }).(pulumi.StringArrayOutput)
}

// The email body
func (o WorkflowTaskSendEmailTaskParamsOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendEmailTaskParams) string { return v.Body }).(pulumi.StringOutput)
}

func (o WorkflowTaskSendEmailTaskParamsOutput) Ccs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSendEmailTaskParams) []string { return v.Ccs }).(pulumi.StringArrayOutput)
}

// URL to your custom email logo
func (o WorkflowTaskSendEmailTaskParamsOutput) CustomLogoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendEmailTaskParams) *string { return v.CustomLogoUrl }).(pulumi.StringPtrOutput)
}

// The from email address. Need to use SMTP integration if different than rootly.com
func (o WorkflowTaskSendEmailTaskParamsOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendEmailTaskParams) *string { return v.From }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendEmailTaskParamsOutput) IncludeFooter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendEmailTaskParams) *bool { return v.IncludeFooter }).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendEmailTaskParamsOutput) IncludeHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendEmailTaskParams) *bool { return v.IncludeHeader }).(pulumi.BoolPtrOutput)
}

// The preheader
func (o WorkflowTaskSendEmailTaskParamsOutput) Preheader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendEmailTaskParams) *string { return v.Preheader }).(pulumi.StringPtrOutput)
}

// The subject
func (o WorkflowTaskSendEmailTaskParamsOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendEmailTaskParams) string { return v.Subject }).(pulumi.StringOutput)
}

func (o WorkflowTaskSendEmailTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendEmailTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskSendEmailTaskParamsOutput) Tos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSendEmailTaskParams) []string { return v.Tos }).(pulumi.StringArrayOutput)
}

type WorkflowTaskSendEmailTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendEmailTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSendEmailTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSendEmailTaskParamsPtrOutput) ToWorkflowTaskSendEmailTaskParamsPtrOutput() WorkflowTaskSendEmailTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSendEmailTaskParamsPtrOutput) ToWorkflowTaskSendEmailTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendEmailTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSendEmailTaskParamsPtrOutput) Elem() WorkflowTaskSendEmailTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskSendEmailTaskParams) WorkflowTaskSendEmailTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskSendEmailTaskParams
		return ret
	}).(WorkflowTaskSendEmailTaskParamsOutput)
}

func (o WorkflowTaskSendEmailTaskParamsPtrOutput) Bccs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSendEmailTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.Bccs
	}).(pulumi.StringArrayOutput)
}

// The email body
func (o WorkflowTaskSendEmailTaskParamsPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendEmailTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Body
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskSendEmailTaskParamsPtrOutput) Ccs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSendEmailTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.Ccs
	}).(pulumi.StringArrayOutput)
}

// URL to your custom email logo
func (o WorkflowTaskSendEmailTaskParamsPtrOutput) CustomLogoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendEmailTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomLogoUrl
	}).(pulumi.StringPtrOutput)
}

// The from email address. Need to use SMTP integration if different than rootly.com
func (o WorkflowTaskSendEmailTaskParamsPtrOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendEmailTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendEmailTaskParamsPtrOutput) IncludeFooter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendEmailTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeFooter
	}).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendEmailTaskParamsPtrOutput) IncludeHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendEmailTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeHeader
	}).(pulumi.BoolPtrOutput)
}

// The preheader
func (o WorkflowTaskSendEmailTaskParamsPtrOutput) Preheader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendEmailTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Preheader
	}).(pulumi.StringPtrOutput)
}

// The subject
func (o WorkflowTaskSendEmailTaskParamsPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendEmailTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskSendEmailTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendEmailTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskSendEmailTaskParamsPtrOutput) Tos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSendEmailTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.Tos
	}).(pulumi.StringArrayOutput)
}

type WorkflowTaskSendSlackBlocksTaskParams struct {
	// Support liquid markup. Needs to be a valid JSON string after liquid is parsed
	Attachments *string `pulumi:"attachments"`
	// Support liquid markup. Needs to be a valid JSON string after liquid is parsed
	Blocks string `pulumi:"blocks"`
	// Value must be one of true or false
	BroadcastThreadReplyToChannel *bool                                          `pulumi:"broadcastThreadReplyToChannel"`
	Channels                      []WorkflowTaskSendSlackBlocksTaskParamsChannel `pulumi:"channels"`
	Message                       *string                                        `pulumi:"message"`
	// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
	ParentMessageThreadTask map[string]string `pulumi:"parentMessageThreadTask"`
	// Value must be one of true or false
	PinToChannel *bool `pulumi:"pinToChannel"`
	// Value must be one of true or false
	SendAsEphemeral *bool `pulumi:"sendAsEphemeral"`
	// When set to true, if the parent for this threaded message cannot be found the message will be skipped.. Value must be one of true or false
	SendOnlyAsThreadedMessage *bool                                                 `pulumi:"sendOnlyAsThreadedMessage"`
	SlackUserGroups           []WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroup `pulumi:"slackUserGroups"`
	SlackUsers                []WorkflowTaskSendSlackBlocksTaskParamsSlackUser      `pulumi:"slackUsers"`
	TaskType                  *string                                               `pulumi:"taskType"`
	// Value must be one of true or false
	UpdateParentMessage *bool `pulumi:"updateParentMessage"`
}

// WorkflowTaskSendSlackBlocksTaskParamsInput is an input type that accepts WorkflowTaskSendSlackBlocksTaskParamsArgs and WorkflowTaskSendSlackBlocksTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSlackBlocksTaskParamsInput` via:
//
//	WorkflowTaskSendSlackBlocksTaskParamsArgs{...}
type WorkflowTaskSendSlackBlocksTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskSendSlackBlocksTaskParamsOutput() WorkflowTaskSendSlackBlocksTaskParamsOutput
	ToWorkflowTaskSendSlackBlocksTaskParamsOutputWithContext(context.Context) WorkflowTaskSendSlackBlocksTaskParamsOutput
}

type WorkflowTaskSendSlackBlocksTaskParamsArgs struct {
	// Support liquid markup. Needs to be a valid JSON string after liquid is parsed
	Attachments pulumi.StringPtrInput `pulumi:"attachments"`
	// Support liquid markup. Needs to be a valid JSON string after liquid is parsed
	Blocks pulumi.StringInput `pulumi:"blocks"`
	// Value must be one of true or false
	BroadcastThreadReplyToChannel pulumi.BoolPtrInput                                    `pulumi:"broadcastThreadReplyToChannel"`
	Channels                      WorkflowTaskSendSlackBlocksTaskParamsChannelArrayInput `pulumi:"channels"`
	Message                       pulumi.StringPtrInput                                  `pulumi:"message"`
	// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
	ParentMessageThreadTask pulumi.StringMapInput `pulumi:"parentMessageThreadTask"`
	// Value must be one of true or false
	PinToChannel pulumi.BoolPtrInput `pulumi:"pinToChannel"`
	// Value must be one of true or false
	SendAsEphemeral pulumi.BoolPtrInput `pulumi:"sendAsEphemeral"`
	// When set to true, if the parent for this threaded message cannot be found the message will be skipped.. Value must be one of true or false
	SendOnlyAsThreadedMessage pulumi.BoolPtrInput                                           `pulumi:"sendOnlyAsThreadedMessage"`
	SlackUserGroups           WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayInput `pulumi:"slackUserGroups"`
	SlackUsers                WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayInput      `pulumi:"slackUsers"`
	TaskType                  pulumi.StringPtrInput                                         `pulumi:"taskType"`
	// Value must be one of true or false
	UpdateParentMessage pulumi.BoolPtrInput `pulumi:"updateParentMessage"`
}

func (WorkflowTaskSendSlackBlocksTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSlackBlocksTaskParams)(nil)).Elem()
}

func (i WorkflowTaskSendSlackBlocksTaskParamsArgs) ToWorkflowTaskSendSlackBlocksTaskParamsOutput() WorkflowTaskSendSlackBlocksTaskParamsOutput {
	return i.ToWorkflowTaskSendSlackBlocksTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSlackBlocksTaskParamsArgs) ToWorkflowTaskSendSlackBlocksTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackBlocksTaskParamsOutput)
}

func (i WorkflowTaskSendSlackBlocksTaskParamsArgs) ToWorkflowTaskSendSlackBlocksTaskParamsPtrOutput() WorkflowTaskSendSlackBlocksTaskParamsPtrOutput {
	return i.ToWorkflowTaskSendSlackBlocksTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSlackBlocksTaskParamsArgs) ToWorkflowTaskSendSlackBlocksTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackBlocksTaskParamsOutput).ToWorkflowTaskSendSlackBlocksTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskSendSlackBlocksTaskParamsPtrInput is an input type that accepts WorkflowTaskSendSlackBlocksTaskParamsArgs, WorkflowTaskSendSlackBlocksTaskParamsPtr and WorkflowTaskSendSlackBlocksTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSlackBlocksTaskParamsPtrInput` via:
//
//	        WorkflowTaskSendSlackBlocksTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskSendSlackBlocksTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskSendSlackBlocksTaskParamsPtrOutput() WorkflowTaskSendSlackBlocksTaskParamsPtrOutput
	ToWorkflowTaskSendSlackBlocksTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskSendSlackBlocksTaskParamsPtrOutput
}

type workflowTaskSendSlackBlocksTaskParamsPtrType WorkflowTaskSendSlackBlocksTaskParamsArgs

func WorkflowTaskSendSlackBlocksTaskParamsPtr(v *WorkflowTaskSendSlackBlocksTaskParamsArgs) WorkflowTaskSendSlackBlocksTaskParamsPtrInput {
	return (*workflowTaskSendSlackBlocksTaskParamsPtrType)(v)
}

func (*workflowTaskSendSlackBlocksTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSendSlackBlocksTaskParams)(nil)).Elem()
}

func (i *workflowTaskSendSlackBlocksTaskParamsPtrType) ToWorkflowTaskSendSlackBlocksTaskParamsPtrOutput() WorkflowTaskSendSlackBlocksTaskParamsPtrOutput {
	return i.ToWorkflowTaskSendSlackBlocksTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskSendSlackBlocksTaskParamsPtrType) ToWorkflowTaskSendSlackBlocksTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackBlocksTaskParamsPtrOutput)
}

type WorkflowTaskSendSlackBlocksTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSlackBlocksTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSlackBlocksTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) ToWorkflowTaskSendSlackBlocksTaskParamsOutput() WorkflowTaskSendSlackBlocksTaskParamsOutput {
	return o
}

func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) ToWorkflowTaskSendSlackBlocksTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsOutput {
	return o
}

func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) ToWorkflowTaskSendSlackBlocksTaskParamsPtrOutput() WorkflowTaskSendSlackBlocksTaskParamsPtrOutput {
	return o.ToWorkflowTaskSendSlackBlocksTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) ToWorkflowTaskSendSlackBlocksTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskSendSlackBlocksTaskParams) *WorkflowTaskSendSlackBlocksTaskParams {
		return &v
	}).(WorkflowTaskSendSlackBlocksTaskParamsPtrOutput)
}

// Support liquid markup. Needs to be a valid JSON string after liquid is parsed
func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) Attachments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParams) *string { return v.Attachments }).(pulumi.StringPtrOutput)
}

// Support liquid markup. Needs to be a valid JSON string after liquid is parsed
func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) Blocks() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParams) string { return v.Blocks }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) BroadcastThreadReplyToChannel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParams) *bool { return v.BroadcastThreadReplyToChannel }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) Channels() WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParams) []WorkflowTaskSendSlackBlocksTaskParamsChannel {
		return v.Channels
	}).(WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput)
}

func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParams) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) ParentMessageThreadTask() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParams) map[string]string { return v.ParentMessageThreadTask }).(pulumi.StringMapOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) PinToChannel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParams) *bool { return v.PinToChannel }).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) SendAsEphemeral() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParams) *bool { return v.SendAsEphemeral }).(pulumi.BoolPtrOutput)
}

// When set to true, if the parent for this threaded message cannot be found the message will be skipped.. Value must be one of true or false
func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) SendOnlyAsThreadedMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParams) *bool { return v.SendOnlyAsThreadedMessage }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) SlackUserGroups() WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParams) []WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroup {
		return v.SlackUserGroups
	}).(WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput)
}

func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) SlackUsers() WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParams) []WorkflowTaskSendSlackBlocksTaskParamsSlackUser {
		return v.SlackUsers
	}).(WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput)
}

func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendSlackBlocksTaskParamsOutput) UpdateParentMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParams) *bool { return v.UpdateParentMessage }).(pulumi.BoolPtrOutput)
}

type WorkflowTaskSendSlackBlocksTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSendSlackBlocksTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) ToWorkflowTaskSendSlackBlocksTaskParamsPtrOutput() WorkflowTaskSendSlackBlocksTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) ToWorkflowTaskSendSlackBlocksTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) Elem() WorkflowTaskSendSlackBlocksTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackBlocksTaskParams) WorkflowTaskSendSlackBlocksTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskSendSlackBlocksTaskParams
		return ret
	}).(WorkflowTaskSendSlackBlocksTaskParamsOutput)
}

// Support liquid markup. Needs to be a valid JSON string after liquid is parsed
func (o WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) Attachments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackBlocksTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Attachments
	}).(pulumi.StringPtrOutput)
}

// Support liquid markup. Needs to be a valid JSON string after liquid is parsed
func (o WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) Blocks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackBlocksTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Blocks
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) BroadcastThreadReplyToChannel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackBlocksTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.BroadcastThreadReplyToChannel
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) Channels() WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackBlocksTaskParams) []WorkflowTaskSendSlackBlocksTaskParamsChannel {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput)
}

func (o WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackBlocksTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
func (o WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) ParentMessageThreadTask() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackBlocksTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.ParentMessageThreadTask
	}).(pulumi.StringMapOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) PinToChannel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackBlocksTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PinToChannel
	}).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) SendAsEphemeral() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackBlocksTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.SendAsEphemeral
	}).(pulumi.BoolPtrOutput)
}

// When set to true, if the parent for this threaded message cannot be found the message will be skipped.. Value must be one of true or false
func (o WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) SendOnlyAsThreadedMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackBlocksTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.SendOnlyAsThreadedMessage
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) SlackUserGroups() WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackBlocksTaskParams) []WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroup {
		if v == nil {
			return nil
		}
		return v.SlackUserGroups
	}).(WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput)
}

func (o WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) SlackUsers() WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackBlocksTaskParams) []WorkflowTaskSendSlackBlocksTaskParamsSlackUser {
		if v == nil {
			return nil
		}
		return v.SlackUsers
	}).(WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput)
}

func (o WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackBlocksTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendSlackBlocksTaskParamsPtrOutput) UpdateParentMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackBlocksTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.UpdateParentMessage
	}).(pulumi.BoolPtrOutput)
}

type WorkflowTaskSendSlackBlocksTaskParamsChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskSendSlackBlocksTaskParamsChannelInput is an input type that accepts WorkflowTaskSendSlackBlocksTaskParamsChannelArgs and WorkflowTaskSendSlackBlocksTaskParamsChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSlackBlocksTaskParamsChannelInput` via:
//
//	WorkflowTaskSendSlackBlocksTaskParamsChannelArgs{...}
type WorkflowTaskSendSlackBlocksTaskParamsChannelInput interface {
	pulumi.Input

	ToWorkflowTaskSendSlackBlocksTaskParamsChannelOutput() WorkflowTaskSendSlackBlocksTaskParamsChannelOutput
	ToWorkflowTaskSendSlackBlocksTaskParamsChannelOutputWithContext(context.Context) WorkflowTaskSendSlackBlocksTaskParamsChannelOutput
}

type WorkflowTaskSendSlackBlocksTaskParamsChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskSendSlackBlocksTaskParamsChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSlackBlocksTaskParamsChannel)(nil)).Elem()
}

func (i WorkflowTaskSendSlackBlocksTaskParamsChannelArgs) ToWorkflowTaskSendSlackBlocksTaskParamsChannelOutput() WorkflowTaskSendSlackBlocksTaskParamsChannelOutput {
	return i.ToWorkflowTaskSendSlackBlocksTaskParamsChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSlackBlocksTaskParamsChannelArgs) ToWorkflowTaskSendSlackBlocksTaskParamsChannelOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackBlocksTaskParamsChannelOutput)
}

// WorkflowTaskSendSlackBlocksTaskParamsChannelArrayInput is an input type that accepts WorkflowTaskSendSlackBlocksTaskParamsChannelArray and WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSlackBlocksTaskParamsChannelArrayInput` via:
//
//	WorkflowTaskSendSlackBlocksTaskParamsChannelArray{ WorkflowTaskSendSlackBlocksTaskParamsChannelArgs{...} }
type WorkflowTaskSendSlackBlocksTaskParamsChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput() WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput
	ToWorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutputWithContext(context.Context) WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput
}

type WorkflowTaskSendSlackBlocksTaskParamsChannelArray []WorkflowTaskSendSlackBlocksTaskParamsChannelInput

func (WorkflowTaskSendSlackBlocksTaskParamsChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSendSlackBlocksTaskParamsChannel)(nil)).Elem()
}

func (i WorkflowTaskSendSlackBlocksTaskParamsChannelArray) ToWorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput() WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput {
	return i.ToWorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSlackBlocksTaskParamsChannelArray) ToWorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput)
}

type WorkflowTaskSendSlackBlocksTaskParamsChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSlackBlocksTaskParamsChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSlackBlocksTaskParamsChannel)(nil)).Elem()
}

func (o WorkflowTaskSendSlackBlocksTaskParamsChannelOutput) ToWorkflowTaskSendSlackBlocksTaskParamsChannelOutput() WorkflowTaskSendSlackBlocksTaskParamsChannelOutput {
	return o
}

func (o WorkflowTaskSendSlackBlocksTaskParamsChannelOutput) ToWorkflowTaskSendSlackBlocksTaskParamsChannelOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsChannelOutput {
	return o
}

func (o WorkflowTaskSendSlackBlocksTaskParamsChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParamsChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskSendSlackBlocksTaskParamsChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParamsChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSendSlackBlocksTaskParamsChannel)(nil)).Elem()
}

func (o WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput) ToWorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput() WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput {
	return o
}

func (o WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput) ToWorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput {
	return o
}

func (o WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskSendSlackBlocksTaskParamsChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskSendSlackBlocksTaskParamsChannel {
		return vs[0].([]WorkflowTaskSendSlackBlocksTaskParamsChannel)[vs[1].(int)]
	}).(WorkflowTaskSendSlackBlocksTaskParamsChannelOutput)
}

type WorkflowTaskSendSlackBlocksTaskParamsSlackUser struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskSendSlackBlocksTaskParamsSlackUserInput is an input type that accepts WorkflowTaskSendSlackBlocksTaskParamsSlackUserArgs and WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSlackBlocksTaskParamsSlackUserInput` via:
//
//	WorkflowTaskSendSlackBlocksTaskParamsSlackUserArgs{...}
type WorkflowTaskSendSlackBlocksTaskParamsSlackUserInput interface {
	pulumi.Input

	ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput() WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput
	ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserOutputWithContext(context.Context) WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput
}

type WorkflowTaskSendSlackBlocksTaskParamsSlackUserArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskSendSlackBlocksTaskParamsSlackUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSlackBlocksTaskParamsSlackUser)(nil)).Elem()
}

func (i WorkflowTaskSendSlackBlocksTaskParamsSlackUserArgs) ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput() WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput {
	return i.ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSlackBlocksTaskParamsSlackUserArgs) ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput)
}

// WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayInput is an input type that accepts WorkflowTaskSendSlackBlocksTaskParamsSlackUserArray and WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayInput` via:
//
//	WorkflowTaskSendSlackBlocksTaskParamsSlackUserArray{ WorkflowTaskSendSlackBlocksTaskParamsSlackUserArgs{...} }
type WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayInput interface {
	pulumi.Input

	ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput() WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput
	ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutputWithContext(context.Context) WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput
}

type WorkflowTaskSendSlackBlocksTaskParamsSlackUserArray []WorkflowTaskSendSlackBlocksTaskParamsSlackUserInput

func (WorkflowTaskSendSlackBlocksTaskParamsSlackUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSendSlackBlocksTaskParamsSlackUser)(nil)).Elem()
}

func (i WorkflowTaskSendSlackBlocksTaskParamsSlackUserArray) ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput() WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput {
	return i.ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSlackBlocksTaskParamsSlackUserArray) ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput)
}

type WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSlackBlocksTaskParamsSlackUser)(nil)).Elem()
}

func (o WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput) ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput() WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput {
	return o
}

func (o WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput) ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput {
	return o
}

func (o WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParamsSlackUser) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParamsSlackUser) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSendSlackBlocksTaskParamsSlackUser)(nil)).Elem()
}

func (o WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput) ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput() WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput {
	return o
}

func (o WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput) ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput {
	return o
}

func (o WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput) Index(i pulumi.IntInput) WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskSendSlackBlocksTaskParamsSlackUser {
		return vs[0].([]WorkflowTaskSendSlackBlocksTaskParamsSlackUser)[vs[1].(int)]
	}).(WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput)
}

type WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroup struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupInput is an input type that accepts WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArgs and WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupInput` via:
//
//	WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArgs{...}
type WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupInput interface {
	pulumi.Input

	ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput() WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput
	ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutputWithContext(context.Context) WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput
}

type WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroup)(nil)).Elem()
}

func (i WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArgs) ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput() WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput {
	return i.ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArgs) ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput)
}

// WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayInput is an input type that accepts WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArray and WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayInput` via:
//
//	WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArray{ WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArgs{...} }
type WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayInput interface {
	pulumi.Input

	ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput() WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput
	ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutputWithContext(context.Context) WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput
}

type WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArray []WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupInput

func (WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroup)(nil)).Elem()
}

func (i WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArray) ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput() WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput {
	return i.ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArray) ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput)
}

type WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroup)(nil)).Elem()
}

func (o WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput) ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput() WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput {
	return o
}

func (o WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput) ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput {
	return o
}

func (o WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroup) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroup)(nil)).Elem()
}

func (o WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput) ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput() WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput {
	return o
}

func (o WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput) ToWorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutputWithContext(ctx context.Context) WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput {
	return o
}

func (o WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput) Index(i pulumi.IntInput) WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroup {
		return vs[0].([]WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroup)[vs[1].(int)]
	}).(WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput)
}

type WorkflowTaskSendSlackMessageTaskParams struct {
	// Value must be one of `updateSummary`, `updateStatus`, `archiveChannel`, `manageIncidentRoles`, `updateIncident`, `allCommands`, `leaveFeedback`, `manageFormFields`, `manageActionItems`, `viewTasks`, `addPagerdutyResponders`, `addOpsgenieResponders`, `addVictorOpsResponders`, `snoozeReminder`, `pauseReminder`, `restartReminder`, `updateStatusPage`, `cancelIncident`.
	Actionables []string `pulumi:"actionables"`
	// Value must be one of true or false
	BroadcastThreadReplyToChannel *bool                                           `pulumi:"broadcastThreadReplyToChannel"`
	Channels                      []WorkflowTaskSendSlackMessageTaskParamsChannel `pulumi:"channels"`
	// A hex color
	Color *string `pulumi:"color"`
	// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
	ParentMessageThreadTask map[string]string `pulumi:"parentMessageThreadTask"`
	// Value must be one of true or false
	PinToChannel *bool `pulumi:"pinToChannel"`
	// Value must be one of true or false
	SendAsEphemeral *bool `pulumi:"sendAsEphemeral"`
	// When set to true, if the parent for this threaded message cannot be found the message will be skipped.. Value must be one of true or false
	SendOnlyAsThreadedMessage *bool                                                  `pulumi:"sendOnlyAsThreadedMessage"`
	SlackUserGroups           []WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup `pulumi:"slackUserGroups"`
	SlackUsers                []WorkflowTaskSendSlackMessageTaskParamsSlackUser      `pulumi:"slackUsers"`
	TaskType                  *string                                                `pulumi:"taskType"`
	// The message text
	Text string `pulumi:"text"`
	// Value must be one of true or false
	UpdateParentMessage *bool `pulumi:"updateParentMessage"`
}

// WorkflowTaskSendSlackMessageTaskParamsInput is an input type that accepts WorkflowTaskSendSlackMessageTaskParamsArgs and WorkflowTaskSendSlackMessageTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSlackMessageTaskParamsInput` via:
//
//	WorkflowTaskSendSlackMessageTaskParamsArgs{...}
type WorkflowTaskSendSlackMessageTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskSendSlackMessageTaskParamsOutput() WorkflowTaskSendSlackMessageTaskParamsOutput
	ToWorkflowTaskSendSlackMessageTaskParamsOutputWithContext(context.Context) WorkflowTaskSendSlackMessageTaskParamsOutput
}

type WorkflowTaskSendSlackMessageTaskParamsArgs struct {
	// Value must be one of `updateSummary`, `updateStatus`, `archiveChannel`, `manageIncidentRoles`, `updateIncident`, `allCommands`, `leaveFeedback`, `manageFormFields`, `manageActionItems`, `viewTasks`, `addPagerdutyResponders`, `addOpsgenieResponders`, `addVictorOpsResponders`, `snoozeReminder`, `pauseReminder`, `restartReminder`, `updateStatusPage`, `cancelIncident`.
	Actionables pulumi.StringArrayInput `pulumi:"actionables"`
	// Value must be one of true or false
	BroadcastThreadReplyToChannel pulumi.BoolPtrInput                                     `pulumi:"broadcastThreadReplyToChannel"`
	Channels                      WorkflowTaskSendSlackMessageTaskParamsChannelArrayInput `pulumi:"channels"`
	// A hex color
	Color pulumi.StringPtrInput `pulumi:"color"`
	// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
	ParentMessageThreadTask pulumi.StringMapInput `pulumi:"parentMessageThreadTask"`
	// Value must be one of true or false
	PinToChannel pulumi.BoolPtrInput `pulumi:"pinToChannel"`
	// Value must be one of true or false
	SendAsEphemeral pulumi.BoolPtrInput `pulumi:"sendAsEphemeral"`
	// When set to true, if the parent for this threaded message cannot be found the message will be skipped.. Value must be one of true or false
	SendOnlyAsThreadedMessage pulumi.BoolPtrInput                                            `pulumi:"sendOnlyAsThreadedMessage"`
	SlackUserGroups           WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayInput `pulumi:"slackUserGroups"`
	SlackUsers                WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayInput      `pulumi:"slackUsers"`
	TaskType                  pulumi.StringPtrInput                                          `pulumi:"taskType"`
	// The message text
	Text pulumi.StringInput `pulumi:"text"`
	// Value must be one of true or false
	UpdateParentMessage pulumi.BoolPtrInput `pulumi:"updateParentMessage"`
}

func (WorkflowTaskSendSlackMessageTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSlackMessageTaskParams)(nil)).Elem()
}

func (i WorkflowTaskSendSlackMessageTaskParamsArgs) ToWorkflowTaskSendSlackMessageTaskParamsOutput() WorkflowTaskSendSlackMessageTaskParamsOutput {
	return i.ToWorkflowTaskSendSlackMessageTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSlackMessageTaskParamsArgs) ToWorkflowTaskSendSlackMessageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackMessageTaskParamsOutput)
}

func (i WorkflowTaskSendSlackMessageTaskParamsArgs) ToWorkflowTaskSendSlackMessageTaskParamsPtrOutput() WorkflowTaskSendSlackMessageTaskParamsPtrOutput {
	return i.ToWorkflowTaskSendSlackMessageTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSlackMessageTaskParamsArgs) ToWorkflowTaskSendSlackMessageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackMessageTaskParamsOutput).ToWorkflowTaskSendSlackMessageTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskSendSlackMessageTaskParamsPtrInput is an input type that accepts WorkflowTaskSendSlackMessageTaskParamsArgs, WorkflowTaskSendSlackMessageTaskParamsPtr and WorkflowTaskSendSlackMessageTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSlackMessageTaskParamsPtrInput` via:
//
//	        WorkflowTaskSendSlackMessageTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskSendSlackMessageTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskSendSlackMessageTaskParamsPtrOutput() WorkflowTaskSendSlackMessageTaskParamsPtrOutput
	ToWorkflowTaskSendSlackMessageTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskSendSlackMessageTaskParamsPtrOutput
}

type workflowTaskSendSlackMessageTaskParamsPtrType WorkflowTaskSendSlackMessageTaskParamsArgs

func WorkflowTaskSendSlackMessageTaskParamsPtr(v *WorkflowTaskSendSlackMessageTaskParamsArgs) WorkflowTaskSendSlackMessageTaskParamsPtrInput {
	return (*workflowTaskSendSlackMessageTaskParamsPtrType)(v)
}

func (*workflowTaskSendSlackMessageTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSendSlackMessageTaskParams)(nil)).Elem()
}

func (i *workflowTaskSendSlackMessageTaskParamsPtrType) ToWorkflowTaskSendSlackMessageTaskParamsPtrOutput() WorkflowTaskSendSlackMessageTaskParamsPtrOutput {
	return i.ToWorkflowTaskSendSlackMessageTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskSendSlackMessageTaskParamsPtrType) ToWorkflowTaskSendSlackMessageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackMessageTaskParamsPtrOutput)
}

type WorkflowTaskSendSlackMessageTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSlackMessageTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSlackMessageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSendSlackMessageTaskParamsOutput) ToWorkflowTaskSendSlackMessageTaskParamsOutput() WorkflowTaskSendSlackMessageTaskParamsOutput {
	return o
}

func (o WorkflowTaskSendSlackMessageTaskParamsOutput) ToWorkflowTaskSendSlackMessageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsOutput {
	return o
}

func (o WorkflowTaskSendSlackMessageTaskParamsOutput) ToWorkflowTaskSendSlackMessageTaskParamsPtrOutput() WorkflowTaskSendSlackMessageTaskParamsPtrOutput {
	return o.ToWorkflowTaskSendSlackMessageTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskSendSlackMessageTaskParamsOutput) ToWorkflowTaskSendSlackMessageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskSendSlackMessageTaskParams) *WorkflowTaskSendSlackMessageTaskParams {
		return &v
	}).(WorkflowTaskSendSlackMessageTaskParamsPtrOutput)
}

// Value must be one of `updateSummary`, `updateStatus`, `archiveChannel`, `manageIncidentRoles`, `updateIncident`, `allCommands`, `leaveFeedback`, `manageFormFields`, `manageActionItems`, `viewTasks`, `addPagerdutyResponders`, `addOpsgenieResponders`, `addVictorOpsResponders`, `snoozeReminder`, `pauseReminder`, `restartReminder`, `updateStatusPage`, `cancelIncident`.
func (o WorkflowTaskSendSlackMessageTaskParamsOutput) Actionables() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParams) []string { return v.Actionables }).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendSlackMessageTaskParamsOutput) BroadcastThreadReplyToChannel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParams) *bool { return v.BroadcastThreadReplyToChannel }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskSendSlackMessageTaskParamsOutput) Channels() WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParams) []WorkflowTaskSendSlackMessageTaskParamsChannel {
		return v.Channels
	}).(WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput)
}

// A hex color
func (o WorkflowTaskSendSlackMessageTaskParamsOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParams) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
func (o WorkflowTaskSendSlackMessageTaskParamsOutput) ParentMessageThreadTask() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParams) map[string]string { return v.ParentMessageThreadTask }).(pulumi.StringMapOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendSlackMessageTaskParamsOutput) PinToChannel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParams) *bool { return v.PinToChannel }).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendSlackMessageTaskParamsOutput) SendAsEphemeral() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParams) *bool { return v.SendAsEphemeral }).(pulumi.BoolPtrOutput)
}

// When set to true, if the parent for this threaded message cannot be found the message will be skipped.. Value must be one of true or false
func (o WorkflowTaskSendSlackMessageTaskParamsOutput) SendOnlyAsThreadedMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParams) *bool { return v.SendOnlyAsThreadedMessage }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskSendSlackMessageTaskParamsOutput) SlackUserGroups() WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParams) []WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup {
		return v.SlackUserGroups
	}).(WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput)
}

func (o WorkflowTaskSendSlackMessageTaskParamsOutput) SlackUsers() WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParams) []WorkflowTaskSendSlackMessageTaskParamsSlackUser {
		return v.SlackUsers
	}).(WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput)
}

func (o WorkflowTaskSendSlackMessageTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The message text
func (o WorkflowTaskSendSlackMessageTaskParamsOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParams) string { return v.Text }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendSlackMessageTaskParamsOutput) UpdateParentMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParams) *bool { return v.UpdateParentMessage }).(pulumi.BoolPtrOutput)
}

type WorkflowTaskSendSlackMessageTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSlackMessageTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSendSlackMessageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSendSlackMessageTaskParamsPtrOutput) ToWorkflowTaskSendSlackMessageTaskParamsPtrOutput() WorkflowTaskSendSlackMessageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSendSlackMessageTaskParamsPtrOutput) ToWorkflowTaskSendSlackMessageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSendSlackMessageTaskParamsPtrOutput) Elem() WorkflowTaskSendSlackMessageTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackMessageTaskParams) WorkflowTaskSendSlackMessageTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskSendSlackMessageTaskParams
		return ret
	}).(WorkflowTaskSendSlackMessageTaskParamsOutput)
}

// Value must be one of `updateSummary`, `updateStatus`, `archiveChannel`, `manageIncidentRoles`, `updateIncident`, `allCommands`, `leaveFeedback`, `manageFormFields`, `manageActionItems`, `viewTasks`, `addPagerdutyResponders`, `addOpsgenieResponders`, `addVictorOpsResponders`, `snoozeReminder`, `pauseReminder`, `restartReminder`, `updateStatusPage`, `cancelIncident`.
func (o WorkflowTaskSendSlackMessageTaskParamsPtrOutput) Actionables() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackMessageTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.Actionables
	}).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendSlackMessageTaskParamsPtrOutput) BroadcastThreadReplyToChannel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackMessageTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.BroadcastThreadReplyToChannel
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskSendSlackMessageTaskParamsPtrOutput) Channels() WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackMessageTaskParams) []WorkflowTaskSendSlackMessageTaskParamsChannel {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput)
}

// A hex color
func (o WorkflowTaskSendSlackMessageTaskParamsPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackMessageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. A hash where [id] is the task id of the parent task that sent a message, and [name] is the name of the parent task
func (o WorkflowTaskSendSlackMessageTaskParamsPtrOutput) ParentMessageThreadTask() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackMessageTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.ParentMessageThreadTask
	}).(pulumi.StringMapOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendSlackMessageTaskParamsPtrOutput) PinToChannel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackMessageTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PinToChannel
	}).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendSlackMessageTaskParamsPtrOutput) SendAsEphemeral() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackMessageTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.SendAsEphemeral
	}).(pulumi.BoolPtrOutput)
}

// When set to true, if the parent for this threaded message cannot be found the message will be skipped.. Value must be one of true or false
func (o WorkflowTaskSendSlackMessageTaskParamsPtrOutput) SendOnlyAsThreadedMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackMessageTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.SendOnlyAsThreadedMessage
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskSendSlackMessageTaskParamsPtrOutput) SlackUserGroups() WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackMessageTaskParams) []WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup {
		if v == nil {
			return nil
		}
		return v.SlackUserGroups
	}).(WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput)
}

func (o WorkflowTaskSendSlackMessageTaskParamsPtrOutput) SlackUsers() WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackMessageTaskParams) []WorkflowTaskSendSlackMessageTaskParamsSlackUser {
		if v == nil {
			return nil
		}
		return v.SlackUsers
	}).(WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput)
}

func (o WorkflowTaskSendSlackMessageTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackMessageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The message text
func (o WorkflowTaskSendSlackMessageTaskParamsPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackMessageTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSendSlackMessageTaskParamsPtrOutput) UpdateParentMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSlackMessageTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.UpdateParentMessage
	}).(pulumi.BoolPtrOutput)
}

type WorkflowTaskSendSlackMessageTaskParamsChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskSendSlackMessageTaskParamsChannelInput is an input type that accepts WorkflowTaskSendSlackMessageTaskParamsChannelArgs and WorkflowTaskSendSlackMessageTaskParamsChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSlackMessageTaskParamsChannelInput` via:
//
//	WorkflowTaskSendSlackMessageTaskParamsChannelArgs{...}
type WorkflowTaskSendSlackMessageTaskParamsChannelInput interface {
	pulumi.Input

	ToWorkflowTaskSendSlackMessageTaskParamsChannelOutput() WorkflowTaskSendSlackMessageTaskParamsChannelOutput
	ToWorkflowTaskSendSlackMessageTaskParamsChannelOutputWithContext(context.Context) WorkflowTaskSendSlackMessageTaskParamsChannelOutput
}

type WorkflowTaskSendSlackMessageTaskParamsChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskSendSlackMessageTaskParamsChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSlackMessageTaskParamsChannel)(nil)).Elem()
}

func (i WorkflowTaskSendSlackMessageTaskParamsChannelArgs) ToWorkflowTaskSendSlackMessageTaskParamsChannelOutput() WorkflowTaskSendSlackMessageTaskParamsChannelOutput {
	return i.ToWorkflowTaskSendSlackMessageTaskParamsChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSlackMessageTaskParamsChannelArgs) ToWorkflowTaskSendSlackMessageTaskParamsChannelOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackMessageTaskParamsChannelOutput)
}

// WorkflowTaskSendSlackMessageTaskParamsChannelArrayInput is an input type that accepts WorkflowTaskSendSlackMessageTaskParamsChannelArray and WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSlackMessageTaskParamsChannelArrayInput` via:
//
//	WorkflowTaskSendSlackMessageTaskParamsChannelArray{ WorkflowTaskSendSlackMessageTaskParamsChannelArgs{...} }
type WorkflowTaskSendSlackMessageTaskParamsChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput() WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput
	ToWorkflowTaskSendSlackMessageTaskParamsChannelArrayOutputWithContext(context.Context) WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput
}

type WorkflowTaskSendSlackMessageTaskParamsChannelArray []WorkflowTaskSendSlackMessageTaskParamsChannelInput

func (WorkflowTaskSendSlackMessageTaskParamsChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSendSlackMessageTaskParamsChannel)(nil)).Elem()
}

func (i WorkflowTaskSendSlackMessageTaskParamsChannelArray) ToWorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput() WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput {
	return i.ToWorkflowTaskSendSlackMessageTaskParamsChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSlackMessageTaskParamsChannelArray) ToWorkflowTaskSendSlackMessageTaskParamsChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput)
}

type WorkflowTaskSendSlackMessageTaskParamsChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSlackMessageTaskParamsChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSlackMessageTaskParamsChannel)(nil)).Elem()
}

func (o WorkflowTaskSendSlackMessageTaskParamsChannelOutput) ToWorkflowTaskSendSlackMessageTaskParamsChannelOutput() WorkflowTaskSendSlackMessageTaskParamsChannelOutput {
	return o
}

func (o WorkflowTaskSendSlackMessageTaskParamsChannelOutput) ToWorkflowTaskSendSlackMessageTaskParamsChannelOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsChannelOutput {
	return o
}

func (o WorkflowTaskSendSlackMessageTaskParamsChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParamsChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskSendSlackMessageTaskParamsChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParamsChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSendSlackMessageTaskParamsChannel)(nil)).Elem()
}

func (o WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput) ToWorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput() WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput {
	return o
}

func (o WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput) ToWorkflowTaskSendSlackMessageTaskParamsChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput {
	return o
}

func (o WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskSendSlackMessageTaskParamsChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskSendSlackMessageTaskParamsChannel {
		return vs[0].([]WorkflowTaskSendSlackMessageTaskParamsChannel)[vs[1].(int)]
	}).(WorkflowTaskSendSlackMessageTaskParamsChannelOutput)
}

type WorkflowTaskSendSlackMessageTaskParamsSlackUser struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskSendSlackMessageTaskParamsSlackUserInput is an input type that accepts WorkflowTaskSendSlackMessageTaskParamsSlackUserArgs and WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSlackMessageTaskParamsSlackUserInput` via:
//
//	WorkflowTaskSendSlackMessageTaskParamsSlackUserArgs{...}
type WorkflowTaskSendSlackMessageTaskParamsSlackUserInput interface {
	pulumi.Input

	ToWorkflowTaskSendSlackMessageTaskParamsSlackUserOutput() WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput
	ToWorkflowTaskSendSlackMessageTaskParamsSlackUserOutputWithContext(context.Context) WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput
}

type WorkflowTaskSendSlackMessageTaskParamsSlackUserArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskSendSlackMessageTaskParamsSlackUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSlackMessageTaskParamsSlackUser)(nil)).Elem()
}

func (i WorkflowTaskSendSlackMessageTaskParamsSlackUserArgs) ToWorkflowTaskSendSlackMessageTaskParamsSlackUserOutput() WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput {
	return i.ToWorkflowTaskSendSlackMessageTaskParamsSlackUserOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSlackMessageTaskParamsSlackUserArgs) ToWorkflowTaskSendSlackMessageTaskParamsSlackUserOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput)
}

// WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayInput is an input type that accepts WorkflowTaskSendSlackMessageTaskParamsSlackUserArray and WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayInput` via:
//
//	WorkflowTaskSendSlackMessageTaskParamsSlackUserArray{ WorkflowTaskSendSlackMessageTaskParamsSlackUserArgs{...} }
type WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayInput interface {
	pulumi.Input

	ToWorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput() WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput
	ToWorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutputWithContext(context.Context) WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput
}

type WorkflowTaskSendSlackMessageTaskParamsSlackUserArray []WorkflowTaskSendSlackMessageTaskParamsSlackUserInput

func (WorkflowTaskSendSlackMessageTaskParamsSlackUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSendSlackMessageTaskParamsSlackUser)(nil)).Elem()
}

func (i WorkflowTaskSendSlackMessageTaskParamsSlackUserArray) ToWorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput() WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput {
	return i.ToWorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSlackMessageTaskParamsSlackUserArray) ToWorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput)
}

type WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSlackMessageTaskParamsSlackUser)(nil)).Elem()
}

func (o WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput) ToWorkflowTaskSendSlackMessageTaskParamsSlackUserOutput() WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput {
	return o
}

func (o WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput) ToWorkflowTaskSendSlackMessageTaskParamsSlackUserOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput {
	return o
}

func (o WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParamsSlackUser) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParamsSlackUser) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSendSlackMessageTaskParamsSlackUser)(nil)).Elem()
}

func (o WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput) ToWorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput() WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput {
	return o
}

func (o WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput) ToWorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput {
	return o
}

func (o WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput) Index(i pulumi.IntInput) WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskSendSlackMessageTaskParamsSlackUser {
		return vs[0].([]WorkflowTaskSendSlackMessageTaskParamsSlackUser)[vs[1].(int)]
	}).(WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput)
}

type WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupInput is an input type that accepts WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArgs and WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupInput` via:
//
//	WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArgs{...}
type WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupInput interface {
	pulumi.Input

	ToWorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput() WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput
	ToWorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutputWithContext(context.Context) WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput
}

type WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup)(nil)).Elem()
}

func (i WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArgs) ToWorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput() WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput {
	return i.ToWorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArgs) ToWorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput)
}

// WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayInput is an input type that accepts WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArray and WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayInput` via:
//
//	WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArray{ WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArgs{...} }
type WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayInput interface {
	pulumi.Input

	ToWorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput() WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput
	ToWorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutputWithContext(context.Context) WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput
}

type WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArray []WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupInput

func (WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup)(nil)).Elem()
}

func (i WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArray) ToWorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput() WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput {
	return i.ToWorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArray) ToWorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput)
}

type WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup)(nil)).Elem()
}

func (o WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput) ToWorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput() WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput {
	return o
}

func (o WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput) ToWorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput {
	return o
}

func (o WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup)(nil)).Elem()
}

func (o WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput) ToWorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput() WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput {
	return o
}

func (o WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput) ToWorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutputWithContext(ctx context.Context) WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput {
	return o
}

func (o WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput) Index(i pulumi.IntInput) WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup {
		return vs[0].([]WorkflowTaskSendSlackMessageTaskParamsSlackUserGroup)[vs[1].(int)]
	}).(WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput)
}

type WorkflowTaskSendSmsTaskParams struct {
	// The SMS message
	Content string `pulumi:"content"`
	// The name
	Name         string   `pulumi:"name"`
	PhoneNumbers []string `pulumi:"phoneNumbers"`
	TaskType     *string  `pulumi:"taskType"`
}

// WorkflowTaskSendSmsTaskParamsInput is an input type that accepts WorkflowTaskSendSmsTaskParamsArgs and WorkflowTaskSendSmsTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSmsTaskParamsInput` via:
//
//	WorkflowTaskSendSmsTaskParamsArgs{...}
type WorkflowTaskSendSmsTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskSendSmsTaskParamsOutput() WorkflowTaskSendSmsTaskParamsOutput
	ToWorkflowTaskSendSmsTaskParamsOutputWithContext(context.Context) WorkflowTaskSendSmsTaskParamsOutput
}

type WorkflowTaskSendSmsTaskParamsArgs struct {
	// The SMS message
	Content pulumi.StringInput `pulumi:"content"`
	// The name
	Name         pulumi.StringInput      `pulumi:"name"`
	PhoneNumbers pulumi.StringArrayInput `pulumi:"phoneNumbers"`
	TaskType     pulumi.StringPtrInput   `pulumi:"taskType"`
}

func (WorkflowTaskSendSmsTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSmsTaskParams)(nil)).Elem()
}

func (i WorkflowTaskSendSmsTaskParamsArgs) ToWorkflowTaskSendSmsTaskParamsOutput() WorkflowTaskSendSmsTaskParamsOutput {
	return i.ToWorkflowTaskSendSmsTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSmsTaskParamsArgs) ToWorkflowTaskSendSmsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSendSmsTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSmsTaskParamsOutput)
}

func (i WorkflowTaskSendSmsTaskParamsArgs) ToWorkflowTaskSendSmsTaskParamsPtrOutput() WorkflowTaskSendSmsTaskParamsPtrOutput {
	return i.ToWorkflowTaskSendSmsTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskSendSmsTaskParamsArgs) ToWorkflowTaskSendSmsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendSmsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSmsTaskParamsOutput).ToWorkflowTaskSendSmsTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskSendSmsTaskParamsPtrInput is an input type that accepts WorkflowTaskSendSmsTaskParamsArgs, WorkflowTaskSendSmsTaskParamsPtr and WorkflowTaskSendSmsTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskSendSmsTaskParamsPtrInput` via:
//
//	        WorkflowTaskSendSmsTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskSendSmsTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskSendSmsTaskParamsPtrOutput() WorkflowTaskSendSmsTaskParamsPtrOutput
	ToWorkflowTaskSendSmsTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskSendSmsTaskParamsPtrOutput
}

type workflowTaskSendSmsTaskParamsPtrType WorkflowTaskSendSmsTaskParamsArgs

func WorkflowTaskSendSmsTaskParamsPtr(v *WorkflowTaskSendSmsTaskParamsArgs) WorkflowTaskSendSmsTaskParamsPtrInput {
	return (*workflowTaskSendSmsTaskParamsPtrType)(v)
}

func (*workflowTaskSendSmsTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSendSmsTaskParams)(nil)).Elem()
}

func (i *workflowTaskSendSmsTaskParamsPtrType) ToWorkflowTaskSendSmsTaskParamsPtrOutput() WorkflowTaskSendSmsTaskParamsPtrOutput {
	return i.ToWorkflowTaskSendSmsTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskSendSmsTaskParamsPtrType) ToWorkflowTaskSendSmsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendSmsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendSmsTaskParamsPtrOutput)
}

type WorkflowTaskSendSmsTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSmsTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendSmsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSendSmsTaskParamsOutput) ToWorkflowTaskSendSmsTaskParamsOutput() WorkflowTaskSendSmsTaskParamsOutput {
	return o
}

func (o WorkflowTaskSendSmsTaskParamsOutput) ToWorkflowTaskSendSmsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSendSmsTaskParamsOutput {
	return o
}

func (o WorkflowTaskSendSmsTaskParamsOutput) ToWorkflowTaskSendSmsTaskParamsPtrOutput() WorkflowTaskSendSmsTaskParamsPtrOutput {
	return o.ToWorkflowTaskSendSmsTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskSendSmsTaskParamsOutput) ToWorkflowTaskSendSmsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendSmsTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskSendSmsTaskParams) *WorkflowTaskSendSmsTaskParams {
		return &v
	}).(WorkflowTaskSendSmsTaskParamsPtrOutput)
}

// The SMS message
func (o WorkflowTaskSendSmsTaskParamsOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendSmsTaskParams) string { return v.Content }).(pulumi.StringOutput)
}

// The name
func (o WorkflowTaskSendSmsTaskParamsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendSmsTaskParams) string { return v.Name }).(pulumi.StringOutput)
}

func (o WorkflowTaskSendSmsTaskParamsOutput) PhoneNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSendSmsTaskParams) []string { return v.PhoneNumbers }).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskSendSmsTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendSmsTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskSendSmsTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendSmsTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSendSmsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSendSmsTaskParamsPtrOutput) ToWorkflowTaskSendSmsTaskParamsPtrOutput() WorkflowTaskSendSmsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSendSmsTaskParamsPtrOutput) ToWorkflowTaskSendSmsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendSmsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSendSmsTaskParamsPtrOutput) Elem() WorkflowTaskSendSmsTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSmsTaskParams) WorkflowTaskSendSmsTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskSendSmsTaskParams
		return ret
	}).(WorkflowTaskSendSmsTaskParamsOutput)
}

// The SMS message
func (o WorkflowTaskSendSmsTaskParamsPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSmsTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// The name
func (o WorkflowTaskSendSmsTaskParamsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSmsTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskSendSmsTaskParamsPtrOutput) PhoneNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSmsTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.PhoneNumbers
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskSendSmsTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendSmsTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskSendWhatsappMessageTaskParams struct {
	// The WhatsApp message
	Content string `pulumi:"content"`
	// The name
	Name         string   `pulumi:"name"`
	PhoneNumbers []string `pulumi:"phoneNumbers"`
	TaskType     *string  `pulumi:"taskType"`
}

// WorkflowTaskSendWhatsappMessageTaskParamsInput is an input type that accepts WorkflowTaskSendWhatsappMessageTaskParamsArgs and WorkflowTaskSendWhatsappMessageTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskSendWhatsappMessageTaskParamsInput` via:
//
//	WorkflowTaskSendWhatsappMessageTaskParamsArgs{...}
type WorkflowTaskSendWhatsappMessageTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskSendWhatsappMessageTaskParamsOutput() WorkflowTaskSendWhatsappMessageTaskParamsOutput
	ToWorkflowTaskSendWhatsappMessageTaskParamsOutputWithContext(context.Context) WorkflowTaskSendWhatsappMessageTaskParamsOutput
}

type WorkflowTaskSendWhatsappMessageTaskParamsArgs struct {
	// The WhatsApp message
	Content pulumi.StringInput `pulumi:"content"`
	// The name
	Name         pulumi.StringInput      `pulumi:"name"`
	PhoneNumbers pulumi.StringArrayInput `pulumi:"phoneNumbers"`
	TaskType     pulumi.StringPtrInput   `pulumi:"taskType"`
}

func (WorkflowTaskSendWhatsappMessageTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendWhatsappMessageTaskParams)(nil)).Elem()
}

func (i WorkflowTaskSendWhatsappMessageTaskParamsArgs) ToWorkflowTaskSendWhatsappMessageTaskParamsOutput() WorkflowTaskSendWhatsappMessageTaskParamsOutput {
	return i.ToWorkflowTaskSendWhatsappMessageTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskSendWhatsappMessageTaskParamsArgs) ToWorkflowTaskSendWhatsappMessageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSendWhatsappMessageTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendWhatsappMessageTaskParamsOutput)
}

func (i WorkflowTaskSendWhatsappMessageTaskParamsArgs) ToWorkflowTaskSendWhatsappMessageTaskParamsPtrOutput() WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput {
	return i.ToWorkflowTaskSendWhatsappMessageTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskSendWhatsappMessageTaskParamsArgs) ToWorkflowTaskSendWhatsappMessageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendWhatsappMessageTaskParamsOutput).ToWorkflowTaskSendWhatsappMessageTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskSendWhatsappMessageTaskParamsPtrInput is an input type that accepts WorkflowTaskSendWhatsappMessageTaskParamsArgs, WorkflowTaskSendWhatsappMessageTaskParamsPtr and WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskSendWhatsappMessageTaskParamsPtrInput` via:
//
//	        WorkflowTaskSendWhatsappMessageTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskSendWhatsappMessageTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskSendWhatsappMessageTaskParamsPtrOutput() WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput
	ToWorkflowTaskSendWhatsappMessageTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput
}

type workflowTaskSendWhatsappMessageTaskParamsPtrType WorkflowTaskSendWhatsappMessageTaskParamsArgs

func WorkflowTaskSendWhatsappMessageTaskParamsPtr(v *WorkflowTaskSendWhatsappMessageTaskParamsArgs) WorkflowTaskSendWhatsappMessageTaskParamsPtrInput {
	return (*workflowTaskSendWhatsappMessageTaskParamsPtrType)(v)
}

func (*workflowTaskSendWhatsappMessageTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSendWhatsappMessageTaskParams)(nil)).Elem()
}

func (i *workflowTaskSendWhatsappMessageTaskParamsPtrType) ToWorkflowTaskSendWhatsappMessageTaskParamsPtrOutput() WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput {
	return i.ToWorkflowTaskSendWhatsappMessageTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskSendWhatsappMessageTaskParamsPtrType) ToWorkflowTaskSendWhatsappMessageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput)
}

type WorkflowTaskSendWhatsappMessageTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendWhatsappMessageTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSendWhatsappMessageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSendWhatsappMessageTaskParamsOutput) ToWorkflowTaskSendWhatsappMessageTaskParamsOutput() WorkflowTaskSendWhatsappMessageTaskParamsOutput {
	return o
}

func (o WorkflowTaskSendWhatsappMessageTaskParamsOutput) ToWorkflowTaskSendWhatsappMessageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSendWhatsappMessageTaskParamsOutput {
	return o
}

func (o WorkflowTaskSendWhatsappMessageTaskParamsOutput) ToWorkflowTaskSendWhatsappMessageTaskParamsPtrOutput() WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput {
	return o.ToWorkflowTaskSendWhatsappMessageTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskSendWhatsappMessageTaskParamsOutput) ToWorkflowTaskSendWhatsappMessageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskSendWhatsappMessageTaskParams) *WorkflowTaskSendWhatsappMessageTaskParams {
		return &v
	}).(WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput)
}

// The WhatsApp message
func (o WorkflowTaskSendWhatsappMessageTaskParamsOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendWhatsappMessageTaskParams) string { return v.Content }).(pulumi.StringOutput)
}

// The name
func (o WorkflowTaskSendWhatsappMessageTaskParamsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSendWhatsappMessageTaskParams) string { return v.Name }).(pulumi.StringOutput)
}

func (o WorkflowTaskSendWhatsappMessageTaskParamsOutput) PhoneNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSendWhatsappMessageTaskParams) []string { return v.PhoneNumbers }).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskSendWhatsappMessageTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSendWhatsappMessageTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSendWhatsappMessageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput) ToWorkflowTaskSendWhatsappMessageTaskParamsPtrOutput() WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput) ToWorkflowTaskSendWhatsappMessageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput) Elem() WorkflowTaskSendWhatsappMessageTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskSendWhatsappMessageTaskParams) WorkflowTaskSendWhatsappMessageTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskSendWhatsappMessageTaskParams
		return ret
	}).(WorkflowTaskSendWhatsappMessageTaskParamsOutput)
}

// The WhatsApp message
func (o WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendWhatsappMessageTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// The name
func (o WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendWhatsappMessageTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput) PhoneNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSendWhatsappMessageTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.PhoneNumbers
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSendWhatsappMessageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskSnapshotDatadogGraphTaskParams struct {
	Dashboards    []WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard `pulumi:"dashboards"`
	MetricQueries []string                                              `pulumi:"metricQueries"`
	// in format '1 minute', '30 days', '3 months', etc
	PastDuration string `pulumi:"pastDuration"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                          `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	TaskType               *string                                                        `pulumi:"taskType"`
}

// WorkflowTaskSnapshotDatadogGraphTaskParamsInput is an input type that accepts WorkflowTaskSnapshotDatadogGraphTaskParamsArgs and WorkflowTaskSnapshotDatadogGraphTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotDatadogGraphTaskParamsInput` via:
//
//	WorkflowTaskSnapshotDatadogGraphTaskParamsArgs{...}
type WorkflowTaskSnapshotDatadogGraphTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotDatadogGraphTaskParamsOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsOutput
	ToWorkflowTaskSnapshotDatadogGraphTaskParamsOutputWithContext(context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsOutput
}

type WorkflowTaskSnapshotDatadogGraphTaskParamsArgs struct {
	Dashboards    WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayInput `pulumi:"dashboards"`
	MetricQueries pulumi.StringArrayInput                                       `pulumi:"metricQueries"`
	// in format '1 minute', '30 days', '3 months', etc
	PastDuration pulumi.StringInput `pulumi:"pastDuration"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                                    `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	TaskType               pulumi.StringPtrInput                                                  `pulumi:"taskType"`
}

func (WorkflowTaskSnapshotDatadogGraphTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotDatadogGraphTaskParams)(nil)).Elem()
}

func (i WorkflowTaskSnapshotDatadogGraphTaskParamsArgs) ToWorkflowTaskSnapshotDatadogGraphTaskParamsOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsOutput {
	return i.ToWorkflowTaskSnapshotDatadogGraphTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotDatadogGraphTaskParamsArgs) ToWorkflowTaskSnapshotDatadogGraphTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotDatadogGraphTaskParamsOutput)
}

func (i WorkflowTaskSnapshotDatadogGraphTaskParamsArgs) ToWorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput {
	return i.ToWorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotDatadogGraphTaskParamsArgs) ToWorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotDatadogGraphTaskParamsOutput).ToWorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskSnapshotDatadogGraphTaskParamsPtrInput is an input type that accepts WorkflowTaskSnapshotDatadogGraphTaskParamsArgs, WorkflowTaskSnapshotDatadogGraphTaskParamsPtr and WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotDatadogGraphTaskParamsPtrInput` via:
//
//	        WorkflowTaskSnapshotDatadogGraphTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskSnapshotDatadogGraphTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput
	ToWorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput
}

type workflowTaskSnapshotDatadogGraphTaskParamsPtrType WorkflowTaskSnapshotDatadogGraphTaskParamsArgs

func WorkflowTaskSnapshotDatadogGraphTaskParamsPtr(v *WorkflowTaskSnapshotDatadogGraphTaskParamsArgs) WorkflowTaskSnapshotDatadogGraphTaskParamsPtrInput {
	return (*workflowTaskSnapshotDatadogGraphTaskParamsPtrType)(v)
}

func (*workflowTaskSnapshotDatadogGraphTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSnapshotDatadogGraphTaskParams)(nil)).Elem()
}

func (i *workflowTaskSnapshotDatadogGraphTaskParamsPtrType) ToWorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput {
	return i.ToWorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskSnapshotDatadogGraphTaskParamsPtrType) ToWorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput)
}

type WorkflowTaskSnapshotDatadogGraphTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotDatadogGraphTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotDatadogGraphTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsOutput) ToWorkflowTaskSnapshotDatadogGraphTaskParamsOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsOutput) ToWorkflowTaskSnapshotDatadogGraphTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsOutput) ToWorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput {
	return o.ToWorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsOutput) ToWorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskSnapshotDatadogGraphTaskParams) *WorkflowTaskSnapshotDatadogGraphTaskParams {
		return &v
	}).(WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput)
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsOutput) Dashboards() WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotDatadogGraphTaskParams) []WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard {
		return v.Dashboards
	}).(WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput)
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsOutput) MetricQueries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotDatadogGraphTaskParams) []string { return v.MetricQueries }).(pulumi.StringArrayOutput)
}

// in format '1 minute', '30 days', '3 months', etc
func (o WorkflowTaskSnapshotDatadogGraphTaskParamsOutput) PastDuration() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotDatadogGraphTaskParams) string { return v.PastDuration }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSnapshotDatadogGraphTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotDatadogGraphTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsOutput) PostToSlackChannels() WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotDatadogGraphTaskParams) []WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotDatadogGraphTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSnapshotDatadogGraphTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput) ToWorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput) ToWorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput) Elem() WorkflowTaskSnapshotDatadogGraphTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotDatadogGraphTaskParams) WorkflowTaskSnapshotDatadogGraphTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskSnapshotDatadogGraphTaskParams
		return ret
	}).(WorkflowTaskSnapshotDatadogGraphTaskParamsOutput)
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput) Dashboards() WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotDatadogGraphTaskParams) []WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard {
		if v == nil {
			return nil
		}
		return v.Dashboards
	}).(WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput)
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput) MetricQueries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotDatadogGraphTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.MetricQueries
	}).(pulumi.StringArrayOutput)
}

// in format '1 minute', '30 days', '3 months', etc
func (o WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput) PastDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotDatadogGraphTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.PastDuration
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotDatadogGraphTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotDatadogGraphTaskParams) []WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotDatadogGraphTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardInput is an input type that accepts WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArgs and WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardInput` via:
//
//	WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArgs{...}
type WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput
	ToWorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutputWithContext(context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput
}

type WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard)(nil)).Elem()
}

func (i WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArgs) ToWorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput {
	return i.ToWorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArgs) ToWorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput)
}

// WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayInput is an input type that accepts WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArray and WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayInput` via:
//
//	WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArray{ WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArgs{...} }
type WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput
	ToWorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutputWithContext(context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput
}

type WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArray []WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardInput

func (WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard)(nil)).Elem()
}

func (i WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArray) ToWorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput {
	return i.ToWorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArray) ToWorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput)
}

type WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard)(nil)).Elem()
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput) ToWorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput) ToWorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard)(nil)).Elem()
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput) ToWorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput) ToWorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput) Index(i pulumi.IntInput) WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard {
		return vs[0].([]WorkflowTaskSnapshotDatadogGraphTaskParamsDashboard)[vs[1].(int)]
	}).(WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput)
}

type WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArgs and WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArgs) ToWorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArgs) ToWorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArray and WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArray{ WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArray []WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelInput

func (WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArray) ToWorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArray) ToWorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput) ToWorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput) ToWorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskSnapshotGrafanaDashboardTaskParams struct {
	Dashboards []WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard `pulumi:"dashboards"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                              `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	TaskType               *string                                                            `pulumi:"taskType"`
}

// WorkflowTaskSnapshotGrafanaDashboardTaskParamsInput is an input type that accepts WorkflowTaskSnapshotGrafanaDashboardTaskParamsArgs and WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotGrafanaDashboardTaskParamsInput` via:
//
//	WorkflowTaskSnapshotGrafanaDashboardTaskParamsArgs{...}
type WorkflowTaskSnapshotGrafanaDashboardTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput
	ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsOutputWithContext(context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput
}

type WorkflowTaskSnapshotGrafanaDashboardTaskParamsArgs struct {
	Dashboards WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayInput `pulumi:"dashboards"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                                        `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	TaskType               pulumi.StringPtrInput                                                      `pulumi:"taskType"`
}

func (WorkflowTaskSnapshotGrafanaDashboardTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotGrafanaDashboardTaskParams)(nil)).Elem()
}

func (i WorkflowTaskSnapshotGrafanaDashboardTaskParamsArgs) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput {
	return i.ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotGrafanaDashboardTaskParamsArgs) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput)
}

func (i WorkflowTaskSnapshotGrafanaDashboardTaskParamsArgs) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput {
	return i.ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotGrafanaDashboardTaskParamsArgs) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput).ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrInput is an input type that accepts WorkflowTaskSnapshotGrafanaDashboardTaskParamsArgs, WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtr and WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrInput` via:
//
//	        WorkflowTaskSnapshotGrafanaDashboardTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput
	ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput
}

type workflowTaskSnapshotGrafanaDashboardTaskParamsPtrType WorkflowTaskSnapshotGrafanaDashboardTaskParamsArgs

func WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtr(v *WorkflowTaskSnapshotGrafanaDashboardTaskParamsArgs) WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrInput {
	return (*workflowTaskSnapshotGrafanaDashboardTaskParamsPtrType)(v)
}

func (*workflowTaskSnapshotGrafanaDashboardTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSnapshotGrafanaDashboardTaskParams)(nil)).Elem()
}

func (i *workflowTaskSnapshotGrafanaDashboardTaskParamsPtrType) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput {
	return i.ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskSnapshotGrafanaDashboardTaskParamsPtrType) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput)
}

type WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotGrafanaDashboardTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput {
	return o
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput {
	return o
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput {
	return o.ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskSnapshotGrafanaDashboardTaskParams) *WorkflowTaskSnapshotGrafanaDashboardTaskParams {
		return &v
	}).(WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput)
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput) Dashboards() WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotGrafanaDashboardTaskParams) []WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard {
		return v.Dashboards
	}).(WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotGrafanaDashboardTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput) PostToSlackChannels() WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotGrafanaDashboardTaskParams) []WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotGrafanaDashboardTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSnapshotGrafanaDashboardTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput) Elem() WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotGrafanaDashboardTaskParams) WorkflowTaskSnapshotGrafanaDashboardTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskSnapshotGrafanaDashboardTaskParams
		return ret
	}).(WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput)
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput) Dashboards() WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotGrafanaDashboardTaskParams) []WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard {
		if v == nil {
			return nil
		}
		return v.Dashboards
	}).(WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotGrafanaDashboardTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotGrafanaDashboardTaskParams) []WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotGrafanaDashboardTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardInput is an input type that accepts WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArgs and WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardInput` via:
//
//	WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArgs{...}
type WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput
	ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutputWithContext(context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput
}

type WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard)(nil)).Elem()
}

func (i WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArgs) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput {
	return i.ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArgs) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutputWithContext(ctx context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput)
}

// WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayInput is an input type that accepts WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArray and WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayInput` via:
//
//	WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArray{ WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArgs{...} }
type WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput
	ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutputWithContext(context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput
}

type WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArray []WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardInput

func (WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard)(nil)).Elem()
}

func (i WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArray) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput {
	return i.ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArray) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutputWithContext(ctx context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput)
}

type WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard)(nil)).Elem()
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput {
	return o
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutputWithContext(ctx context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput {
	return o
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard)(nil)).Elem()
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput {
	return o
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutputWithContext(ctx context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput {
	return o
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput) Index(i pulumi.IntInput) WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard {
		return vs[0].([]WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboard)[vs[1].(int)]
	}).(WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput)
}

type WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArgs and WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArgs) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArgs) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArray and WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArray{ WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArray []WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelInput

func (WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArray) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArray) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskSnapshotLookerLookTaskParams struct {
	Dashboards []WorkflowTaskSnapshotLookerLookTaskParamsDashboard `pulumi:"dashboards"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                        `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	TaskType               *string                                                      `pulumi:"taskType"`
}

// WorkflowTaskSnapshotLookerLookTaskParamsInput is an input type that accepts WorkflowTaskSnapshotLookerLookTaskParamsArgs and WorkflowTaskSnapshotLookerLookTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotLookerLookTaskParamsInput` via:
//
//	WorkflowTaskSnapshotLookerLookTaskParamsArgs{...}
type WorkflowTaskSnapshotLookerLookTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotLookerLookTaskParamsOutput() WorkflowTaskSnapshotLookerLookTaskParamsOutput
	ToWorkflowTaskSnapshotLookerLookTaskParamsOutputWithContext(context.Context) WorkflowTaskSnapshotLookerLookTaskParamsOutput
}

type WorkflowTaskSnapshotLookerLookTaskParamsArgs struct {
	Dashboards WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayInput `pulumi:"dashboards"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                                  `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	TaskType               pulumi.StringPtrInput                                                `pulumi:"taskType"`
}

func (WorkflowTaskSnapshotLookerLookTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotLookerLookTaskParams)(nil)).Elem()
}

func (i WorkflowTaskSnapshotLookerLookTaskParamsArgs) ToWorkflowTaskSnapshotLookerLookTaskParamsOutput() WorkflowTaskSnapshotLookerLookTaskParamsOutput {
	return i.ToWorkflowTaskSnapshotLookerLookTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotLookerLookTaskParamsArgs) ToWorkflowTaskSnapshotLookerLookTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSnapshotLookerLookTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotLookerLookTaskParamsOutput)
}

func (i WorkflowTaskSnapshotLookerLookTaskParamsArgs) ToWorkflowTaskSnapshotLookerLookTaskParamsPtrOutput() WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput {
	return i.ToWorkflowTaskSnapshotLookerLookTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotLookerLookTaskParamsArgs) ToWorkflowTaskSnapshotLookerLookTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotLookerLookTaskParamsOutput).ToWorkflowTaskSnapshotLookerLookTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskSnapshotLookerLookTaskParamsPtrInput is an input type that accepts WorkflowTaskSnapshotLookerLookTaskParamsArgs, WorkflowTaskSnapshotLookerLookTaskParamsPtr and WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotLookerLookTaskParamsPtrInput` via:
//
//	        WorkflowTaskSnapshotLookerLookTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskSnapshotLookerLookTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotLookerLookTaskParamsPtrOutput() WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput
	ToWorkflowTaskSnapshotLookerLookTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput
}

type workflowTaskSnapshotLookerLookTaskParamsPtrType WorkflowTaskSnapshotLookerLookTaskParamsArgs

func WorkflowTaskSnapshotLookerLookTaskParamsPtr(v *WorkflowTaskSnapshotLookerLookTaskParamsArgs) WorkflowTaskSnapshotLookerLookTaskParamsPtrInput {
	return (*workflowTaskSnapshotLookerLookTaskParamsPtrType)(v)
}

func (*workflowTaskSnapshotLookerLookTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSnapshotLookerLookTaskParams)(nil)).Elem()
}

func (i *workflowTaskSnapshotLookerLookTaskParamsPtrType) ToWorkflowTaskSnapshotLookerLookTaskParamsPtrOutput() WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput {
	return i.ToWorkflowTaskSnapshotLookerLookTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskSnapshotLookerLookTaskParamsPtrType) ToWorkflowTaskSnapshotLookerLookTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput)
}

type WorkflowTaskSnapshotLookerLookTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotLookerLookTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotLookerLookTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsOutput) ToWorkflowTaskSnapshotLookerLookTaskParamsOutput() WorkflowTaskSnapshotLookerLookTaskParamsOutput {
	return o
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsOutput) ToWorkflowTaskSnapshotLookerLookTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSnapshotLookerLookTaskParamsOutput {
	return o
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsOutput) ToWorkflowTaskSnapshotLookerLookTaskParamsPtrOutput() WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput {
	return o.ToWorkflowTaskSnapshotLookerLookTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsOutput) ToWorkflowTaskSnapshotLookerLookTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskSnapshotLookerLookTaskParams) *WorkflowTaskSnapshotLookerLookTaskParams {
		return &v
	}).(WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput)
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsOutput) Dashboards() WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotLookerLookTaskParams) []WorkflowTaskSnapshotLookerLookTaskParamsDashboard {
		return v.Dashboards
	}).(WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSnapshotLookerLookTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotLookerLookTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsOutput) PostToSlackChannels() WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotLookerLookTaskParams) []WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotLookerLookTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSnapshotLookerLookTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput) ToWorkflowTaskSnapshotLookerLookTaskParamsPtrOutput() WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput) ToWorkflowTaskSnapshotLookerLookTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput) Elem() WorkflowTaskSnapshotLookerLookTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotLookerLookTaskParams) WorkflowTaskSnapshotLookerLookTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskSnapshotLookerLookTaskParams
		return ret
	}).(WorkflowTaskSnapshotLookerLookTaskParamsOutput)
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput) Dashboards() WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotLookerLookTaskParams) []WorkflowTaskSnapshotLookerLookTaskParamsDashboard {
		if v == nil {
			return nil
		}
		return v.Dashboards
	}).(WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotLookerLookTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotLookerLookTaskParams) []WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotLookerLookTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskSnapshotLookerLookTaskParamsDashboard struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskSnapshotLookerLookTaskParamsDashboardInput is an input type that accepts WorkflowTaskSnapshotLookerLookTaskParamsDashboardArgs and WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotLookerLookTaskParamsDashboardInput` via:
//
//	WorkflowTaskSnapshotLookerLookTaskParamsDashboardArgs{...}
type WorkflowTaskSnapshotLookerLookTaskParamsDashboardInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput() WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput
	ToWorkflowTaskSnapshotLookerLookTaskParamsDashboardOutputWithContext(context.Context) WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput
}

type WorkflowTaskSnapshotLookerLookTaskParamsDashboardArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskSnapshotLookerLookTaskParamsDashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotLookerLookTaskParamsDashboard)(nil)).Elem()
}

func (i WorkflowTaskSnapshotLookerLookTaskParamsDashboardArgs) ToWorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput() WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput {
	return i.ToWorkflowTaskSnapshotLookerLookTaskParamsDashboardOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotLookerLookTaskParamsDashboardArgs) ToWorkflowTaskSnapshotLookerLookTaskParamsDashboardOutputWithContext(ctx context.Context) WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput)
}

// WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayInput is an input type that accepts WorkflowTaskSnapshotLookerLookTaskParamsDashboardArray and WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayInput` via:
//
//	WorkflowTaskSnapshotLookerLookTaskParamsDashboardArray{ WorkflowTaskSnapshotLookerLookTaskParamsDashboardArgs{...} }
type WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput() WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput
	ToWorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutputWithContext(context.Context) WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput
}

type WorkflowTaskSnapshotLookerLookTaskParamsDashboardArray []WorkflowTaskSnapshotLookerLookTaskParamsDashboardInput

func (WorkflowTaskSnapshotLookerLookTaskParamsDashboardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSnapshotLookerLookTaskParamsDashboard)(nil)).Elem()
}

func (i WorkflowTaskSnapshotLookerLookTaskParamsDashboardArray) ToWorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput() WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput {
	return i.ToWorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotLookerLookTaskParamsDashboardArray) ToWorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutputWithContext(ctx context.Context) WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput)
}

type WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotLookerLookTaskParamsDashboard)(nil)).Elem()
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput) ToWorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput() WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput {
	return o
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput) ToWorkflowTaskSnapshotLookerLookTaskParamsDashboardOutputWithContext(ctx context.Context) WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput {
	return o
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotLookerLookTaskParamsDashboard) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotLookerLookTaskParamsDashboard) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSnapshotLookerLookTaskParamsDashboard)(nil)).Elem()
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput) ToWorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput() WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput {
	return o
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput) ToWorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutputWithContext(ctx context.Context) WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput {
	return o
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput) Index(i pulumi.IntInput) WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskSnapshotLookerLookTaskParamsDashboard {
		return vs[0].([]WorkflowTaskSnapshotLookerLookTaskParamsDashboard)[vs[1].(int)]
	}).(WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput)
}

type WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArgs and WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput() WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArgs) ToWorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput() WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArgs) ToWorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArray and WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArray{ WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArray []WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelInput

func (WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArray) ToWorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArray) ToWorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput) ToWorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput() WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput) ToWorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskSnapshotNewRelicGraphTaskParams struct {
	MetricQuery string `pulumi:"metricQuery"`
	// Value must be one of `APDEX`, `AREA`, `BAR`, `BASELINE`, `BILLBOARD`, `BULLET`, `EVENT_FEED`, `FUNNEL`, `HEATMAP`, `HISTOGRAM`, `LINE`, `PIE`, `SCATTER`, `STACKED_HORIZONTAL_BAR`, `TABLE`, `VERTICAL_BAR`.
	MetricType string `pulumi:"metricType"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                           `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	TaskType               *string                                                         `pulumi:"taskType"`
}

// WorkflowTaskSnapshotNewRelicGraphTaskParamsInput is an input type that accepts WorkflowTaskSnapshotNewRelicGraphTaskParamsArgs and WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotNewRelicGraphTaskParamsInput` via:
//
//	WorkflowTaskSnapshotNewRelicGraphTaskParamsArgs{...}
type WorkflowTaskSnapshotNewRelicGraphTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotNewRelicGraphTaskParamsOutput() WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput
	ToWorkflowTaskSnapshotNewRelicGraphTaskParamsOutputWithContext(context.Context) WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput
}

type WorkflowTaskSnapshotNewRelicGraphTaskParamsArgs struct {
	MetricQuery pulumi.StringInput `pulumi:"metricQuery"`
	// Value must be one of `APDEX`, `AREA`, `BAR`, `BASELINE`, `BILLBOARD`, `BULLET`, `EVENT_FEED`, `FUNNEL`, `HEATMAP`, `HISTOGRAM`, `LINE`, `PIE`, `SCATTER`, `STACKED_HORIZONTAL_BAR`, `TABLE`, `VERTICAL_BAR`.
	MetricType pulumi.StringInput `pulumi:"metricType"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                                     `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	TaskType               pulumi.StringPtrInput                                                   `pulumi:"taskType"`
}

func (WorkflowTaskSnapshotNewRelicGraphTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotNewRelicGraphTaskParams)(nil)).Elem()
}

func (i WorkflowTaskSnapshotNewRelicGraphTaskParamsArgs) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsOutput() WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput {
	return i.ToWorkflowTaskSnapshotNewRelicGraphTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotNewRelicGraphTaskParamsArgs) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput)
}

func (i WorkflowTaskSnapshotNewRelicGraphTaskParamsArgs) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput() WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput {
	return i.ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotNewRelicGraphTaskParamsArgs) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput).ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrInput is an input type that accepts WorkflowTaskSnapshotNewRelicGraphTaskParamsArgs, WorkflowTaskSnapshotNewRelicGraphTaskParamsPtr and WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrInput` via:
//
//	        WorkflowTaskSnapshotNewRelicGraphTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput() WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput
	ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput
}

type workflowTaskSnapshotNewRelicGraphTaskParamsPtrType WorkflowTaskSnapshotNewRelicGraphTaskParamsArgs

func WorkflowTaskSnapshotNewRelicGraphTaskParamsPtr(v *WorkflowTaskSnapshotNewRelicGraphTaskParamsArgs) WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrInput {
	return (*workflowTaskSnapshotNewRelicGraphTaskParamsPtrType)(v)
}

func (*workflowTaskSnapshotNewRelicGraphTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSnapshotNewRelicGraphTaskParams)(nil)).Elem()
}

func (i *workflowTaskSnapshotNewRelicGraphTaskParamsPtrType) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput() WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput {
	return i.ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskSnapshotNewRelicGraphTaskParamsPtrType) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput)
}

type WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotNewRelicGraphTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsOutput() WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput {
	return o
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput {
	return o
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput() WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput {
	return o.ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskSnapshotNewRelicGraphTaskParams) *WorkflowTaskSnapshotNewRelicGraphTaskParams {
		return &v
	}).(WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput)
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput) MetricQuery() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotNewRelicGraphTaskParams) string { return v.MetricQuery }).(pulumi.StringOutput)
}

// Value must be one of `APDEX`, `AREA`, `BAR`, `BASELINE`, `BILLBOARD`, `BULLET`, `EVENT_FEED`, `FUNNEL`, `HEATMAP`, `HISTOGRAM`, `LINE`, `PIE`, `SCATTER`, `STACKED_HORIZONTAL_BAR`, `TABLE`, `VERTICAL_BAR`.
func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotNewRelicGraphTaskParams) string { return v.MetricType }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotNewRelicGraphTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput) PostToSlackChannels() WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotNewRelicGraphTaskParams) []WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotNewRelicGraphTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSnapshotNewRelicGraphTaskParams)(nil)).Elem()
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput() WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput) Elem() WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotNewRelicGraphTaskParams) WorkflowTaskSnapshotNewRelicGraphTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskSnapshotNewRelicGraphTaskParams
		return ret
	}).(WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput)
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput) MetricQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotNewRelicGraphTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.MetricQuery
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `APDEX`, `AREA`, `BAR`, `BASELINE`, `BILLBOARD`, `BULLET`, `EVENT_FEED`, `FUNNEL`, `HEATMAP`, `HISTOGRAM`, `LINE`, `PIE`, `SCATTER`, `STACKED_HORIZONTAL_BAR`, `TABLE`, `VERTICAL_BAR`.
func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput) MetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotNewRelicGraphTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.MetricType
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotNewRelicGraphTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotNewRelicGraphTaskParams) []WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput)
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotNewRelicGraphTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArgs and WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput() WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArgs) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput() WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArgs) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArray and WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArray{ WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArray []WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelInput

func (WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArray) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArray) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput() WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskTriggerWorkflowTaskParams struct {
	// ["(incident) kind can only match [:id, :slug, :sequential*id, :pagerduty*incident*id, :opsgenie*incident*id, :victor*ops*incident*id, :jira*issue*id, :asana*task*id, :shortcut*task*id, :linear*issue*id, :zendesk*ticket*id, :trello*card*id, :airtable*record*id, :shortcut*story*id, :github*issue*id, :freshservice*ticket*id, :freshservice*task*id, :clickup*task*id]", "(post*mortem) kind can only match [:id]", "(action*item) kind can only match [:id, :jira*issue*id, :asana*task*id, :shortcut*task*id, :linear*issue*id, :zendesk*ticket*id, :trello*card*id, :airtable*record*id, :shortcut*story*id, :github*issue*id, :freshservice*ticket*id, :freshservice*task*id, :clickup*task*id]", "(pulse) kind can only match [:id]", "(alert) kind can only match [:id]"]. Value must be one of `id`, `slug`, `sequentialId`, `pagerdutyIncidentId`, `opsgenieIncidentId`, `victorOpsIncidentId`, `jiraIssueId`, `asanaTaskId`, `shortcutTaskId`, `linearIssueId`, `zendeskTicketId`, `trelloCardId`, `airtableRecordId`, `shortcutStoryId`, `githubIssueId`, `freshserviceTicketId`, `freshserviceTaskId`, `clickupTaskId`.
	AttributeToQueryBy string `pulumi:"attributeToQueryBy"`
	// Value must be one of true or false
	CheckWorkflowConditions *bool `pulumi:"checkWorkflowConditions"`
	// Value must be one of `incident`, `postMortem`, `actionItem`, `pulse`, `alert`.
	Kind string `pulumi:"kind"`
	// Map must contain two fields, `id` and `name`.
	Resource map[string]string `pulumi:"resource"`
	TaskType *string           `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`.
	Workflow map[string]string `pulumi:"workflow"`
}

// WorkflowTaskTriggerWorkflowTaskParamsInput is an input type that accepts WorkflowTaskTriggerWorkflowTaskParamsArgs and WorkflowTaskTriggerWorkflowTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskTriggerWorkflowTaskParamsInput` via:
//
//	WorkflowTaskTriggerWorkflowTaskParamsArgs{...}
type WorkflowTaskTriggerWorkflowTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskTriggerWorkflowTaskParamsOutput() WorkflowTaskTriggerWorkflowTaskParamsOutput
	ToWorkflowTaskTriggerWorkflowTaskParamsOutputWithContext(context.Context) WorkflowTaskTriggerWorkflowTaskParamsOutput
}

type WorkflowTaskTriggerWorkflowTaskParamsArgs struct {
	// ["(incident) kind can only match [:id, :slug, :sequential*id, :pagerduty*incident*id, :opsgenie*incident*id, :victor*ops*incident*id, :jira*issue*id, :asana*task*id, :shortcut*task*id, :linear*issue*id, :zendesk*ticket*id, :trello*card*id, :airtable*record*id, :shortcut*story*id, :github*issue*id, :freshservice*ticket*id, :freshservice*task*id, :clickup*task*id]", "(post*mortem) kind can only match [:id]", "(action*item) kind can only match [:id, :jira*issue*id, :asana*task*id, :shortcut*task*id, :linear*issue*id, :zendesk*ticket*id, :trello*card*id, :airtable*record*id, :shortcut*story*id, :github*issue*id, :freshservice*ticket*id, :freshservice*task*id, :clickup*task*id]", "(pulse) kind can only match [:id]", "(alert) kind can only match [:id]"]. Value must be one of `id`, `slug`, `sequentialId`, `pagerdutyIncidentId`, `opsgenieIncidentId`, `victorOpsIncidentId`, `jiraIssueId`, `asanaTaskId`, `shortcutTaskId`, `linearIssueId`, `zendeskTicketId`, `trelloCardId`, `airtableRecordId`, `shortcutStoryId`, `githubIssueId`, `freshserviceTicketId`, `freshserviceTaskId`, `clickupTaskId`.
	AttributeToQueryBy pulumi.StringInput `pulumi:"attributeToQueryBy"`
	// Value must be one of true or false
	CheckWorkflowConditions pulumi.BoolPtrInput `pulumi:"checkWorkflowConditions"`
	// Value must be one of `incident`, `postMortem`, `actionItem`, `pulse`, `alert`.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Map must contain two fields, `id` and `name`.
	Resource pulumi.StringMapInput `pulumi:"resource"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// Map must contain two fields, `id` and `name`.
	Workflow pulumi.StringMapInput `pulumi:"workflow"`
}

func (WorkflowTaskTriggerWorkflowTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskTriggerWorkflowTaskParams)(nil)).Elem()
}

func (i WorkflowTaskTriggerWorkflowTaskParamsArgs) ToWorkflowTaskTriggerWorkflowTaskParamsOutput() WorkflowTaskTriggerWorkflowTaskParamsOutput {
	return i.ToWorkflowTaskTriggerWorkflowTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskTriggerWorkflowTaskParamsArgs) ToWorkflowTaskTriggerWorkflowTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskTriggerWorkflowTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskTriggerWorkflowTaskParamsOutput)
}

func (i WorkflowTaskTriggerWorkflowTaskParamsArgs) ToWorkflowTaskTriggerWorkflowTaskParamsPtrOutput() WorkflowTaskTriggerWorkflowTaskParamsPtrOutput {
	return i.ToWorkflowTaskTriggerWorkflowTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskTriggerWorkflowTaskParamsArgs) ToWorkflowTaskTriggerWorkflowTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskTriggerWorkflowTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskTriggerWorkflowTaskParamsOutput).ToWorkflowTaskTriggerWorkflowTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskTriggerWorkflowTaskParamsPtrInput is an input type that accepts WorkflowTaskTriggerWorkflowTaskParamsArgs, WorkflowTaskTriggerWorkflowTaskParamsPtr and WorkflowTaskTriggerWorkflowTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskTriggerWorkflowTaskParamsPtrInput` via:
//
//	        WorkflowTaskTriggerWorkflowTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskTriggerWorkflowTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskTriggerWorkflowTaskParamsPtrOutput() WorkflowTaskTriggerWorkflowTaskParamsPtrOutput
	ToWorkflowTaskTriggerWorkflowTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskTriggerWorkflowTaskParamsPtrOutput
}

type workflowTaskTriggerWorkflowTaskParamsPtrType WorkflowTaskTriggerWorkflowTaskParamsArgs

func WorkflowTaskTriggerWorkflowTaskParamsPtr(v *WorkflowTaskTriggerWorkflowTaskParamsArgs) WorkflowTaskTriggerWorkflowTaskParamsPtrInput {
	return (*workflowTaskTriggerWorkflowTaskParamsPtrType)(v)
}

func (*workflowTaskTriggerWorkflowTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskTriggerWorkflowTaskParams)(nil)).Elem()
}

func (i *workflowTaskTriggerWorkflowTaskParamsPtrType) ToWorkflowTaskTriggerWorkflowTaskParamsPtrOutput() WorkflowTaskTriggerWorkflowTaskParamsPtrOutput {
	return i.ToWorkflowTaskTriggerWorkflowTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskTriggerWorkflowTaskParamsPtrType) ToWorkflowTaskTriggerWorkflowTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskTriggerWorkflowTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskTriggerWorkflowTaskParamsPtrOutput)
}

type WorkflowTaskTriggerWorkflowTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskTriggerWorkflowTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskTriggerWorkflowTaskParams)(nil)).Elem()
}

func (o WorkflowTaskTriggerWorkflowTaskParamsOutput) ToWorkflowTaskTriggerWorkflowTaskParamsOutput() WorkflowTaskTriggerWorkflowTaskParamsOutput {
	return o
}

func (o WorkflowTaskTriggerWorkflowTaskParamsOutput) ToWorkflowTaskTriggerWorkflowTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskTriggerWorkflowTaskParamsOutput {
	return o
}

func (o WorkflowTaskTriggerWorkflowTaskParamsOutput) ToWorkflowTaskTriggerWorkflowTaskParamsPtrOutput() WorkflowTaskTriggerWorkflowTaskParamsPtrOutput {
	return o.ToWorkflowTaskTriggerWorkflowTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskTriggerWorkflowTaskParamsOutput) ToWorkflowTaskTriggerWorkflowTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskTriggerWorkflowTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskTriggerWorkflowTaskParams) *WorkflowTaskTriggerWorkflowTaskParams {
		return &v
	}).(WorkflowTaskTriggerWorkflowTaskParamsPtrOutput)
}

// ["(incident) kind can only match [:id, :slug, :sequential*id, :pagerduty*incident*id, :opsgenie*incident*id, :victor*ops*incident*id, :jira*issue*id, :asana*task*id, :shortcut*task*id, :linear*issue*id, :zendesk*ticket*id, :trello*card*id, :airtable*record*id, :shortcut*story*id, :github*issue*id, :freshservice*ticket*id, :freshservice*task*id, :clickup*task*id]", "(post*mortem) kind can only match [:id]", "(action*item) kind can only match [:id, :jira*issue*id, :asana*task*id, :shortcut*task*id, :linear*issue*id, :zendesk*ticket*id, :trello*card*id, :airtable*record*id, :shortcut*story*id, :github*issue*id, :freshservice*ticket*id, :freshservice*task*id, :clickup*task*id]", "(pulse) kind can only match [:id]", "(alert) kind can only match [:id]"]. Value must be one of `id`, `slug`, `sequentialId`, `pagerdutyIncidentId`, `opsgenieIncidentId`, `victorOpsIncidentId`, `jiraIssueId`, `asanaTaskId`, `shortcutTaskId`, `linearIssueId`, `zendeskTicketId`, `trelloCardId`, `airtableRecordId`, `shortcutStoryId`, `githubIssueId`, `freshserviceTicketId`, `freshserviceTaskId`, `clickupTaskId`.
func (o WorkflowTaskTriggerWorkflowTaskParamsOutput) AttributeToQueryBy() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskTriggerWorkflowTaskParams) string { return v.AttributeToQueryBy }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o WorkflowTaskTriggerWorkflowTaskParamsOutput) CheckWorkflowConditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskTriggerWorkflowTaskParams) *bool { return v.CheckWorkflowConditions }).(pulumi.BoolPtrOutput)
}

// Value must be one of `incident`, `postMortem`, `actionItem`, `pulse`, `alert`.
func (o WorkflowTaskTriggerWorkflowTaskParamsOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskTriggerWorkflowTaskParams) string { return v.Kind }).(pulumi.StringOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskTriggerWorkflowTaskParamsOutput) Resource() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskTriggerWorkflowTaskParams) map[string]string { return v.Resource }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskTriggerWorkflowTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskTriggerWorkflowTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskTriggerWorkflowTaskParamsOutput) Workflow() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskTriggerWorkflowTaskParams) map[string]string { return v.Workflow }).(pulumi.StringMapOutput)
}

type WorkflowTaskTriggerWorkflowTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskTriggerWorkflowTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskTriggerWorkflowTaskParams)(nil)).Elem()
}

func (o WorkflowTaskTriggerWorkflowTaskParamsPtrOutput) ToWorkflowTaskTriggerWorkflowTaskParamsPtrOutput() WorkflowTaskTriggerWorkflowTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskTriggerWorkflowTaskParamsPtrOutput) ToWorkflowTaskTriggerWorkflowTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskTriggerWorkflowTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskTriggerWorkflowTaskParamsPtrOutput) Elem() WorkflowTaskTriggerWorkflowTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskTriggerWorkflowTaskParams) WorkflowTaskTriggerWorkflowTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskTriggerWorkflowTaskParams
		return ret
	}).(WorkflowTaskTriggerWorkflowTaskParamsOutput)
}

// ["(incident) kind can only match [:id, :slug, :sequential*id, :pagerduty*incident*id, :opsgenie*incident*id, :victor*ops*incident*id, :jira*issue*id, :asana*task*id, :shortcut*task*id, :linear*issue*id, :zendesk*ticket*id, :trello*card*id, :airtable*record*id, :shortcut*story*id, :github*issue*id, :freshservice*ticket*id, :freshservice*task*id, :clickup*task*id]", "(post*mortem) kind can only match [:id]", "(action*item) kind can only match [:id, :jira*issue*id, :asana*task*id, :shortcut*task*id, :linear*issue*id, :zendesk*ticket*id, :trello*card*id, :airtable*record*id, :shortcut*story*id, :github*issue*id, :freshservice*ticket*id, :freshservice*task*id, :clickup*task*id]", "(pulse) kind can only match [:id]", "(alert) kind can only match [:id]"]. Value must be one of `id`, `slug`, `sequentialId`, `pagerdutyIncidentId`, `opsgenieIncidentId`, `victorOpsIncidentId`, `jiraIssueId`, `asanaTaskId`, `shortcutTaskId`, `linearIssueId`, `zendeskTicketId`, `trelloCardId`, `airtableRecordId`, `shortcutStoryId`, `githubIssueId`, `freshserviceTicketId`, `freshserviceTaskId`, `clickupTaskId`.
func (o WorkflowTaskTriggerWorkflowTaskParamsPtrOutput) AttributeToQueryBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskTriggerWorkflowTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.AttributeToQueryBy
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskTriggerWorkflowTaskParamsPtrOutput) CheckWorkflowConditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskTriggerWorkflowTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.CheckWorkflowConditions
	}).(pulumi.BoolPtrOutput)
}

// Value must be one of `incident`, `postMortem`, `actionItem`, `pulse`, `alert`.
func (o WorkflowTaskTriggerWorkflowTaskParamsPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskTriggerWorkflowTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskTriggerWorkflowTaskParamsPtrOutput) Resource() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskTriggerWorkflowTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskTriggerWorkflowTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskTriggerWorkflowTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskTriggerWorkflowTaskParamsPtrOutput) Workflow() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskTriggerWorkflowTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Workflow
	}).(pulumi.StringMapOutput)
}

type WorkflowTaskTweetTwitterMessageTaskParams struct {
	Message  string  `pulumi:"message"`
	TaskType *string `pulumi:"taskType"`
}

// WorkflowTaskTweetTwitterMessageTaskParamsInput is an input type that accepts WorkflowTaskTweetTwitterMessageTaskParamsArgs and WorkflowTaskTweetTwitterMessageTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskTweetTwitterMessageTaskParamsInput` via:
//
//	WorkflowTaskTweetTwitterMessageTaskParamsArgs{...}
type WorkflowTaskTweetTwitterMessageTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskTweetTwitterMessageTaskParamsOutput() WorkflowTaskTweetTwitterMessageTaskParamsOutput
	ToWorkflowTaskTweetTwitterMessageTaskParamsOutputWithContext(context.Context) WorkflowTaskTweetTwitterMessageTaskParamsOutput
}

type WorkflowTaskTweetTwitterMessageTaskParamsArgs struct {
	Message  pulumi.StringInput    `pulumi:"message"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskTweetTwitterMessageTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskTweetTwitterMessageTaskParams)(nil)).Elem()
}

func (i WorkflowTaskTweetTwitterMessageTaskParamsArgs) ToWorkflowTaskTweetTwitterMessageTaskParamsOutput() WorkflowTaskTweetTwitterMessageTaskParamsOutput {
	return i.ToWorkflowTaskTweetTwitterMessageTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskTweetTwitterMessageTaskParamsArgs) ToWorkflowTaskTweetTwitterMessageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskTweetTwitterMessageTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskTweetTwitterMessageTaskParamsOutput)
}

func (i WorkflowTaskTweetTwitterMessageTaskParamsArgs) ToWorkflowTaskTweetTwitterMessageTaskParamsPtrOutput() WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput {
	return i.ToWorkflowTaskTweetTwitterMessageTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskTweetTwitterMessageTaskParamsArgs) ToWorkflowTaskTweetTwitterMessageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskTweetTwitterMessageTaskParamsOutput).ToWorkflowTaskTweetTwitterMessageTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskTweetTwitterMessageTaskParamsPtrInput is an input type that accepts WorkflowTaskTweetTwitterMessageTaskParamsArgs, WorkflowTaskTweetTwitterMessageTaskParamsPtr and WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskTweetTwitterMessageTaskParamsPtrInput` via:
//
//	        WorkflowTaskTweetTwitterMessageTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskTweetTwitterMessageTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskTweetTwitterMessageTaskParamsPtrOutput() WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput
	ToWorkflowTaskTweetTwitterMessageTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput
}

type workflowTaskTweetTwitterMessageTaskParamsPtrType WorkflowTaskTweetTwitterMessageTaskParamsArgs

func WorkflowTaskTweetTwitterMessageTaskParamsPtr(v *WorkflowTaskTweetTwitterMessageTaskParamsArgs) WorkflowTaskTweetTwitterMessageTaskParamsPtrInput {
	return (*workflowTaskTweetTwitterMessageTaskParamsPtrType)(v)
}

func (*workflowTaskTweetTwitterMessageTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskTweetTwitterMessageTaskParams)(nil)).Elem()
}

func (i *workflowTaskTweetTwitterMessageTaskParamsPtrType) ToWorkflowTaskTweetTwitterMessageTaskParamsPtrOutput() WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput {
	return i.ToWorkflowTaskTweetTwitterMessageTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskTweetTwitterMessageTaskParamsPtrType) ToWorkflowTaskTweetTwitterMessageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput)
}

type WorkflowTaskTweetTwitterMessageTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskTweetTwitterMessageTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskTweetTwitterMessageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskTweetTwitterMessageTaskParamsOutput) ToWorkflowTaskTweetTwitterMessageTaskParamsOutput() WorkflowTaskTweetTwitterMessageTaskParamsOutput {
	return o
}

func (o WorkflowTaskTweetTwitterMessageTaskParamsOutput) ToWorkflowTaskTweetTwitterMessageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskTweetTwitterMessageTaskParamsOutput {
	return o
}

func (o WorkflowTaskTweetTwitterMessageTaskParamsOutput) ToWorkflowTaskTweetTwitterMessageTaskParamsPtrOutput() WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput {
	return o.ToWorkflowTaskTweetTwitterMessageTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskTweetTwitterMessageTaskParamsOutput) ToWorkflowTaskTweetTwitterMessageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskTweetTwitterMessageTaskParams) *WorkflowTaskTweetTwitterMessageTaskParams {
		return &v
	}).(WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput)
}

func (o WorkflowTaskTweetTwitterMessageTaskParamsOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskTweetTwitterMessageTaskParams) string { return v.Message }).(pulumi.StringOutput)
}

func (o WorkflowTaskTweetTwitterMessageTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskTweetTwitterMessageTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskTweetTwitterMessageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput) ToWorkflowTaskTweetTwitterMessageTaskParamsPtrOutput() WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput) ToWorkflowTaskTweetTwitterMessageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput) Elem() WorkflowTaskTweetTwitterMessageTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskTweetTwitterMessageTaskParams) WorkflowTaskTweetTwitterMessageTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskTweetTwitterMessageTaskParams
		return ret
	}).(WorkflowTaskTweetTwitterMessageTaskParamsOutput)
}

func (o WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskTweetTwitterMessageTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskTweetTwitterMessageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateActionItemTaskParams struct {
	// Map must contain two fields, `id` and `name`.  The user this action item is assigned to
	AssignedToUser map[string]string `pulumi:"assignedToUser"`
	// [DEPRECATED] Use assigned*to*user attribute instead. The user id this action item is assigned to
	AssignedToUserId *string `pulumi:"assignedToUserId"`
	// Attribute of the action item to match against. Value must be one of `id`, `jiraIssueId`, `asanaTaskId`, `shortcutTaskId`, `linearIssueId`, `zendeskTicketId`, `trelloCardId`, `airtableRecordId`, `shortcutStoryId`, `githubIssueId`, `gitlabIssueId`, `freshserviceTicketId`, `freshserviceTaskId`, `clickupTaskId`.
	AttributeToQueryBy string `pulumi:"attributeToQueryBy"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string `pulumi:"customFieldsMapping"`
	// The action item description
	Description *string  `pulumi:"description"`
	GroupIds    []string `pulumi:"groupIds"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool `pulumi:"postToIncidentTimeline"`
	// The action item priority. Value must be one of `high`, `medium`, `low`.
	Priority *string `pulumi:"priority"`
	// Value that attribute*to*query_by to uses to match against
	QueryValue string `pulumi:"queryValue"`
	// The action item status. Value must be one of `open`, `inProgress`, `cancelled`, `done`.
	Status *string `pulumi:"status"`
	// Brief description of the action item
	Summary  *string `pulumi:"summary"`
	TaskType *string `pulumi:"taskType"`
}

// WorkflowTaskUpdateActionItemTaskParamsInput is an input type that accepts WorkflowTaskUpdateActionItemTaskParamsArgs and WorkflowTaskUpdateActionItemTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateActionItemTaskParamsInput` via:
//
//	WorkflowTaskUpdateActionItemTaskParamsArgs{...}
type WorkflowTaskUpdateActionItemTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateActionItemTaskParamsOutput() WorkflowTaskUpdateActionItemTaskParamsOutput
	ToWorkflowTaskUpdateActionItemTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateActionItemTaskParamsOutput
}

type WorkflowTaskUpdateActionItemTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`.  The user this action item is assigned to
	AssignedToUser pulumi.StringMapInput `pulumi:"assignedToUser"`
	// [DEPRECATED] Use assigned*to*user attribute instead. The user id this action item is assigned to
	AssignedToUserId pulumi.StringPtrInput `pulumi:"assignedToUserId"`
	// Attribute of the action item to match against. Value must be one of `id`, `jiraIssueId`, `asanaTaskId`, `shortcutTaskId`, `linearIssueId`, `zendeskTicketId`, `trelloCardId`, `airtableRecordId`, `shortcutStoryId`, `githubIssueId`, `gitlabIssueId`, `freshserviceTicketId`, `freshserviceTaskId`, `clickupTaskId`.
	AttributeToQueryBy pulumi.StringInput `pulumi:"attributeToQueryBy"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput `pulumi:"customFieldsMapping"`
	// The action item description
	Description pulumi.StringPtrInput   `pulumi:"description"`
	GroupIds    pulumi.StringArrayInput `pulumi:"groupIds"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput `pulumi:"postToIncidentTimeline"`
	// The action item priority. Value must be one of `high`, `medium`, `low`.
	Priority pulumi.StringPtrInput `pulumi:"priority"`
	// Value that attribute*to*query_by to uses to match against
	QueryValue pulumi.StringInput `pulumi:"queryValue"`
	// The action item status. Value must be one of `open`, `inProgress`, `cancelled`, `done`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Brief description of the action item
	Summary  pulumi.StringPtrInput `pulumi:"summary"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskUpdateActionItemTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateActionItemTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateActionItemTaskParamsArgs) ToWorkflowTaskUpdateActionItemTaskParamsOutput() WorkflowTaskUpdateActionItemTaskParamsOutput {
	return i.ToWorkflowTaskUpdateActionItemTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateActionItemTaskParamsArgs) ToWorkflowTaskUpdateActionItemTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateActionItemTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateActionItemTaskParamsOutput)
}

func (i WorkflowTaskUpdateActionItemTaskParamsArgs) ToWorkflowTaskUpdateActionItemTaskParamsPtrOutput() WorkflowTaskUpdateActionItemTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateActionItemTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateActionItemTaskParamsArgs) ToWorkflowTaskUpdateActionItemTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateActionItemTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateActionItemTaskParamsOutput).ToWorkflowTaskUpdateActionItemTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateActionItemTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateActionItemTaskParamsArgs, WorkflowTaskUpdateActionItemTaskParamsPtr and WorkflowTaskUpdateActionItemTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateActionItemTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateActionItemTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateActionItemTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateActionItemTaskParamsPtrOutput() WorkflowTaskUpdateActionItemTaskParamsPtrOutput
	ToWorkflowTaskUpdateActionItemTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateActionItemTaskParamsPtrOutput
}

type workflowTaskUpdateActionItemTaskParamsPtrType WorkflowTaskUpdateActionItemTaskParamsArgs

func WorkflowTaskUpdateActionItemTaskParamsPtr(v *WorkflowTaskUpdateActionItemTaskParamsArgs) WorkflowTaskUpdateActionItemTaskParamsPtrInput {
	return (*workflowTaskUpdateActionItemTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateActionItemTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateActionItemTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateActionItemTaskParamsPtrType) ToWorkflowTaskUpdateActionItemTaskParamsPtrOutput() WorkflowTaskUpdateActionItemTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateActionItemTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateActionItemTaskParamsPtrType) ToWorkflowTaskUpdateActionItemTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateActionItemTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateActionItemTaskParamsPtrOutput)
}

type WorkflowTaskUpdateActionItemTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateActionItemTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateActionItemTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateActionItemTaskParamsOutput) ToWorkflowTaskUpdateActionItemTaskParamsOutput() WorkflowTaskUpdateActionItemTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateActionItemTaskParamsOutput) ToWorkflowTaskUpdateActionItemTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateActionItemTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateActionItemTaskParamsOutput) ToWorkflowTaskUpdateActionItemTaskParamsPtrOutput() WorkflowTaskUpdateActionItemTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateActionItemTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateActionItemTaskParamsOutput) ToWorkflowTaskUpdateActionItemTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateActionItemTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateActionItemTaskParams) *WorkflowTaskUpdateActionItemTaskParams {
		return &v
	}).(WorkflowTaskUpdateActionItemTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`.  The user this action item is assigned to
func (o WorkflowTaskUpdateActionItemTaskParamsOutput) AssignedToUser() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateActionItemTaskParams) map[string]string { return v.AssignedToUser }).(pulumi.StringMapOutput)
}

// [DEPRECATED] Use assigned*to*user attribute instead. The user id this action item is assigned to
func (o WorkflowTaskUpdateActionItemTaskParamsOutput) AssignedToUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateActionItemTaskParams) *string { return v.AssignedToUserId }).(pulumi.StringPtrOutput)
}

// Attribute of the action item to match against. Value must be one of `id`, `jiraIssueId`, `asanaTaskId`, `shortcutTaskId`, `linearIssueId`, `zendeskTicketId`, `trelloCardId`, `airtableRecordId`, `shortcutStoryId`, `githubIssueId`, `gitlabIssueId`, `freshserviceTicketId`, `freshserviceTaskId`, `clickupTaskId`.
func (o WorkflowTaskUpdateActionItemTaskParamsOutput) AttributeToQueryBy() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateActionItemTaskParams) string { return v.AttributeToQueryBy }).(pulumi.StringOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateActionItemTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateActionItemTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

// The action item description
func (o WorkflowTaskUpdateActionItemTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateActionItemTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateActionItemTaskParamsOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateActionItemTaskParams) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateActionItemTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateActionItemTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

// The action item priority. Value must be one of `high`, `medium`, `low`.
func (o WorkflowTaskUpdateActionItemTaskParamsOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateActionItemTaskParams) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

// Value that attribute*to*query_by to uses to match against
func (o WorkflowTaskUpdateActionItemTaskParamsOutput) QueryValue() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateActionItemTaskParams) string { return v.QueryValue }).(pulumi.StringOutput)
}

// The action item status. Value must be one of `open`, `inProgress`, `cancelled`, `done`.
func (o WorkflowTaskUpdateActionItemTaskParamsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateActionItemTaskParams) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Brief description of the action item
func (o WorkflowTaskUpdateActionItemTaskParamsOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateActionItemTaskParams) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateActionItemTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateActionItemTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateActionItemTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateActionItemTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateActionItemTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateActionItemTaskParamsPtrOutput) ToWorkflowTaskUpdateActionItemTaskParamsPtrOutput() WorkflowTaskUpdateActionItemTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateActionItemTaskParamsPtrOutput) ToWorkflowTaskUpdateActionItemTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateActionItemTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateActionItemTaskParamsPtrOutput) Elem() WorkflowTaskUpdateActionItemTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItemTaskParams) WorkflowTaskUpdateActionItemTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateActionItemTaskParams
		return ret
	}).(WorkflowTaskUpdateActionItemTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`.  The user this action item is assigned to
func (o WorkflowTaskUpdateActionItemTaskParamsPtrOutput) AssignedToUser() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItemTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.AssignedToUser
	}).(pulumi.StringMapOutput)
}

// [DEPRECATED] Use assigned*to*user attribute instead. The user id this action item is assigned to
func (o WorkflowTaskUpdateActionItemTaskParamsPtrOutput) AssignedToUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.AssignedToUserId
	}).(pulumi.StringPtrOutput)
}

// Attribute of the action item to match against. Value must be one of `id`, `jiraIssueId`, `asanaTaskId`, `shortcutTaskId`, `linearIssueId`, `zendeskTicketId`, `trelloCardId`, `airtableRecordId`, `shortcutStoryId`, `githubIssueId`, `gitlabIssueId`, `freshserviceTicketId`, `freshserviceTaskId`, `clickupTaskId`.
func (o WorkflowTaskUpdateActionItemTaskParamsPtrOutput) AttributeToQueryBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.AttributeToQueryBy
	}).(pulumi.StringPtrOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateActionItemTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

// The action item description
func (o WorkflowTaskUpdateActionItemTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateActionItemTaskParamsPtrOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItemTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.GroupIds
	}).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateActionItemTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItemTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

// The action item priority. Value must be one of `high`, `medium`, `low`.
func (o WorkflowTaskUpdateActionItemTaskParamsPtrOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringPtrOutput)
}

// Value that attribute*to*query_by to uses to match against
func (o WorkflowTaskUpdateActionItemTaskParamsPtrOutput) QueryValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.QueryValue
	}).(pulumi.StringPtrOutput)
}

// The action item status. Value must be one of `open`, `inProgress`, `cancelled`, `done`.
func (o WorkflowTaskUpdateActionItemTaskParamsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Brief description of the action item
func (o WorkflowTaskUpdateActionItemTaskParamsPtrOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Summary
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateActionItemTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateAirtableTableRecordTaskParams struct {
	// The base key
	BaseKey string `pulumi:"baseKey"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string `pulumi:"customFieldsMapping"`
	// The record id
	RecordId string `pulumi:"recordId"`
	// The table name
	TableName string  `pulumi:"tableName"`
	TaskType  *string `pulumi:"taskType"`
}

// WorkflowTaskUpdateAirtableTableRecordTaskParamsInput is an input type that accepts WorkflowTaskUpdateAirtableTableRecordTaskParamsArgs and WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateAirtableTableRecordTaskParamsInput` via:
//
//	WorkflowTaskUpdateAirtableTableRecordTaskParamsArgs{...}
type WorkflowTaskUpdateAirtableTableRecordTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateAirtableTableRecordTaskParamsOutput() WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput
	ToWorkflowTaskUpdateAirtableTableRecordTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput
}

type WorkflowTaskUpdateAirtableTableRecordTaskParamsArgs struct {
	// The base key
	BaseKey pulumi.StringInput `pulumi:"baseKey"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput `pulumi:"customFieldsMapping"`
	// The record id
	RecordId pulumi.StringInput `pulumi:"recordId"`
	// The table name
	TableName pulumi.StringInput    `pulumi:"tableName"`
	TaskType  pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskUpdateAirtableTableRecordTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateAirtableTableRecordTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateAirtableTableRecordTaskParamsArgs) ToWorkflowTaskUpdateAirtableTableRecordTaskParamsOutput() WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput {
	return i.ToWorkflowTaskUpdateAirtableTableRecordTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateAirtableTableRecordTaskParamsArgs) ToWorkflowTaskUpdateAirtableTableRecordTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput)
}

func (i WorkflowTaskUpdateAirtableTableRecordTaskParamsArgs) ToWorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput() WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateAirtableTableRecordTaskParamsArgs) ToWorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput).ToWorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateAirtableTableRecordTaskParamsArgs, WorkflowTaskUpdateAirtableTableRecordTaskParamsPtr and WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateAirtableTableRecordTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput() WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput
	ToWorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput
}

type workflowTaskUpdateAirtableTableRecordTaskParamsPtrType WorkflowTaskUpdateAirtableTableRecordTaskParamsArgs

func WorkflowTaskUpdateAirtableTableRecordTaskParamsPtr(v *WorkflowTaskUpdateAirtableTableRecordTaskParamsArgs) WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrInput {
	return (*workflowTaskUpdateAirtableTableRecordTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateAirtableTableRecordTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateAirtableTableRecordTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateAirtableTableRecordTaskParamsPtrType) ToWorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput() WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateAirtableTableRecordTaskParamsPtrType) ToWorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput)
}

type WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateAirtableTableRecordTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput) ToWorkflowTaskUpdateAirtableTableRecordTaskParamsOutput() WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput) ToWorkflowTaskUpdateAirtableTableRecordTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput) ToWorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput() WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput) ToWorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateAirtableTableRecordTaskParams) *WorkflowTaskUpdateAirtableTableRecordTaskParams {
		return &v
	}).(WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput)
}

// The base key
func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput) BaseKey() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAirtableTableRecordTaskParams) string { return v.BaseKey }).(pulumi.StringOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAirtableTableRecordTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

// The record id
func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput) RecordId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAirtableTableRecordTaskParams) string { return v.RecordId }).(pulumi.StringOutput)
}

// The table name
func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAirtableTableRecordTaskParams) string { return v.TableName }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAirtableTableRecordTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateAirtableTableRecordTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput) ToWorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput() WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput) ToWorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput) Elem() WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAirtableTableRecordTaskParams) WorkflowTaskUpdateAirtableTableRecordTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateAirtableTableRecordTaskParams
		return ret
	}).(WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput)
}

// The base key
func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput) BaseKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAirtableTableRecordTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.BaseKey
	}).(pulumi.StringPtrOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAirtableTableRecordTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

// The record id
func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput) RecordId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAirtableTableRecordTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.RecordId
	}).(pulumi.StringPtrOutput)
}

// The table name
func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAirtableTableRecordTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAirtableTableRecordTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateAsanaTaskTaskParams struct {
	// The assigned user's email
	AssignUserEmail *string `pulumi:"assignUserEmail"`
	// Map must contain two fields, `id` and `name`.
	Completion map[string]string `pulumi:"completion"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string `pulumi:"customFieldsMapping"`
	// Value must be one of `blocking`, `blockedBy`.
	DependencyDirection *string `pulumi:"dependencyDirection"`
	// Dependent task ids. Supports liquid syntax
	DependentTaskIds []string `pulumi:"dependentTaskIds"`
	// The due date
	DueDate *string `pulumi:"dueDate"`
	Notes   *string `pulumi:"notes"`
	// The task id
	TaskId   string  `pulumi:"taskId"`
	TaskType *string `pulumi:"taskType"`
	// The task title
	Title *string `pulumi:"title"`
}

// WorkflowTaskUpdateAsanaTaskTaskParamsInput is an input type that accepts WorkflowTaskUpdateAsanaTaskTaskParamsArgs and WorkflowTaskUpdateAsanaTaskTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateAsanaTaskTaskParamsInput` via:
//
//	WorkflowTaskUpdateAsanaTaskTaskParamsArgs{...}
type WorkflowTaskUpdateAsanaTaskTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateAsanaTaskTaskParamsOutput() WorkflowTaskUpdateAsanaTaskTaskParamsOutput
	ToWorkflowTaskUpdateAsanaTaskTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateAsanaTaskTaskParamsOutput
}

type WorkflowTaskUpdateAsanaTaskTaskParamsArgs struct {
	// The assigned user's email
	AssignUserEmail pulumi.StringPtrInput `pulumi:"assignUserEmail"`
	// Map must contain two fields, `id` and `name`.
	Completion pulumi.StringMapInput `pulumi:"completion"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput `pulumi:"customFieldsMapping"`
	// Value must be one of `blocking`, `blockedBy`.
	DependencyDirection pulumi.StringPtrInput `pulumi:"dependencyDirection"`
	// Dependent task ids. Supports liquid syntax
	DependentTaskIds pulumi.StringArrayInput `pulumi:"dependentTaskIds"`
	// The due date
	DueDate pulumi.StringPtrInput `pulumi:"dueDate"`
	Notes   pulumi.StringPtrInput `pulumi:"notes"`
	// The task id
	TaskId   pulumi.StringInput    `pulumi:"taskId"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The task title
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (WorkflowTaskUpdateAsanaTaskTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateAsanaTaskTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateAsanaTaskTaskParamsArgs) ToWorkflowTaskUpdateAsanaTaskTaskParamsOutput() WorkflowTaskUpdateAsanaTaskTaskParamsOutput {
	return i.ToWorkflowTaskUpdateAsanaTaskTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateAsanaTaskTaskParamsArgs) ToWorkflowTaskUpdateAsanaTaskTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateAsanaTaskTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateAsanaTaskTaskParamsOutput)
}

func (i WorkflowTaskUpdateAsanaTaskTaskParamsArgs) ToWorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput() WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateAsanaTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateAsanaTaskTaskParamsArgs) ToWorkflowTaskUpdateAsanaTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateAsanaTaskTaskParamsOutput).ToWorkflowTaskUpdateAsanaTaskTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateAsanaTaskTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateAsanaTaskTaskParamsArgs, WorkflowTaskUpdateAsanaTaskTaskParamsPtr and WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateAsanaTaskTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateAsanaTaskTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateAsanaTaskTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput() WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput
	ToWorkflowTaskUpdateAsanaTaskTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput
}

type workflowTaskUpdateAsanaTaskTaskParamsPtrType WorkflowTaskUpdateAsanaTaskTaskParamsArgs

func WorkflowTaskUpdateAsanaTaskTaskParamsPtr(v *WorkflowTaskUpdateAsanaTaskTaskParamsArgs) WorkflowTaskUpdateAsanaTaskTaskParamsPtrInput {
	return (*workflowTaskUpdateAsanaTaskTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateAsanaTaskTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateAsanaTaskTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateAsanaTaskTaskParamsPtrType) ToWorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput() WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateAsanaTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateAsanaTaskTaskParamsPtrType) ToWorkflowTaskUpdateAsanaTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput)
}

type WorkflowTaskUpdateAsanaTaskTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateAsanaTaskTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateAsanaTaskTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateAsanaTaskTaskParamsOutput) ToWorkflowTaskUpdateAsanaTaskTaskParamsOutput() WorkflowTaskUpdateAsanaTaskTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateAsanaTaskTaskParamsOutput) ToWorkflowTaskUpdateAsanaTaskTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateAsanaTaskTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateAsanaTaskTaskParamsOutput) ToWorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput() WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateAsanaTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateAsanaTaskTaskParamsOutput) ToWorkflowTaskUpdateAsanaTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateAsanaTaskTaskParams) *WorkflowTaskUpdateAsanaTaskTaskParams {
		return &v
	}).(WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput)
}

// The assigned user's email
func (o WorkflowTaskUpdateAsanaTaskTaskParamsOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAsanaTaskTaskParams) *string { return v.AssignUserEmail }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskUpdateAsanaTaskTaskParamsOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAsanaTaskTaskParams) map[string]string { return v.Completion }).(pulumi.StringMapOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateAsanaTaskTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAsanaTaskTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

// Value must be one of `blocking`, `blockedBy`.
func (o WorkflowTaskUpdateAsanaTaskTaskParamsOutput) DependencyDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAsanaTaskTaskParams) *string { return v.DependencyDirection }).(pulumi.StringPtrOutput)
}

// Dependent task ids. Supports liquid syntax
func (o WorkflowTaskUpdateAsanaTaskTaskParamsOutput) DependentTaskIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAsanaTaskTaskParams) []string { return v.DependentTaskIds }).(pulumi.StringArrayOutput)
}

// The due date
func (o WorkflowTaskUpdateAsanaTaskTaskParamsOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAsanaTaskTaskParams) *string { return v.DueDate }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateAsanaTaskTaskParamsOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAsanaTaskTaskParams) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// The task id
func (o WorkflowTaskUpdateAsanaTaskTaskParamsOutput) TaskId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAsanaTaskTaskParams) string { return v.TaskId }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdateAsanaTaskTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAsanaTaskTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The task title
func (o WorkflowTaskUpdateAsanaTaskTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAsanaTaskTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateAsanaTaskTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput) ToWorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput() WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput) ToWorkflowTaskUpdateAsanaTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput) Elem() WorkflowTaskUpdateAsanaTaskTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTaskTaskParams) WorkflowTaskUpdateAsanaTaskTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateAsanaTaskTaskParams
		return ret
	}).(WorkflowTaskUpdateAsanaTaskTaskParamsOutput)
}

// The assigned user's email
func (o WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.AssignUserEmail
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTaskTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Completion
	}).(pulumi.StringMapOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `blocking`, `blockedBy`.
func (o WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput) DependencyDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DependencyDirection
	}).(pulumi.StringPtrOutput)
}

// Dependent task ids. Supports liquid syntax
func (o WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput) DependentTaskIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTaskTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.DependentTaskIds
	}).(pulumi.StringArrayOutput)
}

// The due date
func (o WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DueDate
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Notes
	}).(pulumi.StringPtrOutput)
}

// The task id
func (o WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput) TaskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.TaskId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The task title
func (o WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateAttachedAlertsTaskParams struct {
	// Value must be one of `acknowledged`, `resolved`.
	Status   string  `pulumi:"status"`
	TaskType *string `pulumi:"taskType"`
}

// WorkflowTaskUpdateAttachedAlertsTaskParamsInput is an input type that accepts WorkflowTaskUpdateAttachedAlertsTaskParamsArgs and WorkflowTaskUpdateAttachedAlertsTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateAttachedAlertsTaskParamsInput` via:
//
//	WorkflowTaskUpdateAttachedAlertsTaskParamsArgs{...}
type WorkflowTaskUpdateAttachedAlertsTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateAttachedAlertsTaskParamsOutput() WorkflowTaskUpdateAttachedAlertsTaskParamsOutput
	ToWorkflowTaskUpdateAttachedAlertsTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateAttachedAlertsTaskParamsOutput
}

type WorkflowTaskUpdateAttachedAlertsTaskParamsArgs struct {
	// Value must be one of `acknowledged`, `resolved`.
	Status   pulumi.StringInput    `pulumi:"status"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskUpdateAttachedAlertsTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateAttachedAlertsTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateAttachedAlertsTaskParamsArgs) ToWorkflowTaskUpdateAttachedAlertsTaskParamsOutput() WorkflowTaskUpdateAttachedAlertsTaskParamsOutput {
	return i.ToWorkflowTaskUpdateAttachedAlertsTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateAttachedAlertsTaskParamsArgs) ToWorkflowTaskUpdateAttachedAlertsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateAttachedAlertsTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateAttachedAlertsTaskParamsOutput)
}

func (i WorkflowTaskUpdateAttachedAlertsTaskParamsArgs) ToWorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput() WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateAttachedAlertsTaskParamsArgs) ToWorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateAttachedAlertsTaskParamsOutput).ToWorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateAttachedAlertsTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateAttachedAlertsTaskParamsArgs, WorkflowTaskUpdateAttachedAlertsTaskParamsPtr and WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateAttachedAlertsTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateAttachedAlertsTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateAttachedAlertsTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput() WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput
	ToWorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput
}

type workflowTaskUpdateAttachedAlertsTaskParamsPtrType WorkflowTaskUpdateAttachedAlertsTaskParamsArgs

func WorkflowTaskUpdateAttachedAlertsTaskParamsPtr(v *WorkflowTaskUpdateAttachedAlertsTaskParamsArgs) WorkflowTaskUpdateAttachedAlertsTaskParamsPtrInput {
	return (*workflowTaskUpdateAttachedAlertsTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateAttachedAlertsTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateAttachedAlertsTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateAttachedAlertsTaskParamsPtrType) ToWorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput() WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateAttachedAlertsTaskParamsPtrType) ToWorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput)
}

type WorkflowTaskUpdateAttachedAlertsTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateAttachedAlertsTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateAttachedAlertsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateAttachedAlertsTaskParamsOutput) ToWorkflowTaskUpdateAttachedAlertsTaskParamsOutput() WorkflowTaskUpdateAttachedAlertsTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateAttachedAlertsTaskParamsOutput) ToWorkflowTaskUpdateAttachedAlertsTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateAttachedAlertsTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateAttachedAlertsTaskParamsOutput) ToWorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput() WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateAttachedAlertsTaskParamsOutput) ToWorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateAttachedAlertsTaskParams) *WorkflowTaskUpdateAttachedAlertsTaskParams {
		return &v
	}).(WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput)
}

// Value must be one of `acknowledged`, `resolved`.
func (o WorkflowTaskUpdateAttachedAlertsTaskParamsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAttachedAlertsTaskParams) string { return v.Status }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdateAttachedAlertsTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateAttachedAlertsTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateAttachedAlertsTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput) ToWorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput() WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput) ToWorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput) Elem() WorkflowTaskUpdateAttachedAlertsTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAttachedAlertsTaskParams) WorkflowTaskUpdateAttachedAlertsTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateAttachedAlertsTaskParams
		return ret
	}).(WorkflowTaskUpdateAttachedAlertsTaskParamsOutput)
}

// Value must be one of `acknowledged`, `resolved`.
func (o WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAttachedAlertsTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAttachedAlertsTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateClickupTaskTaskParams struct {
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string `pulumi:"customFieldsMapping"`
	// The task description
	Description *string `pulumi:"description"`
	// The due date
	DueDate *string `pulumi:"dueDate"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority map[string]string `pulumi:"priority"`
	// The task tags
	Tags *string `pulumi:"tags"`
	// The task id
	TaskId string `pulumi:"taskId"`
	// Additional ClickUp task attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
	TaskPayload *string `pulumi:"taskPayload"`
	TaskType    *string `pulumi:"taskType"`
	// The task title
	Title *string `pulumi:"title"`
}

// WorkflowTaskUpdateClickupTaskTaskParamsInput is an input type that accepts WorkflowTaskUpdateClickupTaskTaskParamsArgs and WorkflowTaskUpdateClickupTaskTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateClickupTaskTaskParamsInput` via:
//
//	WorkflowTaskUpdateClickupTaskTaskParamsArgs{...}
type WorkflowTaskUpdateClickupTaskTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateClickupTaskTaskParamsOutput() WorkflowTaskUpdateClickupTaskTaskParamsOutput
	ToWorkflowTaskUpdateClickupTaskTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateClickupTaskTaskParamsOutput
}

type WorkflowTaskUpdateClickupTaskTaskParamsArgs struct {
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput `pulumi:"customFieldsMapping"`
	// The task description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The due date
	DueDate pulumi.StringPtrInput `pulumi:"dueDate"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority pulumi.StringMapInput `pulumi:"priority"`
	// The task tags
	Tags pulumi.StringPtrInput `pulumi:"tags"`
	// The task id
	TaskId pulumi.StringInput `pulumi:"taskId"`
	// Additional ClickUp task attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
	TaskPayload pulumi.StringPtrInput `pulumi:"taskPayload"`
	TaskType    pulumi.StringPtrInput `pulumi:"taskType"`
	// The task title
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (WorkflowTaskUpdateClickupTaskTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateClickupTaskTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateClickupTaskTaskParamsArgs) ToWorkflowTaskUpdateClickupTaskTaskParamsOutput() WorkflowTaskUpdateClickupTaskTaskParamsOutput {
	return i.ToWorkflowTaskUpdateClickupTaskTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateClickupTaskTaskParamsArgs) ToWorkflowTaskUpdateClickupTaskTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateClickupTaskTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateClickupTaskTaskParamsOutput)
}

func (i WorkflowTaskUpdateClickupTaskTaskParamsArgs) ToWorkflowTaskUpdateClickupTaskTaskParamsPtrOutput() WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateClickupTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateClickupTaskTaskParamsArgs) ToWorkflowTaskUpdateClickupTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateClickupTaskTaskParamsOutput).ToWorkflowTaskUpdateClickupTaskTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateClickupTaskTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateClickupTaskTaskParamsArgs, WorkflowTaskUpdateClickupTaskTaskParamsPtr and WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateClickupTaskTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateClickupTaskTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateClickupTaskTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateClickupTaskTaskParamsPtrOutput() WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput
	ToWorkflowTaskUpdateClickupTaskTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput
}

type workflowTaskUpdateClickupTaskTaskParamsPtrType WorkflowTaskUpdateClickupTaskTaskParamsArgs

func WorkflowTaskUpdateClickupTaskTaskParamsPtr(v *WorkflowTaskUpdateClickupTaskTaskParamsArgs) WorkflowTaskUpdateClickupTaskTaskParamsPtrInput {
	return (*workflowTaskUpdateClickupTaskTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateClickupTaskTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateClickupTaskTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateClickupTaskTaskParamsPtrType) ToWorkflowTaskUpdateClickupTaskTaskParamsPtrOutput() WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateClickupTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateClickupTaskTaskParamsPtrType) ToWorkflowTaskUpdateClickupTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput)
}

type WorkflowTaskUpdateClickupTaskTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateClickupTaskTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateClickupTaskTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateClickupTaskTaskParamsOutput) ToWorkflowTaskUpdateClickupTaskTaskParamsOutput() WorkflowTaskUpdateClickupTaskTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateClickupTaskTaskParamsOutput) ToWorkflowTaskUpdateClickupTaskTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateClickupTaskTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateClickupTaskTaskParamsOutput) ToWorkflowTaskUpdateClickupTaskTaskParamsPtrOutput() WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateClickupTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateClickupTaskTaskParamsOutput) ToWorkflowTaskUpdateClickupTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateClickupTaskTaskParams) *WorkflowTaskUpdateClickupTaskTaskParams {
		return &v
	}).(WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateClickupTaskTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateClickupTaskTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

// The task description
func (o WorkflowTaskUpdateClickupTaskTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateClickupTaskTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskUpdateClickupTaskTaskParamsOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateClickupTaskTaskParams) *string { return v.DueDate }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskUpdateClickupTaskTaskParamsOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateClickupTaskTaskParams) map[string]string { return v.Priority }).(pulumi.StringMapOutput)
}

// The task tags
func (o WorkflowTaskUpdateClickupTaskTaskParamsOutput) Tags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateClickupTaskTaskParams) *string { return v.Tags }).(pulumi.StringPtrOutput)
}

// The task id
func (o WorkflowTaskUpdateClickupTaskTaskParamsOutput) TaskId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateClickupTaskTaskParams) string { return v.TaskId }).(pulumi.StringOutput)
}

// Additional ClickUp task attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateClickupTaskTaskParamsOutput) TaskPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateClickupTaskTaskParams) *string { return v.TaskPayload }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateClickupTaskTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateClickupTaskTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The task title
func (o WorkflowTaskUpdateClickupTaskTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateClickupTaskTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateClickupTaskTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput) ToWorkflowTaskUpdateClickupTaskTaskParamsPtrOutput() WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput) ToWorkflowTaskUpdateClickupTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput) Elem() WorkflowTaskUpdateClickupTaskTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateClickupTaskTaskParams) WorkflowTaskUpdateClickupTaskTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateClickupTaskTaskParams
		return ret
	}).(WorkflowTaskUpdateClickupTaskTaskParamsOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateClickupTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

// The task description
func (o WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateClickupTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateClickupTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DueDate
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateClickupTaskTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringMapOutput)
}

// The task tags
func (o WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput) Tags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateClickupTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringPtrOutput)
}

// The task id
func (o WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput) TaskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateClickupTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.TaskId
	}).(pulumi.StringPtrOutput)
}

// Additional ClickUp task attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput) TaskPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateClickupTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskPayload
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateClickupTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The task title
func (o WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateClickupTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateGithubIssueTaskParams struct {
	// The issue body
	Body *string `pulumi:"body"`
	// Map must contain two fields, `id` and `name`.
	Completion map[string]string `pulumi:"completion"`
	// The issue id
	IssueId  string  `pulumi:"issueId"`
	TaskType *string `pulumi:"taskType"`
	// The issue title
	Title *string `pulumi:"title"`
}

// WorkflowTaskUpdateGithubIssueTaskParamsInput is an input type that accepts WorkflowTaskUpdateGithubIssueTaskParamsArgs and WorkflowTaskUpdateGithubIssueTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateGithubIssueTaskParamsInput` via:
//
//	WorkflowTaskUpdateGithubIssueTaskParamsArgs{...}
type WorkflowTaskUpdateGithubIssueTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateGithubIssueTaskParamsOutput() WorkflowTaskUpdateGithubIssueTaskParamsOutput
	ToWorkflowTaskUpdateGithubIssueTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateGithubIssueTaskParamsOutput
}

type WorkflowTaskUpdateGithubIssueTaskParamsArgs struct {
	// The issue body
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Map must contain two fields, `id` and `name`.
	Completion pulumi.StringMapInput `pulumi:"completion"`
	// The issue id
	IssueId  pulumi.StringInput    `pulumi:"issueId"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The issue title
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (WorkflowTaskUpdateGithubIssueTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateGithubIssueTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateGithubIssueTaskParamsArgs) ToWorkflowTaskUpdateGithubIssueTaskParamsOutput() WorkflowTaskUpdateGithubIssueTaskParamsOutput {
	return i.ToWorkflowTaskUpdateGithubIssueTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateGithubIssueTaskParamsArgs) ToWorkflowTaskUpdateGithubIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateGithubIssueTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGithubIssueTaskParamsOutput)
}

func (i WorkflowTaskUpdateGithubIssueTaskParamsArgs) ToWorkflowTaskUpdateGithubIssueTaskParamsPtrOutput() WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateGithubIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateGithubIssueTaskParamsArgs) ToWorkflowTaskUpdateGithubIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGithubIssueTaskParamsOutput).ToWorkflowTaskUpdateGithubIssueTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateGithubIssueTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateGithubIssueTaskParamsArgs, WorkflowTaskUpdateGithubIssueTaskParamsPtr and WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateGithubIssueTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateGithubIssueTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateGithubIssueTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateGithubIssueTaskParamsPtrOutput() WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput
	ToWorkflowTaskUpdateGithubIssueTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput
}

type workflowTaskUpdateGithubIssueTaskParamsPtrType WorkflowTaskUpdateGithubIssueTaskParamsArgs

func WorkflowTaskUpdateGithubIssueTaskParamsPtr(v *WorkflowTaskUpdateGithubIssueTaskParamsArgs) WorkflowTaskUpdateGithubIssueTaskParamsPtrInput {
	return (*workflowTaskUpdateGithubIssueTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateGithubIssueTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateGithubIssueTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateGithubIssueTaskParamsPtrType) ToWorkflowTaskUpdateGithubIssueTaskParamsPtrOutput() WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateGithubIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateGithubIssueTaskParamsPtrType) ToWorkflowTaskUpdateGithubIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput)
}

type WorkflowTaskUpdateGithubIssueTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateGithubIssueTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateGithubIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateGithubIssueTaskParamsOutput) ToWorkflowTaskUpdateGithubIssueTaskParamsOutput() WorkflowTaskUpdateGithubIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateGithubIssueTaskParamsOutput) ToWorkflowTaskUpdateGithubIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateGithubIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateGithubIssueTaskParamsOutput) ToWorkflowTaskUpdateGithubIssueTaskParamsPtrOutput() WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateGithubIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateGithubIssueTaskParamsOutput) ToWorkflowTaskUpdateGithubIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateGithubIssueTaskParams) *WorkflowTaskUpdateGithubIssueTaskParams {
		return &v
	}).(WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput)
}

// The issue body
func (o WorkflowTaskUpdateGithubIssueTaskParamsOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGithubIssueTaskParams) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskUpdateGithubIssueTaskParamsOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGithubIssueTaskParams) map[string]string { return v.Completion }).(pulumi.StringMapOutput)
}

// The issue id
func (o WorkflowTaskUpdateGithubIssueTaskParamsOutput) IssueId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGithubIssueTaskParams) string { return v.IssueId }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdateGithubIssueTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGithubIssueTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskUpdateGithubIssueTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGithubIssueTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateGithubIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput) ToWorkflowTaskUpdateGithubIssueTaskParamsPtrOutput() WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput) ToWorkflowTaskUpdateGithubIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput) Elem() WorkflowTaskUpdateGithubIssueTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGithubIssueTaskParams) WorkflowTaskUpdateGithubIssueTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateGithubIssueTaskParams
		return ret
	}).(WorkflowTaskUpdateGithubIssueTaskParamsOutput)
}

// The issue body
func (o WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGithubIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGithubIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Completion
	}).(pulumi.StringMapOutput)
}

// The issue id
func (o WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput) IssueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGithubIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.IssueId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGithubIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGithubIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateGitlabIssueTaskParams struct {
	// Map must contain two fields, `id` and `name`.
	Completion map[string]string `pulumi:"completion"`
	// The issue description
	Description *string `pulumi:"description"`
	// The due date
	DueDate *string `pulumi:"dueDate"`
	// The issue id
	IssueId string `pulumi:"issueId"`
	// The issue type. Value must be one of `issue`, `incident`, `testCase`, `task`.
	IssueType *string `pulumi:"issueType"`
	// The issue labels
	Labels   *string `pulumi:"labels"`
	TaskType *string `pulumi:"taskType"`
	// The issue title
	Title *string `pulumi:"title"`
}

// WorkflowTaskUpdateGitlabIssueTaskParamsInput is an input type that accepts WorkflowTaskUpdateGitlabIssueTaskParamsArgs and WorkflowTaskUpdateGitlabIssueTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateGitlabIssueTaskParamsInput` via:
//
//	WorkflowTaskUpdateGitlabIssueTaskParamsArgs{...}
type WorkflowTaskUpdateGitlabIssueTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateGitlabIssueTaskParamsOutput() WorkflowTaskUpdateGitlabIssueTaskParamsOutput
	ToWorkflowTaskUpdateGitlabIssueTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateGitlabIssueTaskParamsOutput
}

type WorkflowTaskUpdateGitlabIssueTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`.
	Completion pulumi.StringMapInput `pulumi:"completion"`
	// The issue description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The due date
	DueDate pulumi.StringPtrInput `pulumi:"dueDate"`
	// The issue id
	IssueId pulumi.StringInput `pulumi:"issueId"`
	// The issue type. Value must be one of `issue`, `incident`, `testCase`, `task`.
	IssueType pulumi.StringPtrInput `pulumi:"issueType"`
	// The issue labels
	Labels   pulumi.StringPtrInput `pulumi:"labels"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The issue title
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (WorkflowTaskUpdateGitlabIssueTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateGitlabIssueTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateGitlabIssueTaskParamsArgs) ToWorkflowTaskUpdateGitlabIssueTaskParamsOutput() WorkflowTaskUpdateGitlabIssueTaskParamsOutput {
	return i.ToWorkflowTaskUpdateGitlabIssueTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateGitlabIssueTaskParamsArgs) ToWorkflowTaskUpdateGitlabIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateGitlabIssueTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGitlabIssueTaskParamsOutput)
}

func (i WorkflowTaskUpdateGitlabIssueTaskParamsArgs) ToWorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput() WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateGitlabIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateGitlabIssueTaskParamsArgs) ToWorkflowTaskUpdateGitlabIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGitlabIssueTaskParamsOutput).ToWorkflowTaskUpdateGitlabIssueTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateGitlabIssueTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateGitlabIssueTaskParamsArgs, WorkflowTaskUpdateGitlabIssueTaskParamsPtr and WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateGitlabIssueTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateGitlabIssueTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateGitlabIssueTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput() WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput
	ToWorkflowTaskUpdateGitlabIssueTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput
}

type workflowTaskUpdateGitlabIssueTaskParamsPtrType WorkflowTaskUpdateGitlabIssueTaskParamsArgs

func WorkflowTaskUpdateGitlabIssueTaskParamsPtr(v *WorkflowTaskUpdateGitlabIssueTaskParamsArgs) WorkflowTaskUpdateGitlabIssueTaskParamsPtrInput {
	return (*workflowTaskUpdateGitlabIssueTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateGitlabIssueTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateGitlabIssueTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateGitlabIssueTaskParamsPtrType) ToWorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput() WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateGitlabIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateGitlabIssueTaskParamsPtrType) ToWorkflowTaskUpdateGitlabIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput)
}

type WorkflowTaskUpdateGitlabIssueTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateGitlabIssueTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateGitlabIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateGitlabIssueTaskParamsOutput) ToWorkflowTaskUpdateGitlabIssueTaskParamsOutput() WorkflowTaskUpdateGitlabIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateGitlabIssueTaskParamsOutput) ToWorkflowTaskUpdateGitlabIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateGitlabIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateGitlabIssueTaskParamsOutput) ToWorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput() WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateGitlabIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateGitlabIssueTaskParamsOutput) ToWorkflowTaskUpdateGitlabIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateGitlabIssueTaskParams) *WorkflowTaskUpdateGitlabIssueTaskParams {
		return &v
	}).(WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskUpdateGitlabIssueTaskParamsOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGitlabIssueTaskParams) map[string]string { return v.Completion }).(pulumi.StringMapOutput)
}

// The issue description
func (o WorkflowTaskUpdateGitlabIssueTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGitlabIssueTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskUpdateGitlabIssueTaskParamsOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGitlabIssueTaskParams) *string { return v.DueDate }).(pulumi.StringPtrOutput)
}

// The issue id
func (o WorkflowTaskUpdateGitlabIssueTaskParamsOutput) IssueId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGitlabIssueTaskParams) string { return v.IssueId }).(pulumi.StringOutput)
}

// The issue type. Value must be one of `issue`, `incident`, `testCase`, `task`.
func (o WorkflowTaskUpdateGitlabIssueTaskParamsOutput) IssueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGitlabIssueTaskParams) *string { return v.IssueType }).(pulumi.StringPtrOutput)
}

// The issue labels
func (o WorkflowTaskUpdateGitlabIssueTaskParamsOutput) Labels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGitlabIssueTaskParams) *string { return v.Labels }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateGitlabIssueTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGitlabIssueTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskUpdateGitlabIssueTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGitlabIssueTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateGitlabIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput) ToWorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput() WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput) ToWorkflowTaskUpdateGitlabIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput) Elem() WorkflowTaskUpdateGitlabIssueTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGitlabIssueTaskParams) WorkflowTaskUpdateGitlabIssueTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateGitlabIssueTaskParams
		return ret
	}).(WorkflowTaskUpdateGitlabIssueTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGitlabIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Completion
	}).(pulumi.StringMapOutput)
}

// The issue description
func (o WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGitlabIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGitlabIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DueDate
	}).(pulumi.StringPtrOutput)
}

// The issue id
func (o WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput) IssueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGitlabIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.IssueId
	}).(pulumi.StringPtrOutput)
}

// The issue type. Value must be one of `issue`, `incident`, `testCase`, `task`.
func (o WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput) IssueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGitlabIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.IssueType
	}).(pulumi.StringPtrOutput)
}

// The issue labels
func (o WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput) Labels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGitlabIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGitlabIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGitlabIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateGoogleCalendarEventTaskParams struct {
	// Days to adjust meeting by
	AdjustmentDays *int `pulumi:"adjustmentDays"`
	// Emails of attendees
	Attendees []string `pulumi:"attendees"`
	// Value must be one of true or false
	CanGuestsInviteOthers *bool `pulumi:"canGuestsInviteOthers"`
	// Value must be one of true or false
	CanGuestsModifyEvent *bool `pulumi:"canGuestsModifyEvent"`
	// Value must be one of true or false
	CanGuestsSeeOtherGuests *bool `pulumi:"canGuestsSeeOtherGuests"`
	// Sets the video conference type attached to the meeting. Value must be one of `eventHangout`, `eventNamedHangout`, `hangoutsMeet`, `addOn`.
	ConferenceSolutionKey *string `pulumi:"conferenceSolutionKey"`
	// The event description
	Description *string `pulumi:"description"`
	// The event ID
	EventId string `pulumi:"eventId"`
	// Meeting duration in format like '1 hour', '30 minutes'
	MeetingDuration *string `pulumi:"meetingDuration"`
	// Value must be one of true or false
	PostToIncidentTimeline *bool                                                               `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    []WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannel `pulumi:"postToSlackChannels"`
	// Value must be one of true or false
	ReplaceAttendees *bool `pulumi:"replaceAttendees"`
	// Send an email to the attendees notifying them of the event. Value must be one of true or false
	SendUpdates *bool `pulumi:"sendUpdates"`
	// The event summary
	Summary  *string `pulumi:"summary"`
	TaskType *string `pulumi:"taskType"`
	// Time of meeting in format HH:MM
	TimeOfMeeting *string `pulumi:"timeOfMeeting"`
}

// WorkflowTaskUpdateGoogleCalendarEventTaskParamsInput is an input type that accepts WorkflowTaskUpdateGoogleCalendarEventTaskParamsArgs and WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateGoogleCalendarEventTaskParamsInput` via:
//
//	WorkflowTaskUpdateGoogleCalendarEventTaskParamsArgs{...}
type WorkflowTaskUpdateGoogleCalendarEventTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput() WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput
	ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput
}

type WorkflowTaskUpdateGoogleCalendarEventTaskParamsArgs struct {
	// Days to adjust meeting by
	AdjustmentDays pulumi.IntPtrInput `pulumi:"adjustmentDays"`
	// Emails of attendees
	Attendees pulumi.StringArrayInput `pulumi:"attendees"`
	// Value must be one of true or false
	CanGuestsInviteOthers pulumi.BoolPtrInput `pulumi:"canGuestsInviteOthers"`
	// Value must be one of true or false
	CanGuestsModifyEvent pulumi.BoolPtrInput `pulumi:"canGuestsModifyEvent"`
	// Value must be one of true or false
	CanGuestsSeeOtherGuests pulumi.BoolPtrInput `pulumi:"canGuestsSeeOtherGuests"`
	// Sets the video conference type attached to the meeting. Value must be one of `eventHangout`, `eventNamedHangout`, `hangoutsMeet`, `addOn`.
	ConferenceSolutionKey pulumi.StringPtrInput `pulumi:"conferenceSolutionKey"`
	// The event description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The event ID
	EventId pulumi.StringInput `pulumi:"eventId"`
	// Meeting duration in format like '1 hour', '30 minutes'
	MeetingDuration pulumi.StringPtrInput `pulumi:"meetingDuration"`
	// Value must be one of true or false
	PostToIncidentTimeline pulumi.BoolPtrInput                                                         `pulumi:"postToIncidentTimeline"`
	PostToSlackChannels    WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayInput `pulumi:"postToSlackChannels"`
	// Value must be one of true or false
	ReplaceAttendees pulumi.BoolPtrInput `pulumi:"replaceAttendees"`
	// Send an email to the attendees notifying them of the event. Value must be one of true or false
	SendUpdates pulumi.BoolPtrInput `pulumi:"sendUpdates"`
	// The event summary
	Summary  pulumi.StringPtrInput `pulumi:"summary"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// Time of meeting in format HH:MM
	TimeOfMeeting pulumi.StringPtrInput `pulumi:"timeOfMeeting"`
}

func (WorkflowTaskUpdateGoogleCalendarEventTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateGoogleCalendarEventTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateGoogleCalendarEventTaskParamsArgs) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput() WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput {
	return i.ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateGoogleCalendarEventTaskParamsArgs) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput)
}

func (i WorkflowTaskUpdateGoogleCalendarEventTaskParamsArgs) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput() WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateGoogleCalendarEventTaskParamsArgs) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput).ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateGoogleCalendarEventTaskParamsArgs, WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtr and WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateGoogleCalendarEventTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput() WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput
	ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput
}

type workflowTaskUpdateGoogleCalendarEventTaskParamsPtrType WorkflowTaskUpdateGoogleCalendarEventTaskParamsArgs

func WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtr(v *WorkflowTaskUpdateGoogleCalendarEventTaskParamsArgs) WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrInput {
	return (*workflowTaskUpdateGoogleCalendarEventTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateGoogleCalendarEventTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateGoogleCalendarEventTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateGoogleCalendarEventTaskParamsPtrType) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput() WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateGoogleCalendarEventTaskParamsPtrType) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput)
}

type WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateGoogleCalendarEventTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput() WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput() WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateGoogleCalendarEventTaskParams) *WorkflowTaskUpdateGoogleCalendarEventTaskParams {
		return &v
	}).(WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput)
}

// Days to adjust meeting by
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) AdjustmentDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParams) *int { return v.AdjustmentDays }).(pulumi.IntPtrOutput)
}

// Emails of attendees
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) Attendees() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParams) []string { return v.Attendees }).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) CanGuestsInviteOthers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParams) *bool { return v.CanGuestsInviteOthers }).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) CanGuestsModifyEvent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParams) *bool { return v.CanGuestsModifyEvent }).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) CanGuestsSeeOtherGuests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParams) *bool { return v.CanGuestsSeeOtherGuests }).(pulumi.BoolPtrOutput)
}

// Sets the video conference type attached to the meeting. Value must be one of `eventHangout`, `eventNamedHangout`, `hangoutsMeet`, `addOn`.
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) ConferenceSolutionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParams) *string { return v.ConferenceSolutionKey }).(pulumi.StringPtrOutput)
}

// The event description
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The event ID
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) EventId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParams) string { return v.EventId }).(pulumi.StringOutput)
}

// Meeting duration in format like '1 hour', '30 minutes'
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) MeetingDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParams) *string { return v.MeetingDuration }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParams) *bool { return v.PostToIncidentTimeline }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) PostToSlackChannels() WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParams) []WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannel {
		return v.PostToSlackChannels
	}).(WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) ReplaceAttendees() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParams) *bool { return v.ReplaceAttendees }).(pulumi.BoolPtrOutput)
}

// Send an email to the attendees notifying them of the event. Value must be one of true or false
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) SendUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParams) *bool { return v.SendUpdates }).(pulumi.BoolPtrOutput)
}

// The event summary
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParams) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Time of meeting in format HH:MM
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput) TimeOfMeeting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParams) *string { return v.TimeOfMeeting }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateGoogleCalendarEventTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput() WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) Elem() WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) WorkflowTaskUpdateGoogleCalendarEventTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateGoogleCalendarEventTaskParams
		return ret
	}).(WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput)
}

// Days to adjust meeting by
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) AdjustmentDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) *int {
		if v == nil {
			return nil
		}
		return v.AdjustmentDays
	}).(pulumi.IntPtrOutput)
}

// Emails of attendees
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) Attendees() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.Attendees
	}).(pulumi.StringArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) CanGuestsInviteOthers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.CanGuestsInviteOthers
	}).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) CanGuestsModifyEvent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.CanGuestsModifyEvent
	}).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) CanGuestsSeeOtherGuests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.CanGuestsSeeOtherGuests
	}).(pulumi.BoolPtrOutput)
}

// Sets the video conference type attached to the meeting. Value must be one of `eventHangout`, `eventNamedHangout`, `hangoutsMeet`, `addOn`.
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) ConferenceSolutionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.ConferenceSolutionKey
	}).(pulumi.StringPtrOutput)
}

// The event description
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The event ID
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) EventId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.EventId
	}).(pulumi.StringPtrOutput)
}

// Meeting duration in format like '1 hour', '30 minutes'
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) MeetingDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.MeetingDuration
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) PostToIncidentTimeline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.PostToIncidentTimeline
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) PostToSlackChannels() WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) []WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannel {
		if v == nil {
			return nil
		}
		return v.PostToSlackChannels
	}).(WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) ReplaceAttendees() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.ReplaceAttendees
	}).(pulumi.BoolPtrOutput)
}

// Send an email to the attendees notifying them of the event. Value must be one of true or false
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) SendUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.SendUpdates
	}).(pulumi.BoolPtrOutput)
}

// The event summary
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Summary
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Time of meeting in format HH:MM
func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput) TimeOfMeeting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEventTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TimeOfMeeting
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelInput is an input type that accepts WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArgs and WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelInput` via:
//
//	WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArgs{...}
type WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput() WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput
	ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutputWithContext(context.Context) WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput
}

type WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArgs) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput() WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput {
	return i.ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArgs) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput)
}

// WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayInput is an input type that accepts WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArray and WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayInput` via:
//
//	WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArray{ WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArgs{...} }
type WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput
	ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput
}

type WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArray []WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelInput

func (WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArray) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput {
	return i.ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArray) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput)
}

type WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput() WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput() WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput) ToWorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannel {
		return vs[0].([]WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput)
}

type WorkflowTaskUpdateGoogleDocsPageTaskParams struct {
	// The Google Doc content
	Content *string `pulumi:"content"`
	// The Google Doc file ID
	FileId string `pulumi:"fileId"`
	// Retrospective template to use when updating page, if desired
	PostMortemTemplateId *string `pulumi:"postMortemTemplateId"`
	TaskType             *string `pulumi:"taskType"`
	// The Google Doc file ID to use as a template.
	TemplateId *string `pulumi:"templateId"`
	// The Google Doc title
	Title *string `pulumi:"title"`
}

// WorkflowTaskUpdateGoogleDocsPageTaskParamsInput is an input type that accepts WorkflowTaskUpdateGoogleDocsPageTaskParamsArgs and WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateGoogleDocsPageTaskParamsInput` via:
//
//	WorkflowTaskUpdateGoogleDocsPageTaskParamsArgs{...}
type WorkflowTaskUpdateGoogleDocsPageTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateGoogleDocsPageTaskParamsOutput() WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput
	ToWorkflowTaskUpdateGoogleDocsPageTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput
}

type WorkflowTaskUpdateGoogleDocsPageTaskParamsArgs struct {
	// The Google Doc content
	Content pulumi.StringPtrInput `pulumi:"content"`
	// The Google Doc file ID
	FileId pulumi.StringInput `pulumi:"fileId"`
	// Retrospective template to use when updating page, if desired
	PostMortemTemplateId pulumi.StringPtrInput `pulumi:"postMortemTemplateId"`
	TaskType             pulumi.StringPtrInput `pulumi:"taskType"`
	// The Google Doc file ID to use as a template.
	TemplateId pulumi.StringPtrInput `pulumi:"templateId"`
	// The Google Doc title
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (WorkflowTaskUpdateGoogleDocsPageTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateGoogleDocsPageTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateGoogleDocsPageTaskParamsArgs) ToWorkflowTaskUpdateGoogleDocsPageTaskParamsOutput() WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput {
	return i.ToWorkflowTaskUpdateGoogleDocsPageTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateGoogleDocsPageTaskParamsArgs) ToWorkflowTaskUpdateGoogleDocsPageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput)
}

func (i WorkflowTaskUpdateGoogleDocsPageTaskParamsArgs) ToWorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput() WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateGoogleDocsPageTaskParamsArgs) ToWorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput).ToWorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateGoogleDocsPageTaskParamsArgs, WorkflowTaskUpdateGoogleDocsPageTaskParamsPtr and WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateGoogleDocsPageTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput() WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput
	ToWorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput
}

type workflowTaskUpdateGoogleDocsPageTaskParamsPtrType WorkflowTaskUpdateGoogleDocsPageTaskParamsArgs

func WorkflowTaskUpdateGoogleDocsPageTaskParamsPtr(v *WorkflowTaskUpdateGoogleDocsPageTaskParamsArgs) WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrInput {
	return (*workflowTaskUpdateGoogleDocsPageTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateGoogleDocsPageTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateGoogleDocsPageTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateGoogleDocsPageTaskParamsPtrType) ToWorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput() WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateGoogleDocsPageTaskParamsPtrType) ToWorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput)
}

type WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateGoogleDocsPageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput) ToWorkflowTaskUpdateGoogleDocsPageTaskParamsOutput() WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput) ToWorkflowTaskUpdateGoogleDocsPageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput) ToWorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput() WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput) ToWorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateGoogleDocsPageTaskParams) *WorkflowTaskUpdateGoogleDocsPageTaskParams {
		return &v
	}).(WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput)
}

// The Google Doc content
func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleDocsPageTaskParams) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The Google Doc file ID
func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput) FileId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleDocsPageTaskParams) string { return v.FileId }).(pulumi.StringOutput)
}

// Retrospective template to use when updating page, if desired
func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleDocsPageTaskParams) *string { return v.PostMortemTemplateId }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleDocsPageTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The Google Doc file ID to use as a template.
func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleDocsPageTaskParams) *string { return v.TemplateId }).(pulumi.StringPtrOutput)
}

// The Google Doc title
func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateGoogleDocsPageTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateGoogleDocsPageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput) ToWorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput() WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput) ToWorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput) Elem() WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleDocsPageTaskParams) WorkflowTaskUpdateGoogleDocsPageTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateGoogleDocsPageTaskParams
		return ret
	}).(WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput)
}

// The Google Doc content
func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleDocsPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// The Google Doc file ID
func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput) FileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleDocsPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.FileId
	}).(pulumi.StringPtrOutput)
}

// Retrospective template to use when updating page, if desired
func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleDocsPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.PostMortemTemplateId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleDocsPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The Google Doc file ID to use as a template.
func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleDocsPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TemplateId
	}).(pulumi.StringPtrOutput)
}

// The Google Doc title
func (o WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleDocsPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateIncidentPostmortemTaskParams struct {
	// UUID of the retrospective that needs to be updated
	PostmortemId string  `pulumi:"postmortemId"`
	Status       *string `pulumi:"status"`
	TaskType     *string `pulumi:"taskType"`
	// The incident title
	Title *string `pulumi:"title"`
}

// WorkflowTaskUpdateIncidentPostmortemTaskParamsInput is an input type that accepts WorkflowTaskUpdateIncidentPostmortemTaskParamsArgs and WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateIncidentPostmortemTaskParamsInput` via:
//
//	WorkflowTaskUpdateIncidentPostmortemTaskParamsArgs{...}
type WorkflowTaskUpdateIncidentPostmortemTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateIncidentPostmortemTaskParamsOutput() WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput
	ToWorkflowTaskUpdateIncidentPostmortemTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput
}

type WorkflowTaskUpdateIncidentPostmortemTaskParamsArgs struct {
	// UUID of the retrospective that needs to be updated
	PostmortemId pulumi.StringInput    `pulumi:"postmortemId"`
	Status       pulumi.StringPtrInput `pulumi:"status"`
	TaskType     pulumi.StringPtrInput `pulumi:"taskType"`
	// The incident title
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (WorkflowTaskUpdateIncidentPostmortemTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateIncidentPostmortemTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateIncidentPostmortemTaskParamsArgs) ToWorkflowTaskUpdateIncidentPostmortemTaskParamsOutput() WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput {
	return i.ToWorkflowTaskUpdateIncidentPostmortemTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateIncidentPostmortemTaskParamsArgs) ToWorkflowTaskUpdateIncidentPostmortemTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput)
}

func (i WorkflowTaskUpdateIncidentPostmortemTaskParamsArgs) ToWorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput() WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateIncidentPostmortemTaskParamsArgs) ToWorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput).ToWorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateIncidentPostmortemTaskParamsArgs, WorkflowTaskUpdateIncidentPostmortemTaskParamsPtr and WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateIncidentPostmortemTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput() WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput
	ToWorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput
}

type workflowTaskUpdateIncidentPostmortemTaskParamsPtrType WorkflowTaskUpdateIncidentPostmortemTaskParamsArgs

func WorkflowTaskUpdateIncidentPostmortemTaskParamsPtr(v *WorkflowTaskUpdateIncidentPostmortemTaskParamsArgs) WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrInput {
	return (*workflowTaskUpdateIncidentPostmortemTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateIncidentPostmortemTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateIncidentPostmortemTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateIncidentPostmortemTaskParamsPtrType) ToWorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput() WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateIncidentPostmortemTaskParamsPtrType) ToWorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput)
}

type WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateIncidentPostmortemTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput) ToWorkflowTaskUpdateIncidentPostmortemTaskParamsOutput() WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput) ToWorkflowTaskUpdateIncidentPostmortemTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput) ToWorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput() WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput) ToWorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateIncidentPostmortemTaskParams) *WorkflowTaskUpdateIncidentPostmortemTaskParams {
		return &v
	}).(WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput)
}

// UUID of the retrospective that needs to be updated
func (o WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput) PostmortemId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentPostmortemTaskParams) string { return v.PostmortemId }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentPostmortemTaskParams) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentPostmortemTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The incident title
func (o WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentPostmortemTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateIncidentPostmortemTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput) ToWorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput() WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput) ToWorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput) Elem() WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentPostmortemTaskParams) WorkflowTaskUpdateIncidentPostmortemTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateIncidentPostmortemTaskParams
		return ret
	}).(WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput)
}

// UUID of the retrospective that needs to be updated
func (o WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput) PostmortemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentPostmortemTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.PostmortemId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentPostmortemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentPostmortemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The incident title
func (o WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentPostmortemTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateIncidentTaskParams struct {
	AcknowledgedAt *string `pulumi:"acknowledgedAt"`
	// Value must be one of `id`, `slug`, `sequentialId`, `pagerdutyIncidentId`, `opsgenieIncidentId`, `victorOpsIncidentId`, `jiraIssueId`, `asanaTaskId`, `shortcutTaskId`, `linearIssueId`, `zendeskTicketId`, `trelloCardId`, `airtableRecordId`, `shortcutStoryId`, `githubIssueId`, `gitlabIssueId`, `freshserviceTicketId`, `freshserviceTaskId`, `clickupTaskId`.
	AttributeToQueryBy *string `pulumi:"attributeToQueryBy"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string  `pulumi:"customFieldsMapping"`
	DetectedAt          *string  `pulumi:"detectedAt"`
	EnvironmentIds      []string `pulumi:"environmentIds"`
	FunctionalityIds    []string `pulumi:"functionalityIds"`
	GroupIds            []string `pulumi:"groupIds"`
	// The incident id to update or id of any attribute on the incident
	IncidentId      string   `pulumi:"incidentId"`
	IncidentTypeIds []string `pulumi:"incidentTypeIds"`
	MitigatedAt     *string  `pulumi:"mitigatedAt"`
	// Value must be one of true or false
	Private    *bool    `pulumi:"private"`
	ResolvedAt *string  `pulumi:"resolvedAt"`
	ServiceIds []string `pulumi:"serviceIds"`
	SeverityId *string  `pulumi:"severityId"`
	StartedAt  *string  `pulumi:"startedAt"`
	Status     *string  `pulumi:"status"`
	// The incident summary
	Summary  *string `pulumi:"summary"`
	TaskType *string `pulumi:"taskType"`
	// The incident title
	Title *string `pulumi:"title"`
}

// WorkflowTaskUpdateIncidentTaskParamsInput is an input type that accepts WorkflowTaskUpdateIncidentTaskParamsArgs and WorkflowTaskUpdateIncidentTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateIncidentTaskParamsInput` via:
//
//	WorkflowTaskUpdateIncidentTaskParamsArgs{...}
type WorkflowTaskUpdateIncidentTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateIncidentTaskParamsOutput() WorkflowTaskUpdateIncidentTaskParamsOutput
	ToWorkflowTaskUpdateIncidentTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateIncidentTaskParamsOutput
}

type WorkflowTaskUpdateIncidentTaskParamsArgs struct {
	AcknowledgedAt pulumi.StringPtrInput `pulumi:"acknowledgedAt"`
	// Value must be one of `id`, `slug`, `sequentialId`, `pagerdutyIncidentId`, `opsgenieIncidentId`, `victorOpsIncidentId`, `jiraIssueId`, `asanaTaskId`, `shortcutTaskId`, `linearIssueId`, `zendeskTicketId`, `trelloCardId`, `airtableRecordId`, `shortcutStoryId`, `githubIssueId`, `gitlabIssueId`, `freshserviceTicketId`, `freshserviceTaskId`, `clickupTaskId`.
	AttributeToQueryBy pulumi.StringPtrInput `pulumi:"attributeToQueryBy"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput   `pulumi:"customFieldsMapping"`
	DetectedAt          pulumi.StringPtrInput   `pulumi:"detectedAt"`
	EnvironmentIds      pulumi.StringArrayInput `pulumi:"environmentIds"`
	FunctionalityIds    pulumi.StringArrayInput `pulumi:"functionalityIds"`
	GroupIds            pulumi.StringArrayInput `pulumi:"groupIds"`
	// The incident id to update or id of any attribute on the incident
	IncidentId      pulumi.StringInput      `pulumi:"incidentId"`
	IncidentTypeIds pulumi.StringArrayInput `pulumi:"incidentTypeIds"`
	MitigatedAt     pulumi.StringPtrInput   `pulumi:"mitigatedAt"`
	// Value must be one of true or false
	Private    pulumi.BoolPtrInput     `pulumi:"private"`
	ResolvedAt pulumi.StringPtrInput   `pulumi:"resolvedAt"`
	ServiceIds pulumi.StringArrayInput `pulumi:"serviceIds"`
	SeverityId pulumi.StringPtrInput   `pulumi:"severityId"`
	StartedAt  pulumi.StringPtrInput   `pulumi:"startedAt"`
	Status     pulumi.StringPtrInput   `pulumi:"status"`
	// The incident summary
	Summary  pulumi.StringPtrInput `pulumi:"summary"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The incident title
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (WorkflowTaskUpdateIncidentTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateIncidentTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateIncidentTaskParamsArgs) ToWorkflowTaskUpdateIncidentTaskParamsOutput() WorkflowTaskUpdateIncidentTaskParamsOutput {
	return i.ToWorkflowTaskUpdateIncidentTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateIncidentTaskParamsArgs) ToWorkflowTaskUpdateIncidentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateIncidentTaskParamsOutput)
}

func (i WorkflowTaskUpdateIncidentTaskParamsArgs) ToWorkflowTaskUpdateIncidentTaskParamsPtrOutput() WorkflowTaskUpdateIncidentTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateIncidentTaskParamsArgs) ToWorkflowTaskUpdateIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateIncidentTaskParamsOutput).ToWorkflowTaskUpdateIncidentTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateIncidentTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateIncidentTaskParamsArgs, WorkflowTaskUpdateIncidentTaskParamsPtr and WorkflowTaskUpdateIncidentTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateIncidentTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateIncidentTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateIncidentTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateIncidentTaskParamsPtrOutput() WorkflowTaskUpdateIncidentTaskParamsPtrOutput
	ToWorkflowTaskUpdateIncidentTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateIncidentTaskParamsPtrOutput
}

type workflowTaskUpdateIncidentTaskParamsPtrType WorkflowTaskUpdateIncidentTaskParamsArgs

func WorkflowTaskUpdateIncidentTaskParamsPtr(v *WorkflowTaskUpdateIncidentTaskParamsArgs) WorkflowTaskUpdateIncidentTaskParamsPtrInput {
	return (*workflowTaskUpdateIncidentTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateIncidentTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateIncidentTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateIncidentTaskParamsPtrType) ToWorkflowTaskUpdateIncidentTaskParamsPtrOutput() WorkflowTaskUpdateIncidentTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateIncidentTaskParamsPtrType) ToWorkflowTaskUpdateIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateIncidentTaskParamsPtrOutput)
}

type WorkflowTaskUpdateIncidentTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateIncidentTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateIncidentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) ToWorkflowTaskUpdateIncidentTaskParamsOutput() WorkflowTaskUpdateIncidentTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) ToWorkflowTaskUpdateIncidentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) ToWorkflowTaskUpdateIncidentTaskParamsPtrOutput() WorkflowTaskUpdateIncidentTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) ToWorkflowTaskUpdateIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateIncidentTaskParams) *WorkflowTaskUpdateIncidentTaskParams {
		return &v
	}).(WorkflowTaskUpdateIncidentTaskParamsPtrOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) AcknowledgedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) *string { return v.AcknowledgedAt }).(pulumi.StringPtrOutput)
}

// Value must be one of `id`, `slug`, `sequentialId`, `pagerdutyIncidentId`, `opsgenieIncidentId`, `victorOpsIncidentId`, `jiraIssueId`, `asanaTaskId`, `shortcutTaskId`, `linearIssueId`, `zendeskTicketId`, `trelloCardId`, `airtableRecordId`, `shortcutStoryId`, `githubIssueId`, `gitlabIssueId`, `freshserviceTicketId`, `freshserviceTaskId`, `clickupTaskId`.
func (o WorkflowTaskUpdateIncidentTaskParamsOutput) AttributeToQueryBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) *string { return v.AttributeToQueryBy }).(pulumi.StringPtrOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateIncidentTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) DetectedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) *string { return v.DetectedAt }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) EnvironmentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) []string { return v.EnvironmentIds }).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) FunctionalityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) []string { return v.FunctionalityIds }).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// The incident id to update or id of any attribute on the incident
func (o WorkflowTaskUpdateIncidentTaskParamsOutput) IncidentId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) string { return v.IncidentId }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) IncidentTypeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) []string { return v.IncidentTypeIds }).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) MitigatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) *string { return v.MitigatedAt }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateIncidentTaskParamsOutput) Private() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) *bool { return v.Private }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) ResolvedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) *string { return v.ResolvedAt }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) ServiceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) []string { return v.ServiceIds }).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) SeverityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) *string { return v.SeverityId }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) *string { return v.StartedAt }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The incident summary
func (o WorkflowTaskUpdateIncidentTaskParamsOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The incident title
func (o WorkflowTaskUpdateIncidentTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateIncidentTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateIncidentTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateIncidentTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateIncidentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) ToWorkflowTaskUpdateIncidentTaskParamsPtrOutput() WorkflowTaskUpdateIncidentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) ToWorkflowTaskUpdateIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) Elem() WorkflowTaskUpdateIncidentTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) WorkflowTaskUpdateIncidentTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateIncidentTaskParams
		return ret
	}).(WorkflowTaskUpdateIncidentTaskParamsOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) AcknowledgedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.AcknowledgedAt
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `id`, `slug`, `sequentialId`, `pagerdutyIncidentId`, `opsgenieIncidentId`, `victorOpsIncidentId`, `jiraIssueId`, `asanaTaskId`, `shortcutTaskId`, `linearIssueId`, `zendeskTicketId`, `trelloCardId`, `airtableRecordId`, `shortcutStoryId`, `githubIssueId`, `gitlabIssueId`, `freshserviceTicketId`, `freshserviceTaskId`, `clickupTaskId`.
func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) AttributeToQueryBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.AttributeToQueryBy
	}).(pulumi.StringPtrOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) DetectedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DetectedAt
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) EnvironmentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.EnvironmentIds
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) FunctionalityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.FunctionalityIds
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.GroupIds
	}).(pulumi.StringArrayOutput)
}

// The incident id to update or id of any attribute on the incident
func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) IncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.IncidentId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) IncidentTypeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.IncidentTypeIds
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) MitigatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.MitigatedAt
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) Private() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.Private
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) ResolvedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.ResolvedAt
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) ServiceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) []string {
		if v == nil {
			return nil
		}
		return v.ServiceIds
	}).(pulumi.StringArrayOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) SeverityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.SeverityId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The incident summary
func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Summary
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The incident title
func (o WorkflowTaskUpdateIncidentTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateJiraIssueTaskParams struct {
	// The assigned user's email
	AssignUserEmail *string `pulumi:"assignUserEmail"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string `pulumi:"customFieldsMapping"`
	// The issue description
	Description *string `pulumi:"description"`
	// The due date
	DueDate *string `pulumi:"dueDate"`
	// The issue id
	IssueId string `pulumi:"issueId"`
	// The issue labels
	Labels *string `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority map[string]string `pulumi:"priority"`
	// The project key
	ProjectKey string `pulumi:"projectKey"`
	// The reporter user's email
	ReporterUserEmail *string `pulumi:"reporterUserEmail"`
	// Map must contain two fields, `id` and `name`. The status id and display name
	Status   map[string]string `pulumi:"status"`
	TaskType *string           `pulumi:"taskType"`
	// The issue title
	Title *string `pulumi:"title"`
	// Update payload. Can contain liquid markup and need to be valid JSON
	UpdatePayload *string `pulumi:"updatePayload"`
}

// WorkflowTaskUpdateJiraIssueTaskParamsInput is an input type that accepts WorkflowTaskUpdateJiraIssueTaskParamsArgs and WorkflowTaskUpdateJiraIssueTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateJiraIssueTaskParamsInput` via:
//
//	WorkflowTaskUpdateJiraIssueTaskParamsArgs{...}
type WorkflowTaskUpdateJiraIssueTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateJiraIssueTaskParamsOutput() WorkflowTaskUpdateJiraIssueTaskParamsOutput
	ToWorkflowTaskUpdateJiraIssueTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateJiraIssueTaskParamsOutput
}

type WorkflowTaskUpdateJiraIssueTaskParamsArgs struct {
	// The assigned user's email
	AssignUserEmail pulumi.StringPtrInput `pulumi:"assignUserEmail"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput `pulumi:"customFieldsMapping"`
	// The issue description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The due date
	DueDate pulumi.StringPtrInput `pulumi:"dueDate"`
	// The issue id
	IssueId pulumi.StringInput `pulumi:"issueId"`
	// The issue labels
	Labels pulumi.StringPtrInput `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority pulumi.StringMapInput `pulumi:"priority"`
	// The project key
	ProjectKey pulumi.StringInput `pulumi:"projectKey"`
	// The reporter user's email
	ReporterUserEmail pulumi.StringPtrInput `pulumi:"reporterUserEmail"`
	// Map must contain two fields, `id` and `name`. The status id and display name
	Status   pulumi.StringMapInput `pulumi:"status"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The issue title
	Title pulumi.StringPtrInput `pulumi:"title"`
	// Update payload. Can contain liquid markup and need to be valid JSON
	UpdatePayload pulumi.StringPtrInput `pulumi:"updatePayload"`
}

func (WorkflowTaskUpdateJiraIssueTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateJiraIssueTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateJiraIssueTaskParamsArgs) ToWorkflowTaskUpdateJiraIssueTaskParamsOutput() WorkflowTaskUpdateJiraIssueTaskParamsOutput {
	return i.ToWorkflowTaskUpdateJiraIssueTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateJiraIssueTaskParamsArgs) ToWorkflowTaskUpdateJiraIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateJiraIssueTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateJiraIssueTaskParamsOutput)
}

func (i WorkflowTaskUpdateJiraIssueTaskParamsArgs) ToWorkflowTaskUpdateJiraIssueTaskParamsPtrOutput() WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateJiraIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateJiraIssueTaskParamsArgs) ToWorkflowTaskUpdateJiraIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateJiraIssueTaskParamsOutput).ToWorkflowTaskUpdateJiraIssueTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateJiraIssueTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateJiraIssueTaskParamsArgs, WorkflowTaskUpdateJiraIssueTaskParamsPtr and WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateJiraIssueTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateJiraIssueTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateJiraIssueTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateJiraIssueTaskParamsPtrOutput() WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput
	ToWorkflowTaskUpdateJiraIssueTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput
}

type workflowTaskUpdateJiraIssueTaskParamsPtrType WorkflowTaskUpdateJiraIssueTaskParamsArgs

func WorkflowTaskUpdateJiraIssueTaskParamsPtr(v *WorkflowTaskUpdateJiraIssueTaskParamsArgs) WorkflowTaskUpdateJiraIssueTaskParamsPtrInput {
	return (*workflowTaskUpdateJiraIssueTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateJiraIssueTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateJiraIssueTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateJiraIssueTaskParamsPtrType) ToWorkflowTaskUpdateJiraIssueTaskParamsPtrOutput() WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateJiraIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateJiraIssueTaskParamsPtrType) ToWorkflowTaskUpdateJiraIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput)
}

type WorkflowTaskUpdateJiraIssueTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateJiraIssueTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateJiraIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) ToWorkflowTaskUpdateJiraIssueTaskParamsOutput() WorkflowTaskUpdateJiraIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) ToWorkflowTaskUpdateJiraIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateJiraIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) ToWorkflowTaskUpdateJiraIssueTaskParamsPtrOutput() WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateJiraIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) ToWorkflowTaskUpdateJiraIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateJiraIssueTaskParams) *WorkflowTaskUpdateJiraIssueTaskParams {
		return &v
	}).(WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput)
}

// The assigned user's email
func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateJiraIssueTaskParams) *string { return v.AssignUserEmail }).(pulumi.StringPtrOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateJiraIssueTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

// The issue description
func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateJiraIssueTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateJiraIssueTaskParams) *string { return v.DueDate }).(pulumi.StringPtrOutput)
}

// The issue id
func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) IssueId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateJiraIssueTaskParams) string { return v.IssueId }).(pulumi.StringOutput)
}

// The issue labels
func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) Labels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateJiraIssueTaskParams) *string { return v.Labels }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateJiraIssueTaskParams) map[string]string { return v.Priority }).(pulumi.StringMapOutput)
}

// The project key
func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) ProjectKey() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateJiraIssueTaskParams) string { return v.ProjectKey }).(pulumi.StringOutput)
}

// The reporter user's email
func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) ReporterUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateJiraIssueTaskParams) *string { return v.ReporterUserEmail }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The status id and display name
func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) Status() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateJiraIssueTaskParams) map[string]string { return v.Status }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateJiraIssueTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateJiraIssueTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// Update payload. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateJiraIssueTaskParamsOutput) UpdatePayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateJiraIssueTaskParams) *string { return v.UpdatePayload }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateJiraIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) ToWorkflowTaskUpdateJiraIssueTaskParamsPtrOutput() WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) ToWorkflowTaskUpdateJiraIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) Elem() WorkflowTaskUpdateJiraIssueTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateJiraIssueTaskParams) WorkflowTaskUpdateJiraIssueTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateJiraIssueTaskParams
		return ret
	}).(WorkflowTaskUpdateJiraIssueTaskParamsOutput)
}

// The assigned user's email
func (o WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.AssignUserEmail
	}).(pulumi.StringPtrOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

// The issue description
func (o WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DueDate
	}).(pulumi.StringPtrOutput)
}

// The issue id
func (o WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) IssueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.IssueId
	}).(pulumi.StringPtrOutput)
}

// The issue labels
func (o WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) Labels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateJiraIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringMapOutput)
}

// The project key
func (o WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) ProjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectKey
	}).(pulumi.StringPtrOutput)
}

// The reporter user's email
func (o WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) ReporterUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.ReporterUserEmail
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The status id and display name
func (o WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) Status() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateJiraIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Update payload. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput) UpdatePayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateJiraIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.UpdatePayload
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateLinearIssueTaskParams struct {
	// The assigned user's email
	AssignUserEmail *string `pulumi:"assignUserEmail"`
	// The issue description
	Description *string `pulumi:"description"`
	// The issue id
	IssueId string                                         `pulumi:"issueId"`
	Labels  []WorkflowTaskUpdateLinearIssueTaskParamsLabel `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority map[string]string `pulumi:"priority"`
	// Map must contain two fields, `id` and `name`. The project id and display name
	Project map[string]string `pulumi:"project"`
	// Map must contain two fields, `id` and `name`. The state id and display name
	State    map[string]string `pulumi:"state"`
	TaskType *string           `pulumi:"taskType"`
	// The issue title
	Title *string `pulumi:"title"`
}

// WorkflowTaskUpdateLinearIssueTaskParamsInput is an input type that accepts WorkflowTaskUpdateLinearIssueTaskParamsArgs and WorkflowTaskUpdateLinearIssueTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateLinearIssueTaskParamsInput` via:
//
//	WorkflowTaskUpdateLinearIssueTaskParamsArgs{...}
type WorkflowTaskUpdateLinearIssueTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateLinearIssueTaskParamsOutput() WorkflowTaskUpdateLinearIssueTaskParamsOutput
	ToWorkflowTaskUpdateLinearIssueTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateLinearIssueTaskParamsOutput
}

type WorkflowTaskUpdateLinearIssueTaskParamsArgs struct {
	// The assigned user's email
	AssignUserEmail pulumi.StringPtrInput `pulumi:"assignUserEmail"`
	// The issue description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The issue id
	IssueId pulumi.StringInput                                     `pulumi:"issueId"`
	Labels  WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayInput `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority pulumi.StringMapInput `pulumi:"priority"`
	// Map must contain two fields, `id` and `name`. The project id and display name
	Project pulumi.StringMapInput `pulumi:"project"`
	// Map must contain two fields, `id` and `name`. The state id and display name
	State    pulumi.StringMapInput `pulumi:"state"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The issue title
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (WorkflowTaskUpdateLinearIssueTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateLinearIssueTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateLinearIssueTaskParamsArgs) ToWorkflowTaskUpdateLinearIssueTaskParamsOutput() WorkflowTaskUpdateLinearIssueTaskParamsOutput {
	return i.ToWorkflowTaskUpdateLinearIssueTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateLinearIssueTaskParamsArgs) ToWorkflowTaskUpdateLinearIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateLinearIssueTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateLinearIssueTaskParamsOutput)
}

func (i WorkflowTaskUpdateLinearIssueTaskParamsArgs) ToWorkflowTaskUpdateLinearIssueTaskParamsPtrOutput() WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateLinearIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateLinearIssueTaskParamsArgs) ToWorkflowTaskUpdateLinearIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateLinearIssueTaskParamsOutput).ToWorkflowTaskUpdateLinearIssueTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateLinearIssueTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateLinearIssueTaskParamsArgs, WorkflowTaskUpdateLinearIssueTaskParamsPtr and WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateLinearIssueTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateLinearIssueTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateLinearIssueTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateLinearIssueTaskParamsPtrOutput() WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput
	ToWorkflowTaskUpdateLinearIssueTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput
}

type workflowTaskUpdateLinearIssueTaskParamsPtrType WorkflowTaskUpdateLinearIssueTaskParamsArgs

func WorkflowTaskUpdateLinearIssueTaskParamsPtr(v *WorkflowTaskUpdateLinearIssueTaskParamsArgs) WorkflowTaskUpdateLinearIssueTaskParamsPtrInput {
	return (*workflowTaskUpdateLinearIssueTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateLinearIssueTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateLinearIssueTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateLinearIssueTaskParamsPtrType) ToWorkflowTaskUpdateLinearIssueTaskParamsPtrOutput() WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateLinearIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateLinearIssueTaskParamsPtrType) ToWorkflowTaskUpdateLinearIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput)
}

type WorkflowTaskUpdateLinearIssueTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateLinearIssueTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateLinearIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsOutput) ToWorkflowTaskUpdateLinearIssueTaskParamsOutput() WorkflowTaskUpdateLinearIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsOutput) ToWorkflowTaskUpdateLinearIssueTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateLinearIssueTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsOutput) ToWorkflowTaskUpdateLinearIssueTaskParamsPtrOutput() WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateLinearIssueTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsOutput) ToWorkflowTaskUpdateLinearIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateLinearIssueTaskParams) *WorkflowTaskUpdateLinearIssueTaskParams {
		return &v
	}).(WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput)
}

// The assigned user's email
func (o WorkflowTaskUpdateLinearIssueTaskParamsOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateLinearIssueTaskParams) *string { return v.AssignUserEmail }).(pulumi.StringPtrOutput)
}

// The issue description
func (o WorkflowTaskUpdateLinearIssueTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateLinearIssueTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The issue id
func (o WorkflowTaskUpdateLinearIssueTaskParamsOutput) IssueId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateLinearIssueTaskParams) string { return v.IssueId }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsOutput) Labels() WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateLinearIssueTaskParams) []WorkflowTaskUpdateLinearIssueTaskParamsLabel {
		return v.Labels
	}).(WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskUpdateLinearIssueTaskParamsOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateLinearIssueTaskParams) map[string]string { return v.Priority }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The project id and display name
func (o WorkflowTaskUpdateLinearIssueTaskParamsOutput) Project() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateLinearIssueTaskParams) map[string]string { return v.Project }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The state id and display name
func (o WorkflowTaskUpdateLinearIssueTaskParamsOutput) State() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateLinearIssueTaskParams) map[string]string { return v.State }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateLinearIssueTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskUpdateLinearIssueTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateLinearIssueTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateLinearIssueTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput) ToWorkflowTaskUpdateLinearIssueTaskParamsPtrOutput() WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput) ToWorkflowTaskUpdateLinearIssueTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput) Elem() WorkflowTaskUpdateLinearIssueTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateLinearIssueTaskParams) WorkflowTaskUpdateLinearIssueTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateLinearIssueTaskParams
		return ret
	}).(WorkflowTaskUpdateLinearIssueTaskParamsOutput)
}

// The assigned user's email
func (o WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput) AssignUserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateLinearIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.AssignUserEmail
	}).(pulumi.StringPtrOutput)
}

// The issue description
func (o WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateLinearIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The issue id
func (o WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput) IssueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateLinearIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.IssueId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput) Labels() WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateLinearIssueTaskParams) []WorkflowTaskUpdateLinearIssueTaskParamsLabel {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateLinearIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The project id and display name
func (o WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput) Project() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateLinearIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The state id and display name
func (o WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput) State() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateLinearIssueTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateLinearIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The issue title
func (o WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateLinearIssueTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateLinearIssueTaskParamsLabel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskUpdateLinearIssueTaskParamsLabelInput is an input type that accepts WorkflowTaskUpdateLinearIssueTaskParamsLabelArgs and WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateLinearIssueTaskParamsLabelInput` via:
//
//	WorkflowTaskUpdateLinearIssueTaskParamsLabelArgs{...}
type WorkflowTaskUpdateLinearIssueTaskParamsLabelInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateLinearIssueTaskParamsLabelOutput() WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput
	ToWorkflowTaskUpdateLinearIssueTaskParamsLabelOutputWithContext(context.Context) WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput
}

type WorkflowTaskUpdateLinearIssueTaskParamsLabelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskUpdateLinearIssueTaskParamsLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateLinearIssueTaskParamsLabel)(nil)).Elem()
}

func (i WorkflowTaskUpdateLinearIssueTaskParamsLabelArgs) ToWorkflowTaskUpdateLinearIssueTaskParamsLabelOutput() WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput {
	return i.ToWorkflowTaskUpdateLinearIssueTaskParamsLabelOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateLinearIssueTaskParamsLabelArgs) ToWorkflowTaskUpdateLinearIssueTaskParamsLabelOutputWithContext(ctx context.Context) WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput)
}

// WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayInput is an input type that accepts WorkflowTaskUpdateLinearIssueTaskParamsLabelArray and WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayInput` via:
//
//	WorkflowTaskUpdateLinearIssueTaskParamsLabelArray{ WorkflowTaskUpdateLinearIssueTaskParamsLabelArgs{...} }
type WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput() WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput
	ToWorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutputWithContext(context.Context) WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput
}

type WorkflowTaskUpdateLinearIssueTaskParamsLabelArray []WorkflowTaskUpdateLinearIssueTaskParamsLabelInput

func (WorkflowTaskUpdateLinearIssueTaskParamsLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskUpdateLinearIssueTaskParamsLabel)(nil)).Elem()
}

func (i WorkflowTaskUpdateLinearIssueTaskParamsLabelArray) ToWorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput() WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput {
	return i.ToWorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateLinearIssueTaskParamsLabelArray) ToWorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput)
}

type WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateLinearIssueTaskParamsLabel)(nil)).Elem()
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput) ToWorkflowTaskUpdateLinearIssueTaskParamsLabelOutput() WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput {
	return o
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput) ToWorkflowTaskUpdateLinearIssueTaskParamsLabelOutputWithContext(ctx context.Context) WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput {
	return o
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateLinearIssueTaskParamsLabel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateLinearIssueTaskParamsLabel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskUpdateLinearIssueTaskParamsLabel)(nil)).Elem()
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput) ToWorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput() WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput {
	return o
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput) ToWorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput {
	return o
}

func (o WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskUpdateLinearIssueTaskParamsLabel {
		return vs[0].([]WorkflowTaskUpdateLinearIssueTaskParamsLabel)[vs[1].(int)]
	}).(WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput)
}

type WorkflowTaskUpdateNotionPageTaskParams struct {
	// The Notion page ID
	FileId string `pulumi:"fileId"`
	// Retrospective template to use when creating page task, if desired
	PostMortemTemplateId *string `pulumi:"postMortemTemplateId"`
	// Value must be one of true or false
	ShowActionItemsAsTable *bool `pulumi:"showActionItemsAsTable"`
	// Value must be one of true or false
	ShowTimelineAsTable *bool   `pulumi:"showTimelineAsTable"`
	TaskType            *string `pulumi:"taskType"`
	// The Notion page title
	Title *string `pulumi:"title"`
}

// WorkflowTaskUpdateNotionPageTaskParamsInput is an input type that accepts WorkflowTaskUpdateNotionPageTaskParamsArgs and WorkflowTaskUpdateNotionPageTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateNotionPageTaskParamsInput` via:
//
//	WorkflowTaskUpdateNotionPageTaskParamsArgs{...}
type WorkflowTaskUpdateNotionPageTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateNotionPageTaskParamsOutput() WorkflowTaskUpdateNotionPageTaskParamsOutput
	ToWorkflowTaskUpdateNotionPageTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateNotionPageTaskParamsOutput
}

type WorkflowTaskUpdateNotionPageTaskParamsArgs struct {
	// The Notion page ID
	FileId pulumi.StringInput `pulumi:"fileId"`
	// Retrospective template to use when creating page task, if desired
	PostMortemTemplateId pulumi.StringPtrInput `pulumi:"postMortemTemplateId"`
	// Value must be one of true or false
	ShowActionItemsAsTable pulumi.BoolPtrInput `pulumi:"showActionItemsAsTable"`
	// Value must be one of true or false
	ShowTimelineAsTable pulumi.BoolPtrInput   `pulumi:"showTimelineAsTable"`
	TaskType            pulumi.StringPtrInput `pulumi:"taskType"`
	// The Notion page title
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (WorkflowTaskUpdateNotionPageTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateNotionPageTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateNotionPageTaskParamsArgs) ToWorkflowTaskUpdateNotionPageTaskParamsOutput() WorkflowTaskUpdateNotionPageTaskParamsOutput {
	return i.ToWorkflowTaskUpdateNotionPageTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateNotionPageTaskParamsArgs) ToWorkflowTaskUpdateNotionPageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateNotionPageTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateNotionPageTaskParamsOutput)
}

func (i WorkflowTaskUpdateNotionPageTaskParamsArgs) ToWorkflowTaskUpdateNotionPageTaskParamsPtrOutput() WorkflowTaskUpdateNotionPageTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateNotionPageTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateNotionPageTaskParamsArgs) ToWorkflowTaskUpdateNotionPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateNotionPageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateNotionPageTaskParamsOutput).ToWorkflowTaskUpdateNotionPageTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateNotionPageTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateNotionPageTaskParamsArgs, WorkflowTaskUpdateNotionPageTaskParamsPtr and WorkflowTaskUpdateNotionPageTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateNotionPageTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateNotionPageTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateNotionPageTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateNotionPageTaskParamsPtrOutput() WorkflowTaskUpdateNotionPageTaskParamsPtrOutput
	ToWorkflowTaskUpdateNotionPageTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateNotionPageTaskParamsPtrOutput
}

type workflowTaskUpdateNotionPageTaskParamsPtrType WorkflowTaskUpdateNotionPageTaskParamsArgs

func WorkflowTaskUpdateNotionPageTaskParamsPtr(v *WorkflowTaskUpdateNotionPageTaskParamsArgs) WorkflowTaskUpdateNotionPageTaskParamsPtrInput {
	return (*workflowTaskUpdateNotionPageTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateNotionPageTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateNotionPageTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateNotionPageTaskParamsPtrType) ToWorkflowTaskUpdateNotionPageTaskParamsPtrOutput() WorkflowTaskUpdateNotionPageTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateNotionPageTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateNotionPageTaskParamsPtrType) ToWorkflowTaskUpdateNotionPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateNotionPageTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateNotionPageTaskParamsPtrOutput)
}

type WorkflowTaskUpdateNotionPageTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateNotionPageTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateNotionPageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateNotionPageTaskParamsOutput) ToWorkflowTaskUpdateNotionPageTaskParamsOutput() WorkflowTaskUpdateNotionPageTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateNotionPageTaskParamsOutput) ToWorkflowTaskUpdateNotionPageTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateNotionPageTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateNotionPageTaskParamsOutput) ToWorkflowTaskUpdateNotionPageTaskParamsPtrOutput() WorkflowTaskUpdateNotionPageTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateNotionPageTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateNotionPageTaskParamsOutput) ToWorkflowTaskUpdateNotionPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateNotionPageTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateNotionPageTaskParams) *WorkflowTaskUpdateNotionPageTaskParams {
		return &v
	}).(WorkflowTaskUpdateNotionPageTaskParamsPtrOutput)
}

// The Notion page ID
func (o WorkflowTaskUpdateNotionPageTaskParamsOutput) FileId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateNotionPageTaskParams) string { return v.FileId }).(pulumi.StringOutput)
}

// Retrospective template to use when creating page task, if desired
func (o WorkflowTaskUpdateNotionPageTaskParamsOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateNotionPageTaskParams) *string { return v.PostMortemTemplateId }).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateNotionPageTaskParamsOutput) ShowActionItemsAsTable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateNotionPageTaskParams) *bool { return v.ShowActionItemsAsTable }).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateNotionPageTaskParamsOutput) ShowTimelineAsTable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateNotionPageTaskParams) *bool { return v.ShowTimelineAsTable }).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskUpdateNotionPageTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateNotionPageTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The Notion page title
func (o WorkflowTaskUpdateNotionPageTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateNotionPageTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateNotionPageTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateNotionPageTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateNotionPageTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateNotionPageTaskParamsPtrOutput) ToWorkflowTaskUpdateNotionPageTaskParamsPtrOutput() WorkflowTaskUpdateNotionPageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateNotionPageTaskParamsPtrOutput) ToWorkflowTaskUpdateNotionPageTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateNotionPageTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateNotionPageTaskParamsPtrOutput) Elem() WorkflowTaskUpdateNotionPageTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateNotionPageTaskParams) WorkflowTaskUpdateNotionPageTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateNotionPageTaskParams
		return ret
	}).(WorkflowTaskUpdateNotionPageTaskParamsOutput)
}

// The Notion page ID
func (o WorkflowTaskUpdateNotionPageTaskParamsPtrOutput) FileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateNotionPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.FileId
	}).(pulumi.StringPtrOutput)
}

// Retrospective template to use when creating page task, if desired
func (o WorkflowTaskUpdateNotionPageTaskParamsPtrOutput) PostMortemTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateNotionPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.PostMortemTemplateId
	}).(pulumi.StringPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateNotionPageTaskParamsPtrOutput) ShowActionItemsAsTable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateNotionPageTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.ShowActionItemsAsTable
	}).(pulumi.BoolPtrOutput)
}

// Value must be one of true or false
func (o WorkflowTaskUpdateNotionPageTaskParamsPtrOutput) ShowTimelineAsTable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateNotionPageTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.ShowTimelineAsTable
	}).(pulumi.BoolPtrOutput)
}

func (o WorkflowTaskUpdateNotionPageTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateNotionPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The Notion page title
func (o WorkflowTaskUpdateNotionPageTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateNotionPageTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateOpsgenieAlertTaskParams struct {
	// Opsgenie Alert ID
	AlertId string `pulumi:"alertId"`
	// Map must contain two fields, `id` and `name`.
	Completion map[string]string `pulumi:"completion"`
	// Description field of the alert that is generally used to provide a detailed information about the alert
	Description *string `pulumi:"description"`
	// Message of the alert
	Message *string `pulumi:"message"`
	// Value must be one of `P1`, `P2`, `P3`, `P4`, `P5`, `auto`.
	Priority string  `pulumi:"priority"`
	TaskType *string `pulumi:"taskType"`
}

// WorkflowTaskUpdateOpsgenieAlertTaskParamsInput is an input type that accepts WorkflowTaskUpdateOpsgenieAlertTaskParamsArgs and WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateOpsgenieAlertTaskParamsInput` via:
//
//	WorkflowTaskUpdateOpsgenieAlertTaskParamsArgs{...}
type WorkflowTaskUpdateOpsgenieAlertTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateOpsgenieAlertTaskParamsOutput() WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput
	ToWorkflowTaskUpdateOpsgenieAlertTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput
}

type WorkflowTaskUpdateOpsgenieAlertTaskParamsArgs struct {
	// Opsgenie Alert ID
	AlertId pulumi.StringInput `pulumi:"alertId"`
	// Map must contain two fields, `id` and `name`.
	Completion pulumi.StringMapInput `pulumi:"completion"`
	// Description field of the alert that is generally used to provide a detailed information about the alert
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Message of the alert
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Value must be one of `P1`, `P2`, `P3`, `P4`, `P5`, `auto`.
	Priority pulumi.StringInput    `pulumi:"priority"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskUpdateOpsgenieAlertTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateOpsgenieAlertTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateOpsgenieAlertTaskParamsArgs) ToWorkflowTaskUpdateOpsgenieAlertTaskParamsOutput() WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput {
	return i.ToWorkflowTaskUpdateOpsgenieAlertTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateOpsgenieAlertTaskParamsArgs) ToWorkflowTaskUpdateOpsgenieAlertTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput)
}

func (i WorkflowTaskUpdateOpsgenieAlertTaskParamsArgs) ToWorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput() WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateOpsgenieAlertTaskParamsArgs) ToWorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput).ToWorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateOpsgenieAlertTaskParamsArgs, WorkflowTaskUpdateOpsgenieAlertTaskParamsPtr and WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateOpsgenieAlertTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput() WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput
	ToWorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput
}

type workflowTaskUpdateOpsgenieAlertTaskParamsPtrType WorkflowTaskUpdateOpsgenieAlertTaskParamsArgs

func WorkflowTaskUpdateOpsgenieAlertTaskParamsPtr(v *WorkflowTaskUpdateOpsgenieAlertTaskParamsArgs) WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrInput {
	return (*workflowTaskUpdateOpsgenieAlertTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateOpsgenieAlertTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateOpsgenieAlertTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateOpsgenieAlertTaskParamsPtrType) ToWorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput() WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateOpsgenieAlertTaskParamsPtrType) ToWorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput)
}

type WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateOpsgenieAlertTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput) ToWorkflowTaskUpdateOpsgenieAlertTaskParamsOutput() WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput) ToWorkflowTaskUpdateOpsgenieAlertTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput) ToWorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput() WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput) ToWorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateOpsgenieAlertTaskParams) *WorkflowTaskUpdateOpsgenieAlertTaskParams {
		return &v
	}).(WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput)
}

// Opsgenie Alert ID
func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput) AlertId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateOpsgenieAlertTaskParams) string { return v.AlertId }).(pulumi.StringOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateOpsgenieAlertTaskParams) map[string]string { return v.Completion }).(pulumi.StringMapOutput)
}

// Description field of the alert that is generally used to provide a detailed information about the alert
func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateOpsgenieAlertTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Message of the alert
func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateOpsgenieAlertTaskParams) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Value must be one of `P1`, `P2`, `P3`, `P4`, `P5`, `auto`.
func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateOpsgenieAlertTaskParams) string { return v.Priority }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateOpsgenieAlertTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateOpsgenieAlertTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput) ToWorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput() WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput) ToWorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput) Elem() WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieAlertTaskParams) WorkflowTaskUpdateOpsgenieAlertTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateOpsgenieAlertTaskParams
		return ret
	}).(WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput)
}

// Opsgenie Alert ID
func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput) AlertId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.AlertId
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieAlertTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Completion
	}).(pulumi.StringMapOutput)
}

// Description field of the alert that is generally used to provide a detailed information about the alert
func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Message of the alert
func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `P1`, `P2`, `P3`, `P4`, `P5`, `auto`.
func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Priority
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateOpsgenieIncidentTaskParams struct {
	// Description field of the alert that is generally used to provide a detailed information about the alert
	Description *string `pulumi:"description"`
	// Message of the alert
	Message *string `pulumi:"message"`
	// The Opsgenie incident ID, this can also be a Rootly incident variable
	OpsgenieIncidentId string `pulumi:"opsgenieIncidentId"`
	// Value must be one of `P1`, `P2`, `P3`, `P4`, `P5`, `auto`.
	Priority *string `pulumi:"priority"`
	// Value must be one of `resolve`, `open`, `close`, `auto`.
	Status   *string `pulumi:"status"`
	TaskType *string `pulumi:"taskType"`
}

// WorkflowTaskUpdateOpsgenieIncidentTaskParamsInput is an input type that accepts WorkflowTaskUpdateOpsgenieIncidentTaskParamsArgs and WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateOpsgenieIncidentTaskParamsInput` via:
//
//	WorkflowTaskUpdateOpsgenieIncidentTaskParamsArgs{...}
type WorkflowTaskUpdateOpsgenieIncidentTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput() WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput
	ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput
}

type WorkflowTaskUpdateOpsgenieIncidentTaskParamsArgs struct {
	// Description field of the alert that is generally used to provide a detailed information about the alert
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Message of the alert
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The Opsgenie incident ID, this can also be a Rootly incident variable
	OpsgenieIncidentId pulumi.StringInput `pulumi:"opsgenieIncidentId"`
	// Value must be one of `P1`, `P2`, `P3`, `P4`, `P5`, `auto`.
	Priority pulumi.StringPtrInput `pulumi:"priority"`
	// Value must be one of `resolve`, `open`, `close`, `auto`.
	Status   pulumi.StringPtrInput `pulumi:"status"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskUpdateOpsgenieIncidentTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateOpsgenieIncidentTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateOpsgenieIncidentTaskParamsArgs) ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput() WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput {
	return i.ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateOpsgenieIncidentTaskParamsArgs) ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput)
}

func (i WorkflowTaskUpdateOpsgenieIncidentTaskParamsArgs) ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput() WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateOpsgenieIncidentTaskParamsArgs) ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput).ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateOpsgenieIncidentTaskParamsArgs, WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtr and WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateOpsgenieIncidentTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput() WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput
	ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput
}

type workflowTaskUpdateOpsgenieIncidentTaskParamsPtrType WorkflowTaskUpdateOpsgenieIncidentTaskParamsArgs

func WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtr(v *WorkflowTaskUpdateOpsgenieIncidentTaskParamsArgs) WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrInput {
	return (*workflowTaskUpdateOpsgenieIncidentTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateOpsgenieIncidentTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateOpsgenieIncidentTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateOpsgenieIncidentTaskParamsPtrType) ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput() WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateOpsgenieIncidentTaskParamsPtrType) ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput)
}

type WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateOpsgenieIncidentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput) ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput() WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput) ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput) ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput() WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput) ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateOpsgenieIncidentTaskParams) *WorkflowTaskUpdateOpsgenieIncidentTaskParams {
		return &v
	}).(WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput)
}

// Description field of the alert that is generally used to provide a detailed information about the alert
func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateOpsgenieIncidentTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Message of the alert
func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateOpsgenieIncidentTaskParams) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The Opsgenie incident ID, this can also be a Rootly incident variable
func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput) OpsgenieIncidentId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateOpsgenieIncidentTaskParams) string { return v.OpsgenieIncidentId }).(pulumi.StringOutput)
}

// Value must be one of `P1`, `P2`, `P3`, `P4`, `P5`, `auto`.
func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateOpsgenieIncidentTaskParams) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

// Value must be one of `resolve`, `open`, `close`, `auto`.
func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateOpsgenieIncidentTaskParams) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateOpsgenieIncidentTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateOpsgenieIncidentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput) ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput() WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput) ToWorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput) Elem() WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieIncidentTaskParams) WorkflowTaskUpdateOpsgenieIncidentTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateOpsgenieIncidentTaskParams
		return ret
	}).(WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput)
}

// Description field of the alert that is generally used to provide a detailed information about the alert
func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Message of the alert
func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// The Opsgenie incident ID, this can also be a Rootly incident variable
func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput) OpsgenieIncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.OpsgenieIncidentId
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `P1`, `P2`, `P3`, `P4`, `P5`, `auto`.
func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `resolve`, `open`, `close`, `auto`.
func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdatePagerdutyIncidentTaskParams struct {
	// Escalation level of policy attached to incident
	EscalationLevel *int `pulumi:"escalationLevel"`
	// Pagerduty incident id
	PagerdutyIncidentId string `pulumi:"pagerdutyIncidentId"`
	// PagerDuty incident priority, selecting auto will let Rootly auto map our incident severity
	Priority *string `pulumi:"priority"`
	// A message outlining the incident's resolution in PagerDuty
	Resolution *string `pulumi:"resolution"`
	// Value must be one of `resolved`, `acknowledged`, `auto`.
	Status   *string `pulumi:"status"`
	TaskType *string `pulumi:"taskType"`
	// Title to update to
	Title *string `pulumi:"title"`
	// PagerDuty incident urgency, selecting auto will let Rootly auto map our incident severity. Value must be one of `high`, `low`, `auto`.
	Urgency *string `pulumi:"urgency"`
}

// WorkflowTaskUpdatePagerdutyIncidentTaskParamsInput is an input type that accepts WorkflowTaskUpdatePagerdutyIncidentTaskParamsArgs and WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdatePagerdutyIncidentTaskParamsInput` via:
//
//	WorkflowTaskUpdatePagerdutyIncidentTaskParamsArgs{...}
type WorkflowTaskUpdatePagerdutyIncidentTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput() WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput
	ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput
}

type WorkflowTaskUpdatePagerdutyIncidentTaskParamsArgs struct {
	// Escalation level of policy attached to incident
	EscalationLevel pulumi.IntPtrInput `pulumi:"escalationLevel"`
	// Pagerduty incident id
	PagerdutyIncidentId pulumi.StringInput `pulumi:"pagerdutyIncidentId"`
	// PagerDuty incident priority, selecting auto will let Rootly auto map our incident severity
	Priority pulumi.StringPtrInput `pulumi:"priority"`
	// A message outlining the incident's resolution in PagerDuty
	Resolution pulumi.StringPtrInput `pulumi:"resolution"`
	// Value must be one of `resolved`, `acknowledged`, `auto`.
	Status   pulumi.StringPtrInput `pulumi:"status"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// Title to update to
	Title pulumi.StringPtrInput `pulumi:"title"`
	// PagerDuty incident urgency, selecting auto will let Rootly auto map our incident severity. Value must be one of `high`, `low`, `auto`.
	Urgency pulumi.StringPtrInput `pulumi:"urgency"`
}

func (WorkflowTaskUpdatePagerdutyIncidentTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdatePagerdutyIncidentTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdatePagerdutyIncidentTaskParamsArgs) ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput() WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput {
	return i.ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdatePagerdutyIncidentTaskParamsArgs) ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput)
}

func (i WorkflowTaskUpdatePagerdutyIncidentTaskParamsArgs) ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput() WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdatePagerdutyIncidentTaskParamsArgs) ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput).ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdatePagerdutyIncidentTaskParamsArgs, WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtr and WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdatePagerdutyIncidentTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput() WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput
	ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput
}

type workflowTaskUpdatePagerdutyIncidentTaskParamsPtrType WorkflowTaskUpdatePagerdutyIncidentTaskParamsArgs

func WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtr(v *WorkflowTaskUpdatePagerdutyIncidentTaskParamsArgs) WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrInput {
	return (*workflowTaskUpdatePagerdutyIncidentTaskParamsPtrType)(v)
}

func (*workflowTaskUpdatePagerdutyIncidentTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdatePagerdutyIncidentTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdatePagerdutyIncidentTaskParamsPtrType) ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput() WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdatePagerdutyIncidentTaskParamsPtrType) ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput)
}

type WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdatePagerdutyIncidentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput) ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput() WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput) ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput) ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput() WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput) ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdatePagerdutyIncidentTaskParams) *WorkflowTaskUpdatePagerdutyIncidentTaskParams {
		return &v
	}).(WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput)
}

// Escalation level of policy attached to incident
func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput) EscalationLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagerdutyIncidentTaskParams) *int { return v.EscalationLevel }).(pulumi.IntPtrOutput)
}

// Pagerduty incident id
func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput) PagerdutyIncidentId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagerdutyIncidentTaskParams) string { return v.PagerdutyIncidentId }).(pulumi.StringOutput)
}

// PagerDuty incident priority, selecting auto will let Rootly auto map our incident severity
func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagerdutyIncidentTaskParams) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

// A message outlining the incident's resolution in PagerDuty
func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagerdutyIncidentTaskParams) *string { return v.Resolution }).(pulumi.StringPtrOutput)
}

// Value must be one of `resolved`, `acknowledged`, `auto`.
func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagerdutyIncidentTaskParams) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagerdutyIncidentTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// Title to update to
func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagerdutyIncidentTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// PagerDuty incident urgency, selecting auto will let Rootly auto map our incident severity. Value must be one of `high`, `low`, `auto`.
func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput) Urgency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagerdutyIncidentTaskParams) *string { return v.Urgency }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdatePagerdutyIncidentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput) ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput() WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput) ToWorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput) Elem() WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagerdutyIncidentTaskParams) WorkflowTaskUpdatePagerdutyIncidentTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdatePagerdutyIncidentTaskParams
		return ret
	}).(WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput)
}

// Escalation level of policy attached to incident
func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput) EscalationLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagerdutyIncidentTaskParams) *int {
		if v == nil {
			return nil
		}
		return v.EscalationLevel
	}).(pulumi.IntPtrOutput)
}

// Pagerduty incident id
func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput) PagerdutyIncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagerdutyIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.PagerdutyIncidentId
	}).(pulumi.StringPtrOutput)
}

// PagerDuty incident priority, selecting auto will let Rootly auto map our incident severity
func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagerdutyIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringPtrOutput)
}

// A message outlining the incident's resolution in PagerDuty
func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagerdutyIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Resolution
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `resolved`, `acknowledged`, `auto`.
func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagerdutyIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagerdutyIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// Title to update to
func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagerdutyIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// PagerDuty incident urgency, selecting auto will let Rootly auto map our incident severity. Value must be one of `high`, `low`, `auto`.
func (o WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput) Urgency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagerdutyIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Urgency
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdatePagertreeAlertTaskParams struct {
	// Description of alert as text
	Description *string `pulumi:"description"`
	// Setting to true makes an alert a Pagertree incident. Value must be one of true or false
	Incident *bool `pulumi:"incident"`
	// The prefix ID of the Pagertree alert
	PagertreeAlertId *string `pulumi:"pagertreeAlertId"`
	// Value must be one of `auto`, `SEV-1`, `SEV-2`, `SEV-3`, `SEV-4`.
	Severity *string                                          `pulumi:"severity"`
	TaskType *string                                          `pulumi:"taskType"`
	Teams    []WorkflowTaskUpdatePagertreeAlertTaskParamsTeam `pulumi:"teams"`
	// Title of alert as text
	Title *string `pulumi:"title"`
	// Value must be one of `auto`, `critical`, `high`, `medium`, `low`.
	Urgency *string                                          `pulumi:"urgency"`
	Users   []WorkflowTaskUpdatePagertreeAlertTaskParamsUser `pulumi:"users"`
}

// WorkflowTaskUpdatePagertreeAlertTaskParamsInput is an input type that accepts WorkflowTaskUpdatePagertreeAlertTaskParamsArgs and WorkflowTaskUpdatePagertreeAlertTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdatePagertreeAlertTaskParamsInput` via:
//
//	WorkflowTaskUpdatePagertreeAlertTaskParamsArgs{...}
type WorkflowTaskUpdatePagertreeAlertTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdatePagertreeAlertTaskParamsOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsOutput
	ToWorkflowTaskUpdatePagertreeAlertTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsOutput
}

type WorkflowTaskUpdatePagertreeAlertTaskParamsArgs struct {
	// Description of alert as text
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Setting to true makes an alert a Pagertree incident. Value must be one of true or false
	Incident pulumi.BoolPtrInput `pulumi:"incident"`
	// The prefix ID of the Pagertree alert
	PagertreeAlertId pulumi.StringPtrInput `pulumi:"pagertreeAlertId"`
	// Value must be one of `auto`, `SEV-1`, `SEV-2`, `SEV-3`, `SEV-4`.
	Severity pulumi.StringPtrInput                                    `pulumi:"severity"`
	TaskType pulumi.StringPtrInput                                    `pulumi:"taskType"`
	Teams    WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayInput `pulumi:"teams"`
	// Title of alert as text
	Title pulumi.StringPtrInput `pulumi:"title"`
	// Value must be one of `auto`, `critical`, `high`, `medium`, `low`.
	Urgency pulumi.StringPtrInput                                    `pulumi:"urgency"`
	Users   WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayInput `pulumi:"users"`
}

func (WorkflowTaskUpdatePagertreeAlertTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdatePagertreeAlertTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdatePagertreeAlertTaskParamsArgs) ToWorkflowTaskUpdatePagertreeAlertTaskParamsOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsOutput {
	return i.ToWorkflowTaskUpdatePagertreeAlertTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdatePagertreeAlertTaskParamsArgs) ToWorkflowTaskUpdatePagertreeAlertTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdatePagertreeAlertTaskParamsOutput)
}

func (i WorkflowTaskUpdatePagertreeAlertTaskParamsArgs) ToWorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdatePagertreeAlertTaskParamsArgs) ToWorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdatePagertreeAlertTaskParamsOutput).ToWorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdatePagertreeAlertTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdatePagertreeAlertTaskParamsArgs, WorkflowTaskUpdatePagertreeAlertTaskParamsPtr and WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdatePagertreeAlertTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdatePagertreeAlertTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdatePagertreeAlertTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput
	ToWorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput
}

type workflowTaskUpdatePagertreeAlertTaskParamsPtrType WorkflowTaskUpdatePagertreeAlertTaskParamsArgs

func WorkflowTaskUpdatePagertreeAlertTaskParamsPtr(v *WorkflowTaskUpdatePagertreeAlertTaskParamsArgs) WorkflowTaskUpdatePagertreeAlertTaskParamsPtrInput {
	return (*workflowTaskUpdatePagertreeAlertTaskParamsPtrType)(v)
}

func (*workflowTaskUpdatePagertreeAlertTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdatePagertreeAlertTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdatePagertreeAlertTaskParamsPtrType) ToWorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdatePagertreeAlertTaskParamsPtrType) ToWorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput)
}

type WorkflowTaskUpdatePagertreeAlertTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdatePagertreeAlertTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdatePagertreeAlertTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsOutput) ToWorkflowTaskUpdatePagertreeAlertTaskParamsOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsOutput) ToWorkflowTaskUpdatePagertreeAlertTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsOutput) ToWorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsOutput) ToWorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdatePagertreeAlertTaskParams) *WorkflowTaskUpdatePagertreeAlertTaskParams {
		return &v
	}).(WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput)
}

// Description of alert as text
func (o WorkflowTaskUpdatePagertreeAlertTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagertreeAlertTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Setting to true makes an alert a Pagertree incident. Value must be one of true or false
func (o WorkflowTaskUpdatePagertreeAlertTaskParamsOutput) Incident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagertreeAlertTaskParams) *bool { return v.Incident }).(pulumi.BoolPtrOutput)
}

// The prefix ID of the Pagertree alert
func (o WorkflowTaskUpdatePagertreeAlertTaskParamsOutput) PagertreeAlertId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagertreeAlertTaskParams) *string { return v.PagertreeAlertId }).(pulumi.StringPtrOutput)
}

// Value must be one of `auto`, `SEV-1`, `SEV-2`, `SEV-3`, `SEV-4`.
func (o WorkflowTaskUpdatePagertreeAlertTaskParamsOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagertreeAlertTaskParams) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagertreeAlertTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsOutput) Teams() WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagertreeAlertTaskParams) []WorkflowTaskUpdatePagertreeAlertTaskParamsTeam {
		return v.Teams
	}).(WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput)
}

// Title of alert as text
func (o WorkflowTaskUpdatePagertreeAlertTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagertreeAlertTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// Value must be one of `auto`, `critical`, `high`, `medium`, `low`.
func (o WorkflowTaskUpdatePagertreeAlertTaskParamsOutput) Urgency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagertreeAlertTaskParams) *string { return v.Urgency }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsOutput) Users() WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagertreeAlertTaskParams) []WorkflowTaskUpdatePagertreeAlertTaskParamsUser {
		return v.Users
	}).(WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput)
}

type WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdatePagertreeAlertTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput) ToWorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput) ToWorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput) Elem() WorkflowTaskUpdatePagertreeAlertTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagertreeAlertTaskParams) WorkflowTaskUpdatePagertreeAlertTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdatePagertreeAlertTaskParams
		return ret
	}).(WorkflowTaskUpdatePagertreeAlertTaskParamsOutput)
}

// Description of alert as text
func (o WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagertreeAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Setting to true makes an alert a Pagertree incident. Value must be one of true or false
func (o WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput) Incident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagertreeAlertTaskParams) *bool {
		if v == nil {
			return nil
		}
		return v.Incident
	}).(pulumi.BoolPtrOutput)
}

// The prefix ID of the Pagertree alert
func (o WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput) PagertreeAlertId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagertreeAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.PagertreeAlertId
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `auto`, `SEV-1`, `SEV-2`, `SEV-3`, `SEV-4`.
func (o WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagertreeAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagertreeAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput) Teams() WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagertreeAlertTaskParams) []WorkflowTaskUpdatePagertreeAlertTaskParamsTeam {
		if v == nil {
			return nil
		}
		return v.Teams
	}).(WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput)
}

// Title of alert as text
func (o WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagertreeAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `auto`, `critical`, `high`, `medium`, `low`.
func (o WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput) Urgency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagertreeAlertTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Urgency
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput) Users() WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagertreeAlertTaskParams) []WorkflowTaskUpdatePagertreeAlertTaskParamsUser {
		if v == nil {
			return nil
		}
		return v.Users
	}).(WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput)
}

type WorkflowTaskUpdatePagertreeAlertTaskParamsTeam struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskUpdatePagertreeAlertTaskParamsTeamInput is an input type that accepts WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArgs and WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdatePagertreeAlertTaskParamsTeamInput` via:
//
//	WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArgs{...}
type WorkflowTaskUpdatePagertreeAlertTaskParamsTeamInput interface {
	pulumi.Input

	ToWorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput
	ToWorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutputWithContext(context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput
}

type WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdatePagertreeAlertTaskParamsTeam)(nil)).Elem()
}

func (i WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArgs) ToWorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput {
	return i.ToWorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArgs) ToWorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput)
}

// WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayInput is an input type that accepts WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArray and WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayInput` via:
//
//	WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArray{ WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArgs{...} }
type WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayInput interface {
	pulumi.Input

	ToWorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput
	ToWorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutputWithContext(context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput
}

type WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArray []WorkflowTaskUpdatePagertreeAlertTaskParamsTeamInput

func (WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskUpdatePagertreeAlertTaskParamsTeam)(nil)).Elem()
}

func (i WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArray) ToWorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput {
	return i.ToWorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArray) ToWorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput)
}

type WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdatePagertreeAlertTaskParamsTeam)(nil)).Elem()
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput) ToWorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput {
	return o
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput) ToWorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput {
	return o
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagertreeAlertTaskParamsTeam) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagertreeAlertTaskParamsTeam) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskUpdatePagertreeAlertTaskParamsTeam)(nil)).Elem()
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput) ToWorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput {
	return o
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput) ToWorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput {
	return o
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput) Index(i pulumi.IntInput) WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskUpdatePagertreeAlertTaskParamsTeam {
		return vs[0].([]WorkflowTaskUpdatePagertreeAlertTaskParamsTeam)[vs[1].(int)]
	}).(WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput)
}

type WorkflowTaskUpdatePagertreeAlertTaskParamsUser struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskUpdatePagertreeAlertTaskParamsUserInput is an input type that accepts WorkflowTaskUpdatePagertreeAlertTaskParamsUserArgs and WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdatePagertreeAlertTaskParamsUserInput` via:
//
//	WorkflowTaskUpdatePagertreeAlertTaskParamsUserArgs{...}
type WorkflowTaskUpdatePagertreeAlertTaskParamsUserInput interface {
	pulumi.Input

	ToWorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput
	ToWorkflowTaskUpdatePagertreeAlertTaskParamsUserOutputWithContext(context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput
}

type WorkflowTaskUpdatePagertreeAlertTaskParamsUserArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskUpdatePagertreeAlertTaskParamsUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdatePagertreeAlertTaskParamsUser)(nil)).Elem()
}

func (i WorkflowTaskUpdatePagertreeAlertTaskParamsUserArgs) ToWorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput {
	return i.ToWorkflowTaskUpdatePagertreeAlertTaskParamsUserOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdatePagertreeAlertTaskParamsUserArgs) ToWorkflowTaskUpdatePagertreeAlertTaskParamsUserOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput)
}

// WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayInput is an input type that accepts WorkflowTaskUpdatePagertreeAlertTaskParamsUserArray and WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayInput` via:
//
//	WorkflowTaskUpdatePagertreeAlertTaskParamsUserArray{ WorkflowTaskUpdatePagertreeAlertTaskParamsUserArgs{...} }
type WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayInput interface {
	pulumi.Input

	ToWorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput
	ToWorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutputWithContext(context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput
}

type WorkflowTaskUpdatePagertreeAlertTaskParamsUserArray []WorkflowTaskUpdatePagertreeAlertTaskParamsUserInput

func (WorkflowTaskUpdatePagertreeAlertTaskParamsUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskUpdatePagertreeAlertTaskParamsUser)(nil)).Elem()
}

func (i WorkflowTaskUpdatePagertreeAlertTaskParamsUserArray) ToWorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput {
	return i.ToWorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdatePagertreeAlertTaskParamsUserArray) ToWorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput)
}

type WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdatePagertreeAlertTaskParamsUser)(nil)).Elem()
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput) ToWorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput {
	return o
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput) ToWorkflowTaskUpdatePagertreeAlertTaskParamsUserOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput {
	return o
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagertreeAlertTaskParamsUser) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdatePagertreeAlertTaskParamsUser) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskUpdatePagertreeAlertTaskParamsUser)(nil)).Elem()
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput) ToWorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput() WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput {
	return o
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput) ToWorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput {
	return o
}

func (o WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput) Index(i pulumi.IntInput) WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskUpdatePagertreeAlertTaskParamsUser {
		return vs[0].([]WorkflowTaskUpdatePagertreeAlertTaskParamsUser)[vs[1].(int)]
	}).(WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput)
}

type WorkflowTaskUpdateServiceNowIncidentTaskParams struct {
	// Map must contain two fields, `id` and `name`. The completion id and display name
	Completion map[string]string `pulumi:"completion"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string `pulumi:"customFieldsMapping"`
	// The incident description
	Description *string `pulumi:"description"`
	// The incident id
	IncidentId string `pulumi:"incidentId"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority map[string]string `pulumi:"priority"`
	TaskType *string           `pulumi:"taskType"`
	// The incident title
	Title *string `pulumi:"title"`
}

// WorkflowTaskUpdateServiceNowIncidentTaskParamsInput is an input type that accepts WorkflowTaskUpdateServiceNowIncidentTaskParamsArgs and WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateServiceNowIncidentTaskParamsInput` via:
//
//	WorkflowTaskUpdateServiceNowIncidentTaskParamsArgs{...}
type WorkflowTaskUpdateServiceNowIncidentTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateServiceNowIncidentTaskParamsOutput() WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput
	ToWorkflowTaskUpdateServiceNowIncidentTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput
}

type WorkflowTaskUpdateServiceNowIncidentTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`. The completion id and display name
	Completion pulumi.StringMapInput `pulumi:"completion"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput `pulumi:"customFieldsMapping"`
	// The incident description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The incident id
	IncidentId pulumi.StringInput `pulumi:"incidentId"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority pulumi.StringMapInput `pulumi:"priority"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The incident title
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (WorkflowTaskUpdateServiceNowIncidentTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateServiceNowIncidentTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateServiceNowIncidentTaskParamsArgs) ToWorkflowTaskUpdateServiceNowIncidentTaskParamsOutput() WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput {
	return i.ToWorkflowTaskUpdateServiceNowIncidentTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateServiceNowIncidentTaskParamsArgs) ToWorkflowTaskUpdateServiceNowIncidentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput)
}

func (i WorkflowTaskUpdateServiceNowIncidentTaskParamsArgs) ToWorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput() WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateServiceNowIncidentTaskParamsArgs) ToWorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput).ToWorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateServiceNowIncidentTaskParamsArgs, WorkflowTaskUpdateServiceNowIncidentTaskParamsPtr and WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateServiceNowIncidentTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput() WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput
	ToWorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput
}

type workflowTaskUpdateServiceNowIncidentTaskParamsPtrType WorkflowTaskUpdateServiceNowIncidentTaskParamsArgs

func WorkflowTaskUpdateServiceNowIncidentTaskParamsPtr(v *WorkflowTaskUpdateServiceNowIncidentTaskParamsArgs) WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrInput {
	return (*workflowTaskUpdateServiceNowIncidentTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateServiceNowIncidentTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateServiceNowIncidentTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateServiceNowIncidentTaskParamsPtrType) ToWorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput() WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateServiceNowIncidentTaskParamsPtrType) ToWorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput)
}

type WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateServiceNowIncidentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput) ToWorkflowTaskUpdateServiceNowIncidentTaskParamsOutput() WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput) ToWorkflowTaskUpdateServiceNowIncidentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput) ToWorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput() WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput) ToWorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateServiceNowIncidentTaskParams) *WorkflowTaskUpdateServiceNowIncidentTaskParams {
		return &v
	}).(WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`. The completion id and display name
func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateServiceNowIncidentTaskParams) map[string]string { return v.Completion }).(pulumi.StringMapOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateServiceNowIncidentTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

// The incident description
func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateServiceNowIncidentTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The incident id
func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput) IncidentId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateServiceNowIncidentTaskParams) string { return v.IncidentId }).(pulumi.StringOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateServiceNowIncidentTaskParams) map[string]string { return v.Priority }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateServiceNowIncidentTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The incident title
func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateServiceNowIncidentTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateServiceNowIncidentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput) ToWorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput() WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput) ToWorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput) Elem() WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateServiceNowIncidentTaskParams) WorkflowTaskUpdateServiceNowIncidentTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateServiceNowIncidentTaskParams
		return ret
	}).(WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`. The completion id and display name
func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateServiceNowIncidentTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Completion
	}).(pulumi.StringMapOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateServiceNowIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

// The incident description
func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateServiceNowIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The incident id
func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput) IncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateServiceNowIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.IncidentId
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateServiceNowIncidentTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateServiceNowIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The incident title
func (o WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateServiceNowIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateShortcutStoryTaskParams struct {
	// Map must contain two fields, `id` and `name`. The archivation id and display name
	Archivation map[string]string `pulumi:"archivation"`
	// The incident description
	Description *string `pulumi:"description"`
	// The due date
	DueDate *string `pulumi:"dueDate"`
	// The story labels
	Labels *string `pulumi:"labels"`
	// The story id
	StoryId  string  `pulumi:"storyId"`
	TaskType *string `pulumi:"taskType"`
	// The incident title
	Title *string `pulumi:"title"`
}

// WorkflowTaskUpdateShortcutStoryTaskParamsInput is an input type that accepts WorkflowTaskUpdateShortcutStoryTaskParamsArgs and WorkflowTaskUpdateShortcutStoryTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateShortcutStoryTaskParamsInput` via:
//
//	WorkflowTaskUpdateShortcutStoryTaskParamsArgs{...}
type WorkflowTaskUpdateShortcutStoryTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateShortcutStoryTaskParamsOutput() WorkflowTaskUpdateShortcutStoryTaskParamsOutput
	ToWorkflowTaskUpdateShortcutStoryTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateShortcutStoryTaskParamsOutput
}

type WorkflowTaskUpdateShortcutStoryTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`. The archivation id and display name
	Archivation pulumi.StringMapInput `pulumi:"archivation"`
	// The incident description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The due date
	DueDate pulumi.StringPtrInput `pulumi:"dueDate"`
	// The story labels
	Labels pulumi.StringPtrInput `pulumi:"labels"`
	// The story id
	StoryId  pulumi.StringInput    `pulumi:"storyId"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The incident title
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (WorkflowTaskUpdateShortcutStoryTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateShortcutStoryTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateShortcutStoryTaskParamsArgs) ToWorkflowTaskUpdateShortcutStoryTaskParamsOutput() WorkflowTaskUpdateShortcutStoryTaskParamsOutput {
	return i.ToWorkflowTaskUpdateShortcutStoryTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateShortcutStoryTaskParamsArgs) ToWorkflowTaskUpdateShortcutStoryTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutStoryTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateShortcutStoryTaskParamsOutput)
}

func (i WorkflowTaskUpdateShortcutStoryTaskParamsArgs) ToWorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput() WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateShortcutStoryTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateShortcutStoryTaskParamsArgs) ToWorkflowTaskUpdateShortcutStoryTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateShortcutStoryTaskParamsOutput).ToWorkflowTaskUpdateShortcutStoryTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateShortcutStoryTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateShortcutStoryTaskParamsArgs, WorkflowTaskUpdateShortcutStoryTaskParamsPtr and WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateShortcutStoryTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateShortcutStoryTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateShortcutStoryTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput() WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput
	ToWorkflowTaskUpdateShortcutStoryTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput
}

type workflowTaskUpdateShortcutStoryTaskParamsPtrType WorkflowTaskUpdateShortcutStoryTaskParamsArgs

func WorkflowTaskUpdateShortcutStoryTaskParamsPtr(v *WorkflowTaskUpdateShortcutStoryTaskParamsArgs) WorkflowTaskUpdateShortcutStoryTaskParamsPtrInput {
	return (*workflowTaskUpdateShortcutStoryTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateShortcutStoryTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateShortcutStoryTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateShortcutStoryTaskParamsPtrType) ToWorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput() WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateShortcutStoryTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateShortcutStoryTaskParamsPtrType) ToWorkflowTaskUpdateShortcutStoryTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput)
}

type WorkflowTaskUpdateShortcutStoryTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateShortcutStoryTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateShortcutStoryTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateShortcutStoryTaskParamsOutput) ToWorkflowTaskUpdateShortcutStoryTaskParamsOutput() WorkflowTaskUpdateShortcutStoryTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutStoryTaskParamsOutput) ToWorkflowTaskUpdateShortcutStoryTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutStoryTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutStoryTaskParamsOutput) ToWorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput() WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateShortcutStoryTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateShortcutStoryTaskParamsOutput) ToWorkflowTaskUpdateShortcutStoryTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateShortcutStoryTaskParams) *WorkflowTaskUpdateShortcutStoryTaskParams {
		return &v
	}).(WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`. The archivation id and display name
func (o WorkflowTaskUpdateShortcutStoryTaskParamsOutput) Archivation() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateShortcutStoryTaskParams) map[string]string { return v.Archivation }).(pulumi.StringMapOutput)
}

// The incident description
func (o WorkflowTaskUpdateShortcutStoryTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateShortcutStoryTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskUpdateShortcutStoryTaskParamsOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateShortcutStoryTaskParams) *string { return v.DueDate }).(pulumi.StringPtrOutput)
}

// The story labels
func (o WorkflowTaskUpdateShortcutStoryTaskParamsOutput) Labels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateShortcutStoryTaskParams) *string { return v.Labels }).(pulumi.StringPtrOutput)
}

// The story id
func (o WorkflowTaskUpdateShortcutStoryTaskParamsOutput) StoryId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateShortcutStoryTaskParams) string { return v.StoryId }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdateShortcutStoryTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateShortcutStoryTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The incident title
func (o WorkflowTaskUpdateShortcutStoryTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateShortcutStoryTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateShortcutStoryTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput) ToWorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput() WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput) ToWorkflowTaskUpdateShortcutStoryTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput) Elem() WorkflowTaskUpdateShortcutStoryTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutStoryTaskParams) WorkflowTaskUpdateShortcutStoryTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateShortcutStoryTaskParams
		return ret
	}).(WorkflowTaskUpdateShortcutStoryTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`. The archivation id and display name
func (o WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput) Archivation() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutStoryTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Archivation
	}).(pulumi.StringMapOutput)
}

// The incident description
func (o WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutStoryTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutStoryTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DueDate
	}).(pulumi.StringPtrOutput)
}

// The story labels
func (o WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput) Labels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutStoryTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringPtrOutput)
}

// The story id
func (o WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput) StoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutStoryTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.StoryId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutStoryTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The incident title
func (o WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutStoryTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateShortcutTaskTaskParams struct {
	// Map must contain two fields, `id` and `name`. The completion id and display name
	Completion map[string]string `pulumi:"completion"`
	// The task description
	Description *string `pulumi:"description"`
	// The parent story
	ParentStoryId string `pulumi:"parentStoryId"`
	// The task id
	TaskId   string  `pulumi:"taskId"`
	TaskType *string `pulumi:"taskType"`
}

// WorkflowTaskUpdateShortcutTaskTaskParamsInput is an input type that accepts WorkflowTaskUpdateShortcutTaskTaskParamsArgs and WorkflowTaskUpdateShortcutTaskTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateShortcutTaskTaskParamsInput` via:
//
//	WorkflowTaskUpdateShortcutTaskTaskParamsArgs{...}
type WorkflowTaskUpdateShortcutTaskTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateShortcutTaskTaskParamsOutput() WorkflowTaskUpdateShortcutTaskTaskParamsOutput
	ToWorkflowTaskUpdateShortcutTaskTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateShortcutTaskTaskParamsOutput
}

type WorkflowTaskUpdateShortcutTaskTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`. The completion id and display name
	Completion pulumi.StringMapInput `pulumi:"completion"`
	// The task description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The parent story
	ParentStoryId pulumi.StringInput `pulumi:"parentStoryId"`
	// The task id
	TaskId   pulumi.StringInput    `pulumi:"taskId"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskUpdateShortcutTaskTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateShortcutTaskTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateShortcutTaskTaskParamsArgs) ToWorkflowTaskUpdateShortcutTaskTaskParamsOutput() WorkflowTaskUpdateShortcutTaskTaskParamsOutput {
	return i.ToWorkflowTaskUpdateShortcutTaskTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateShortcutTaskTaskParamsArgs) ToWorkflowTaskUpdateShortcutTaskTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutTaskTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateShortcutTaskTaskParamsOutput)
}

func (i WorkflowTaskUpdateShortcutTaskTaskParamsArgs) ToWorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput() WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateShortcutTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateShortcutTaskTaskParamsArgs) ToWorkflowTaskUpdateShortcutTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateShortcutTaskTaskParamsOutput).ToWorkflowTaskUpdateShortcutTaskTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateShortcutTaskTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateShortcutTaskTaskParamsArgs, WorkflowTaskUpdateShortcutTaskTaskParamsPtr and WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateShortcutTaskTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateShortcutTaskTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateShortcutTaskTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput() WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput
	ToWorkflowTaskUpdateShortcutTaskTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput
}

type workflowTaskUpdateShortcutTaskTaskParamsPtrType WorkflowTaskUpdateShortcutTaskTaskParamsArgs

func WorkflowTaskUpdateShortcutTaskTaskParamsPtr(v *WorkflowTaskUpdateShortcutTaskTaskParamsArgs) WorkflowTaskUpdateShortcutTaskTaskParamsPtrInput {
	return (*workflowTaskUpdateShortcutTaskTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateShortcutTaskTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateShortcutTaskTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateShortcutTaskTaskParamsPtrType) ToWorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput() WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateShortcutTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateShortcutTaskTaskParamsPtrType) ToWorkflowTaskUpdateShortcutTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput)
}

type WorkflowTaskUpdateShortcutTaskTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateShortcutTaskTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateShortcutTaskTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateShortcutTaskTaskParamsOutput) ToWorkflowTaskUpdateShortcutTaskTaskParamsOutput() WorkflowTaskUpdateShortcutTaskTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutTaskTaskParamsOutput) ToWorkflowTaskUpdateShortcutTaskTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutTaskTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutTaskTaskParamsOutput) ToWorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput() WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateShortcutTaskTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateShortcutTaskTaskParamsOutput) ToWorkflowTaskUpdateShortcutTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateShortcutTaskTaskParams) *WorkflowTaskUpdateShortcutTaskTaskParams {
		return &v
	}).(WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`. The completion id and display name
func (o WorkflowTaskUpdateShortcutTaskTaskParamsOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateShortcutTaskTaskParams) map[string]string { return v.Completion }).(pulumi.StringMapOutput)
}

// The task description
func (o WorkflowTaskUpdateShortcutTaskTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateShortcutTaskTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The parent story
func (o WorkflowTaskUpdateShortcutTaskTaskParamsOutput) ParentStoryId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateShortcutTaskTaskParams) string { return v.ParentStoryId }).(pulumi.StringOutput)
}

// The task id
func (o WorkflowTaskUpdateShortcutTaskTaskParamsOutput) TaskId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateShortcutTaskTaskParams) string { return v.TaskId }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdateShortcutTaskTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateShortcutTaskTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateShortcutTaskTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput) ToWorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput() WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput) ToWorkflowTaskUpdateShortcutTaskTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput) Elem() WorkflowTaskUpdateShortcutTaskTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutTaskTaskParams) WorkflowTaskUpdateShortcutTaskTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateShortcutTaskTaskParams
		return ret
	}).(WorkflowTaskUpdateShortcutTaskTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`. The completion id and display name
func (o WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutTaskTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Completion
	}).(pulumi.StringMapOutput)
}

// The task description
func (o WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The parent story
func (o WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput) ParentStoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.ParentStoryId
	}).(pulumi.StringPtrOutput)
}

// The task id
func (o WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput) TaskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.TaskId
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutTaskTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateSlackChannelTopicTaskParams struct {
	// Map must contain two fields, `id` and `name`.
	Channel  map[string]string `pulumi:"channel"`
	TaskType *string           `pulumi:"taskType"`
	Topic    string            `pulumi:"topic"`
}

// WorkflowTaskUpdateSlackChannelTopicTaskParamsInput is an input type that accepts WorkflowTaskUpdateSlackChannelTopicTaskParamsArgs and WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateSlackChannelTopicTaskParamsInput` via:
//
//	WorkflowTaskUpdateSlackChannelTopicTaskParamsArgs{...}
type WorkflowTaskUpdateSlackChannelTopicTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateSlackChannelTopicTaskParamsOutput() WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput
	ToWorkflowTaskUpdateSlackChannelTopicTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput
}

type WorkflowTaskUpdateSlackChannelTopicTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`.
	Channel  pulumi.StringMapInput `pulumi:"channel"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	Topic    pulumi.StringInput    `pulumi:"topic"`
}

func (WorkflowTaskUpdateSlackChannelTopicTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateSlackChannelTopicTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateSlackChannelTopicTaskParamsArgs) ToWorkflowTaskUpdateSlackChannelTopicTaskParamsOutput() WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput {
	return i.ToWorkflowTaskUpdateSlackChannelTopicTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateSlackChannelTopicTaskParamsArgs) ToWorkflowTaskUpdateSlackChannelTopicTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput)
}

func (i WorkflowTaskUpdateSlackChannelTopicTaskParamsArgs) ToWorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput() WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateSlackChannelTopicTaskParamsArgs) ToWorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput).ToWorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateSlackChannelTopicTaskParamsArgs, WorkflowTaskUpdateSlackChannelTopicTaskParamsPtr and WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateSlackChannelTopicTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput() WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput
	ToWorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput
}

type workflowTaskUpdateSlackChannelTopicTaskParamsPtrType WorkflowTaskUpdateSlackChannelTopicTaskParamsArgs

func WorkflowTaskUpdateSlackChannelTopicTaskParamsPtr(v *WorkflowTaskUpdateSlackChannelTopicTaskParamsArgs) WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrInput {
	return (*workflowTaskUpdateSlackChannelTopicTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateSlackChannelTopicTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateSlackChannelTopicTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateSlackChannelTopicTaskParamsPtrType) ToWorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput() WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateSlackChannelTopicTaskParamsPtrType) ToWorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput)
}

type WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateSlackChannelTopicTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput) ToWorkflowTaskUpdateSlackChannelTopicTaskParamsOutput() WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput) ToWorkflowTaskUpdateSlackChannelTopicTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput) ToWorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput() WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput) ToWorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateSlackChannelTopicTaskParams) *WorkflowTaskUpdateSlackChannelTopicTaskParams {
		return &v
	}).(WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput) Channel() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateSlackChannelTopicTaskParams) map[string]string { return v.Channel }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateSlackChannelTopicTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateSlackChannelTopicTaskParams) string { return v.Topic }).(pulumi.StringOutput)
}

type WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateSlackChannelTopicTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput) ToWorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput() WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput) ToWorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput) Elem() WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateSlackChannelTopicTaskParams) WorkflowTaskUpdateSlackChannelTopicTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateSlackChannelTopicTaskParams
		return ret
	}).(WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`.
func (o WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput) Channel() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateSlackChannelTopicTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateSlackChannelTopicTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateSlackChannelTopicTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Topic
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateStatusTaskParams struct {
	// In format '1 hour', '1 day', etc
	InactivityTimeout *string `pulumi:"inactivityTimeout"`
	// Value must be one of `inTriage`, `started`, `mitigated`, `resolved`, `cancelled`.
	Status   string  `pulumi:"status"`
	TaskType *string `pulumi:"taskType"`
}

// WorkflowTaskUpdateStatusTaskParamsInput is an input type that accepts WorkflowTaskUpdateStatusTaskParamsArgs and WorkflowTaskUpdateStatusTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateStatusTaskParamsInput` via:
//
//	WorkflowTaskUpdateStatusTaskParamsArgs{...}
type WorkflowTaskUpdateStatusTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateStatusTaskParamsOutput() WorkflowTaskUpdateStatusTaskParamsOutput
	ToWorkflowTaskUpdateStatusTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateStatusTaskParamsOutput
}

type WorkflowTaskUpdateStatusTaskParamsArgs struct {
	// In format '1 hour', '1 day', etc
	InactivityTimeout pulumi.StringPtrInput `pulumi:"inactivityTimeout"`
	// Value must be one of `inTriage`, `started`, `mitigated`, `resolved`, `cancelled`.
	Status   pulumi.StringInput    `pulumi:"status"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (WorkflowTaskUpdateStatusTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateStatusTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateStatusTaskParamsArgs) ToWorkflowTaskUpdateStatusTaskParamsOutput() WorkflowTaskUpdateStatusTaskParamsOutput {
	return i.ToWorkflowTaskUpdateStatusTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateStatusTaskParamsArgs) ToWorkflowTaskUpdateStatusTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateStatusTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateStatusTaskParamsOutput)
}

func (i WorkflowTaskUpdateStatusTaskParamsArgs) ToWorkflowTaskUpdateStatusTaskParamsPtrOutput() WorkflowTaskUpdateStatusTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateStatusTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateStatusTaskParamsArgs) ToWorkflowTaskUpdateStatusTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateStatusTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateStatusTaskParamsOutput).ToWorkflowTaskUpdateStatusTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateStatusTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateStatusTaskParamsArgs, WorkflowTaskUpdateStatusTaskParamsPtr and WorkflowTaskUpdateStatusTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateStatusTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateStatusTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateStatusTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateStatusTaskParamsPtrOutput() WorkflowTaskUpdateStatusTaskParamsPtrOutput
	ToWorkflowTaskUpdateStatusTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateStatusTaskParamsPtrOutput
}

type workflowTaskUpdateStatusTaskParamsPtrType WorkflowTaskUpdateStatusTaskParamsArgs

func WorkflowTaskUpdateStatusTaskParamsPtr(v *WorkflowTaskUpdateStatusTaskParamsArgs) WorkflowTaskUpdateStatusTaskParamsPtrInput {
	return (*workflowTaskUpdateStatusTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateStatusTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateStatusTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateStatusTaskParamsPtrType) ToWorkflowTaskUpdateStatusTaskParamsPtrOutput() WorkflowTaskUpdateStatusTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateStatusTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateStatusTaskParamsPtrType) ToWorkflowTaskUpdateStatusTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateStatusTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateStatusTaskParamsPtrOutput)
}

type WorkflowTaskUpdateStatusTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateStatusTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateStatusTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateStatusTaskParamsOutput) ToWorkflowTaskUpdateStatusTaskParamsOutput() WorkflowTaskUpdateStatusTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateStatusTaskParamsOutput) ToWorkflowTaskUpdateStatusTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateStatusTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateStatusTaskParamsOutput) ToWorkflowTaskUpdateStatusTaskParamsPtrOutput() WorkflowTaskUpdateStatusTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateStatusTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateStatusTaskParamsOutput) ToWorkflowTaskUpdateStatusTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateStatusTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateStatusTaskParams) *WorkflowTaskUpdateStatusTaskParams {
		return &v
	}).(WorkflowTaskUpdateStatusTaskParamsPtrOutput)
}

// In format '1 hour', '1 day', etc
func (o WorkflowTaskUpdateStatusTaskParamsOutput) InactivityTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateStatusTaskParams) *string { return v.InactivityTimeout }).(pulumi.StringPtrOutput)
}

// Value must be one of `inTriage`, `started`, `mitigated`, `resolved`, `cancelled`.
func (o WorkflowTaskUpdateStatusTaskParamsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateStatusTaskParams) string { return v.Status }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdateStatusTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateStatusTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateStatusTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateStatusTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateStatusTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateStatusTaskParamsPtrOutput) ToWorkflowTaskUpdateStatusTaskParamsPtrOutput() WorkflowTaskUpdateStatusTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateStatusTaskParamsPtrOutput) ToWorkflowTaskUpdateStatusTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateStatusTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateStatusTaskParamsPtrOutput) Elem() WorkflowTaskUpdateStatusTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateStatusTaskParams) WorkflowTaskUpdateStatusTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateStatusTaskParams
		return ret
	}).(WorkflowTaskUpdateStatusTaskParamsOutput)
}

// In format '1 hour', '1 day', etc
func (o WorkflowTaskUpdateStatusTaskParamsPtrOutput) InactivityTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateStatusTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.InactivityTimeout
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `inTriage`, `started`, `mitigated`, `resolved`, `cancelled`.
func (o WorkflowTaskUpdateStatusTaskParamsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateStatusTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateStatusTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateStatusTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateTrelloCardTaskParams struct {
	// Map must contain two fields, `id` and `name`. The archivation id and display name
	Archivation map[string]string `pulumi:"archivation"`
	// Map must contain two fields, `id` and `name`. The board id and display name
	Board map[string]string `pulumi:"board"`
	// The card id
	CardId string `pulumi:"cardId"`
	// The card description
	Description *string `pulumi:"description"`
	// The due date
	DueDate *string                                       `pulumi:"dueDate"`
	Labels  []WorkflowTaskUpdateTrelloCardTaskParamsLabel `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. The list id and display name
	List     map[string]string `pulumi:"list"`
	TaskType *string           `pulumi:"taskType"`
	// The card title
	Title *string `pulumi:"title"`
}

// WorkflowTaskUpdateTrelloCardTaskParamsInput is an input type that accepts WorkflowTaskUpdateTrelloCardTaskParamsArgs and WorkflowTaskUpdateTrelloCardTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateTrelloCardTaskParamsInput` via:
//
//	WorkflowTaskUpdateTrelloCardTaskParamsArgs{...}
type WorkflowTaskUpdateTrelloCardTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateTrelloCardTaskParamsOutput() WorkflowTaskUpdateTrelloCardTaskParamsOutput
	ToWorkflowTaskUpdateTrelloCardTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateTrelloCardTaskParamsOutput
}

type WorkflowTaskUpdateTrelloCardTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`. The archivation id and display name
	Archivation pulumi.StringMapInput `pulumi:"archivation"`
	// Map must contain two fields, `id` and `name`. The board id and display name
	Board pulumi.StringMapInput `pulumi:"board"`
	// The card id
	CardId pulumi.StringInput `pulumi:"cardId"`
	// The card description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The due date
	DueDate pulumi.StringPtrInput                                 `pulumi:"dueDate"`
	Labels  WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayInput `pulumi:"labels"`
	// Map must contain two fields, `id` and `name`. The list id and display name
	List     pulumi.StringMapInput `pulumi:"list"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The card title
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (WorkflowTaskUpdateTrelloCardTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateTrelloCardTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateTrelloCardTaskParamsArgs) ToWorkflowTaskUpdateTrelloCardTaskParamsOutput() WorkflowTaskUpdateTrelloCardTaskParamsOutput {
	return i.ToWorkflowTaskUpdateTrelloCardTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateTrelloCardTaskParamsArgs) ToWorkflowTaskUpdateTrelloCardTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateTrelloCardTaskParamsOutput)
}

func (i WorkflowTaskUpdateTrelloCardTaskParamsArgs) ToWorkflowTaskUpdateTrelloCardTaskParamsPtrOutput() WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateTrelloCardTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateTrelloCardTaskParamsArgs) ToWorkflowTaskUpdateTrelloCardTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateTrelloCardTaskParamsOutput).ToWorkflowTaskUpdateTrelloCardTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateTrelloCardTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateTrelloCardTaskParamsArgs, WorkflowTaskUpdateTrelloCardTaskParamsPtr and WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateTrelloCardTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateTrelloCardTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateTrelloCardTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateTrelloCardTaskParamsPtrOutput() WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput
	ToWorkflowTaskUpdateTrelloCardTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput
}

type workflowTaskUpdateTrelloCardTaskParamsPtrType WorkflowTaskUpdateTrelloCardTaskParamsArgs

func WorkflowTaskUpdateTrelloCardTaskParamsPtr(v *WorkflowTaskUpdateTrelloCardTaskParamsArgs) WorkflowTaskUpdateTrelloCardTaskParamsPtrInput {
	return (*workflowTaskUpdateTrelloCardTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateTrelloCardTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateTrelloCardTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateTrelloCardTaskParamsPtrType) ToWorkflowTaskUpdateTrelloCardTaskParamsPtrOutput() WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateTrelloCardTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateTrelloCardTaskParamsPtrType) ToWorkflowTaskUpdateTrelloCardTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput)
}

type WorkflowTaskUpdateTrelloCardTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateTrelloCardTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateTrelloCardTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsOutput) ToWorkflowTaskUpdateTrelloCardTaskParamsOutput() WorkflowTaskUpdateTrelloCardTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsOutput) ToWorkflowTaskUpdateTrelloCardTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsOutput) ToWorkflowTaskUpdateTrelloCardTaskParamsPtrOutput() WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateTrelloCardTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsOutput) ToWorkflowTaskUpdateTrelloCardTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateTrelloCardTaskParams) *WorkflowTaskUpdateTrelloCardTaskParams {
		return &v
	}).(WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`. The archivation id and display name
func (o WorkflowTaskUpdateTrelloCardTaskParamsOutput) Archivation() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateTrelloCardTaskParams) map[string]string { return v.Archivation }).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The board id and display name
func (o WorkflowTaskUpdateTrelloCardTaskParamsOutput) Board() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateTrelloCardTaskParams) map[string]string { return v.Board }).(pulumi.StringMapOutput)
}

// The card id
func (o WorkflowTaskUpdateTrelloCardTaskParamsOutput) CardId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateTrelloCardTaskParams) string { return v.CardId }).(pulumi.StringOutput)
}

// The card description
func (o WorkflowTaskUpdateTrelloCardTaskParamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateTrelloCardTaskParams) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskUpdateTrelloCardTaskParamsOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateTrelloCardTaskParams) *string { return v.DueDate }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsOutput) Labels() WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateTrelloCardTaskParams) []WorkflowTaskUpdateTrelloCardTaskParamsLabel {
		return v.Labels
	}).(WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput)
}

// Map must contain two fields, `id` and `name`. The list id and display name
func (o WorkflowTaskUpdateTrelloCardTaskParamsOutput) List() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateTrelloCardTaskParams) map[string]string { return v.List }).(pulumi.StringMapOutput)
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateTrelloCardTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The card title
func (o WorkflowTaskUpdateTrelloCardTaskParamsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateTrelloCardTaskParams) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateTrelloCardTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput) ToWorkflowTaskUpdateTrelloCardTaskParamsPtrOutput() WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput) ToWorkflowTaskUpdateTrelloCardTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput) Elem() WorkflowTaskUpdateTrelloCardTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateTrelloCardTaskParams) WorkflowTaskUpdateTrelloCardTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateTrelloCardTaskParams
		return ret
	}).(WorkflowTaskUpdateTrelloCardTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`. The archivation id and display name
func (o WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput) Archivation() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateTrelloCardTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Archivation
	}).(pulumi.StringMapOutput)
}

// Map must contain two fields, `id` and `name`. The board id and display name
func (o WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput) Board() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateTrelloCardTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Board
	}).(pulumi.StringMapOutput)
}

// The card id
func (o WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput) CardId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateTrelloCardTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.CardId
	}).(pulumi.StringPtrOutput)
}

// The card description
func (o WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateTrelloCardTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The due date
func (o WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput) DueDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateTrelloCardTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.DueDate
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput) Labels() WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateTrelloCardTaskParams) []WorkflowTaskUpdateTrelloCardTaskParamsLabel {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput)
}

// Map must contain two fields, `id` and `name`. The list id and display name
func (o WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput) List() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateTrelloCardTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.List
	}).(pulumi.StringMapOutput)
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateTrelloCardTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The card title
func (o WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateTrelloCardTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateTrelloCardTaskParamsLabel struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// WorkflowTaskUpdateTrelloCardTaskParamsLabelInput is an input type that accepts WorkflowTaskUpdateTrelloCardTaskParamsLabelArgs and WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateTrelloCardTaskParamsLabelInput` via:
//
//	WorkflowTaskUpdateTrelloCardTaskParamsLabelArgs{...}
type WorkflowTaskUpdateTrelloCardTaskParamsLabelInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateTrelloCardTaskParamsLabelOutput() WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput
	ToWorkflowTaskUpdateTrelloCardTaskParamsLabelOutputWithContext(context.Context) WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput
}

type WorkflowTaskUpdateTrelloCardTaskParamsLabelArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowTaskUpdateTrelloCardTaskParamsLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateTrelloCardTaskParamsLabel)(nil)).Elem()
}

func (i WorkflowTaskUpdateTrelloCardTaskParamsLabelArgs) ToWorkflowTaskUpdateTrelloCardTaskParamsLabelOutput() WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput {
	return i.ToWorkflowTaskUpdateTrelloCardTaskParamsLabelOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateTrelloCardTaskParamsLabelArgs) ToWorkflowTaskUpdateTrelloCardTaskParamsLabelOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput)
}

// WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayInput is an input type that accepts WorkflowTaskUpdateTrelloCardTaskParamsLabelArray and WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayInput` via:
//
//	WorkflowTaskUpdateTrelloCardTaskParamsLabelArray{ WorkflowTaskUpdateTrelloCardTaskParamsLabelArgs{...} }
type WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput() WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput
	ToWorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutputWithContext(context.Context) WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput
}

type WorkflowTaskUpdateTrelloCardTaskParamsLabelArray []WorkflowTaskUpdateTrelloCardTaskParamsLabelInput

func (WorkflowTaskUpdateTrelloCardTaskParamsLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskUpdateTrelloCardTaskParamsLabel)(nil)).Elem()
}

func (i WorkflowTaskUpdateTrelloCardTaskParamsLabelArray) ToWorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput() WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput {
	return i.ToWorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateTrelloCardTaskParamsLabelArray) ToWorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput)
}

type WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateTrelloCardTaskParamsLabel)(nil)).Elem()
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput) ToWorkflowTaskUpdateTrelloCardTaskParamsLabelOutput() WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput {
	return o
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput) ToWorkflowTaskUpdateTrelloCardTaskParamsLabelOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput {
	return o
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateTrelloCardTaskParamsLabel) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateTrelloCardTaskParamsLabel) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTaskUpdateTrelloCardTaskParamsLabel)(nil)).Elem()
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput) ToWorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput() WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput {
	return o
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput) ToWorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput {
	return o
}

func (o WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTaskUpdateTrelloCardTaskParamsLabel {
		return vs[0].([]WorkflowTaskUpdateTrelloCardTaskParamsLabel)[vs[1].(int)]
	}).(WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput)
}

type WorkflowTaskUpdateVictorOpsIncidentTaskParams struct {
	// Resolution message
	ResolutionMessage *string `pulumi:"resolutionMessage"`
	// Value must be one of `resolve`, `ack`, `auto`.
	Status   string  `pulumi:"status"`
	TaskType *string `pulumi:"taskType"`
	// The victorOps incident ID, this can also be a Rootly incident variable
	VictorOpsIncidentId string `pulumi:"victorOpsIncidentId"`
}

// WorkflowTaskUpdateVictorOpsIncidentTaskParamsInput is an input type that accepts WorkflowTaskUpdateVictorOpsIncidentTaskParamsArgs and WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateVictorOpsIncidentTaskParamsInput` via:
//
//	WorkflowTaskUpdateVictorOpsIncidentTaskParamsArgs{...}
type WorkflowTaskUpdateVictorOpsIncidentTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput() WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput
	ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput
}

type WorkflowTaskUpdateVictorOpsIncidentTaskParamsArgs struct {
	// Resolution message
	ResolutionMessage pulumi.StringPtrInput `pulumi:"resolutionMessage"`
	// Value must be one of `resolve`, `ack`, `auto`.
	Status   pulumi.StringInput    `pulumi:"status"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The victorOps incident ID, this can also be a Rootly incident variable
	VictorOpsIncidentId pulumi.StringInput `pulumi:"victorOpsIncidentId"`
}

func (WorkflowTaskUpdateVictorOpsIncidentTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateVictorOpsIncidentTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateVictorOpsIncidentTaskParamsArgs) ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput() WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput {
	return i.ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateVictorOpsIncidentTaskParamsArgs) ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput)
}

func (i WorkflowTaskUpdateVictorOpsIncidentTaskParamsArgs) ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput() WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateVictorOpsIncidentTaskParamsArgs) ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput).ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateVictorOpsIncidentTaskParamsArgs, WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtr and WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateVictorOpsIncidentTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput() WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput
	ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput
}

type workflowTaskUpdateVictorOpsIncidentTaskParamsPtrType WorkflowTaskUpdateVictorOpsIncidentTaskParamsArgs

func WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtr(v *WorkflowTaskUpdateVictorOpsIncidentTaskParamsArgs) WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrInput {
	return (*workflowTaskUpdateVictorOpsIncidentTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateVictorOpsIncidentTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateVictorOpsIncidentTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateVictorOpsIncidentTaskParamsPtrType) ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput() WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateVictorOpsIncidentTaskParamsPtrType) ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput)
}

type WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateVictorOpsIncidentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput) ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput() WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput) ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput) ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput() WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput) ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateVictorOpsIncidentTaskParams) *WorkflowTaskUpdateVictorOpsIncidentTaskParams {
		return &v
	}).(WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput)
}

// Resolution message
func (o WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput) ResolutionMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateVictorOpsIncidentTaskParams) *string { return v.ResolutionMessage }).(pulumi.StringPtrOutput)
}

// Value must be one of `resolve`, `ack`, `auto`.
func (o WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateVictorOpsIncidentTaskParams) string { return v.Status }).(pulumi.StringOutput)
}

func (o WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateVictorOpsIncidentTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The victorOps incident ID, this can also be a Rootly incident variable
func (o WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput) VictorOpsIncidentId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateVictorOpsIncidentTaskParams) string { return v.VictorOpsIncidentId }).(pulumi.StringOutput)
}

type WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateVictorOpsIncidentTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput) ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput() WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput) ToWorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput) Elem() WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateVictorOpsIncidentTaskParams) WorkflowTaskUpdateVictorOpsIncidentTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateVictorOpsIncidentTaskParams
		return ret
	}).(WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput)
}

// Resolution message
func (o WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput) ResolutionMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateVictorOpsIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.ResolutionMessage
	}).(pulumi.StringPtrOutput)
}

// Value must be one of `resolve`, `ack`, `auto`.
func (o WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateVictorOpsIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateVictorOpsIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The victorOps incident ID, this can also be a Rootly incident variable
func (o WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput) VictorOpsIncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateVictorOpsIncidentTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.VictorOpsIncidentId
	}).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateZendeskTicketTaskParams struct {
	// Map must contain two fields, `id` and `name`. The completion id and display name
	Completion map[string]string `pulumi:"completion"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping *string `pulumi:"customFieldsMapping"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority map[string]string `pulumi:"priority"`
	// The ticket subject
	Subject *string `pulumi:"subject"`
	// The ticket tags
	Tags     *string `pulumi:"tags"`
	TaskType *string `pulumi:"taskType"`
	// The ticket id
	TicketId string `pulumi:"ticketId"`
	// Additional Zendesk ticket attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
	TicketPayload *string `pulumi:"ticketPayload"`
}

// WorkflowTaskUpdateZendeskTicketTaskParamsInput is an input type that accepts WorkflowTaskUpdateZendeskTicketTaskParamsArgs and WorkflowTaskUpdateZendeskTicketTaskParamsOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateZendeskTicketTaskParamsInput` via:
//
//	WorkflowTaskUpdateZendeskTicketTaskParamsArgs{...}
type WorkflowTaskUpdateZendeskTicketTaskParamsInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateZendeskTicketTaskParamsOutput() WorkflowTaskUpdateZendeskTicketTaskParamsOutput
	ToWorkflowTaskUpdateZendeskTicketTaskParamsOutputWithContext(context.Context) WorkflowTaskUpdateZendeskTicketTaskParamsOutput
}

type WorkflowTaskUpdateZendeskTicketTaskParamsArgs struct {
	// Map must contain two fields, `id` and `name`. The completion id and display name
	Completion pulumi.StringMapInput `pulumi:"completion"`
	// Custom field mappings. Can contain liquid markup and need to be valid JSON
	CustomFieldsMapping pulumi.StringPtrInput `pulumi:"customFieldsMapping"`
	// Map must contain two fields, `id` and `name`. The priority id and display name
	Priority pulumi.StringMapInput `pulumi:"priority"`
	// The ticket subject
	Subject pulumi.StringPtrInput `pulumi:"subject"`
	// The ticket tags
	Tags     pulumi.StringPtrInput `pulumi:"tags"`
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The ticket id
	TicketId pulumi.StringInput `pulumi:"ticketId"`
	// Additional Zendesk ticket attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
	TicketPayload pulumi.StringPtrInput `pulumi:"ticketPayload"`
}

func (WorkflowTaskUpdateZendeskTicketTaskParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateZendeskTicketTaskParams)(nil)).Elem()
}

func (i WorkflowTaskUpdateZendeskTicketTaskParamsArgs) ToWorkflowTaskUpdateZendeskTicketTaskParamsOutput() WorkflowTaskUpdateZendeskTicketTaskParamsOutput {
	return i.ToWorkflowTaskUpdateZendeskTicketTaskParamsOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateZendeskTicketTaskParamsArgs) ToWorkflowTaskUpdateZendeskTicketTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateZendeskTicketTaskParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateZendeskTicketTaskParamsOutput)
}

func (i WorkflowTaskUpdateZendeskTicketTaskParamsArgs) ToWorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput() WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateZendeskTicketTaskParamsPtrOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateZendeskTicketTaskParamsArgs) ToWorkflowTaskUpdateZendeskTicketTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateZendeskTicketTaskParamsOutput).ToWorkflowTaskUpdateZendeskTicketTaskParamsPtrOutputWithContext(ctx)
}

// WorkflowTaskUpdateZendeskTicketTaskParamsPtrInput is an input type that accepts WorkflowTaskUpdateZendeskTicketTaskParamsArgs, WorkflowTaskUpdateZendeskTicketTaskParamsPtr and WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateZendeskTicketTaskParamsPtrInput` via:
//
//	        WorkflowTaskUpdateZendeskTicketTaskParamsArgs{...}
//
//	or:
//
//	        nil
type WorkflowTaskUpdateZendeskTicketTaskParamsPtrInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput() WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput
	ToWorkflowTaskUpdateZendeskTicketTaskParamsPtrOutputWithContext(context.Context) WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput
}

type workflowTaskUpdateZendeskTicketTaskParamsPtrType WorkflowTaskUpdateZendeskTicketTaskParamsArgs

func WorkflowTaskUpdateZendeskTicketTaskParamsPtr(v *WorkflowTaskUpdateZendeskTicketTaskParamsArgs) WorkflowTaskUpdateZendeskTicketTaskParamsPtrInput {
	return (*workflowTaskUpdateZendeskTicketTaskParamsPtrType)(v)
}

func (*workflowTaskUpdateZendeskTicketTaskParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateZendeskTicketTaskParams)(nil)).Elem()
}

func (i *workflowTaskUpdateZendeskTicketTaskParamsPtrType) ToWorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput() WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput {
	return i.ToWorkflowTaskUpdateZendeskTicketTaskParamsPtrOutputWithContext(context.Background())
}

func (i *workflowTaskUpdateZendeskTicketTaskParamsPtrType) ToWorkflowTaskUpdateZendeskTicketTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput)
}

type WorkflowTaskUpdateZendeskTicketTaskParamsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateZendeskTicketTaskParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTaskUpdateZendeskTicketTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateZendeskTicketTaskParamsOutput) ToWorkflowTaskUpdateZendeskTicketTaskParamsOutput() WorkflowTaskUpdateZendeskTicketTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateZendeskTicketTaskParamsOutput) ToWorkflowTaskUpdateZendeskTicketTaskParamsOutputWithContext(ctx context.Context) WorkflowTaskUpdateZendeskTicketTaskParamsOutput {
	return o
}

func (o WorkflowTaskUpdateZendeskTicketTaskParamsOutput) ToWorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput() WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput {
	return o.ToWorkflowTaskUpdateZendeskTicketTaskParamsPtrOutputWithContext(context.Background())
}

func (o WorkflowTaskUpdateZendeskTicketTaskParamsOutput) ToWorkflowTaskUpdateZendeskTicketTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowTaskUpdateZendeskTicketTaskParams) *WorkflowTaskUpdateZendeskTicketTaskParams {
		return &v
	}).(WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput)
}

// Map must contain two fields, `id` and `name`. The completion id and display name
func (o WorkflowTaskUpdateZendeskTicketTaskParamsOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateZendeskTicketTaskParams) map[string]string { return v.Completion }).(pulumi.StringMapOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateZendeskTicketTaskParamsOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateZendeskTicketTaskParams) *string { return v.CustomFieldsMapping }).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskUpdateZendeskTicketTaskParamsOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateZendeskTicketTaskParams) map[string]string { return v.Priority }).(pulumi.StringMapOutput)
}

// The ticket subject
func (o WorkflowTaskUpdateZendeskTicketTaskParamsOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateZendeskTicketTaskParams) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

// The ticket tags
func (o WorkflowTaskUpdateZendeskTicketTaskParamsOutput) Tags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateZendeskTicketTaskParams) *string { return v.Tags }).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateZendeskTicketTaskParamsOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateZendeskTicketTaskParams) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The ticket id
func (o WorkflowTaskUpdateZendeskTicketTaskParamsOutput) TicketId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateZendeskTicketTaskParams) string { return v.TicketId }).(pulumi.StringOutput)
}

// Additional Zendesk ticket attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateZendeskTicketTaskParamsOutput) TicketPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTaskUpdateZendeskTicketTaskParams) *string { return v.TicketPayload }).(pulumi.StringPtrOutput)
}

type WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateZendeskTicketTaskParams)(nil)).Elem()
}

func (o WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput) ToWorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput() WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput) ToWorkflowTaskUpdateZendeskTicketTaskParamsPtrOutputWithContext(ctx context.Context) WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput {
	return o
}

func (o WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput) Elem() WorkflowTaskUpdateZendeskTicketTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateZendeskTicketTaskParams) WorkflowTaskUpdateZendeskTicketTaskParams {
		if v != nil {
			return *v
		}
		var ret WorkflowTaskUpdateZendeskTicketTaskParams
		return ret
	}).(WorkflowTaskUpdateZendeskTicketTaskParamsOutput)
}

// Map must contain two fields, `id` and `name`. The completion id and display name
func (o WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput) Completion() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateZendeskTicketTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Completion
	}).(pulumi.StringMapOutput)
}

// Custom field mappings. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput) CustomFieldsMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateZendeskTicketTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.CustomFieldsMapping
	}).(pulumi.StringPtrOutput)
}

// Map must contain two fields, `id` and `name`. The priority id and display name
func (o WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput) Priority() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateZendeskTicketTaskParams) map[string]string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringMapOutput)
}

// The ticket subject
func (o WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateZendeskTicketTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Subject
	}).(pulumi.StringPtrOutput)
}

// The ticket tags
func (o WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput) Tags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateZendeskTicketTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringPtrOutput)
}

func (o WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateZendeskTicketTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The ticket id
func (o WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput) TicketId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateZendeskTicketTaskParams) *string {
		if v == nil {
			return nil
		}
		return &v.TicketId
	}).(pulumi.StringPtrOutput)
}

// Additional Zendesk ticket attributes. Will be merged into whatever was specified in this tasks current parameters. Can contain liquid markup and need to be valid JSON
func (o WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput) TicketPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateZendeskTicketTaskParams) *string {
		if v == nil {
			return nil
		}
		return v.TicketPayload
	}).(pulumi.StringPtrOutput)
}

type GetCausesCause struct {
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	Slug        string `pulumi:"slug"`
}

// GetCausesCauseInput is an input type that accepts GetCausesCauseArgs and GetCausesCauseOutput values.
// You can construct a concrete instance of `GetCausesCauseInput` via:
//
//	GetCausesCauseArgs{...}
type GetCausesCauseInput interface {
	pulumi.Input

	ToGetCausesCauseOutput() GetCausesCauseOutput
	ToGetCausesCauseOutputWithContext(context.Context) GetCausesCauseOutput
}

type GetCausesCauseArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	Id          pulumi.StringInput `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
	Slug        pulumi.StringInput `pulumi:"slug"`
}

func (GetCausesCauseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCausesCause)(nil)).Elem()
}

func (i GetCausesCauseArgs) ToGetCausesCauseOutput() GetCausesCauseOutput {
	return i.ToGetCausesCauseOutputWithContext(context.Background())
}

func (i GetCausesCauseArgs) ToGetCausesCauseOutputWithContext(ctx context.Context) GetCausesCauseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCausesCauseOutput)
}

// GetCausesCauseArrayInput is an input type that accepts GetCausesCauseArray and GetCausesCauseArrayOutput values.
// You can construct a concrete instance of `GetCausesCauseArrayInput` via:
//
//	GetCausesCauseArray{ GetCausesCauseArgs{...} }
type GetCausesCauseArrayInput interface {
	pulumi.Input

	ToGetCausesCauseArrayOutput() GetCausesCauseArrayOutput
	ToGetCausesCauseArrayOutputWithContext(context.Context) GetCausesCauseArrayOutput
}

type GetCausesCauseArray []GetCausesCauseInput

func (GetCausesCauseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCausesCause)(nil)).Elem()
}

func (i GetCausesCauseArray) ToGetCausesCauseArrayOutput() GetCausesCauseArrayOutput {
	return i.ToGetCausesCauseArrayOutputWithContext(context.Background())
}

func (i GetCausesCauseArray) ToGetCausesCauseArrayOutputWithContext(ctx context.Context) GetCausesCauseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCausesCauseArrayOutput)
}

type GetCausesCauseOutput struct{ *pulumi.OutputState }

func (GetCausesCauseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCausesCause)(nil)).Elem()
}

func (o GetCausesCauseOutput) ToGetCausesCauseOutput() GetCausesCauseOutput {
	return o
}

func (o GetCausesCauseOutput) ToGetCausesCauseOutputWithContext(ctx context.Context) GetCausesCauseOutput {
	return o
}

func (o GetCausesCauseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCausesCause) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetCausesCauseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCausesCause) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCausesCauseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCausesCause) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCausesCauseOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetCausesCause) string { return v.Slug }).(pulumi.StringOutput)
}

type GetCausesCauseArrayOutput struct{ *pulumi.OutputState }

func (GetCausesCauseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCausesCause)(nil)).Elem()
}

func (o GetCausesCauseArrayOutput) ToGetCausesCauseArrayOutput() GetCausesCauseArrayOutput {
	return o
}

func (o GetCausesCauseArrayOutput) ToGetCausesCauseArrayOutputWithContext(ctx context.Context) GetCausesCauseArrayOutput {
	return o
}

func (o GetCausesCauseArrayOutput) Index(i pulumi.IntInput) GetCausesCauseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCausesCause {
		return vs[0].([]GetCausesCause)[vs[1].(int)]
	}).(GetCausesCauseOutput)
}

type GetCustomFieldOptionsCustomFieldOption struct {
	Color         string `pulumi:"color"`
	CustomFieldId int    `pulumi:"customFieldId"`
	Id            string `pulumi:"id"`
	Position      int    `pulumi:"position"`
	Value         string `pulumi:"value"`
}

// GetCustomFieldOptionsCustomFieldOptionInput is an input type that accepts GetCustomFieldOptionsCustomFieldOptionArgs and GetCustomFieldOptionsCustomFieldOptionOutput values.
// You can construct a concrete instance of `GetCustomFieldOptionsCustomFieldOptionInput` via:
//
//	GetCustomFieldOptionsCustomFieldOptionArgs{...}
type GetCustomFieldOptionsCustomFieldOptionInput interface {
	pulumi.Input

	ToGetCustomFieldOptionsCustomFieldOptionOutput() GetCustomFieldOptionsCustomFieldOptionOutput
	ToGetCustomFieldOptionsCustomFieldOptionOutputWithContext(context.Context) GetCustomFieldOptionsCustomFieldOptionOutput
}

type GetCustomFieldOptionsCustomFieldOptionArgs struct {
	Color         pulumi.StringInput `pulumi:"color"`
	CustomFieldId pulumi.IntInput    `pulumi:"customFieldId"`
	Id            pulumi.StringInput `pulumi:"id"`
	Position      pulumi.IntInput    `pulumi:"position"`
	Value         pulumi.StringInput `pulumi:"value"`
}

func (GetCustomFieldOptionsCustomFieldOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomFieldOptionsCustomFieldOption)(nil)).Elem()
}

func (i GetCustomFieldOptionsCustomFieldOptionArgs) ToGetCustomFieldOptionsCustomFieldOptionOutput() GetCustomFieldOptionsCustomFieldOptionOutput {
	return i.ToGetCustomFieldOptionsCustomFieldOptionOutputWithContext(context.Background())
}

func (i GetCustomFieldOptionsCustomFieldOptionArgs) ToGetCustomFieldOptionsCustomFieldOptionOutputWithContext(ctx context.Context) GetCustomFieldOptionsCustomFieldOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomFieldOptionsCustomFieldOptionOutput)
}

// GetCustomFieldOptionsCustomFieldOptionArrayInput is an input type that accepts GetCustomFieldOptionsCustomFieldOptionArray and GetCustomFieldOptionsCustomFieldOptionArrayOutput values.
// You can construct a concrete instance of `GetCustomFieldOptionsCustomFieldOptionArrayInput` via:
//
//	GetCustomFieldOptionsCustomFieldOptionArray{ GetCustomFieldOptionsCustomFieldOptionArgs{...} }
type GetCustomFieldOptionsCustomFieldOptionArrayInput interface {
	pulumi.Input

	ToGetCustomFieldOptionsCustomFieldOptionArrayOutput() GetCustomFieldOptionsCustomFieldOptionArrayOutput
	ToGetCustomFieldOptionsCustomFieldOptionArrayOutputWithContext(context.Context) GetCustomFieldOptionsCustomFieldOptionArrayOutput
}

type GetCustomFieldOptionsCustomFieldOptionArray []GetCustomFieldOptionsCustomFieldOptionInput

func (GetCustomFieldOptionsCustomFieldOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomFieldOptionsCustomFieldOption)(nil)).Elem()
}

func (i GetCustomFieldOptionsCustomFieldOptionArray) ToGetCustomFieldOptionsCustomFieldOptionArrayOutput() GetCustomFieldOptionsCustomFieldOptionArrayOutput {
	return i.ToGetCustomFieldOptionsCustomFieldOptionArrayOutputWithContext(context.Background())
}

func (i GetCustomFieldOptionsCustomFieldOptionArray) ToGetCustomFieldOptionsCustomFieldOptionArrayOutputWithContext(ctx context.Context) GetCustomFieldOptionsCustomFieldOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomFieldOptionsCustomFieldOptionArrayOutput)
}

type GetCustomFieldOptionsCustomFieldOptionOutput struct{ *pulumi.OutputState }

func (GetCustomFieldOptionsCustomFieldOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomFieldOptionsCustomFieldOption)(nil)).Elem()
}

func (o GetCustomFieldOptionsCustomFieldOptionOutput) ToGetCustomFieldOptionsCustomFieldOptionOutput() GetCustomFieldOptionsCustomFieldOptionOutput {
	return o
}

func (o GetCustomFieldOptionsCustomFieldOptionOutput) ToGetCustomFieldOptionsCustomFieldOptionOutputWithContext(ctx context.Context) GetCustomFieldOptionsCustomFieldOptionOutput {
	return o
}

func (o GetCustomFieldOptionsCustomFieldOptionOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomFieldOptionsCustomFieldOption) string { return v.Color }).(pulumi.StringOutput)
}

func (o GetCustomFieldOptionsCustomFieldOptionOutput) CustomFieldId() pulumi.IntOutput {
	return o.ApplyT(func(v GetCustomFieldOptionsCustomFieldOption) int { return v.CustomFieldId }).(pulumi.IntOutput)
}

func (o GetCustomFieldOptionsCustomFieldOptionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomFieldOptionsCustomFieldOption) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCustomFieldOptionsCustomFieldOptionOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v GetCustomFieldOptionsCustomFieldOption) int { return v.Position }).(pulumi.IntOutput)
}

func (o GetCustomFieldOptionsCustomFieldOptionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomFieldOptionsCustomFieldOption) string { return v.Value }).(pulumi.StringOutput)
}

type GetCustomFieldOptionsCustomFieldOptionArrayOutput struct{ *pulumi.OutputState }

func (GetCustomFieldOptionsCustomFieldOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomFieldOptionsCustomFieldOption)(nil)).Elem()
}

func (o GetCustomFieldOptionsCustomFieldOptionArrayOutput) ToGetCustomFieldOptionsCustomFieldOptionArrayOutput() GetCustomFieldOptionsCustomFieldOptionArrayOutput {
	return o
}

func (o GetCustomFieldOptionsCustomFieldOptionArrayOutput) ToGetCustomFieldOptionsCustomFieldOptionArrayOutputWithContext(ctx context.Context) GetCustomFieldOptionsCustomFieldOptionArrayOutput {
	return o
}

func (o GetCustomFieldOptionsCustomFieldOptionArrayOutput) Index(i pulumi.IntInput) GetCustomFieldOptionsCustomFieldOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomFieldOptionsCustomFieldOption {
		return vs[0].([]GetCustomFieldOptionsCustomFieldOption)[vs[1].(int)]
	}).(GetCustomFieldOptionsCustomFieldOptionOutput)
}

type GetCustomFieldsCustomField struct {
	Description string   `pulumi:"description"`
	Enabled     bool     `pulumi:"enabled"`
	Id          string   `pulumi:"id"`
	Kind        string   `pulumi:"kind"`
	Label       string   `pulumi:"label"`
	Requireds   []string `pulumi:"requireds"`
	Showns      []string `pulumi:"showns"`
	Slug        string   `pulumi:"slug"`
}

// GetCustomFieldsCustomFieldInput is an input type that accepts GetCustomFieldsCustomFieldArgs and GetCustomFieldsCustomFieldOutput values.
// You can construct a concrete instance of `GetCustomFieldsCustomFieldInput` via:
//
//	GetCustomFieldsCustomFieldArgs{...}
type GetCustomFieldsCustomFieldInput interface {
	pulumi.Input

	ToGetCustomFieldsCustomFieldOutput() GetCustomFieldsCustomFieldOutput
	ToGetCustomFieldsCustomFieldOutputWithContext(context.Context) GetCustomFieldsCustomFieldOutput
}

type GetCustomFieldsCustomFieldArgs struct {
	Description pulumi.StringInput      `pulumi:"description"`
	Enabled     pulumi.BoolInput        `pulumi:"enabled"`
	Id          pulumi.StringInput      `pulumi:"id"`
	Kind        pulumi.StringInput      `pulumi:"kind"`
	Label       pulumi.StringInput      `pulumi:"label"`
	Requireds   pulumi.StringArrayInput `pulumi:"requireds"`
	Showns      pulumi.StringArrayInput `pulumi:"showns"`
	Slug        pulumi.StringInput      `pulumi:"slug"`
}

func (GetCustomFieldsCustomFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomFieldsCustomField)(nil)).Elem()
}

func (i GetCustomFieldsCustomFieldArgs) ToGetCustomFieldsCustomFieldOutput() GetCustomFieldsCustomFieldOutput {
	return i.ToGetCustomFieldsCustomFieldOutputWithContext(context.Background())
}

func (i GetCustomFieldsCustomFieldArgs) ToGetCustomFieldsCustomFieldOutputWithContext(ctx context.Context) GetCustomFieldsCustomFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomFieldsCustomFieldOutput)
}

// GetCustomFieldsCustomFieldArrayInput is an input type that accepts GetCustomFieldsCustomFieldArray and GetCustomFieldsCustomFieldArrayOutput values.
// You can construct a concrete instance of `GetCustomFieldsCustomFieldArrayInput` via:
//
//	GetCustomFieldsCustomFieldArray{ GetCustomFieldsCustomFieldArgs{...} }
type GetCustomFieldsCustomFieldArrayInput interface {
	pulumi.Input

	ToGetCustomFieldsCustomFieldArrayOutput() GetCustomFieldsCustomFieldArrayOutput
	ToGetCustomFieldsCustomFieldArrayOutputWithContext(context.Context) GetCustomFieldsCustomFieldArrayOutput
}

type GetCustomFieldsCustomFieldArray []GetCustomFieldsCustomFieldInput

func (GetCustomFieldsCustomFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomFieldsCustomField)(nil)).Elem()
}

func (i GetCustomFieldsCustomFieldArray) ToGetCustomFieldsCustomFieldArrayOutput() GetCustomFieldsCustomFieldArrayOutput {
	return i.ToGetCustomFieldsCustomFieldArrayOutputWithContext(context.Background())
}

func (i GetCustomFieldsCustomFieldArray) ToGetCustomFieldsCustomFieldArrayOutputWithContext(ctx context.Context) GetCustomFieldsCustomFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomFieldsCustomFieldArrayOutput)
}

type GetCustomFieldsCustomFieldOutput struct{ *pulumi.OutputState }

func (GetCustomFieldsCustomFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomFieldsCustomField)(nil)).Elem()
}

func (o GetCustomFieldsCustomFieldOutput) ToGetCustomFieldsCustomFieldOutput() GetCustomFieldsCustomFieldOutput {
	return o
}

func (o GetCustomFieldsCustomFieldOutput) ToGetCustomFieldsCustomFieldOutputWithContext(ctx context.Context) GetCustomFieldsCustomFieldOutput {
	return o
}

func (o GetCustomFieldsCustomFieldOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomFieldsCustomField) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetCustomFieldsCustomFieldOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCustomFieldsCustomField) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetCustomFieldsCustomFieldOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomFieldsCustomField) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCustomFieldsCustomFieldOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomFieldsCustomField) string { return v.Kind }).(pulumi.StringOutput)
}

func (o GetCustomFieldsCustomFieldOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomFieldsCustomField) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetCustomFieldsCustomFieldOutput) Requireds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCustomFieldsCustomField) []string { return v.Requireds }).(pulumi.StringArrayOutput)
}

func (o GetCustomFieldsCustomFieldOutput) Showns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCustomFieldsCustomField) []string { return v.Showns }).(pulumi.StringArrayOutput)
}

func (o GetCustomFieldsCustomFieldOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomFieldsCustomField) string { return v.Slug }).(pulumi.StringOutput)
}

type GetCustomFieldsCustomFieldArrayOutput struct{ *pulumi.OutputState }

func (GetCustomFieldsCustomFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomFieldsCustomField)(nil)).Elem()
}

func (o GetCustomFieldsCustomFieldArrayOutput) ToGetCustomFieldsCustomFieldArrayOutput() GetCustomFieldsCustomFieldArrayOutput {
	return o
}

func (o GetCustomFieldsCustomFieldArrayOutput) ToGetCustomFieldsCustomFieldArrayOutputWithContext(ctx context.Context) GetCustomFieldsCustomFieldArrayOutput {
	return o
}

func (o GetCustomFieldsCustomFieldArrayOutput) Index(i pulumi.IntInput) GetCustomFieldsCustomFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomFieldsCustomField {
		return vs[0].([]GetCustomFieldsCustomField)[vs[1].(int)]
	}).(GetCustomFieldsCustomFieldOutput)
}

type GetEnvironmentsEnvironment struct {
	Color       string `pulumi:"color"`
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	Slug        string `pulumi:"slug"`
}

// GetEnvironmentsEnvironmentInput is an input type that accepts GetEnvironmentsEnvironmentArgs and GetEnvironmentsEnvironmentOutput values.
// You can construct a concrete instance of `GetEnvironmentsEnvironmentInput` via:
//
//	GetEnvironmentsEnvironmentArgs{...}
type GetEnvironmentsEnvironmentInput interface {
	pulumi.Input

	ToGetEnvironmentsEnvironmentOutput() GetEnvironmentsEnvironmentOutput
	ToGetEnvironmentsEnvironmentOutputWithContext(context.Context) GetEnvironmentsEnvironmentOutput
}

type GetEnvironmentsEnvironmentArgs struct {
	Color       pulumi.StringInput `pulumi:"color"`
	Description pulumi.StringInput `pulumi:"description"`
	Id          pulumi.StringInput `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
	Slug        pulumi.StringInput `pulumi:"slug"`
}

func (GetEnvironmentsEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentsEnvironment)(nil)).Elem()
}

func (i GetEnvironmentsEnvironmentArgs) ToGetEnvironmentsEnvironmentOutput() GetEnvironmentsEnvironmentOutput {
	return i.ToGetEnvironmentsEnvironmentOutputWithContext(context.Background())
}

func (i GetEnvironmentsEnvironmentArgs) ToGetEnvironmentsEnvironmentOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentsEnvironmentOutput)
}

// GetEnvironmentsEnvironmentArrayInput is an input type that accepts GetEnvironmentsEnvironmentArray and GetEnvironmentsEnvironmentArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentsEnvironmentArrayInput` via:
//
//	GetEnvironmentsEnvironmentArray{ GetEnvironmentsEnvironmentArgs{...} }
type GetEnvironmentsEnvironmentArrayInput interface {
	pulumi.Input

	ToGetEnvironmentsEnvironmentArrayOutput() GetEnvironmentsEnvironmentArrayOutput
	ToGetEnvironmentsEnvironmentArrayOutputWithContext(context.Context) GetEnvironmentsEnvironmentArrayOutput
}

type GetEnvironmentsEnvironmentArray []GetEnvironmentsEnvironmentInput

func (GetEnvironmentsEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentsEnvironment)(nil)).Elem()
}

func (i GetEnvironmentsEnvironmentArray) ToGetEnvironmentsEnvironmentArrayOutput() GetEnvironmentsEnvironmentArrayOutput {
	return i.ToGetEnvironmentsEnvironmentArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentsEnvironmentArray) ToGetEnvironmentsEnvironmentArrayOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentsEnvironmentArrayOutput)
}

type GetEnvironmentsEnvironmentOutput struct{ *pulumi.OutputState }

func (GetEnvironmentsEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentsEnvironment)(nil)).Elem()
}

func (o GetEnvironmentsEnvironmentOutput) ToGetEnvironmentsEnvironmentOutput() GetEnvironmentsEnvironmentOutput {
	return o
}

func (o GetEnvironmentsEnvironmentOutput) ToGetEnvironmentsEnvironmentOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentOutput {
	return o
}

func (o GetEnvironmentsEnvironmentOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) string { return v.Color }).(pulumi.StringOutput)
}

func (o GetEnvironmentsEnvironmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetEnvironmentsEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEnvironmentsEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetEnvironmentsEnvironmentOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) string { return v.Slug }).(pulumi.StringOutput)
}

type GetEnvironmentsEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentsEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentsEnvironment)(nil)).Elem()
}

func (o GetEnvironmentsEnvironmentArrayOutput) ToGetEnvironmentsEnvironmentArrayOutput() GetEnvironmentsEnvironmentArrayOutput {
	return o
}

func (o GetEnvironmentsEnvironmentArrayOutput) ToGetEnvironmentsEnvironmentArrayOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentArrayOutput {
	return o
}

func (o GetEnvironmentsEnvironmentArrayOutput) Index(i pulumi.IntInput) GetEnvironmentsEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentsEnvironment {
		return vs[0].([]GetEnvironmentsEnvironment)[vs[1].(int)]
	}).(GetEnvironmentsEnvironmentOutput)
}

type GetFunctionalitiesFunctionality struct {
	Color       string `pulumi:"color"`
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	Slug        string `pulumi:"slug"`
}

// GetFunctionalitiesFunctionalityInput is an input type that accepts GetFunctionalitiesFunctionalityArgs and GetFunctionalitiesFunctionalityOutput values.
// You can construct a concrete instance of `GetFunctionalitiesFunctionalityInput` via:
//
//	GetFunctionalitiesFunctionalityArgs{...}
type GetFunctionalitiesFunctionalityInput interface {
	pulumi.Input

	ToGetFunctionalitiesFunctionalityOutput() GetFunctionalitiesFunctionalityOutput
	ToGetFunctionalitiesFunctionalityOutputWithContext(context.Context) GetFunctionalitiesFunctionalityOutput
}

type GetFunctionalitiesFunctionalityArgs struct {
	Color       pulumi.StringInput `pulumi:"color"`
	Description pulumi.StringInput `pulumi:"description"`
	Id          pulumi.StringInput `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
	Slug        pulumi.StringInput `pulumi:"slug"`
}

func (GetFunctionalitiesFunctionalityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionalitiesFunctionality)(nil)).Elem()
}

func (i GetFunctionalitiesFunctionalityArgs) ToGetFunctionalitiesFunctionalityOutput() GetFunctionalitiesFunctionalityOutput {
	return i.ToGetFunctionalitiesFunctionalityOutputWithContext(context.Background())
}

func (i GetFunctionalitiesFunctionalityArgs) ToGetFunctionalitiesFunctionalityOutputWithContext(ctx context.Context) GetFunctionalitiesFunctionalityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionalitiesFunctionalityOutput)
}

// GetFunctionalitiesFunctionalityArrayInput is an input type that accepts GetFunctionalitiesFunctionalityArray and GetFunctionalitiesFunctionalityArrayOutput values.
// You can construct a concrete instance of `GetFunctionalitiesFunctionalityArrayInput` via:
//
//	GetFunctionalitiesFunctionalityArray{ GetFunctionalitiesFunctionalityArgs{...} }
type GetFunctionalitiesFunctionalityArrayInput interface {
	pulumi.Input

	ToGetFunctionalitiesFunctionalityArrayOutput() GetFunctionalitiesFunctionalityArrayOutput
	ToGetFunctionalitiesFunctionalityArrayOutputWithContext(context.Context) GetFunctionalitiesFunctionalityArrayOutput
}

type GetFunctionalitiesFunctionalityArray []GetFunctionalitiesFunctionalityInput

func (GetFunctionalitiesFunctionalityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionalitiesFunctionality)(nil)).Elem()
}

func (i GetFunctionalitiesFunctionalityArray) ToGetFunctionalitiesFunctionalityArrayOutput() GetFunctionalitiesFunctionalityArrayOutput {
	return i.ToGetFunctionalitiesFunctionalityArrayOutputWithContext(context.Background())
}

func (i GetFunctionalitiesFunctionalityArray) ToGetFunctionalitiesFunctionalityArrayOutputWithContext(ctx context.Context) GetFunctionalitiesFunctionalityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionalitiesFunctionalityArrayOutput)
}

type GetFunctionalitiesFunctionalityOutput struct{ *pulumi.OutputState }

func (GetFunctionalitiesFunctionalityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionalitiesFunctionality)(nil)).Elem()
}

func (o GetFunctionalitiesFunctionalityOutput) ToGetFunctionalitiesFunctionalityOutput() GetFunctionalitiesFunctionalityOutput {
	return o
}

func (o GetFunctionalitiesFunctionalityOutput) ToGetFunctionalitiesFunctionalityOutputWithContext(ctx context.Context) GetFunctionalitiesFunctionalityOutput {
	return o
}

func (o GetFunctionalitiesFunctionalityOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionalitiesFunctionality) string { return v.Color }).(pulumi.StringOutput)
}

func (o GetFunctionalitiesFunctionalityOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionalitiesFunctionality) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetFunctionalitiesFunctionalityOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionalitiesFunctionality) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFunctionalitiesFunctionalityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionalitiesFunctionality) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFunctionalitiesFunctionalityOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionalitiesFunctionality) string { return v.Slug }).(pulumi.StringOutput)
}

type GetFunctionalitiesFunctionalityArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionalitiesFunctionalityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionalitiesFunctionality)(nil)).Elem()
}

func (o GetFunctionalitiesFunctionalityArrayOutput) ToGetFunctionalitiesFunctionalityArrayOutput() GetFunctionalitiesFunctionalityArrayOutput {
	return o
}

func (o GetFunctionalitiesFunctionalityArrayOutput) ToGetFunctionalitiesFunctionalityArrayOutputWithContext(ctx context.Context) GetFunctionalitiesFunctionalityArrayOutput {
	return o
}

func (o GetFunctionalitiesFunctionalityArrayOutput) Index(i pulumi.IntInput) GetFunctionalitiesFunctionalityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionalitiesFunctionality {
		return vs[0].([]GetFunctionalitiesFunctionality)[vs[1].(int)]
	}).(GetFunctionalitiesFunctionalityOutput)
}

type GetIncidentRolesIncidentRole struct {
	Description string `pulumi:"description"`
	Enabled     bool   `pulumi:"enabled"`
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	Slug        string `pulumi:"slug"`
	Summary     string `pulumi:"summary"`
}

// GetIncidentRolesIncidentRoleInput is an input type that accepts GetIncidentRolesIncidentRoleArgs and GetIncidentRolesIncidentRoleOutput values.
// You can construct a concrete instance of `GetIncidentRolesIncidentRoleInput` via:
//
//	GetIncidentRolesIncidentRoleArgs{...}
type GetIncidentRolesIncidentRoleInput interface {
	pulumi.Input

	ToGetIncidentRolesIncidentRoleOutput() GetIncidentRolesIncidentRoleOutput
	ToGetIncidentRolesIncidentRoleOutputWithContext(context.Context) GetIncidentRolesIncidentRoleOutput
}

type GetIncidentRolesIncidentRoleArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	Enabled     pulumi.BoolInput   `pulumi:"enabled"`
	Id          pulumi.StringInput `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
	Slug        pulumi.StringInput `pulumi:"slug"`
	Summary     pulumi.StringInput `pulumi:"summary"`
}

func (GetIncidentRolesIncidentRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIncidentRolesIncidentRole)(nil)).Elem()
}

func (i GetIncidentRolesIncidentRoleArgs) ToGetIncidentRolesIncidentRoleOutput() GetIncidentRolesIncidentRoleOutput {
	return i.ToGetIncidentRolesIncidentRoleOutputWithContext(context.Background())
}

func (i GetIncidentRolesIncidentRoleArgs) ToGetIncidentRolesIncidentRoleOutputWithContext(ctx context.Context) GetIncidentRolesIncidentRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIncidentRolesIncidentRoleOutput)
}

// GetIncidentRolesIncidentRoleArrayInput is an input type that accepts GetIncidentRolesIncidentRoleArray and GetIncidentRolesIncidentRoleArrayOutput values.
// You can construct a concrete instance of `GetIncidentRolesIncidentRoleArrayInput` via:
//
//	GetIncidentRolesIncidentRoleArray{ GetIncidentRolesIncidentRoleArgs{...} }
type GetIncidentRolesIncidentRoleArrayInput interface {
	pulumi.Input

	ToGetIncidentRolesIncidentRoleArrayOutput() GetIncidentRolesIncidentRoleArrayOutput
	ToGetIncidentRolesIncidentRoleArrayOutputWithContext(context.Context) GetIncidentRolesIncidentRoleArrayOutput
}

type GetIncidentRolesIncidentRoleArray []GetIncidentRolesIncidentRoleInput

func (GetIncidentRolesIncidentRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIncidentRolesIncidentRole)(nil)).Elem()
}

func (i GetIncidentRolesIncidentRoleArray) ToGetIncidentRolesIncidentRoleArrayOutput() GetIncidentRolesIncidentRoleArrayOutput {
	return i.ToGetIncidentRolesIncidentRoleArrayOutputWithContext(context.Background())
}

func (i GetIncidentRolesIncidentRoleArray) ToGetIncidentRolesIncidentRoleArrayOutputWithContext(ctx context.Context) GetIncidentRolesIncidentRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIncidentRolesIncidentRoleArrayOutput)
}

type GetIncidentRolesIncidentRoleOutput struct{ *pulumi.OutputState }

func (GetIncidentRolesIncidentRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIncidentRolesIncidentRole)(nil)).Elem()
}

func (o GetIncidentRolesIncidentRoleOutput) ToGetIncidentRolesIncidentRoleOutput() GetIncidentRolesIncidentRoleOutput {
	return o
}

func (o GetIncidentRolesIncidentRoleOutput) ToGetIncidentRolesIncidentRoleOutputWithContext(ctx context.Context) GetIncidentRolesIncidentRoleOutput {
	return o
}

func (o GetIncidentRolesIncidentRoleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentRolesIncidentRole) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetIncidentRolesIncidentRoleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIncidentRolesIncidentRole) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetIncidentRolesIncidentRoleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentRolesIncidentRole) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIncidentRolesIncidentRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentRolesIncidentRole) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetIncidentRolesIncidentRoleOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentRolesIncidentRole) string { return v.Slug }).(pulumi.StringOutput)
}

func (o GetIncidentRolesIncidentRoleOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentRolesIncidentRole) string { return v.Summary }).(pulumi.StringOutput)
}

type GetIncidentRolesIncidentRoleArrayOutput struct{ *pulumi.OutputState }

func (GetIncidentRolesIncidentRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIncidentRolesIncidentRole)(nil)).Elem()
}

func (o GetIncidentRolesIncidentRoleArrayOutput) ToGetIncidentRolesIncidentRoleArrayOutput() GetIncidentRolesIncidentRoleArrayOutput {
	return o
}

func (o GetIncidentRolesIncidentRoleArrayOutput) ToGetIncidentRolesIncidentRoleArrayOutputWithContext(ctx context.Context) GetIncidentRolesIncidentRoleArrayOutput {
	return o
}

func (o GetIncidentRolesIncidentRoleArrayOutput) Index(i pulumi.IntInput) GetIncidentRolesIncidentRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIncidentRolesIncidentRole {
		return vs[0].([]GetIncidentRolesIncidentRole)[vs[1].(int)]
	}).(GetIncidentRolesIncidentRoleOutput)
}

type GetIncidentTypesIncidentType struct {
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	Slug        string `pulumi:"slug"`
}

// GetIncidentTypesIncidentTypeInput is an input type that accepts GetIncidentTypesIncidentTypeArgs and GetIncidentTypesIncidentTypeOutput values.
// You can construct a concrete instance of `GetIncidentTypesIncidentTypeInput` via:
//
//	GetIncidentTypesIncidentTypeArgs{...}
type GetIncidentTypesIncidentTypeInput interface {
	pulumi.Input

	ToGetIncidentTypesIncidentTypeOutput() GetIncidentTypesIncidentTypeOutput
	ToGetIncidentTypesIncidentTypeOutputWithContext(context.Context) GetIncidentTypesIncidentTypeOutput
}

type GetIncidentTypesIncidentTypeArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	Id          pulumi.StringInput `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
	Slug        pulumi.StringInput `pulumi:"slug"`
}

func (GetIncidentTypesIncidentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIncidentTypesIncidentType)(nil)).Elem()
}

func (i GetIncidentTypesIncidentTypeArgs) ToGetIncidentTypesIncidentTypeOutput() GetIncidentTypesIncidentTypeOutput {
	return i.ToGetIncidentTypesIncidentTypeOutputWithContext(context.Background())
}

func (i GetIncidentTypesIncidentTypeArgs) ToGetIncidentTypesIncidentTypeOutputWithContext(ctx context.Context) GetIncidentTypesIncidentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIncidentTypesIncidentTypeOutput)
}

// GetIncidentTypesIncidentTypeArrayInput is an input type that accepts GetIncidentTypesIncidentTypeArray and GetIncidentTypesIncidentTypeArrayOutput values.
// You can construct a concrete instance of `GetIncidentTypesIncidentTypeArrayInput` via:
//
//	GetIncidentTypesIncidentTypeArray{ GetIncidentTypesIncidentTypeArgs{...} }
type GetIncidentTypesIncidentTypeArrayInput interface {
	pulumi.Input

	ToGetIncidentTypesIncidentTypeArrayOutput() GetIncidentTypesIncidentTypeArrayOutput
	ToGetIncidentTypesIncidentTypeArrayOutputWithContext(context.Context) GetIncidentTypesIncidentTypeArrayOutput
}

type GetIncidentTypesIncidentTypeArray []GetIncidentTypesIncidentTypeInput

func (GetIncidentTypesIncidentTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIncidentTypesIncidentType)(nil)).Elem()
}

func (i GetIncidentTypesIncidentTypeArray) ToGetIncidentTypesIncidentTypeArrayOutput() GetIncidentTypesIncidentTypeArrayOutput {
	return i.ToGetIncidentTypesIncidentTypeArrayOutputWithContext(context.Background())
}

func (i GetIncidentTypesIncidentTypeArray) ToGetIncidentTypesIncidentTypeArrayOutputWithContext(ctx context.Context) GetIncidentTypesIncidentTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIncidentTypesIncidentTypeArrayOutput)
}

type GetIncidentTypesIncidentTypeOutput struct{ *pulumi.OutputState }

func (GetIncidentTypesIncidentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIncidentTypesIncidentType)(nil)).Elem()
}

func (o GetIncidentTypesIncidentTypeOutput) ToGetIncidentTypesIncidentTypeOutput() GetIncidentTypesIncidentTypeOutput {
	return o
}

func (o GetIncidentTypesIncidentTypeOutput) ToGetIncidentTypesIncidentTypeOutputWithContext(ctx context.Context) GetIncidentTypesIncidentTypeOutput {
	return o
}

func (o GetIncidentTypesIncidentTypeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentTypesIncidentType) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetIncidentTypesIncidentTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentTypesIncidentType) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIncidentTypesIncidentTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentTypesIncidentType) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetIncidentTypesIncidentTypeOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentTypesIncidentType) string { return v.Slug }).(pulumi.StringOutput)
}

type GetIncidentTypesIncidentTypeArrayOutput struct{ *pulumi.OutputState }

func (GetIncidentTypesIncidentTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIncidentTypesIncidentType)(nil)).Elem()
}

func (o GetIncidentTypesIncidentTypeArrayOutput) ToGetIncidentTypesIncidentTypeArrayOutput() GetIncidentTypesIncidentTypeArrayOutput {
	return o
}

func (o GetIncidentTypesIncidentTypeArrayOutput) ToGetIncidentTypesIncidentTypeArrayOutputWithContext(ctx context.Context) GetIncidentTypesIncidentTypeArrayOutput {
	return o
}

func (o GetIncidentTypesIncidentTypeArrayOutput) Index(i pulumi.IntInput) GetIncidentTypesIncidentTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIncidentTypesIncidentType {
		return vs[0].([]GetIncidentTypesIncidentType)[vs[1].(int)]
	}).(GetIncidentTypesIncidentTypeOutput)
}

type GetServicesService struct {
	Color             string `pulumi:"color"`
	Description       string `pulumi:"description"`
	Id                string `pulumi:"id"`
	Name              string `pulumi:"name"`
	PublicDescription string `pulumi:"publicDescription"`
	Slug              string `pulumi:"slug"`
}

// GetServicesServiceInput is an input type that accepts GetServicesServiceArgs and GetServicesServiceOutput values.
// You can construct a concrete instance of `GetServicesServiceInput` via:
//
//	GetServicesServiceArgs{...}
type GetServicesServiceInput interface {
	pulumi.Input

	ToGetServicesServiceOutput() GetServicesServiceOutput
	ToGetServicesServiceOutputWithContext(context.Context) GetServicesServiceOutput
}

type GetServicesServiceArgs struct {
	Color             pulumi.StringInput `pulumi:"color"`
	Description       pulumi.StringInput `pulumi:"description"`
	Id                pulumi.StringInput `pulumi:"id"`
	Name              pulumi.StringInput `pulumi:"name"`
	PublicDescription pulumi.StringInput `pulumi:"publicDescription"`
	Slug              pulumi.StringInput `pulumi:"slug"`
}

func (GetServicesServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicesService)(nil)).Elem()
}

func (i GetServicesServiceArgs) ToGetServicesServiceOutput() GetServicesServiceOutput {
	return i.ToGetServicesServiceOutputWithContext(context.Background())
}

func (i GetServicesServiceArgs) ToGetServicesServiceOutputWithContext(ctx context.Context) GetServicesServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicesServiceOutput)
}

// GetServicesServiceArrayInput is an input type that accepts GetServicesServiceArray and GetServicesServiceArrayOutput values.
// You can construct a concrete instance of `GetServicesServiceArrayInput` via:
//
//	GetServicesServiceArray{ GetServicesServiceArgs{...} }
type GetServicesServiceArrayInput interface {
	pulumi.Input

	ToGetServicesServiceArrayOutput() GetServicesServiceArrayOutput
	ToGetServicesServiceArrayOutputWithContext(context.Context) GetServicesServiceArrayOutput
}

type GetServicesServiceArray []GetServicesServiceInput

func (GetServicesServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicesService)(nil)).Elem()
}

func (i GetServicesServiceArray) ToGetServicesServiceArrayOutput() GetServicesServiceArrayOutput {
	return i.ToGetServicesServiceArrayOutputWithContext(context.Background())
}

func (i GetServicesServiceArray) ToGetServicesServiceArrayOutputWithContext(ctx context.Context) GetServicesServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicesServiceArrayOutput)
}

type GetServicesServiceOutput struct{ *pulumi.OutputState }

func (GetServicesServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicesService)(nil)).Elem()
}

func (o GetServicesServiceOutput) ToGetServicesServiceOutput() GetServicesServiceOutput {
	return o
}

func (o GetServicesServiceOutput) ToGetServicesServiceOutputWithContext(ctx context.Context) GetServicesServiceOutput {
	return o
}

func (o GetServicesServiceOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicesService) string { return v.Color }).(pulumi.StringOutput)
}

func (o GetServicesServiceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicesService) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetServicesServiceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicesService) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServicesServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicesService) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServicesServiceOutput) PublicDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicesService) string { return v.PublicDescription }).(pulumi.StringOutput)
}

func (o GetServicesServiceOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicesService) string { return v.Slug }).(pulumi.StringOutput)
}

type GetServicesServiceArrayOutput struct{ *pulumi.OutputState }

func (GetServicesServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicesService)(nil)).Elem()
}

func (o GetServicesServiceArrayOutput) ToGetServicesServiceArrayOutput() GetServicesServiceArrayOutput {
	return o
}

func (o GetServicesServiceArrayOutput) ToGetServicesServiceArrayOutputWithContext(ctx context.Context) GetServicesServiceArrayOutput {
	return o
}

func (o GetServicesServiceArrayOutput) Index(i pulumi.IntInput) GetServicesServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServicesService {
		return vs[0].([]GetServicesService)[vs[1].(int)]
	}).(GetServicesServiceOutput)
}

type GetSeveritiesSeverity struct {
	Color       string `pulumi:"color"`
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	Severity    string `pulumi:"severity"`
	Slug        string `pulumi:"slug"`
}

// GetSeveritiesSeverityInput is an input type that accepts GetSeveritiesSeverityArgs and GetSeveritiesSeverityOutput values.
// You can construct a concrete instance of `GetSeveritiesSeverityInput` via:
//
//	GetSeveritiesSeverityArgs{...}
type GetSeveritiesSeverityInput interface {
	pulumi.Input

	ToGetSeveritiesSeverityOutput() GetSeveritiesSeverityOutput
	ToGetSeveritiesSeverityOutputWithContext(context.Context) GetSeveritiesSeverityOutput
}

type GetSeveritiesSeverityArgs struct {
	Color       pulumi.StringInput `pulumi:"color"`
	Description pulumi.StringInput `pulumi:"description"`
	Id          pulumi.StringInput `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
	Severity    pulumi.StringInput `pulumi:"severity"`
	Slug        pulumi.StringInput `pulumi:"slug"`
}

func (GetSeveritiesSeverityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSeveritiesSeverity)(nil)).Elem()
}

func (i GetSeveritiesSeverityArgs) ToGetSeveritiesSeverityOutput() GetSeveritiesSeverityOutput {
	return i.ToGetSeveritiesSeverityOutputWithContext(context.Background())
}

func (i GetSeveritiesSeverityArgs) ToGetSeveritiesSeverityOutputWithContext(ctx context.Context) GetSeveritiesSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSeveritiesSeverityOutput)
}

// GetSeveritiesSeverityArrayInput is an input type that accepts GetSeveritiesSeverityArray and GetSeveritiesSeverityArrayOutput values.
// You can construct a concrete instance of `GetSeveritiesSeverityArrayInput` via:
//
//	GetSeveritiesSeverityArray{ GetSeveritiesSeverityArgs{...} }
type GetSeveritiesSeverityArrayInput interface {
	pulumi.Input

	ToGetSeveritiesSeverityArrayOutput() GetSeveritiesSeverityArrayOutput
	ToGetSeveritiesSeverityArrayOutputWithContext(context.Context) GetSeveritiesSeverityArrayOutput
}

type GetSeveritiesSeverityArray []GetSeveritiesSeverityInput

func (GetSeveritiesSeverityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSeveritiesSeverity)(nil)).Elem()
}

func (i GetSeveritiesSeverityArray) ToGetSeveritiesSeverityArrayOutput() GetSeveritiesSeverityArrayOutput {
	return i.ToGetSeveritiesSeverityArrayOutputWithContext(context.Background())
}

func (i GetSeveritiesSeverityArray) ToGetSeveritiesSeverityArrayOutputWithContext(ctx context.Context) GetSeveritiesSeverityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSeveritiesSeverityArrayOutput)
}

type GetSeveritiesSeverityOutput struct{ *pulumi.OutputState }

func (GetSeveritiesSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSeveritiesSeverity)(nil)).Elem()
}

func (o GetSeveritiesSeverityOutput) ToGetSeveritiesSeverityOutput() GetSeveritiesSeverityOutput {
	return o
}

func (o GetSeveritiesSeverityOutput) ToGetSeveritiesSeverityOutputWithContext(ctx context.Context) GetSeveritiesSeverityOutput {
	return o
}

func (o GetSeveritiesSeverityOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v GetSeveritiesSeverity) string { return v.Color }).(pulumi.StringOutput)
}

func (o GetSeveritiesSeverityOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSeveritiesSeverity) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetSeveritiesSeverityOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSeveritiesSeverity) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSeveritiesSeverityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSeveritiesSeverity) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSeveritiesSeverityOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v GetSeveritiesSeverity) string { return v.Severity }).(pulumi.StringOutput)
}

func (o GetSeveritiesSeverityOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetSeveritiesSeverity) string { return v.Slug }).(pulumi.StringOutput)
}

type GetSeveritiesSeverityArrayOutput struct{ *pulumi.OutputState }

func (GetSeveritiesSeverityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSeveritiesSeverity)(nil)).Elem()
}

func (o GetSeveritiesSeverityArrayOutput) ToGetSeveritiesSeverityArrayOutput() GetSeveritiesSeverityArrayOutput {
	return o
}

func (o GetSeveritiesSeverityArrayOutput) ToGetSeveritiesSeverityArrayOutputWithContext(ctx context.Context) GetSeveritiesSeverityArrayOutput {
	return o
}

func (o GetSeveritiesSeverityArrayOutput) Index(i pulumi.IntInput) GetSeveritiesSeverityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSeveritiesSeverity {
		return vs[0].([]GetSeveritiesSeverity)[vs[1].(int)]
	}).(GetSeveritiesSeverityOutput)
}

type GetTeamsTeam struct {
	Color       string `pulumi:"color"`
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	Slug        string `pulumi:"slug"`
}

// GetTeamsTeamInput is an input type that accepts GetTeamsTeamArgs and GetTeamsTeamOutput values.
// You can construct a concrete instance of `GetTeamsTeamInput` via:
//
//	GetTeamsTeamArgs{...}
type GetTeamsTeamInput interface {
	pulumi.Input

	ToGetTeamsTeamOutput() GetTeamsTeamOutput
	ToGetTeamsTeamOutputWithContext(context.Context) GetTeamsTeamOutput
}

type GetTeamsTeamArgs struct {
	Color       pulumi.StringInput `pulumi:"color"`
	Description pulumi.StringInput `pulumi:"description"`
	Id          pulumi.StringInput `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
	Slug        pulumi.StringInput `pulumi:"slug"`
}

func (GetTeamsTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamsTeam)(nil)).Elem()
}

func (i GetTeamsTeamArgs) ToGetTeamsTeamOutput() GetTeamsTeamOutput {
	return i.ToGetTeamsTeamOutputWithContext(context.Background())
}

func (i GetTeamsTeamArgs) ToGetTeamsTeamOutputWithContext(ctx context.Context) GetTeamsTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTeamsTeamOutput)
}

// GetTeamsTeamArrayInput is an input type that accepts GetTeamsTeamArray and GetTeamsTeamArrayOutput values.
// You can construct a concrete instance of `GetTeamsTeamArrayInput` via:
//
//	GetTeamsTeamArray{ GetTeamsTeamArgs{...} }
type GetTeamsTeamArrayInput interface {
	pulumi.Input

	ToGetTeamsTeamArrayOutput() GetTeamsTeamArrayOutput
	ToGetTeamsTeamArrayOutputWithContext(context.Context) GetTeamsTeamArrayOutput
}

type GetTeamsTeamArray []GetTeamsTeamInput

func (GetTeamsTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTeamsTeam)(nil)).Elem()
}

func (i GetTeamsTeamArray) ToGetTeamsTeamArrayOutput() GetTeamsTeamArrayOutput {
	return i.ToGetTeamsTeamArrayOutputWithContext(context.Background())
}

func (i GetTeamsTeamArray) ToGetTeamsTeamArrayOutputWithContext(ctx context.Context) GetTeamsTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTeamsTeamArrayOutput)
}

type GetTeamsTeamOutput struct{ *pulumi.OutputState }

func (GetTeamsTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamsTeam)(nil)).Elem()
}

func (o GetTeamsTeamOutput) ToGetTeamsTeamOutput() GetTeamsTeamOutput {
	return o
}

func (o GetTeamsTeamOutput) ToGetTeamsTeamOutputWithContext(ctx context.Context) GetTeamsTeamOutput {
	return o
}

func (o GetTeamsTeamOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamsTeam) string { return v.Color }).(pulumi.StringOutput)
}

func (o GetTeamsTeamOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamsTeam) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetTeamsTeamOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamsTeam) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTeamsTeamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamsTeam) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTeamsTeamOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamsTeam) string { return v.Slug }).(pulumi.StringOutput)
}

type GetTeamsTeamArrayOutput struct{ *pulumi.OutputState }

func (GetTeamsTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTeamsTeam)(nil)).Elem()
}

func (o GetTeamsTeamArrayOutput) ToGetTeamsTeamArrayOutput() GetTeamsTeamArrayOutput {
	return o
}

func (o GetTeamsTeamArrayOutput) ToGetTeamsTeamArrayOutputWithContext(ctx context.Context) GetTeamsTeamArrayOutput {
	return o
}

func (o GetTeamsTeamArrayOutput) Index(i pulumi.IntInput) GetTeamsTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTeamsTeam {
		return vs[0].([]GetTeamsTeam)[vs[1].(int)]
	}).(GetTeamsTeamOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelParamsInput)(nil)).Elem(), DashboardPanelParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelParamsPtrInput)(nil)).Elem(), DashboardPanelParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelParamsDatasetInput)(nil)).Elem(), DashboardPanelParamsDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelParamsDatasetArrayInput)(nil)).Elem(), DashboardPanelParamsDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelParamsDatasetAggregateInput)(nil)).Elem(), DashboardPanelParamsDatasetAggregateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelParamsDatasetAggregatePtrInput)(nil)).Elem(), DashboardPanelParamsDatasetAggregateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelParamsDatasetFilterInput)(nil)).Elem(), DashboardPanelParamsDatasetFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelParamsDatasetFilterArrayInput)(nil)).Elem(), DashboardPanelParamsDatasetFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelParamsDatasetFilterRuleInput)(nil)).Elem(), DashboardPanelParamsDatasetFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelParamsDatasetFilterRuleArrayInput)(nil)).Elem(), DashboardPanelParamsDatasetFilterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelParamsLegendInput)(nil)).Elem(), DashboardPanelParamsLegendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelParamsLegendPtrInput)(nil)).Elem(), DashboardPanelParamsLegendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelPositionInput)(nil)).Elem(), DashboardPanelPositionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelPositionPtrInput)(nil)).Elem(), DashboardPanelPositionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentSlackAliasInput)(nil)).Elem(), EnvironmentSlackAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentSlackAliasArrayInput)(nil)).Elem(), EnvironmentSlackAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentSlackChannelInput)(nil)).Elem(), EnvironmentSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentSlackChannelArrayInput)(nil)).Elem(), EnvironmentSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EscalationLevelNotificationTargetParamInput)(nil)).Elem(), EscalationLevelNotificationTargetParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EscalationLevelNotificationTargetParamArrayInput)(nil)).Elem(), EscalationLevelNotificationTargetParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionalitySlackAliasInput)(nil)).Elem(), FunctionalitySlackAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionalitySlackAliasArrayInput)(nil)).Elem(), FunctionalitySlackAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionalitySlackChannelInput)(nil)).Elem(), FunctionalitySlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionalitySlackChannelArrayInput)(nil)).Elem(), FunctionalitySlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IncidentTypeSlackAliasInput)(nil)).Elem(), IncidentTypeSlackAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IncidentTypeSlackAliasArrayInput)(nil)).Elem(), IncidentTypeSlackAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IncidentTypeSlackChannelInput)(nil)).Elem(), IncidentTypeSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IncidentTypeSlackChannelArrayInput)(nil)).Elem(), IncidentTypeSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RetrospectiveProcessRetrospectiveProcessMatchingCriteriaInput)(nil)).Elem(), RetrospectiveProcessRetrospectiveProcessMatchingCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrInput)(nil)).Elem(), RetrospectiveProcessRetrospectiveProcessMatchingCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleRotationActiveDayActiveTimeAttributeInput)(nil)).Elem(), ScheduleRotationActiveDayActiveTimeAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleRotationActiveDayActiveTimeAttributeArrayInput)(nil)).Elem(), ScheduleRotationActiveDayActiveTimeAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleRotationActiveTimeAttributeInput)(nil)).Elem(), ScheduleRotationActiveTimeAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleRotationActiveTimeAttributeArrayInput)(nil)).Elem(), ScheduleRotationActiveTimeAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSlackAliasInput)(nil)).Elem(), ServiceSlackAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSlackAliasArrayInput)(nil)).Elem(), ServiceSlackAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSlackChannelInput)(nil)).Elem(), ServiceSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSlackChannelArrayInput)(nil)).Elem(), ServiceSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SeveritySlackAliasInput)(nil)).Elem(), SeveritySlackAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SeveritySlackAliasArrayInput)(nil)).Elem(), SeveritySlackAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SeveritySlackChannelInput)(nil)).Elem(), SeveritySlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SeveritySlackChannelArrayInput)(nil)).Elem(), SeveritySlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamSlackAliasInput)(nil)).Elem(), TeamSlackAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamSlackAliasArrayInput)(nil)).Elem(), TeamSlackAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamSlackChannelInput)(nil)).Elem(), TeamSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamSlackChannelArrayInput)(nil)).Elem(), TeamSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowActionItemTriggerParamsInput)(nil)).Elem(), WorkflowActionItemTriggerParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowActionItemTriggerParamsPtrInput)(nil)).Elem(), WorkflowActionItemTriggerParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAlertTriggerParamsInput)(nil)).Elem(), WorkflowAlertTriggerParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAlertTriggerParamsPtrInput)(nil)).Elem(), WorkflowAlertTriggerParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowIncidentTriggerParamsInput)(nil)).Elem(), WorkflowIncidentTriggerParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowIncidentTriggerParamsPtrInput)(nil)).Elem(), WorkflowIncidentTriggerParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowPostMortemTriggerParamsInput)(nil)).Elem(), WorkflowPostMortemTriggerParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowPostMortemTriggerParamsPtrInput)(nil)).Elem(), WorkflowPostMortemTriggerParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowPulseTriggerParamsInput)(nil)).Elem(), WorkflowPulseTriggerParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowPulseTriggerParamsPtrInput)(nil)).Elem(), WorkflowPulseTriggerParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowSimpleTriggerParamsInput)(nil)).Elem(), WorkflowSimpleTriggerParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowSimpleTriggerParamsPtrInput)(nil)).Elem(), WorkflowSimpleTriggerParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddActionItemTaskParamsInput)(nil)).Elem(), WorkflowTaskAddActionItemTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddActionItemTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskAddActionItemTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddActionItemTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddRoleTaskParamsInput)(nil)).Elem(), WorkflowTaskAddRoleTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddRoleTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskAddRoleTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddSlackBookmarkTaskParamsInput)(nil)).Elem(), WorkflowTaskAddSlackBookmarkTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddSlackBookmarkTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskAddSlackBookmarkTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddTeamTaskParamsInput)(nil)).Elem(), WorkflowTaskAddTeamTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddTeamTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskAddTeamTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddToTimelineTaskParamsInput)(nil)).Elem(), WorkflowTaskAddToTimelineTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddToTimelineTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskAddToTimelineTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskArchiveSlackChannelsTaskParamsInput)(nil)).Elem(), WorkflowTaskArchiveSlackChannelsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskArchiveSlackChannelsTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskArchiveSlackChannelsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskArchiveSlackChannelsTaskParamsChannelInput)(nil)).Elem(), WorkflowTaskArchiveSlackChannelsTaskParamsChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayInput)(nil)).Elem(), WorkflowTaskArchiveSlackChannelsTaskParamsChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAttachDatadogDashboardsTaskParamsInput)(nil)).Elem(), WorkflowTaskAttachDatadogDashboardsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAttachDatadogDashboardsTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskAttachDatadogDashboardsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardInput)(nil)).Elem(), WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayInput)(nil)).Elem(), WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAutoAssignRoleOpsgenieTaskParamsInput)(nil)).Elem(), WorkflowTaskAutoAssignRoleOpsgenieTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskAutoAssignRoleOpsgenieTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAutoAssignRolePagerdutyTaskParamsInput)(nil)).Elem(), WorkflowTaskAutoAssignRolePagerdutyTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskAutoAssignRolePagerdutyTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAutoAssignRoleRootlyTaskParamsInput)(nil)).Elem(), WorkflowTaskAutoAssignRoleRootlyTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskAutoAssignRoleRootlyTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAutoAssignRoleVictorOpsTaskParamsInput)(nil)).Elem(), WorkflowTaskAutoAssignRoleVictorOpsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskAutoAssignRoleVictorOpsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCallPeopleTaskParamsInput)(nil)).Elem(), WorkflowTaskCallPeopleTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCallPeopleTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCallPeopleTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskChangeSlackChannelPrivacyTaskParamsInput)(nil)).Elem(), WorkflowTaskChangeSlackChannelPrivacyTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskChangeSlackChannelPrivacyTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateAirtableTableRecordTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateAirtableTableRecordTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateAirtableTableRecordTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateAirtableTableRecordTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateAsanaSubtaskTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateAsanaSubtaskTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateAsanaSubtaskTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateAsanaSubtaskTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateAsanaTaskTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateAsanaTaskTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateAsanaTaskTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateAsanaTaskTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateAsanaTaskTaskParamsProjectInput)(nil)).Elem(), WorkflowTaskCreateAsanaTaskTaskParamsProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayInput)(nil)).Elem(), WorkflowTaskCreateAsanaTaskTaskParamsProjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateClickupTaskTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateClickupTaskTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateClickupTaskTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateClickupTaskTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateConfluencePageTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateConfluencePageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateConfluencePageTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateConfluencePageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateDatadogNotebookTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateDatadogNotebookTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateDatadogNotebookTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateDatadogNotebookTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateDropboxPaperPageTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateDropboxPaperPageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateDropboxPaperPageTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateDropboxPaperPageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGithubIssueTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateGithubIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGithubIssueTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateGithubIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGitlabIssueTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateGitlabIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGitlabIssueTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateGitlabIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoToMeetingTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateGoToMeetingTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoToMeetingTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateGoToMeetingTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleCalendarEventTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateGoogleCalendarEventTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateGoogleCalendarEventTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleDocsPageTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateGoogleDocsPageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleDocsPageTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateGoogleDocsPageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleDocsPermissionsTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateGoogleDocsPermissionsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateGoogleDocsPermissionsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleMeetingTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateGoogleMeetingTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleMeetingTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateGoogleMeetingTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateIncidentPostmortemTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateIncidentPostmortemTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateIncidentPostmortemTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateIncidentPostmortemTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateIncidentTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateIncidentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateIncidentTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateIncidentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateJiraIssueTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateJiraIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateJiraIssueTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateJiraIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateJiraSubtaskTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateJiraSubtaskTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateJiraSubtaskTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateJiraSubtaskTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateLinearIssueCommentTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateLinearIssueCommentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateLinearIssueCommentTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateLinearIssueCommentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateLinearIssueTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateLinearIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateLinearIssueTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateLinearIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateLinearIssueTaskParamsLabelInput)(nil)).Elem(), WorkflowTaskCreateLinearIssueTaskParamsLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateLinearIssueTaskParamsLabelArrayInput)(nil)).Elem(), WorkflowTaskCreateLinearIssueTaskParamsLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateLinearSubtaskIssueTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateLinearSubtaskIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateLinearSubtaskIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateNotionPageTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateNotionPageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateNotionPageTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateNotionPageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateOpsgenieAlertTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateOpsgenieAlertTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationInput)(nil)).Elem(), WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayInput)(nil)).Elem(), WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleInput)(nil)).Elem(), WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayInput)(nil)).Elem(), WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsTeamInput)(nil)).Elem(), WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayInput)(nil)).Elem(), WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsUserInput)(nil)).Elem(), WorkflowTaskCreateOpsgenieAlertTaskParamsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayInput)(nil)).Elem(), WorkflowTaskCreateOpsgenieAlertTaskParamsUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateOutlookEventTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateOutlookEventTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateOutlookEventTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateOutlookEventTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsInput)(nil)).Elem(), WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreatePagertreeAlertTaskParamsInput)(nil)).Elem(), WorkflowTaskCreatePagertreeAlertTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreatePagertreeAlertTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreatePagertreeAlertTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreatePagertreeAlertTaskParamsTeamInput)(nil)).Elem(), WorkflowTaskCreatePagertreeAlertTaskParamsTeamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayInput)(nil)).Elem(), WorkflowTaskCreatePagertreeAlertTaskParamsTeamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreatePagertreeAlertTaskParamsUserInput)(nil)).Elem(), WorkflowTaskCreatePagertreeAlertTaskParamsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayInput)(nil)).Elem(), WorkflowTaskCreatePagertreeAlertTaskParamsUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateQuipPageTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateQuipPageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateQuipPageTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateQuipPageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateServiceNowIncidentTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateServiceNowIncidentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateServiceNowIncidentTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateServiceNowIncidentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateSharepointPageTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateSharepointPageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateSharepointPageTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateSharepointPageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateShortcutStoryTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateShortcutStoryTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateShortcutStoryTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateShortcutStoryTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateShortcutTaskTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateShortcutTaskTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateShortcutTaskTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateShortcutTaskTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateSlackChannelTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateSlackChannelTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateSlackChannelTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateSlackChannelTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateTrelloCardTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateTrelloCardTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateTrelloCardTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateTrelloCardTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateTrelloCardTaskParamsLabelInput)(nil)).Elem(), WorkflowTaskCreateTrelloCardTaskParamsLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateTrelloCardTaskParamsLabelArrayInput)(nil)).Elem(), WorkflowTaskCreateTrelloCardTaskParamsLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateWebexMeetingTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateWebexMeetingTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateWebexMeetingTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateWebexMeetingTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateZendeskJiraLinkTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateZendeskJiraLinkTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateZendeskJiraLinkTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateZendeskTicketTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateZendeskTicketTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateZendeskTicketTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateZendeskTicketTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateZoomMeetingTaskParamsInput)(nil)).Elem(), WorkflowTaskCreateZoomMeetingTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateZoomMeetingTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskCreateZoomMeetingTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskGetAlertsTaskParamsInput)(nil)).Elem(), WorkflowTaskGetAlertsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskGetAlertsTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskGetAlertsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskGetAlertsTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskGetGithubCommitsTaskParamsInput)(nil)).Elem(), WorkflowTaskGetGithubCommitsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskGetGithubCommitsTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskGetGithubCommitsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskGetGitlabCommitsTaskParamsInput)(nil)).Elem(), WorkflowTaskGetGitlabCommitsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskGetGitlabCommitsTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskGetGitlabCommitsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskGetPulsesTaskParamsInput)(nil)).Elem(), WorkflowTaskGetPulsesTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskGetPulsesTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskGetPulsesTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskGetPulsesTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskHttpClientTaskParamsInput)(nil)).Elem(), WorkflowTaskHttpClientTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskHttpClientTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskHttpClientTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskHttpClientTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskHttpClientTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskHttpClientTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelRootlyTaskParamsInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelRootlyTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelRootlyTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelTaskParamsInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelTaskParamsSlackUserInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsInput)(nil)).Elem(), WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamInput)(nil)).Elem(), WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayInput)(nil)).Elem(), WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserInput)(nil)).Elem(), WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayInput)(nil)).Elem(), WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsInput)(nil)).Elem(), WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyInput)(nil)).Elem(), WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayInput)(nil)).Elem(), WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserInput)(nil)).Elem(), WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayInput)(nil)).Elem(), WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageRootlyOnCallRespondersTaskParamsInput)(nil)).Elem(), WorkflowTaskPageRootlyOnCallRespondersTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskPageRootlyOnCallRespondersTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsInput)(nil)).Elem(), WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyInput)(nil)).Elem(), WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayInput)(nil)).Elem(), WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserInput)(nil)).Elem(), WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayInput)(nil)).Elem(), WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPrintTaskParamsInput)(nil)).Elem(), WorkflowTaskPrintTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPrintTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskPrintTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPublishIncidentTaskParamsInput)(nil)).Elem(), WorkflowTaskPublishIncidentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPublishIncidentTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskPublishIncidentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRedisClientTaskParamsInput)(nil)).Elem(), WorkflowTaskRedisClientTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRedisClientTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskRedisClientTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRedisClientTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskRedisClientTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskRedisClientTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsInput)(nil)).Elem(), WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRenameSlackChannelTaskParamsInput)(nil)).Elem(), WorkflowTaskRenameSlackChannelTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRenameSlackChannelTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskRenameSlackChannelTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRunCommandHerokuTaskParamsInput)(nil)).Elem(), WorkflowTaskRunCommandHerokuTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRunCommandHerokuTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskRunCommandHerokuTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendDashboardReportTaskParamsInput)(nil)).Elem(), WorkflowTaskSendDashboardReportTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendDashboardReportTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskSendDashboardReportTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendEmailTaskParamsInput)(nil)).Elem(), WorkflowTaskSendEmailTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendEmailTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskSendEmailTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSlackBlocksTaskParamsInput)(nil)).Elem(), WorkflowTaskSendSlackBlocksTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSlackBlocksTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskSendSlackBlocksTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSlackBlocksTaskParamsChannelInput)(nil)).Elem(), WorkflowTaskSendSlackBlocksTaskParamsChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSlackBlocksTaskParamsChannelArrayInput)(nil)).Elem(), WorkflowTaskSendSlackBlocksTaskParamsChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSlackBlocksTaskParamsSlackUserInput)(nil)).Elem(), WorkflowTaskSendSlackBlocksTaskParamsSlackUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayInput)(nil)).Elem(), WorkflowTaskSendSlackBlocksTaskParamsSlackUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupInput)(nil)).Elem(), WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayInput)(nil)).Elem(), WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSlackMessageTaskParamsInput)(nil)).Elem(), WorkflowTaskSendSlackMessageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSlackMessageTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskSendSlackMessageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSlackMessageTaskParamsChannelInput)(nil)).Elem(), WorkflowTaskSendSlackMessageTaskParamsChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSlackMessageTaskParamsChannelArrayInput)(nil)).Elem(), WorkflowTaskSendSlackMessageTaskParamsChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSlackMessageTaskParamsSlackUserInput)(nil)).Elem(), WorkflowTaskSendSlackMessageTaskParamsSlackUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayInput)(nil)).Elem(), WorkflowTaskSendSlackMessageTaskParamsSlackUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupInput)(nil)).Elem(), WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayInput)(nil)).Elem(), WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSmsTaskParamsInput)(nil)).Elem(), WorkflowTaskSendSmsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendSmsTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskSendSmsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendWhatsappMessageTaskParamsInput)(nil)).Elem(), WorkflowTaskSendWhatsappMessageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSendWhatsappMessageTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskSendWhatsappMessageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotDatadogGraphTaskParamsInput)(nil)).Elem(), WorkflowTaskSnapshotDatadogGraphTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotDatadogGraphTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskSnapshotDatadogGraphTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardInput)(nil)).Elem(), WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayInput)(nil)).Elem(), WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotGrafanaDashboardTaskParamsInput)(nil)).Elem(), WorkflowTaskSnapshotGrafanaDashboardTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskSnapshotGrafanaDashboardTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardInput)(nil)).Elem(), WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayInput)(nil)).Elem(), WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotLookerLookTaskParamsInput)(nil)).Elem(), WorkflowTaskSnapshotLookerLookTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotLookerLookTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskSnapshotLookerLookTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotLookerLookTaskParamsDashboardInput)(nil)).Elem(), WorkflowTaskSnapshotLookerLookTaskParamsDashboardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayInput)(nil)).Elem(), WorkflowTaskSnapshotLookerLookTaskParamsDashboardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotNewRelicGraphTaskParamsInput)(nil)).Elem(), WorkflowTaskSnapshotNewRelicGraphTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskSnapshotNewRelicGraphTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskTriggerWorkflowTaskParamsInput)(nil)).Elem(), WorkflowTaskTriggerWorkflowTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskTriggerWorkflowTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskTriggerWorkflowTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskTweetTwitterMessageTaskParamsInput)(nil)).Elem(), WorkflowTaskTweetTwitterMessageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskTweetTwitterMessageTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskTweetTwitterMessageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateActionItemTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateActionItemTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateActionItemTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateActionItemTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateAirtableTableRecordTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateAirtableTableRecordTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateAirtableTableRecordTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateAsanaTaskTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateAsanaTaskTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateAsanaTaskTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateAsanaTaskTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateAttachedAlertsTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateAttachedAlertsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateAttachedAlertsTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateAttachedAlertsTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateClickupTaskTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateClickupTaskTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateClickupTaskTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateClickupTaskTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateGithubIssueTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateGithubIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateGithubIssueTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateGithubIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateGitlabIssueTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateGitlabIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateGitlabIssueTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateGitlabIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateGoogleCalendarEventTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateGoogleCalendarEventTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateGoogleCalendarEventTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelInput)(nil)).Elem(), WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateGoogleDocsPageTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateGoogleDocsPageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateGoogleDocsPageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateIncidentPostmortemTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateIncidentPostmortemTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateIncidentPostmortemTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateIncidentTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateIncidentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateIncidentTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateIncidentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateJiraIssueTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateJiraIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateJiraIssueTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateJiraIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateLinearIssueTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateLinearIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateLinearIssueTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateLinearIssueTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateLinearIssueTaskParamsLabelInput)(nil)).Elem(), WorkflowTaskUpdateLinearIssueTaskParamsLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayInput)(nil)).Elem(), WorkflowTaskUpdateLinearIssueTaskParamsLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateNotionPageTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateNotionPageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateNotionPageTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateNotionPageTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateOpsgenieAlertTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateOpsgenieAlertTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateOpsgenieAlertTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateOpsgenieIncidentTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateOpsgenieIncidentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateOpsgenieIncidentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdatePagerdutyIncidentTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdatePagerdutyIncidentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdatePagerdutyIncidentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdatePagertreeAlertTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdatePagertreeAlertTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdatePagertreeAlertTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdatePagertreeAlertTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdatePagertreeAlertTaskParamsTeamInput)(nil)).Elem(), WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayInput)(nil)).Elem(), WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdatePagertreeAlertTaskParamsUserInput)(nil)).Elem(), WorkflowTaskUpdatePagertreeAlertTaskParamsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayInput)(nil)).Elem(), WorkflowTaskUpdatePagertreeAlertTaskParamsUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateServiceNowIncidentTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateServiceNowIncidentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateServiceNowIncidentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateShortcutStoryTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateShortcutStoryTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateShortcutStoryTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateShortcutStoryTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateShortcutTaskTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateShortcutTaskTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateShortcutTaskTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateShortcutTaskTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateSlackChannelTopicTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateSlackChannelTopicTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateSlackChannelTopicTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateStatusTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateStatusTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateStatusTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateStatusTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateTrelloCardTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateTrelloCardTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateTrelloCardTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateTrelloCardTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateTrelloCardTaskParamsLabelInput)(nil)).Elem(), WorkflowTaskUpdateTrelloCardTaskParamsLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayInput)(nil)).Elem(), WorkflowTaskUpdateTrelloCardTaskParamsLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateVictorOpsIncidentTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateVictorOpsIncidentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateVictorOpsIncidentTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateZendeskTicketTaskParamsInput)(nil)).Elem(), WorkflowTaskUpdateZendeskTicketTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateZendeskTicketTaskParamsPtrInput)(nil)).Elem(), WorkflowTaskUpdateZendeskTicketTaskParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCausesCauseInput)(nil)).Elem(), GetCausesCauseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCausesCauseArrayInput)(nil)).Elem(), GetCausesCauseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomFieldOptionsCustomFieldOptionInput)(nil)).Elem(), GetCustomFieldOptionsCustomFieldOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomFieldOptionsCustomFieldOptionArrayInput)(nil)).Elem(), GetCustomFieldOptionsCustomFieldOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomFieldsCustomFieldInput)(nil)).Elem(), GetCustomFieldsCustomFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomFieldsCustomFieldArrayInput)(nil)).Elem(), GetCustomFieldsCustomFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentsEnvironmentInput)(nil)).Elem(), GetEnvironmentsEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentsEnvironmentArrayInput)(nil)).Elem(), GetEnvironmentsEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionalitiesFunctionalityInput)(nil)).Elem(), GetFunctionalitiesFunctionalityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionalitiesFunctionalityArrayInput)(nil)).Elem(), GetFunctionalitiesFunctionalityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIncidentRolesIncidentRoleInput)(nil)).Elem(), GetIncidentRolesIncidentRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIncidentRolesIncidentRoleArrayInput)(nil)).Elem(), GetIncidentRolesIncidentRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIncidentTypesIncidentTypeInput)(nil)).Elem(), GetIncidentTypesIncidentTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIncidentTypesIncidentTypeArrayInput)(nil)).Elem(), GetIncidentTypesIncidentTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicesServiceInput)(nil)).Elem(), GetServicesServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicesServiceArrayInput)(nil)).Elem(), GetServicesServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSeveritiesSeverityInput)(nil)).Elem(), GetSeveritiesSeverityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSeveritiesSeverityArrayInput)(nil)).Elem(), GetSeveritiesSeverityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTeamsTeamInput)(nil)).Elem(), GetTeamsTeamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTeamsTeamArrayInput)(nil)).Elem(), GetTeamsTeamArray{})
	pulumi.RegisterOutputType(DashboardPanelParamsOutput{})
	pulumi.RegisterOutputType(DashboardPanelParamsPtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelParamsDatasetOutput{})
	pulumi.RegisterOutputType(DashboardPanelParamsDatasetArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelParamsDatasetAggregateOutput{})
	pulumi.RegisterOutputType(DashboardPanelParamsDatasetAggregatePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelParamsDatasetFilterOutput{})
	pulumi.RegisterOutputType(DashboardPanelParamsDatasetFilterArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelParamsDatasetFilterRuleOutput{})
	pulumi.RegisterOutputType(DashboardPanelParamsDatasetFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelParamsLegendOutput{})
	pulumi.RegisterOutputType(DashboardPanelParamsLegendPtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelPositionOutput{})
	pulumi.RegisterOutputType(DashboardPanelPositionPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentSlackAliasOutput{})
	pulumi.RegisterOutputType(EnvironmentSlackAliasArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentSlackChannelOutput{})
	pulumi.RegisterOutputType(EnvironmentSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(EscalationLevelNotificationTargetParamOutput{})
	pulumi.RegisterOutputType(EscalationLevelNotificationTargetParamArrayOutput{})
	pulumi.RegisterOutputType(FunctionalitySlackAliasOutput{})
	pulumi.RegisterOutputType(FunctionalitySlackAliasArrayOutput{})
	pulumi.RegisterOutputType(FunctionalitySlackChannelOutput{})
	pulumi.RegisterOutputType(FunctionalitySlackChannelArrayOutput{})
	pulumi.RegisterOutputType(IncidentTypeSlackAliasOutput{})
	pulumi.RegisterOutputType(IncidentTypeSlackAliasArrayOutput{})
	pulumi.RegisterOutputType(IncidentTypeSlackChannelOutput{})
	pulumi.RegisterOutputType(IncidentTypeSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(RetrospectiveProcessRetrospectiveProcessMatchingCriteriaOutput{})
	pulumi.RegisterOutputType(RetrospectiveProcessRetrospectiveProcessMatchingCriteriaPtrOutput{})
	pulumi.RegisterOutputType(ScheduleRotationActiveDayActiveTimeAttributeOutput{})
	pulumi.RegisterOutputType(ScheduleRotationActiveDayActiveTimeAttributeArrayOutput{})
	pulumi.RegisterOutputType(ScheduleRotationActiveTimeAttributeOutput{})
	pulumi.RegisterOutputType(ScheduleRotationActiveTimeAttributeArrayOutput{})
	pulumi.RegisterOutputType(ServiceSlackAliasOutput{})
	pulumi.RegisterOutputType(ServiceSlackAliasArrayOutput{})
	pulumi.RegisterOutputType(ServiceSlackChannelOutput{})
	pulumi.RegisterOutputType(ServiceSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(SeveritySlackAliasOutput{})
	pulumi.RegisterOutputType(SeveritySlackAliasArrayOutput{})
	pulumi.RegisterOutputType(SeveritySlackChannelOutput{})
	pulumi.RegisterOutputType(SeveritySlackChannelArrayOutput{})
	pulumi.RegisterOutputType(TeamSlackAliasOutput{})
	pulumi.RegisterOutputType(TeamSlackAliasArrayOutput{})
	pulumi.RegisterOutputType(TeamSlackChannelOutput{})
	pulumi.RegisterOutputType(TeamSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowActionItemTriggerParamsOutput{})
	pulumi.RegisterOutputType(WorkflowActionItemTriggerParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowAlertTriggerParamsOutput{})
	pulumi.RegisterOutputType(WorkflowAlertTriggerParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowIncidentTriggerParamsOutput{})
	pulumi.RegisterOutputType(WorkflowIncidentTriggerParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowPostMortemTriggerParamsOutput{})
	pulumi.RegisterOutputType(WorkflowPostMortemTriggerParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowPulseTriggerParamsOutput{})
	pulumi.RegisterOutputType(WorkflowPulseTriggerParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowSimpleTriggerParamsOutput{})
	pulumi.RegisterOutputType(WorkflowSimpleTriggerParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAddActionItemTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAddActionItemTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAddActionItemTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAddActionItemTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAddRoleTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAddRoleTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAddSlackBookmarkTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAddSlackBookmarkTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAddTeamTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAddTeamTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAddToTimelineTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAddToTimelineTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAddToTimelineTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskArchiveSlackChannelsTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskArchiveSlackChannelsTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskArchiveSlackChannelsTaskParamsChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskArchiveSlackChannelsTaskParamsChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAttachDatadogDashboardsTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAttachDatadogDashboardsTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAttachDatadogDashboardsTaskParamsDashboardArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAttachDatadogDashboardsTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAutoAssignRoleOpsgenieTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAutoAssignRoleOpsgenieTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAutoAssignRoleRootlyTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAutoAssignRoleRootlyTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAutoAssignRoleVictorOpsTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAutoAssignRoleVictorOpsTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCallPeopleTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCallPeopleTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateAirtableTableRecordTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateAirtableTableRecordTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateAsanaSubtaskTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateAsanaSubtaskTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateAsanaTaskTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateAsanaTaskTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateAsanaTaskTaskParamsProjectOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateAsanaTaskTaskParamsProjectArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateClickupTaskTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateClickupTaskTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateConfluencePageTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateConfluencePageTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateDatadogNotebookTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateDatadogNotebookTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateDropboxPaperPageTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateDropboxPaperPageTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGithubIssueTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGithubIssueTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGitlabIssueTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGitlabIssueTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoToMeetingTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoToMeetingTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoToMeetingTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleDocsPageTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleDocsPageTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleMeetingTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleMeetingTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleMeetingTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateIncidentPostmortemTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateIncidentPostmortemTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateIncidentTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateIncidentTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateJiraIssueTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateJiraIssueTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateJiraSubtaskTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateJiraSubtaskTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateLinearIssueCommentTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateLinearIssueCommentTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateLinearIssueTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateLinearIssueTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateLinearIssueTaskParamsLabelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateLinearIssueTaskParamsLabelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateLinearSubtaskIssueTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateLinearSubtaskIssueTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateMicrosoftTeamsMeetingTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateNotionPageTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateNotionPageTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateOpsgenieAlertTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateOpsgenieAlertTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateOpsgenieAlertTaskParamsEscalationArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateOpsgenieAlertTaskParamsScheduleArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateOpsgenieAlertTaskParamsTeamOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateOpsgenieAlertTaskParamsTeamArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateOpsgenieAlertTaskParamsUserOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateOpsgenieAlertTaskParamsUserArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateOutlookEventTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateOutlookEventTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateOutlookEventTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreatePagertreeAlertTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreatePagertreeAlertTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreatePagertreeAlertTaskParamsTeamOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreatePagertreeAlertTaskParamsTeamArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreatePagertreeAlertTaskParamsUserOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreatePagertreeAlertTaskParamsUserArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateQuipPageTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateQuipPageTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateServiceNowIncidentTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateServiceNowIncidentTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateSharepointPageTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateSharepointPageTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateShortcutStoryTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateShortcutStoryTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateShortcutTaskTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateShortcutTaskTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateSlackChannelTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateSlackChannelTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateTrelloCardTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateTrelloCardTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateTrelloCardTaskParamsLabelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateTrelloCardTaskParamsLabelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateWebexMeetingTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateWebexMeetingTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateWebexMeetingTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateZendeskJiraLinkTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateZendeskJiraLinkTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateZendeskTicketTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateZendeskTicketTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateZoomMeetingTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateZoomMeetingTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateZoomMeetingTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskGetAlertsTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskGetAlertsTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskGetAlertsTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskGetAlertsTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskGetGithubCommitsTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskGetGithubCommitsTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskGetGithubCommitsTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskGetGitlabCommitsTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskGetGitlabCommitsTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskGetGitlabCommitsTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskGetPulsesTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskGetPulsesTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskGetPulsesTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskGetPulsesTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskHttpClientTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskHttpClientTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskHttpClientTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskHttpClientTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelPagerdutyTaskParamsChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelRootlyTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelRootlyTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelRootlyTaskParamsChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelTaskParamsSlackUserOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelTaskParamsSlackUserArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelTaskParamsSlackUserGroupArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsTeamArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsUserArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsEscalationPolicyArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPagePagerdutyOnCallRespondersTaskParamsUserArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsEscalationPolicyArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsUserArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPrintTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPrintTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPublishIncidentTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPublishIncidentTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskRedisClientTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskRedisClientTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskRedisClientTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskRedisClientTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskRemoveGoogleDocsPermissionsTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskRenameSlackChannelTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskRenameSlackChannelTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskRunCommandHerokuTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskRunCommandHerokuTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskRunCommandHerokuTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendDashboardReportTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendDashboardReportTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendEmailTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendEmailTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSlackBlocksTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSlackBlocksTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSlackBlocksTaskParamsChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSlackBlocksTaskParamsChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSlackBlocksTaskParamsSlackUserOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSlackBlocksTaskParamsSlackUserArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSlackBlocksTaskParamsSlackUserGroupArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSlackMessageTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSlackMessageTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSlackMessageTaskParamsChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSlackMessageTaskParamsChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSlackMessageTaskParamsSlackUserOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSlackMessageTaskParamsSlackUserArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSlackMessageTaskParamsSlackUserGroupArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSmsTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendSmsTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendWhatsappMessageTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSendWhatsappMessageTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotDatadogGraphTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotDatadogGraphTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotDatadogGraphTaskParamsDashboardArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotDatadogGraphTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotGrafanaDashboardTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotGrafanaDashboardTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotGrafanaDashboardTaskParamsDashboardArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotGrafanaDashboardTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotLookerLookTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotLookerLookTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotLookerLookTaskParamsDashboardOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotLookerLookTaskParamsDashboardArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotLookerLookTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotNewRelicGraphTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotNewRelicGraphTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotNewRelicGraphTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskTriggerWorkflowTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskTriggerWorkflowTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskTweetTwitterMessageTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskTweetTwitterMessageTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateActionItemTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateActionItemTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateAirtableTableRecordTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateAirtableTableRecordTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateAsanaTaskTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateAsanaTaskTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateAttachedAlertsTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateAttachedAlertsTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateClickupTaskTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateClickupTaskTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateGithubIssueTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateGithubIssueTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateGitlabIssueTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateGitlabIssueTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateGoogleCalendarEventTaskParamsPostToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateGoogleDocsPageTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateGoogleDocsPageTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateIncidentTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateIncidentTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateJiraIssueTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateJiraIssueTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateLinearIssueTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateLinearIssueTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateLinearIssueTaskParamsLabelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateLinearIssueTaskParamsLabelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateNotionPageTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateNotionPageTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateOpsgenieAlertTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateOpsgenieAlertTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdatePagertreeAlertTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdatePagertreeAlertTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdatePagertreeAlertTaskParamsTeamOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdatePagertreeAlertTaskParamsTeamArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdatePagertreeAlertTaskParamsUserOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdatePagertreeAlertTaskParamsUserArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateServiceNowIncidentTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateServiceNowIncidentTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateShortcutStoryTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateShortcutStoryTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateShortcutTaskTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateShortcutTaskTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateSlackChannelTopicTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateSlackChannelTopicTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateStatusTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateStatusTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateTrelloCardTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateTrelloCardTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateTrelloCardTaskParamsLabelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateTrelloCardTaskParamsLabelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateZendeskTicketTaskParamsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateZendeskTicketTaskParamsPtrOutput{})
	pulumi.RegisterOutputType(GetCausesCauseOutput{})
	pulumi.RegisterOutputType(GetCausesCauseArrayOutput{})
	pulumi.RegisterOutputType(GetCustomFieldOptionsCustomFieldOptionOutput{})
	pulumi.RegisterOutputType(GetCustomFieldOptionsCustomFieldOptionArrayOutput{})
	pulumi.RegisterOutputType(GetCustomFieldsCustomFieldOutput{})
	pulumi.RegisterOutputType(GetCustomFieldsCustomFieldArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentsEnvironmentOutput{})
	pulumi.RegisterOutputType(GetEnvironmentsEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionalitiesFunctionalityOutput{})
	pulumi.RegisterOutputType(GetFunctionalitiesFunctionalityArrayOutput{})
	pulumi.RegisterOutputType(GetIncidentRolesIncidentRoleOutput{})
	pulumi.RegisterOutputType(GetIncidentRolesIncidentRoleArrayOutput{})
	pulumi.RegisterOutputType(GetIncidentTypesIncidentTypeOutput{})
	pulumi.RegisterOutputType(GetIncidentTypesIncidentTypeArrayOutput{})
	pulumi.RegisterOutputType(GetServicesServiceOutput{})
	pulumi.RegisterOutputType(GetServicesServiceArrayOutput{})
	pulumi.RegisterOutputType(GetSeveritiesSeverityOutput{})
	pulumi.RegisterOutputType(GetSeveritiesSeverityArrayOutput{})
	pulumi.RegisterOutputType(GetTeamsTeamOutput{})
	pulumi.RegisterOutputType(GetTeamsTeamArrayOutput{})
}
