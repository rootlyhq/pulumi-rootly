// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow runCommandHeroku task.
type WorkflowTaskRunCommandHeroku struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskRunCommandHerokuTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskRunCommandHeroku registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskRunCommandHeroku(ctx *pulumi.Context,
	name string, args *WorkflowTaskRunCommandHerokuArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskRunCommandHeroku, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskRunCommandHeroku
	err := ctx.RegisterResource("rootly:index/workflowTaskRunCommandHeroku:WorkflowTaskRunCommandHeroku", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskRunCommandHeroku gets an existing WorkflowTaskRunCommandHeroku resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskRunCommandHeroku(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskRunCommandHerokuState, opts ...pulumi.ResourceOption) (*WorkflowTaskRunCommandHeroku, error) {
	var resource WorkflowTaskRunCommandHeroku
	err := ctx.ReadResource("rootly:index/workflowTaskRunCommandHeroku:WorkflowTaskRunCommandHeroku", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskRunCommandHeroku resources.
type workflowTaskRunCommandHerokuState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskRunCommandHerokuTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskRunCommandHerokuState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskRunCommandHerokuTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskRunCommandHerokuState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskRunCommandHerokuState)(nil)).Elem()
}

type workflowTaskRunCommandHerokuArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskRunCommandHerokuTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskRunCommandHeroku resource.
type WorkflowTaskRunCommandHerokuArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskRunCommandHerokuTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskRunCommandHerokuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskRunCommandHerokuArgs)(nil)).Elem()
}

type WorkflowTaskRunCommandHerokuInput interface {
	pulumi.Input

	ToWorkflowTaskRunCommandHerokuOutput() WorkflowTaskRunCommandHerokuOutput
	ToWorkflowTaskRunCommandHerokuOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuOutput
}

func (*WorkflowTaskRunCommandHeroku) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskRunCommandHeroku)(nil)).Elem()
}

func (i *WorkflowTaskRunCommandHeroku) ToWorkflowTaskRunCommandHerokuOutput() WorkflowTaskRunCommandHerokuOutput {
	return i.ToWorkflowTaskRunCommandHerokuOutputWithContext(context.Background())
}

func (i *WorkflowTaskRunCommandHeroku) ToWorkflowTaskRunCommandHerokuOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRunCommandHerokuOutput)
}

// WorkflowTaskRunCommandHerokuArrayInput is an input type that accepts WorkflowTaskRunCommandHerokuArray and WorkflowTaskRunCommandHerokuArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskRunCommandHerokuArrayInput` via:
//
//	WorkflowTaskRunCommandHerokuArray{ WorkflowTaskRunCommandHerokuArgs{...} }
type WorkflowTaskRunCommandHerokuArrayInput interface {
	pulumi.Input

	ToWorkflowTaskRunCommandHerokuArrayOutput() WorkflowTaskRunCommandHerokuArrayOutput
	ToWorkflowTaskRunCommandHerokuArrayOutputWithContext(context.Context) WorkflowTaskRunCommandHerokuArrayOutput
}

type WorkflowTaskRunCommandHerokuArray []WorkflowTaskRunCommandHerokuInput

func (WorkflowTaskRunCommandHerokuArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskRunCommandHeroku)(nil)).Elem()
}

func (i WorkflowTaskRunCommandHerokuArray) ToWorkflowTaskRunCommandHerokuArrayOutput() WorkflowTaskRunCommandHerokuArrayOutput {
	return i.ToWorkflowTaskRunCommandHerokuArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskRunCommandHerokuArray) ToWorkflowTaskRunCommandHerokuArrayOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRunCommandHerokuArrayOutput)
}

// WorkflowTaskRunCommandHerokuMapInput is an input type that accepts WorkflowTaskRunCommandHerokuMap and WorkflowTaskRunCommandHerokuMapOutput values.
// You can construct a concrete instance of `WorkflowTaskRunCommandHerokuMapInput` via:
//
//	WorkflowTaskRunCommandHerokuMap{ "key": WorkflowTaskRunCommandHerokuArgs{...} }
type WorkflowTaskRunCommandHerokuMapInput interface {
	pulumi.Input

	ToWorkflowTaskRunCommandHerokuMapOutput() WorkflowTaskRunCommandHerokuMapOutput
	ToWorkflowTaskRunCommandHerokuMapOutputWithContext(context.Context) WorkflowTaskRunCommandHerokuMapOutput
}

type WorkflowTaskRunCommandHerokuMap map[string]WorkflowTaskRunCommandHerokuInput

func (WorkflowTaskRunCommandHerokuMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskRunCommandHeroku)(nil)).Elem()
}

func (i WorkflowTaskRunCommandHerokuMap) ToWorkflowTaskRunCommandHerokuMapOutput() WorkflowTaskRunCommandHerokuMapOutput {
	return i.ToWorkflowTaskRunCommandHerokuMapOutputWithContext(context.Background())
}

func (i WorkflowTaskRunCommandHerokuMap) ToWorkflowTaskRunCommandHerokuMapOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskRunCommandHerokuMapOutput)
}

type WorkflowTaskRunCommandHerokuOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRunCommandHerokuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskRunCommandHeroku)(nil)).Elem()
}

func (o WorkflowTaskRunCommandHerokuOutput) ToWorkflowTaskRunCommandHerokuOutput() WorkflowTaskRunCommandHerokuOutput {
	return o
}

func (o WorkflowTaskRunCommandHerokuOutput) ToWorkflowTaskRunCommandHerokuOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskRunCommandHerokuOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRunCommandHeroku) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskRunCommandHerokuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskRunCommandHeroku) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskRunCommandHerokuOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskRunCommandHeroku) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskRunCommandHerokuOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskRunCommandHeroku) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskRunCommandHerokuOutput) TaskParams() WorkflowTaskRunCommandHerokuTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskRunCommandHeroku) WorkflowTaskRunCommandHerokuTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskRunCommandHerokuTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskRunCommandHerokuOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskRunCommandHeroku) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskRunCommandHerokuArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRunCommandHerokuArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskRunCommandHeroku)(nil)).Elem()
}

func (o WorkflowTaskRunCommandHerokuArrayOutput) ToWorkflowTaskRunCommandHerokuArrayOutput() WorkflowTaskRunCommandHerokuArrayOutput {
	return o
}

func (o WorkflowTaskRunCommandHerokuArrayOutput) ToWorkflowTaskRunCommandHerokuArrayOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuArrayOutput {
	return o
}

func (o WorkflowTaskRunCommandHerokuArrayOutput) Index(i pulumi.IntInput) WorkflowTaskRunCommandHerokuOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskRunCommandHeroku {
		return vs[0].([]*WorkflowTaskRunCommandHeroku)[vs[1].(int)]
	}).(WorkflowTaskRunCommandHerokuOutput)
}

type WorkflowTaskRunCommandHerokuMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskRunCommandHerokuMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskRunCommandHeroku)(nil)).Elem()
}

func (o WorkflowTaskRunCommandHerokuMapOutput) ToWorkflowTaskRunCommandHerokuMapOutput() WorkflowTaskRunCommandHerokuMapOutput {
	return o
}

func (o WorkflowTaskRunCommandHerokuMapOutput) ToWorkflowTaskRunCommandHerokuMapOutputWithContext(ctx context.Context) WorkflowTaskRunCommandHerokuMapOutput {
	return o
}

func (o WorkflowTaskRunCommandHerokuMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskRunCommandHerokuOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskRunCommandHeroku {
		return vs[0].(map[string]*WorkflowTaskRunCommandHeroku)[vs[1].(string)]
	}).(WorkflowTaskRunCommandHerokuOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRunCommandHerokuInput)(nil)).Elem(), &WorkflowTaskRunCommandHeroku{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRunCommandHerokuArrayInput)(nil)).Elem(), WorkflowTaskRunCommandHerokuArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskRunCommandHerokuMapInput)(nil)).Elem(), WorkflowTaskRunCommandHerokuMap{})
	pulumi.RegisterOutputType(WorkflowTaskRunCommandHerokuOutput{})
	pulumi.RegisterOutputType(WorkflowTaskRunCommandHerokuArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskRunCommandHerokuMapOutput{})
}
