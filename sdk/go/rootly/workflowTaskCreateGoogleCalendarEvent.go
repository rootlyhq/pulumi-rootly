// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow createGoogleCalendarEvent task.
//
// ## Example Usage
type WorkflowTaskCreateGoogleCalendarEvent struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskCreateGoogleCalendarEvent registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskCreateGoogleCalendarEvent(ctx *pulumi.Context,
	name string, args *WorkflowTaskCreateGoogleCalendarEventArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateGoogleCalendarEvent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskCreateGoogleCalendarEvent
	err := ctx.RegisterResource("rootly:index/workflowTaskCreateGoogleCalendarEvent:WorkflowTaskCreateGoogleCalendarEvent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskCreateGoogleCalendarEvent gets an existing WorkflowTaskCreateGoogleCalendarEvent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskCreateGoogleCalendarEvent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskCreateGoogleCalendarEventState, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateGoogleCalendarEvent, error) {
	var resource WorkflowTaskCreateGoogleCalendarEvent
	err := ctx.ReadResource("rootly:index/workflowTaskCreateGoogleCalendarEvent:WorkflowTaskCreateGoogleCalendarEvent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskCreateGoogleCalendarEvent resources.
type workflowTaskCreateGoogleCalendarEventState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskCreateGoogleCalendarEventTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskCreateGoogleCalendarEventState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateGoogleCalendarEventTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskCreateGoogleCalendarEventState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateGoogleCalendarEventState)(nil)).Elem()
}

type workflowTaskCreateGoogleCalendarEventArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateGoogleCalendarEventTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskCreateGoogleCalendarEvent resource.
type WorkflowTaskCreateGoogleCalendarEventArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateGoogleCalendarEventTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskCreateGoogleCalendarEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateGoogleCalendarEventArgs)(nil)).Elem()
}

type WorkflowTaskCreateGoogleCalendarEventInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleCalendarEventOutput() WorkflowTaskCreateGoogleCalendarEventOutput
	ToWorkflowTaskCreateGoogleCalendarEventOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventOutput
}

func (*WorkflowTaskCreateGoogleCalendarEvent) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGoogleCalendarEvent)(nil)).Elem()
}

func (i *WorkflowTaskCreateGoogleCalendarEvent) ToWorkflowTaskCreateGoogleCalendarEventOutput() WorkflowTaskCreateGoogleCalendarEventOutput {
	return i.ToWorkflowTaskCreateGoogleCalendarEventOutputWithContext(context.Background())
}

func (i *WorkflowTaskCreateGoogleCalendarEvent) ToWorkflowTaskCreateGoogleCalendarEventOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleCalendarEventOutput)
}

// WorkflowTaskCreateGoogleCalendarEventArrayInput is an input type that accepts WorkflowTaskCreateGoogleCalendarEventArray and WorkflowTaskCreateGoogleCalendarEventArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoogleCalendarEventArrayInput` via:
//
//	WorkflowTaskCreateGoogleCalendarEventArray{ WorkflowTaskCreateGoogleCalendarEventArgs{...} }
type WorkflowTaskCreateGoogleCalendarEventArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleCalendarEventArrayOutput() WorkflowTaskCreateGoogleCalendarEventArrayOutput
	ToWorkflowTaskCreateGoogleCalendarEventArrayOutputWithContext(context.Context) WorkflowTaskCreateGoogleCalendarEventArrayOutput
}

type WorkflowTaskCreateGoogleCalendarEventArray []WorkflowTaskCreateGoogleCalendarEventInput

func (WorkflowTaskCreateGoogleCalendarEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateGoogleCalendarEvent)(nil)).Elem()
}

func (i WorkflowTaskCreateGoogleCalendarEventArray) ToWorkflowTaskCreateGoogleCalendarEventArrayOutput() WorkflowTaskCreateGoogleCalendarEventArrayOutput {
	return i.ToWorkflowTaskCreateGoogleCalendarEventArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoogleCalendarEventArray) ToWorkflowTaskCreateGoogleCalendarEventArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleCalendarEventArrayOutput)
}

// WorkflowTaskCreateGoogleCalendarEventMapInput is an input type that accepts WorkflowTaskCreateGoogleCalendarEventMap and WorkflowTaskCreateGoogleCalendarEventMapOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoogleCalendarEventMapInput` via:
//
//	WorkflowTaskCreateGoogleCalendarEventMap{ "key": WorkflowTaskCreateGoogleCalendarEventArgs{...} }
type WorkflowTaskCreateGoogleCalendarEventMapInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleCalendarEventMapOutput() WorkflowTaskCreateGoogleCalendarEventMapOutput
	ToWorkflowTaskCreateGoogleCalendarEventMapOutputWithContext(context.Context) WorkflowTaskCreateGoogleCalendarEventMapOutput
}

type WorkflowTaskCreateGoogleCalendarEventMap map[string]WorkflowTaskCreateGoogleCalendarEventInput

func (WorkflowTaskCreateGoogleCalendarEventMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateGoogleCalendarEvent)(nil)).Elem()
}

func (i WorkflowTaskCreateGoogleCalendarEventMap) ToWorkflowTaskCreateGoogleCalendarEventMapOutput() WorkflowTaskCreateGoogleCalendarEventMapOutput {
	return i.ToWorkflowTaskCreateGoogleCalendarEventMapOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoogleCalendarEventMap) ToWorkflowTaskCreateGoogleCalendarEventMapOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleCalendarEventMapOutput)
}

type WorkflowTaskCreateGoogleCalendarEventOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleCalendarEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGoogleCalendarEvent)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleCalendarEventOutput) ToWorkflowTaskCreateGoogleCalendarEventOutput() WorkflowTaskCreateGoogleCalendarEventOutput {
	return o
}

func (o WorkflowTaskCreateGoogleCalendarEventOutput) ToWorkflowTaskCreateGoogleCalendarEventOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskCreateGoogleCalendarEventOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEvent) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskCreateGoogleCalendarEventOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEvent) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskCreateGoogleCalendarEventOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEvent) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskCreateGoogleCalendarEventOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEvent) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskCreateGoogleCalendarEventOutput) TaskParams() WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEvent) WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskCreateGoogleCalendarEventTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskCreateGoogleCalendarEventOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleCalendarEvent) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskCreateGoogleCalendarEventArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleCalendarEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateGoogleCalendarEvent)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleCalendarEventArrayOutput) ToWorkflowTaskCreateGoogleCalendarEventArrayOutput() WorkflowTaskCreateGoogleCalendarEventArrayOutput {
	return o
}

func (o WorkflowTaskCreateGoogleCalendarEventArrayOutput) ToWorkflowTaskCreateGoogleCalendarEventArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventArrayOutput {
	return o
}

func (o WorkflowTaskCreateGoogleCalendarEventArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateGoogleCalendarEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskCreateGoogleCalendarEvent {
		return vs[0].([]*WorkflowTaskCreateGoogleCalendarEvent)[vs[1].(int)]
	}).(WorkflowTaskCreateGoogleCalendarEventOutput)
}

type WorkflowTaskCreateGoogleCalendarEventMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleCalendarEventMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateGoogleCalendarEvent)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleCalendarEventMapOutput) ToWorkflowTaskCreateGoogleCalendarEventMapOutput() WorkflowTaskCreateGoogleCalendarEventMapOutput {
	return o
}

func (o WorkflowTaskCreateGoogleCalendarEventMapOutput) ToWorkflowTaskCreateGoogleCalendarEventMapOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleCalendarEventMapOutput {
	return o
}

func (o WorkflowTaskCreateGoogleCalendarEventMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskCreateGoogleCalendarEventOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskCreateGoogleCalendarEvent {
		return vs[0].(map[string]*WorkflowTaskCreateGoogleCalendarEvent)[vs[1].(string)]
	}).(WorkflowTaskCreateGoogleCalendarEventOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleCalendarEventInput)(nil)).Elem(), &WorkflowTaskCreateGoogleCalendarEvent{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleCalendarEventArrayInput)(nil)).Elem(), WorkflowTaskCreateGoogleCalendarEventArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleCalendarEventMapInput)(nil)).Elem(), WorkflowTaskCreateGoogleCalendarEventMap{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleCalendarEventOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleCalendarEventArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleCalendarEventMapOutput{})
}
