// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow updateIncidentPostmortem task.
type WorkflowTaskUpdateIncidentPostmortem struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskUpdateIncidentPostmortem registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskUpdateIncidentPostmortem(ctx *pulumi.Context,
	name string, args *WorkflowTaskUpdateIncidentPostmortemArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateIncidentPostmortem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskUpdateIncidentPostmortem
	err := ctx.RegisterResource("rootly:index/workflowTaskUpdateIncidentPostmortem:WorkflowTaskUpdateIncidentPostmortem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskUpdateIncidentPostmortem gets an existing WorkflowTaskUpdateIncidentPostmortem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskUpdateIncidentPostmortem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskUpdateIncidentPostmortemState, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateIncidentPostmortem, error) {
	var resource WorkflowTaskUpdateIncidentPostmortem
	err := ctx.ReadResource("rootly:index/workflowTaskUpdateIncidentPostmortem:WorkflowTaskUpdateIncidentPostmortem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskUpdateIncidentPostmortem resources.
type workflowTaskUpdateIncidentPostmortemState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskUpdateIncidentPostmortemTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskUpdateIncidentPostmortemState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateIncidentPostmortemTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskUpdateIncidentPostmortemState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateIncidentPostmortemState)(nil)).Elem()
}

type workflowTaskUpdateIncidentPostmortemArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateIncidentPostmortemTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskUpdateIncidentPostmortem resource.
type WorkflowTaskUpdateIncidentPostmortemArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateIncidentPostmortemTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskUpdateIncidentPostmortemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateIncidentPostmortemArgs)(nil)).Elem()
}

type WorkflowTaskUpdateIncidentPostmortemInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateIncidentPostmortemOutput() WorkflowTaskUpdateIncidentPostmortemOutput
	ToWorkflowTaskUpdateIncidentPostmortemOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentPostmortemOutput
}

func (*WorkflowTaskUpdateIncidentPostmortem) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateIncidentPostmortem)(nil)).Elem()
}

func (i *WorkflowTaskUpdateIncidentPostmortem) ToWorkflowTaskUpdateIncidentPostmortemOutput() WorkflowTaskUpdateIncidentPostmortemOutput {
	return i.ToWorkflowTaskUpdateIncidentPostmortemOutputWithContext(context.Background())
}

func (i *WorkflowTaskUpdateIncidentPostmortem) ToWorkflowTaskUpdateIncidentPostmortemOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentPostmortemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateIncidentPostmortemOutput)
}

// WorkflowTaskUpdateIncidentPostmortemArrayInput is an input type that accepts WorkflowTaskUpdateIncidentPostmortemArray and WorkflowTaskUpdateIncidentPostmortemArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateIncidentPostmortemArrayInput` via:
//
//	WorkflowTaskUpdateIncidentPostmortemArray{ WorkflowTaskUpdateIncidentPostmortemArgs{...} }
type WorkflowTaskUpdateIncidentPostmortemArrayInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateIncidentPostmortemArrayOutput() WorkflowTaskUpdateIncidentPostmortemArrayOutput
	ToWorkflowTaskUpdateIncidentPostmortemArrayOutputWithContext(context.Context) WorkflowTaskUpdateIncidentPostmortemArrayOutput
}

type WorkflowTaskUpdateIncidentPostmortemArray []WorkflowTaskUpdateIncidentPostmortemInput

func (WorkflowTaskUpdateIncidentPostmortemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateIncidentPostmortem)(nil)).Elem()
}

func (i WorkflowTaskUpdateIncidentPostmortemArray) ToWorkflowTaskUpdateIncidentPostmortemArrayOutput() WorkflowTaskUpdateIncidentPostmortemArrayOutput {
	return i.ToWorkflowTaskUpdateIncidentPostmortemArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateIncidentPostmortemArray) ToWorkflowTaskUpdateIncidentPostmortemArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentPostmortemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateIncidentPostmortemArrayOutput)
}

// WorkflowTaskUpdateIncidentPostmortemMapInput is an input type that accepts WorkflowTaskUpdateIncidentPostmortemMap and WorkflowTaskUpdateIncidentPostmortemMapOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateIncidentPostmortemMapInput` via:
//
//	WorkflowTaskUpdateIncidentPostmortemMap{ "key": WorkflowTaskUpdateIncidentPostmortemArgs{...} }
type WorkflowTaskUpdateIncidentPostmortemMapInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateIncidentPostmortemMapOutput() WorkflowTaskUpdateIncidentPostmortemMapOutput
	ToWorkflowTaskUpdateIncidentPostmortemMapOutputWithContext(context.Context) WorkflowTaskUpdateIncidentPostmortemMapOutput
}

type WorkflowTaskUpdateIncidentPostmortemMap map[string]WorkflowTaskUpdateIncidentPostmortemInput

func (WorkflowTaskUpdateIncidentPostmortemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateIncidentPostmortem)(nil)).Elem()
}

func (i WorkflowTaskUpdateIncidentPostmortemMap) ToWorkflowTaskUpdateIncidentPostmortemMapOutput() WorkflowTaskUpdateIncidentPostmortemMapOutput {
	return i.ToWorkflowTaskUpdateIncidentPostmortemMapOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateIncidentPostmortemMap) ToWorkflowTaskUpdateIncidentPostmortemMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentPostmortemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateIncidentPostmortemMapOutput)
}

type WorkflowTaskUpdateIncidentPostmortemOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateIncidentPostmortemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateIncidentPostmortem)(nil)).Elem()
}

func (o WorkflowTaskUpdateIncidentPostmortemOutput) ToWorkflowTaskUpdateIncidentPostmortemOutput() WorkflowTaskUpdateIncidentPostmortemOutput {
	return o
}

func (o WorkflowTaskUpdateIncidentPostmortemOutput) ToWorkflowTaskUpdateIncidentPostmortemOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentPostmortemOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskUpdateIncidentPostmortemOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentPostmortem) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskUpdateIncidentPostmortemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentPostmortem) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskUpdateIncidentPostmortemOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentPostmortem) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskUpdateIncidentPostmortemOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentPostmortem) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskUpdateIncidentPostmortemOutput) TaskParams() WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentPostmortem) WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskUpdateIncidentPostmortemTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskUpdateIncidentPostmortemOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateIncidentPostmortem) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskUpdateIncidentPostmortemArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateIncidentPostmortemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateIncidentPostmortem)(nil)).Elem()
}

func (o WorkflowTaskUpdateIncidentPostmortemArrayOutput) ToWorkflowTaskUpdateIncidentPostmortemArrayOutput() WorkflowTaskUpdateIncidentPostmortemArrayOutput {
	return o
}

func (o WorkflowTaskUpdateIncidentPostmortemArrayOutput) ToWorkflowTaskUpdateIncidentPostmortemArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentPostmortemArrayOutput {
	return o
}

func (o WorkflowTaskUpdateIncidentPostmortemArrayOutput) Index(i pulumi.IntInput) WorkflowTaskUpdateIncidentPostmortemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateIncidentPostmortem {
		return vs[0].([]*WorkflowTaskUpdateIncidentPostmortem)[vs[1].(int)]
	}).(WorkflowTaskUpdateIncidentPostmortemOutput)
}

type WorkflowTaskUpdateIncidentPostmortemMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateIncidentPostmortemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateIncidentPostmortem)(nil)).Elem()
}

func (o WorkflowTaskUpdateIncidentPostmortemMapOutput) ToWorkflowTaskUpdateIncidentPostmortemMapOutput() WorkflowTaskUpdateIncidentPostmortemMapOutput {
	return o
}

func (o WorkflowTaskUpdateIncidentPostmortemMapOutput) ToWorkflowTaskUpdateIncidentPostmortemMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateIncidentPostmortemMapOutput {
	return o
}

func (o WorkflowTaskUpdateIncidentPostmortemMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskUpdateIncidentPostmortemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateIncidentPostmortem {
		return vs[0].(map[string]*WorkflowTaskUpdateIncidentPostmortem)[vs[1].(string)]
	}).(WorkflowTaskUpdateIncidentPostmortemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateIncidentPostmortemInput)(nil)).Elem(), &WorkflowTaskUpdateIncidentPostmortem{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateIncidentPostmortemArrayInput)(nil)).Elem(), WorkflowTaskUpdateIncidentPostmortemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateIncidentPostmortemMapInput)(nil)).Elem(), WorkflowTaskUpdateIncidentPostmortemMap{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateIncidentPostmortemOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateIncidentPostmortemArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateIncidentPostmortemMapOutput{})
}
