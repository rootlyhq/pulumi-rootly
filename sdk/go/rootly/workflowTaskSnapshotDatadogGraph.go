// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow snapshotDatadogGraph task.
type WorkflowTaskSnapshotDatadogGraph struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskSnapshotDatadogGraphTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskSnapshotDatadogGraph registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskSnapshotDatadogGraph(ctx *pulumi.Context,
	name string, args *WorkflowTaskSnapshotDatadogGraphArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskSnapshotDatadogGraph, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskSnapshotDatadogGraph
	err := ctx.RegisterResource("rootly:index/workflowTaskSnapshotDatadogGraph:WorkflowTaskSnapshotDatadogGraph", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskSnapshotDatadogGraph gets an existing WorkflowTaskSnapshotDatadogGraph resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskSnapshotDatadogGraph(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskSnapshotDatadogGraphState, opts ...pulumi.ResourceOption) (*WorkflowTaskSnapshotDatadogGraph, error) {
	var resource WorkflowTaskSnapshotDatadogGraph
	err := ctx.ReadResource("rootly:index/workflowTaskSnapshotDatadogGraph:WorkflowTaskSnapshotDatadogGraph", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskSnapshotDatadogGraph resources.
type workflowTaskSnapshotDatadogGraphState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskSnapshotDatadogGraphTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskSnapshotDatadogGraphState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskSnapshotDatadogGraphTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskSnapshotDatadogGraphState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskSnapshotDatadogGraphState)(nil)).Elem()
}

type workflowTaskSnapshotDatadogGraphArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskSnapshotDatadogGraphTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskSnapshotDatadogGraph resource.
type WorkflowTaskSnapshotDatadogGraphArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskSnapshotDatadogGraphTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskSnapshotDatadogGraphArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskSnapshotDatadogGraphArgs)(nil)).Elem()
}

type WorkflowTaskSnapshotDatadogGraphInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotDatadogGraphOutput() WorkflowTaskSnapshotDatadogGraphOutput
	ToWorkflowTaskSnapshotDatadogGraphOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphOutput
}

func (*WorkflowTaskSnapshotDatadogGraph) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSnapshotDatadogGraph)(nil)).Elem()
}

func (i *WorkflowTaskSnapshotDatadogGraph) ToWorkflowTaskSnapshotDatadogGraphOutput() WorkflowTaskSnapshotDatadogGraphOutput {
	return i.ToWorkflowTaskSnapshotDatadogGraphOutputWithContext(context.Background())
}

func (i *WorkflowTaskSnapshotDatadogGraph) ToWorkflowTaskSnapshotDatadogGraphOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotDatadogGraphOutput)
}

// WorkflowTaskSnapshotDatadogGraphArrayInput is an input type that accepts WorkflowTaskSnapshotDatadogGraphArray and WorkflowTaskSnapshotDatadogGraphArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotDatadogGraphArrayInput` via:
//
//	WorkflowTaskSnapshotDatadogGraphArray{ WorkflowTaskSnapshotDatadogGraphArgs{...} }
type WorkflowTaskSnapshotDatadogGraphArrayInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotDatadogGraphArrayOutput() WorkflowTaskSnapshotDatadogGraphArrayOutput
	ToWorkflowTaskSnapshotDatadogGraphArrayOutputWithContext(context.Context) WorkflowTaskSnapshotDatadogGraphArrayOutput
}

type WorkflowTaskSnapshotDatadogGraphArray []WorkflowTaskSnapshotDatadogGraphInput

func (WorkflowTaskSnapshotDatadogGraphArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskSnapshotDatadogGraph)(nil)).Elem()
}

func (i WorkflowTaskSnapshotDatadogGraphArray) ToWorkflowTaskSnapshotDatadogGraphArrayOutput() WorkflowTaskSnapshotDatadogGraphArrayOutput {
	return i.ToWorkflowTaskSnapshotDatadogGraphArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotDatadogGraphArray) ToWorkflowTaskSnapshotDatadogGraphArrayOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotDatadogGraphArrayOutput)
}

// WorkflowTaskSnapshotDatadogGraphMapInput is an input type that accepts WorkflowTaskSnapshotDatadogGraphMap and WorkflowTaskSnapshotDatadogGraphMapOutput values.
// You can construct a concrete instance of `WorkflowTaskSnapshotDatadogGraphMapInput` via:
//
//	WorkflowTaskSnapshotDatadogGraphMap{ "key": WorkflowTaskSnapshotDatadogGraphArgs{...} }
type WorkflowTaskSnapshotDatadogGraphMapInput interface {
	pulumi.Input

	ToWorkflowTaskSnapshotDatadogGraphMapOutput() WorkflowTaskSnapshotDatadogGraphMapOutput
	ToWorkflowTaskSnapshotDatadogGraphMapOutputWithContext(context.Context) WorkflowTaskSnapshotDatadogGraphMapOutput
}

type WorkflowTaskSnapshotDatadogGraphMap map[string]WorkflowTaskSnapshotDatadogGraphInput

func (WorkflowTaskSnapshotDatadogGraphMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskSnapshotDatadogGraph)(nil)).Elem()
}

func (i WorkflowTaskSnapshotDatadogGraphMap) ToWorkflowTaskSnapshotDatadogGraphMapOutput() WorkflowTaskSnapshotDatadogGraphMapOutput {
	return i.ToWorkflowTaskSnapshotDatadogGraphMapOutputWithContext(context.Background())
}

func (i WorkflowTaskSnapshotDatadogGraphMap) ToWorkflowTaskSnapshotDatadogGraphMapOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskSnapshotDatadogGraphMapOutput)
}

type WorkflowTaskSnapshotDatadogGraphOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotDatadogGraphOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskSnapshotDatadogGraph)(nil)).Elem()
}

func (o WorkflowTaskSnapshotDatadogGraphOutput) ToWorkflowTaskSnapshotDatadogGraphOutput() WorkflowTaskSnapshotDatadogGraphOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphOutput) ToWorkflowTaskSnapshotDatadogGraphOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskSnapshotDatadogGraphOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotDatadogGraph) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskSnapshotDatadogGraphOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotDatadogGraph) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskSnapshotDatadogGraphOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotDatadogGraph) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskSnapshotDatadogGraphOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotDatadogGraph) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskSnapshotDatadogGraphOutput) TaskParams() WorkflowTaskSnapshotDatadogGraphTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotDatadogGraph) WorkflowTaskSnapshotDatadogGraphTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskSnapshotDatadogGraphTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskSnapshotDatadogGraphOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskSnapshotDatadogGraph) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskSnapshotDatadogGraphArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotDatadogGraphArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskSnapshotDatadogGraph)(nil)).Elem()
}

func (o WorkflowTaskSnapshotDatadogGraphArrayOutput) ToWorkflowTaskSnapshotDatadogGraphArrayOutput() WorkflowTaskSnapshotDatadogGraphArrayOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphArrayOutput) ToWorkflowTaskSnapshotDatadogGraphArrayOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphArrayOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphArrayOutput) Index(i pulumi.IntInput) WorkflowTaskSnapshotDatadogGraphOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskSnapshotDatadogGraph {
		return vs[0].([]*WorkflowTaskSnapshotDatadogGraph)[vs[1].(int)]
	}).(WorkflowTaskSnapshotDatadogGraphOutput)
}

type WorkflowTaskSnapshotDatadogGraphMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskSnapshotDatadogGraphMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskSnapshotDatadogGraph)(nil)).Elem()
}

func (o WorkflowTaskSnapshotDatadogGraphMapOutput) ToWorkflowTaskSnapshotDatadogGraphMapOutput() WorkflowTaskSnapshotDatadogGraphMapOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphMapOutput) ToWorkflowTaskSnapshotDatadogGraphMapOutputWithContext(ctx context.Context) WorkflowTaskSnapshotDatadogGraphMapOutput {
	return o
}

func (o WorkflowTaskSnapshotDatadogGraphMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskSnapshotDatadogGraphOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskSnapshotDatadogGraph {
		return vs[0].(map[string]*WorkflowTaskSnapshotDatadogGraph)[vs[1].(string)]
	}).(WorkflowTaskSnapshotDatadogGraphOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotDatadogGraphInput)(nil)).Elem(), &WorkflowTaskSnapshotDatadogGraph{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotDatadogGraphArrayInput)(nil)).Elem(), WorkflowTaskSnapshotDatadogGraphArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskSnapshotDatadogGraphMapInput)(nil)).Elem(), WorkflowTaskSnapshotDatadogGraphMap{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotDatadogGraphOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotDatadogGraphArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskSnapshotDatadogGraphMapOutput{})
}
