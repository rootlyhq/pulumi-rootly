// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow pageVictorOpsOnCallResponders task.
type WorkflowTaskPageVictorOpsOnCallResponders struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskPageVictorOpsOnCallResponders registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskPageVictorOpsOnCallResponders(ctx *pulumi.Context,
	name string, args *WorkflowTaskPageVictorOpsOnCallRespondersArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskPageVictorOpsOnCallResponders, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskPageVictorOpsOnCallResponders
	err := ctx.RegisterResource("rootly:index/workflowTaskPageVictorOpsOnCallResponders:WorkflowTaskPageVictorOpsOnCallResponders", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskPageVictorOpsOnCallResponders gets an existing WorkflowTaskPageVictorOpsOnCallResponders resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskPageVictorOpsOnCallResponders(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskPageVictorOpsOnCallRespondersState, opts ...pulumi.ResourceOption) (*WorkflowTaskPageVictorOpsOnCallResponders, error) {
	var resource WorkflowTaskPageVictorOpsOnCallResponders
	err := ctx.ReadResource("rootly:index/workflowTaskPageVictorOpsOnCallResponders:WorkflowTaskPageVictorOpsOnCallResponders", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskPageVictorOpsOnCallResponders resources.
type workflowTaskPageVictorOpsOnCallRespondersState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskPageVictorOpsOnCallRespondersTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskPageVictorOpsOnCallRespondersState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskPageVictorOpsOnCallRespondersState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskPageVictorOpsOnCallRespondersState)(nil)).Elem()
}

type workflowTaskPageVictorOpsOnCallRespondersArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskPageVictorOpsOnCallRespondersTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskPageVictorOpsOnCallResponders resource.
type WorkflowTaskPageVictorOpsOnCallRespondersArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskPageVictorOpsOnCallRespondersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskPageVictorOpsOnCallRespondersArgs)(nil)).Elem()
}

type WorkflowTaskPageVictorOpsOnCallRespondersInput interface {
	pulumi.Input

	ToWorkflowTaskPageVictorOpsOnCallRespondersOutput() WorkflowTaskPageVictorOpsOnCallRespondersOutput
	ToWorkflowTaskPageVictorOpsOnCallRespondersOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersOutput
}

func (*WorkflowTaskPageVictorOpsOnCallResponders) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPageVictorOpsOnCallResponders)(nil)).Elem()
}

func (i *WorkflowTaskPageVictorOpsOnCallResponders) ToWorkflowTaskPageVictorOpsOnCallRespondersOutput() WorkflowTaskPageVictorOpsOnCallRespondersOutput {
	return i.ToWorkflowTaskPageVictorOpsOnCallRespondersOutputWithContext(context.Background())
}

func (i *WorkflowTaskPageVictorOpsOnCallResponders) ToWorkflowTaskPageVictorOpsOnCallRespondersOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageVictorOpsOnCallRespondersOutput)
}

// WorkflowTaskPageVictorOpsOnCallRespondersArrayInput is an input type that accepts WorkflowTaskPageVictorOpsOnCallRespondersArray and WorkflowTaskPageVictorOpsOnCallRespondersArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskPageVictorOpsOnCallRespondersArrayInput` via:
//
//	WorkflowTaskPageVictorOpsOnCallRespondersArray{ WorkflowTaskPageVictorOpsOnCallRespondersArgs{...} }
type WorkflowTaskPageVictorOpsOnCallRespondersArrayInput interface {
	pulumi.Input

	ToWorkflowTaskPageVictorOpsOnCallRespondersArrayOutput() WorkflowTaskPageVictorOpsOnCallRespondersArrayOutput
	ToWorkflowTaskPageVictorOpsOnCallRespondersArrayOutputWithContext(context.Context) WorkflowTaskPageVictorOpsOnCallRespondersArrayOutput
}

type WorkflowTaskPageVictorOpsOnCallRespondersArray []WorkflowTaskPageVictorOpsOnCallRespondersInput

func (WorkflowTaskPageVictorOpsOnCallRespondersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskPageVictorOpsOnCallResponders)(nil)).Elem()
}

func (i WorkflowTaskPageVictorOpsOnCallRespondersArray) ToWorkflowTaskPageVictorOpsOnCallRespondersArrayOutput() WorkflowTaskPageVictorOpsOnCallRespondersArrayOutput {
	return i.ToWorkflowTaskPageVictorOpsOnCallRespondersArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskPageVictorOpsOnCallRespondersArray) ToWorkflowTaskPageVictorOpsOnCallRespondersArrayOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageVictorOpsOnCallRespondersArrayOutput)
}

// WorkflowTaskPageVictorOpsOnCallRespondersMapInput is an input type that accepts WorkflowTaskPageVictorOpsOnCallRespondersMap and WorkflowTaskPageVictorOpsOnCallRespondersMapOutput values.
// You can construct a concrete instance of `WorkflowTaskPageVictorOpsOnCallRespondersMapInput` via:
//
//	WorkflowTaskPageVictorOpsOnCallRespondersMap{ "key": WorkflowTaskPageVictorOpsOnCallRespondersArgs{...} }
type WorkflowTaskPageVictorOpsOnCallRespondersMapInput interface {
	pulumi.Input

	ToWorkflowTaskPageVictorOpsOnCallRespondersMapOutput() WorkflowTaskPageVictorOpsOnCallRespondersMapOutput
	ToWorkflowTaskPageVictorOpsOnCallRespondersMapOutputWithContext(context.Context) WorkflowTaskPageVictorOpsOnCallRespondersMapOutput
}

type WorkflowTaskPageVictorOpsOnCallRespondersMap map[string]WorkflowTaskPageVictorOpsOnCallRespondersInput

func (WorkflowTaskPageVictorOpsOnCallRespondersMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskPageVictorOpsOnCallResponders)(nil)).Elem()
}

func (i WorkflowTaskPageVictorOpsOnCallRespondersMap) ToWorkflowTaskPageVictorOpsOnCallRespondersMapOutput() WorkflowTaskPageVictorOpsOnCallRespondersMapOutput {
	return i.ToWorkflowTaskPageVictorOpsOnCallRespondersMapOutputWithContext(context.Background())
}

func (i WorkflowTaskPageVictorOpsOnCallRespondersMap) ToWorkflowTaskPageVictorOpsOnCallRespondersMapOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageVictorOpsOnCallRespondersMapOutput)
}

type WorkflowTaskPageVictorOpsOnCallRespondersOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageVictorOpsOnCallRespondersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPageVictorOpsOnCallResponders)(nil)).Elem()
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersOutput() WorkflowTaskPageVictorOpsOnCallRespondersOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskPageVictorOpsOnCallRespondersOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageVictorOpsOnCallResponders) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskPageVictorOpsOnCallRespondersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskPageVictorOpsOnCallResponders) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskPageVictorOpsOnCallRespondersOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskPageVictorOpsOnCallResponders) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskPageVictorOpsOnCallRespondersOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageVictorOpsOnCallResponders) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskPageVictorOpsOnCallRespondersOutput) TaskParams() WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskPageVictorOpsOnCallResponders) WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskPageVictorOpsOnCallRespondersTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskPageVictorOpsOnCallRespondersOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskPageVictorOpsOnCallResponders) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskPageVictorOpsOnCallRespondersArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageVictorOpsOnCallRespondersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskPageVictorOpsOnCallResponders)(nil)).Elem()
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersArrayOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersArrayOutput() WorkflowTaskPageVictorOpsOnCallRespondersArrayOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersArrayOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersArrayOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersArrayOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersArrayOutput) Index(i pulumi.IntInput) WorkflowTaskPageVictorOpsOnCallRespondersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskPageVictorOpsOnCallResponders {
		return vs[0].([]*WorkflowTaskPageVictorOpsOnCallResponders)[vs[1].(int)]
	}).(WorkflowTaskPageVictorOpsOnCallRespondersOutput)
}

type WorkflowTaskPageVictorOpsOnCallRespondersMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageVictorOpsOnCallRespondersMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskPageVictorOpsOnCallResponders)(nil)).Elem()
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersMapOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersMapOutput() WorkflowTaskPageVictorOpsOnCallRespondersMapOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersMapOutput) ToWorkflowTaskPageVictorOpsOnCallRespondersMapOutputWithContext(ctx context.Context) WorkflowTaskPageVictorOpsOnCallRespondersMapOutput {
	return o
}

func (o WorkflowTaskPageVictorOpsOnCallRespondersMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskPageVictorOpsOnCallRespondersOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskPageVictorOpsOnCallResponders {
		return vs[0].(map[string]*WorkflowTaskPageVictorOpsOnCallResponders)[vs[1].(string)]
	}).(WorkflowTaskPageVictorOpsOnCallRespondersOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageVictorOpsOnCallRespondersInput)(nil)).Elem(), &WorkflowTaskPageVictorOpsOnCallResponders{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageVictorOpsOnCallRespondersArrayInput)(nil)).Elem(), WorkflowTaskPageVictorOpsOnCallRespondersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageVictorOpsOnCallRespondersMapInput)(nil)).Elem(), WorkflowTaskPageVictorOpsOnCallRespondersMap{})
	pulumi.RegisterOutputType(WorkflowTaskPageVictorOpsOnCallRespondersOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageVictorOpsOnCallRespondersArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageVictorOpsOnCallRespondersMapOutput{})
}
