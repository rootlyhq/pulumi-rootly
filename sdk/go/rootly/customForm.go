// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

type CustomForm struct {
	pulumi.CustomResourceState

	// The Slack command used to trigger this form.
	Command     pulumi.StringOutput  `pulumi:"command"`
	Description pulumi.StringOutput  `pulumi:"description"`
	Enabled     pulumi.BoolPtrOutput `pulumi:"enabled"`
	// The name of the custom form.
	Name pulumi.StringOutput `pulumi:"name"`
	// The custom form slug. Add this to form*field.shown or form*field.required to associate form fields with custom forms.
	Slug pulumi.StringOutput `pulumi:"slug"`
}

// NewCustomForm registers a new resource with the given unique name, arguments, and options.
func NewCustomForm(ctx *pulumi.Context,
	name string, args *CustomFormArgs, opts ...pulumi.ResourceOption) (*CustomForm, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Command == nil {
		return nil, errors.New("invalid value for required argument 'Command'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomForm
	err := ctx.RegisterResource("rootly:index/customForm:CustomForm", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomForm gets an existing CustomForm resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomForm(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomFormState, opts ...pulumi.ResourceOption) (*CustomForm, error) {
	var resource CustomForm
	err := ctx.ReadResource("rootly:index/customForm:CustomForm", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomForm resources.
type customFormState struct {
	// The Slack command used to trigger this form.
	Command     *string `pulumi:"command"`
	Description *string `pulumi:"description"`
	Enabled     *bool   `pulumi:"enabled"`
	// The name of the custom form.
	Name *string `pulumi:"name"`
	// The custom form slug. Add this to form*field.shown or form*field.required to associate form fields with custom forms.
	Slug *string `pulumi:"slug"`
}

type CustomFormState struct {
	// The Slack command used to trigger this form.
	Command     pulumi.StringPtrInput
	Description pulumi.StringPtrInput
	Enabled     pulumi.BoolPtrInput
	// The name of the custom form.
	Name pulumi.StringPtrInput
	// The custom form slug. Add this to form*field.shown or form*field.required to associate form fields with custom forms.
	Slug pulumi.StringPtrInput
}

func (CustomFormState) ElementType() reflect.Type {
	return reflect.TypeOf((*customFormState)(nil)).Elem()
}

type customFormArgs struct {
	// The Slack command used to trigger this form.
	Command     string  `pulumi:"command"`
	Description *string `pulumi:"description"`
	Enabled     *bool   `pulumi:"enabled"`
	// The name of the custom form.
	Name *string `pulumi:"name"`
	// The custom form slug. Add this to form*field.shown or form*field.required to associate form fields with custom forms.
	Slug *string `pulumi:"slug"`
}

// The set of arguments for constructing a CustomForm resource.
type CustomFormArgs struct {
	// The Slack command used to trigger this form.
	Command     pulumi.StringInput
	Description pulumi.StringPtrInput
	Enabled     pulumi.BoolPtrInput
	// The name of the custom form.
	Name pulumi.StringPtrInput
	// The custom form slug. Add this to form*field.shown or form*field.required to associate form fields with custom forms.
	Slug pulumi.StringPtrInput
}

func (CustomFormArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customFormArgs)(nil)).Elem()
}

type CustomFormInput interface {
	pulumi.Input

	ToCustomFormOutput() CustomFormOutput
	ToCustomFormOutputWithContext(ctx context.Context) CustomFormOutput
}

func (*CustomForm) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomForm)(nil)).Elem()
}

func (i *CustomForm) ToCustomFormOutput() CustomFormOutput {
	return i.ToCustomFormOutputWithContext(context.Background())
}

func (i *CustomForm) ToCustomFormOutputWithContext(ctx context.Context) CustomFormOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomFormOutput)
}

// CustomFormArrayInput is an input type that accepts CustomFormArray and CustomFormArrayOutput values.
// You can construct a concrete instance of `CustomFormArrayInput` via:
//
//	CustomFormArray{ CustomFormArgs{...} }
type CustomFormArrayInput interface {
	pulumi.Input

	ToCustomFormArrayOutput() CustomFormArrayOutput
	ToCustomFormArrayOutputWithContext(context.Context) CustomFormArrayOutput
}

type CustomFormArray []CustomFormInput

func (CustomFormArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomForm)(nil)).Elem()
}

func (i CustomFormArray) ToCustomFormArrayOutput() CustomFormArrayOutput {
	return i.ToCustomFormArrayOutputWithContext(context.Background())
}

func (i CustomFormArray) ToCustomFormArrayOutputWithContext(ctx context.Context) CustomFormArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomFormArrayOutput)
}

// CustomFormMapInput is an input type that accepts CustomFormMap and CustomFormMapOutput values.
// You can construct a concrete instance of `CustomFormMapInput` via:
//
//	CustomFormMap{ "key": CustomFormArgs{...} }
type CustomFormMapInput interface {
	pulumi.Input

	ToCustomFormMapOutput() CustomFormMapOutput
	ToCustomFormMapOutputWithContext(context.Context) CustomFormMapOutput
}

type CustomFormMap map[string]CustomFormInput

func (CustomFormMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomForm)(nil)).Elem()
}

func (i CustomFormMap) ToCustomFormMapOutput() CustomFormMapOutput {
	return i.ToCustomFormMapOutputWithContext(context.Background())
}

func (i CustomFormMap) ToCustomFormMapOutputWithContext(ctx context.Context) CustomFormMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomFormMapOutput)
}

type CustomFormOutput struct{ *pulumi.OutputState }

func (CustomFormOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomForm)(nil)).Elem()
}

func (o CustomFormOutput) ToCustomFormOutput() CustomFormOutput {
	return o
}

func (o CustomFormOutput) ToCustomFormOutputWithContext(ctx context.Context) CustomFormOutput {
	return o
}

// The Slack command used to trigger this form.
func (o CustomFormOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomForm) pulumi.StringOutput { return v.Command }).(pulumi.StringOutput)
}

func (o CustomFormOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomForm) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o CustomFormOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomForm) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The name of the custom form.
func (o CustomFormOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomForm) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The custom form slug. Add this to form*field.shown or form*field.required to associate form fields with custom forms.
func (o CustomFormOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomForm) pulumi.StringOutput { return v.Slug }).(pulumi.StringOutput)
}

type CustomFormArrayOutput struct{ *pulumi.OutputState }

func (CustomFormArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomForm)(nil)).Elem()
}

func (o CustomFormArrayOutput) ToCustomFormArrayOutput() CustomFormArrayOutput {
	return o
}

func (o CustomFormArrayOutput) ToCustomFormArrayOutputWithContext(ctx context.Context) CustomFormArrayOutput {
	return o
}

func (o CustomFormArrayOutput) Index(i pulumi.IntInput) CustomFormOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomForm {
		return vs[0].([]*CustomForm)[vs[1].(int)]
	}).(CustomFormOutput)
}

type CustomFormMapOutput struct{ *pulumi.OutputState }

func (CustomFormMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomForm)(nil)).Elem()
}

func (o CustomFormMapOutput) ToCustomFormMapOutput() CustomFormMapOutput {
	return o
}

func (o CustomFormMapOutput) ToCustomFormMapOutputWithContext(ctx context.Context) CustomFormMapOutput {
	return o
}

func (o CustomFormMapOutput) MapIndex(k pulumi.StringInput) CustomFormOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomForm {
		return vs[0].(map[string]*CustomForm)[vs[1].(string)]
	}).(CustomFormOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomFormInput)(nil)).Elem(), &CustomForm{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomFormArrayInput)(nil)).Elem(), CustomFormArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomFormMapInput)(nil)).Elem(), CustomFormMap{})
	pulumi.RegisterOutputType(CustomFormOutput{})
	pulumi.RegisterOutputType(CustomFormArrayOutput{})
	pulumi.RegisterOutputType(CustomFormMapOutput{})
}
