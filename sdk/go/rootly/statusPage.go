// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

type StatusPage struct {
	pulumi.CustomResourceState

	// Allow search engines to include your public status page in search results. Value must be one of true or false
	AllowSearchEngineIndex pulumi.BoolOutput `pulumi:"allowSearchEngineIndex"`
	// Enable authentication. Value must be one of true or false
	AuthenticationEnabled pulumi.BoolOutput `pulumi:"authenticationEnabled"`
	// Authentication password
	AuthenticationPassword pulumi.StringOutput `pulumi:"authenticationPassword"`
	// The description of the status page
	Description pulumi.StringOutput  `pulumi:"description"`
	Enabled     pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Message showing when at least one component is not operational
	FailureMessage pulumi.StringOutput `pulumi:"failureMessage"`
	// The color of the footer. Eg. "#1F2F41"
	FooterColor pulumi.StringOutput `pulumi:"footerColor"`
	// Functionalities attached to the status page
	FunctionalityIds pulumi.StringArrayOutput `pulumi:"functionalityIds"`
	// Google Analytics tracking ID
	GaTrackingId pulumi.StringOutput `pulumi:"gaTrackingId"`
	// The color of the header. Eg. "#0061F2"
	HeaderColor pulumi.StringOutput `pulumi:"headerColor"`
	// Make the status page accessible to the public. Value must be one of true or false
	Public pulumi.BoolOutput `pulumi:"public"`
	// The public description of the status page
	PublicDescription pulumi.StringOutput `pulumi:"publicDescription"`
	// The public title of the status page
	PublicTitle pulumi.StringOutput `pulumi:"publicTitle"`
	// Services attached to the status page
	ServiceIds pulumi.StringArrayOutput `pulumi:"serviceIds"`
	// Show uptime. Value must be one of true or false
	ShowUptime pulumi.BoolOutput `pulumi:"showUptime"`
	// Show uptime over x days. Value must be one of `30`, `60`, `90`, `180`, `360`.
	ShowUptimeLastDays pulumi.IntOutput `pulumi:"showUptimeLastDays"`
	// Message showing when all components are operational
	SuccessMessage pulumi.StringOutput `pulumi:"successMessage"`
	// A valid IANA time zone name.
	TimeZone pulumi.StringPtrOutput `pulumi:"timeZone"`
	// The title of the status page
	Title pulumi.StringOutput `pulumi:"title"`
	// Website Privacy URL
	WebsitePrivacyUrl pulumi.StringOutput `pulumi:"websitePrivacyUrl"`
	// Website Support URL
	WebsiteSupportUrl pulumi.StringOutput `pulumi:"websiteSupportUrl"`
	// Website URL
	WebsiteUrl pulumi.StringOutput `pulumi:"websiteUrl"`
}

// NewStatusPage registers a new resource with the given unique name, arguments, and options.
func NewStatusPage(ctx *pulumi.Context,
	name string, args *StatusPageArgs, opts ...pulumi.ResourceOption) (*StatusPage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Title == nil {
		return nil, errors.New("invalid value for required argument 'Title'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StatusPage
	err := ctx.RegisterResource("rootly:index/statusPage:StatusPage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStatusPage gets an existing StatusPage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStatusPage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StatusPageState, opts ...pulumi.ResourceOption) (*StatusPage, error) {
	var resource StatusPage
	err := ctx.ReadResource("rootly:index/statusPage:StatusPage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StatusPage resources.
type statusPageState struct {
	// Allow search engines to include your public status page in search results. Value must be one of true or false
	AllowSearchEngineIndex *bool `pulumi:"allowSearchEngineIndex"`
	// Enable authentication. Value must be one of true or false
	AuthenticationEnabled *bool `pulumi:"authenticationEnabled"`
	// Authentication password
	AuthenticationPassword *string `pulumi:"authenticationPassword"`
	// The description of the status page
	Description *string `pulumi:"description"`
	Enabled     *bool   `pulumi:"enabled"`
	// Message showing when at least one component is not operational
	FailureMessage *string `pulumi:"failureMessage"`
	// The color of the footer. Eg. "#1F2F41"
	FooterColor *string `pulumi:"footerColor"`
	// Functionalities attached to the status page
	FunctionalityIds []string `pulumi:"functionalityIds"`
	// Google Analytics tracking ID
	GaTrackingId *string `pulumi:"gaTrackingId"`
	// The color of the header. Eg. "#0061F2"
	HeaderColor *string `pulumi:"headerColor"`
	// Make the status page accessible to the public. Value must be one of true or false
	Public *bool `pulumi:"public"`
	// The public description of the status page
	PublicDescription *string `pulumi:"publicDescription"`
	// The public title of the status page
	PublicTitle *string `pulumi:"publicTitle"`
	// Services attached to the status page
	ServiceIds []string `pulumi:"serviceIds"`
	// Show uptime. Value must be one of true or false
	ShowUptime *bool `pulumi:"showUptime"`
	// Show uptime over x days. Value must be one of `30`, `60`, `90`, `180`, `360`.
	ShowUptimeLastDays *int `pulumi:"showUptimeLastDays"`
	// Message showing when all components are operational
	SuccessMessage *string `pulumi:"successMessage"`
	// A valid IANA time zone name.
	TimeZone *string `pulumi:"timeZone"`
	// The title of the status page
	Title *string `pulumi:"title"`
	// Website Privacy URL
	WebsitePrivacyUrl *string `pulumi:"websitePrivacyUrl"`
	// Website Support URL
	WebsiteSupportUrl *string `pulumi:"websiteSupportUrl"`
	// Website URL
	WebsiteUrl *string `pulumi:"websiteUrl"`
}

type StatusPageState struct {
	// Allow search engines to include your public status page in search results. Value must be one of true or false
	AllowSearchEngineIndex pulumi.BoolPtrInput
	// Enable authentication. Value must be one of true or false
	AuthenticationEnabled pulumi.BoolPtrInput
	// Authentication password
	AuthenticationPassword pulumi.StringPtrInput
	// The description of the status page
	Description pulumi.StringPtrInput
	Enabled     pulumi.BoolPtrInput
	// Message showing when at least one component is not operational
	FailureMessage pulumi.StringPtrInput
	// The color of the footer. Eg. "#1F2F41"
	FooterColor pulumi.StringPtrInput
	// Functionalities attached to the status page
	FunctionalityIds pulumi.StringArrayInput
	// Google Analytics tracking ID
	GaTrackingId pulumi.StringPtrInput
	// The color of the header. Eg. "#0061F2"
	HeaderColor pulumi.StringPtrInput
	// Make the status page accessible to the public. Value must be one of true or false
	Public pulumi.BoolPtrInput
	// The public description of the status page
	PublicDescription pulumi.StringPtrInput
	// The public title of the status page
	PublicTitle pulumi.StringPtrInput
	// Services attached to the status page
	ServiceIds pulumi.StringArrayInput
	// Show uptime. Value must be one of true or false
	ShowUptime pulumi.BoolPtrInput
	// Show uptime over x days. Value must be one of `30`, `60`, `90`, `180`, `360`.
	ShowUptimeLastDays pulumi.IntPtrInput
	// Message showing when all components are operational
	SuccessMessage pulumi.StringPtrInput
	// A valid IANA time zone name.
	TimeZone pulumi.StringPtrInput
	// The title of the status page
	Title pulumi.StringPtrInput
	// Website Privacy URL
	WebsitePrivacyUrl pulumi.StringPtrInput
	// Website Support URL
	WebsiteSupportUrl pulumi.StringPtrInput
	// Website URL
	WebsiteUrl pulumi.StringPtrInput
}

func (StatusPageState) ElementType() reflect.Type {
	return reflect.TypeOf((*statusPageState)(nil)).Elem()
}

type statusPageArgs struct {
	// Allow search engines to include your public status page in search results. Value must be one of true or false
	AllowSearchEngineIndex *bool `pulumi:"allowSearchEngineIndex"`
	// Enable authentication. Value must be one of true or false
	AuthenticationEnabled *bool `pulumi:"authenticationEnabled"`
	// Authentication password
	AuthenticationPassword *string `pulumi:"authenticationPassword"`
	// The description of the status page
	Description *string `pulumi:"description"`
	Enabled     *bool   `pulumi:"enabled"`
	// Message showing when at least one component is not operational
	FailureMessage *string `pulumi:"failureMessage"`
	// The color of the footer. Eg. "#1F2F41"
	FooterColor *string `pulumi:"footerColor"`
	// Functionalities attached to the status page
	FunctionalityIds []string `pulumi:"functionalityIds"`
	// Google Analytics tracking ID
	GaTrackingId *string `pulumi:"gaTrackingId"`
	// The color of the header. Eg. "#0061F2"
	HeaderColor *string `pulumi:"headerColor"`
	// Make the status page accessible to the public. Value must be one of true or false
	Public *bool `pulumi:"public"`
	// The public description of the status page
	PublicDescription *string `pulumi:"publicDescription"`
	// The public title of the status page
	PublicTitle *string `pulumi:"publicTitle"`
	// Services attached to the status page
	ServiceIds []string `pulumi:"serviceIds"`
	// Show uptime. Value must be one of true or false
	ShowUptime *bool `pulumi:"showUptime"`
	// Show uptime over x days. Value must be one of `30`, `60`, `90`, `180`, `360`.
	ShowUptimeLastDays *int `pulumi:"showUptimeLastDays"`
	// Message showing when all components are operational
	SuccessMessage *string `pulumi:"successMessage"`
	// A valid IANA time zone name.
	TimeZone *string `pulumi:"timeZone"`
	// The title of the status page
	Title string `pulumi:"title"`
	// Website Privacy URL
	WebsitePrivacyUrl *string `pulumi:"websitePrivacyUrl"`
	// Website Support URL
	WebsiteSupportUrl *string `pulumi:"websiteSupportUrl"`
	// Website URL
	WebsiteUrl *string `pulumi:"websiteUrl"`
}

// The set of arguments for constructing a StatusPage resource.
type StatusPageArgs struct {
	// Allow search engines to include your public status page in search results. Value must be one of true or false
	AllowSearchEngineIndex pulumi.BoolPtrInput
	// Enable authentication. Value must be one of true or false
	AuthenticationEnabled pulumi.BoolPtrInput
	// Authentication password
	AuthenticationPassword pulumi.StringPtrInput
	// The description of the status page
	Description pulumi.StringPtrInput
	Enabled     pulumi.BoolPtrInput
	// Message showing when at least one component is not operational
	FailureMessage pulumi.StringPtrInput
	// The color of the footer. Eg. "#1F2F41"
	FooterColor pulumi.StringPtrInput
	// Functionalities attached to the status page
	FunctionalityIds pulumi.StringArrayInput
	// Google Analytics tracking ID
	GaTrackingId pulumi.StringPtrInput
	// The color of the header. Eg. "#0061F2"
	HeaderColor pulumi.StringPtrInput
	// Make the status page accessible to the public. Value must be one of true or false
	Public pulumi.BoolPtrInput
	// The public description of the status page
	PublicDescription pulumi.StringPtrInput
	// The public title of the status page
	PublicTitle pulumi.StringPtrInput
	// Services attached to the status page
	ServiceIds pulumi.StringArrayInput
	// Show uptime. Value must be one of true or false
	ShowUptime pulumi.BoolPtrInput
	// Show uptime over x days. Value must be one of `30`, `60`, `90`, `180`, `360`.
	ShowUptimeLastDays pulumi.IntPtrInput
	// Message showing when all components are operational
	SuccessMessage pulumi.StringPtrInput
	// A valid IANA time zone name.
	TimeZone pulumi.StringPtrInput
	// The title of the status page
	Title pulumi.StringInput
	// Website Privacy URL
	WebsitePrivacyUrl pulumi.StringPtrInput
	// Website Support URL
	WebsiteSupportUrl pulumi.StringPtrInput
	// Website URL
	WebsiteUrl pulumi.StringPtrInput
}

func (StatusPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*statusPageArgs)(nil)).Elem()
}

type StatusPageInput interface {
	pulumi.Input

	ToStatusPageOutput() StatusPageOutput
	ToStatusPageOutputWithContext(ctx context.Context) StatusPageOutput
}

func (*StatusPage) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusPage)(nil)).Elem()
}

func (i *StatusPage) ToStatusPageOutput() StatusPageOutput {
	return i.ToStatusPageOutputWithContext(context.Background())
}

func (i *StatusPage) ToStatusPageOutputWithContext(ctx context.Context) StatusPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusPageOutput)
}

// StatusPageArrayInput is an input type that accepts StatusPageArray and StatusPageArrayOutput values.
// You can construct a concrete instance of `StatusPageArrayInput` via:
//
//	StatusPageArray{ StatusPageArgs{...} }
type StatusPageArrayInput interface {
	pulumi.Input

	ToStatusPageArrayOutput() StatusPageArrayOutput
	ToStatusPageArrayOutputWithContext(context.Context) StatusPageArrayOutput
}

type StatusPageArray []StatusPageInput

func (StatusPageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StatusPage)(nil)).Elem()
}

func (i StatusPageArray) ToStatusPageArrayOutput() StatusPageArrayOutput {
	return i.ToStatusPageArrayOutputWithContext(context.Background())
}

func (i StatusPageArray) ToStatusPageArrayOutputWithContext(ctx context.Context) StatusPageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusPageArrayOutput)
}

// StatusPageMapInput is an input type that accepts StatusPageMap and StatusPageMapOutput values.
// You can construct a concrete instance of `StatusPageMapInput` via:
//
//	StatusPageMap{ "key": StatusPageArgs{...} }
type StatusPageMapInput interface {
	pulumi.Input

	ToStatusPageMapOutput() StatusPageMapOutput
	ToStatusPageMapOutputWithContext(context.Context) StatusPageMapOutput
}

type StatusPageMap map[string]StatusPageInput

func (StatusPageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StatusPage)(nil)).Elem()
}

func (i StatusPageMap) ToStatusPageMapOutput() StatusPageMapOutput {
	return i.ToStatusPageMapOutputWithContext(context.Background())
}

func (i StatusPageMap) ToStatusPageMapOutputWithContext(ctx context.Context) StatusPageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusPageMapOutput)
}

type StatusPageOutput struct{ *pulumi.OutputState }

func (StatusPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusPage)(nil)).Elem()
}

func (o StatusPageOutput) ToStatusPageOutput() StatusPageOutput {
	return o
}

func (o StatusPageOutput) ToStatusPageOutputWithContext(ctx context.Context) StatusPageOutput {
	return o
}

// Allow search engines to include your public status page in search results. Value must be one of true or false
func (o StatusPageOutput) AllowSearchEngineIndex() pulumi.BoolOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.BoolOutput { return v.AllowSearchEngineIndex }).(pulumi.BoolOutput)
}

// Enable authentication. Value must be one of true or false
func (o StatusPageOutput) AuthenticationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.BoolOutput { return v.AuthenticationEnabled }).(pulumi.BoolOutput)
}

// Authentication password
func (o StatusPageOutput) AuthenticationPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.StringOutput { return v.AuthenticationPassword }).(pulumi.StringOutput)
}

// The description of the status page
func (o StatusPageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o StatusPageOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Message showing when at least one component is not operational
func (o StatusPageOutput) FailureMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.StringOutput { return v.FailureMessage }).(pulumi.StringOutput)
}

// The color of the footer. Eg. "#1F2F41"
func (o StatusPageOutput) FooterColor() pulumi.StringOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.StringOutput { return v.FooterColor }).(pulumi.StringOutput)
}

// Functionalities attached to the status page
func (o StatusPageOutput) FunctionalityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.StringArrayOutput { return v.FunctionalityIds }).(pulumi.StringArrayOutput)
}

// Google Analytics tracking ID
func (o StatusPageOutput) GaTrackingId() pulumi.StringOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.StringOutput { return v.GaTrackingId }).(pulumi.StringOutput)
}

// The color of the header. Eg. "#0061F2"
func (o StatusPageOutput) HeaderColor() pulumi.StringOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.StringOutput { return v.HeaderColor }).(pulumi.StringOutput)
}

// Make the status page accessible to the public. Value must be one of true or false
func (o StatusPageOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.BoolOutput { return v.Public }).(pulumi.BoolOutput)
}

// The public description of the status page
func (o StatusPageOutput) PublicDescription() pulumi.StringOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.StringOutput { return v.PublicDescription }).(pulumi.StringOutput)
}

// The public title of the status page
func (o StatusPageOutput) PublicTitle() pulumi.StringOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.StringOutput { return v.PublicTitle }).(pulumi.StringOutput)
}

// Services attached to the status page
func (o StatusPageOutput) ServiceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.StringArrayOutput { return v.ServiceIds }).(pulumi.StringArrayOutput)
}

// Show uptime. Value must be one of true or false
func (o StatusPageOutput) ShowUptime() pulumi.BoolOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.BoolOutput { return v.ShowUptime }).(pulumi.BoolOutput)
}

// Show uptime over x days. Value must be one of `30`, `60`, `90`, `180`, `360`.
func (o StatusPageOutput) ShowUptimeLastDays() pulumi.IntOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.IntOutput { return v.ShowUptimeLastDays }).(pulumi.IntOutput)
}

// Message showing when all components are operational
func (o StatusPageOutput) SuccessMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.StringOutput { return v.SuccessMessage }).(pulumi.StringOutput)
}

// A valid IANA time zone name.
func (o StatusPageOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.StringPtrOutput { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// The title of the status page
func (o StatusPageOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

// Website Privacy URL
func (o StatusPageOutput) WebsitePrivacyUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.StringOutput { return v.WebsitePrivacyUrl }).(pulumi.StringOutput)
}

// Website Support URL
func (o StatusPageOutput) WebsiteSupportUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.StringOutput { return v.WebsiteSupportUrl }).(pulumi.StringOutput)
}

// Website URL
func (o StatusPageOutput) WebsiteUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *StatusPage) pulumi.StringOutput { return v.WebsiteUrl }).(pulumi.StringOutput)
}

type StatusPageArrayOutput struct{ *pulumi.OutputState }

func (StatusPageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StatusPage)(nil)).Elem()
}

func (o StatusPageArrayOutput) ToStatusPageArrayOutput() StatusPageArrayOutput {
	return o
}

func (o StatusPageArrayOutput) ToStatusPageArrayOutputWithContext(ctx context.Context) StatusPageArrayOutput {
	return o
}

func (o StatusPageArrayOutput) Index(i pulumi.IntInput) StatusPageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StatusPage {
		return vs[0].([]*StatusPage)[vs[1].(int)]
	}).(StatusPageOutput)
}

type StatusPageMapOutput struct{ *pulumi.OutputState }

func (StatusPageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StatusPage)(nil)).Elem()
}

func (o StatusPageMapOutput) ToStatusPageMapOutput() StatusPageMapOutput {
	return o
}

func (o StatusPageMapOutput) ToStatusPageMapOutputWithContext(ctx context.Context) StatusPageMapOutput {
	return o
}

func (o StatusPageMapOutput) MapIndex(k pulumi.StringInput) StatusPageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StatusPage {
		return vs[0].(map[string]*StatusPage)[vs[1].(string)]
	}).(StatusPageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StatusPageInput)(nil)).Elem(), &StatusPage{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatusPageArrayInput)(nil)).Elem(), StatusPageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatusPageMapInput)(nil)).Elem(), StatusPageMap{})
	pulumi.RegisterOutputType(StatusPageOutput{})
	pulumi.RegisterOutputType(StatusPageArrayOutput{})
	pulumi.RegisterOutputType(StatusPageMapOutput{})
}
