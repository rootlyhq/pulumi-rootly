// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow print task.
type WorkflowTaskPrint struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskPrintTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskPrint registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskPrint(ctx *pulumi.Context,
	name string, args *WorkflowTaskPrintArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskPrint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskPrint
	err := ctx.RegisterResource("rootly:index/workflowTaskPrint:WorkflowTaskPrint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskPrint gets an existing WorkflowTaskPrint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskPrint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskPrintState, opts ...pulumi.ResourceOption) (*WorkflowTaskPrint, error) {
	var resource WorkflowTaskPrint
	err := ctx.ReadResource("rootly:index/workflowTaskPrint:WorkflowTaskPrint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskPrint resources.
type workflowTaskPrintState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskPrintTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskPrintState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskPrintTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskPrintState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskPrintState)(nil)).Elem()
}

type workflowTaskPrintArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskPrintTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskPrint resource.
type WorkflowTaskPrintArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskPrintTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskPrintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskPrintArgs)(nil)).Elem()
}

type WorkflowTaskPrintInput interface {
	pulumi.Input

	ToWorkflowTaskPrintOutput() WorkflowTaskPrintOutput
	ToWorkflowTaskPrintOutputWithContext(ctx context.Context) WorkflowTaskPrintOutput
}

func (*WorkflowTaskPrint) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPrint)(nil)).Elem()
}

func (i *WorkflowTaskPrint) ToWorkflowTaskPrintOutput() WorkflowTaskPrintOutput {
	return i.ToWorkflowTaskPrintOutputWithContext(context.Background())
}

func (i *WorkflowTaskPrint) ToWorkflowTaskPrintOutputWithContext(ctx context.Context) WorkflowTaskPrintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPrintOutput)
}

// WorkflowTaskPrintArrayInput is an input type that accepts WorkflowTaskPrintArray and WorkflowTaskPrintArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskPrintArrayInput` via:
//
//	WorkflowTaskPrintArray{ WorkflowTaskPrintArgs{...} }
type WorkflowTaskPrintArrayInput interface {
	pulumi.Input

	ToWorkflowTaskPrintArrayOutput() WorkflowTaskPrintArrayOutput
	ToWorkflowTaskPrintArrayOutputWithContext(context.Context) WorkflowTaskPrintArrayOutput
}

type WorkflowTaskPrintArray []WorkflowTaskPrintInput

func (WorkflowTaskPrintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskPrint)(nil)).Elem()
}

func (i WorkflowTaskPrintArray) ToWorkflowTaskPrintArrayOutput() WorkflowTaskPrintArrayOutput {
	return i.ToWorkflowTaskPrintArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskPrintArray) ToWorkflowTaskPrintArrayOutputWithContext(ctx context.Context) WorkflowTaskPrintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPrintArrayOutput)
}

// WorkflowTaskPrintMapInput is an input type that accepts WorkflowTaskPrintMap and WorkflowTaskPrintMapOutput values.
// You can construct a concrete instance of `WorkflowTaskPrintMapInput` via:
//
//	WorkflowTaskPrintMap{ "key": WorkflowTaskPrintArgs{...} }
type WorkflowTaskPrintMapInput interface {
	pulumi.Input

	ToWorkflowTaskPrintMapOutput() WorkflowTaskPrintMapOutput
	ToWorkflowTaskPrintMapOutputWithContext(context.Context) WorkflowTaskPrintMapOutput
}

type WorkflowTaskPrintMap map[string]WorkflowTaskPrintInput

func (WorkflowTaskPrintMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskPrint)(nil)).Elem()
}

func (i WorkflowTaskPrintMap) ToWorkflowTaskPrintMapOutput() WorkflowTaskPrintMapOutput {
	return i.ToWorkflowTaskPrintMapOutputWithContext(context.Background())
}

func (i WorkflowTaskPrintMap) ToWorkflowTaskPrintMapOutputWithContext(ctx context.Context) WorkflowTaskPrintMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPrintMapOutput)
}

type WorkflowTaskPrintOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPrintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPrint)(nil)).Elem()
}

func (o WorkflowTaskPrintOutput) ToWorkflowTaskPrintOutput() WorkflowTaskPrintOutput {
	return o
}

func (o WorkflowTaskPrintOutput) ToWorkflowTaskPrintOutputWithContext(ctx context.Context) WorkflowTaskPrintOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskPrintOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPrint) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskPrintOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskPrint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskPrintOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskPrint) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskPrintOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPrint) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskPrintOutput) TaskParams() WorkflowTaskPrintTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskPrint) WorkflowTaskPrintTaskParamsOutput { return v.TaskParams }).(WorkflowTaskPrintTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskPrintOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskPrint) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskPrintArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPrintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskPrint)(nil)).Elem()
}

func (o WorkflowTaskPrintArrayOutput) ToWorkflowTaskPrintArrayOutput() WorkflowTaskPrintArrayOutput {
	return o
}

func (o WorkflowTaskPrintArrayOutput) ToWorkflowTaskPrintArrayOutputWithContext(ctx context.Context) WorkflowTaskPrintArrayOutput {
	return o
}

func (o WorkflowTaskPrintArrayOutput) Index(i pulumi.IntInput) WorkflowTaskPrintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskPrint {
		return vs[0].([]*WorkflowTaskPrint)[vs[1].(int)]
	}).(WorkflowTaskPrintOutput)
}

type WorkflowTaskPrintMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPrintMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskPrint)(nil)).Elem()
}

func (o WorkflowTaskPrintMapOutput) ToWorkflowTaskPrintMapOutput() WorkflowTaskPrintMapOutput {
	return o
}

func (o WorkflowTaskPrintMapOutput) ToWorkflowTaskPrintMapOutputWithContext(ctx context.Context) WorkflowTaskPrintMapOutput {
	return o
}

func (o WorkflowTaskPrintMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskPrintOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskPrint {
		return vs[0].(map[string]*WorkflowTaskPrint)[vs[1].(string)]
	}).(WorkflowTaskPrintOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPrintInput)(nil)).Elem(), &WorkflowTaskPrint{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPrintArrayInput)(nil)).Elem(), WorkflowTaskPrintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPrintMapInput)(nil)).Elem(), WorkflowTaskPrintMap{})
	pulumi.RegisterOutputType(WorkflowTaskPrintOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPrintArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPrintMapOutput{})
}
