// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow pageRootlyOnCallResponders task.
type WorkflowTaskPageRootlyOnCallResponders struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskPageRootlyOnCallResponders registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskPageRootlyOnCallResponders(ctx *pulumi.Context,
	name string, args *WorkflowTaskPageRootlyOnCallRespondersArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskPageRootlyOnCallResponders, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskPageRootlyOnCallResponders
	err := ctx.RegisterResource("rootly:index/workflowTaskPageRootlyOnCallResponders:WorkflowTaskPageRootlyOnCallResponders", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskPageRootlyOnCallResponders gets an existing WorkflowTaskPageRootlyOnCallResponders resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskPageRootlyOnCallResponders(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskPageRootlyOnCallRespondersState, opts ...pulumi.ResourceOption) (*WorkflowTaskPageRootlyOnCallResponders, error) {
	var resource WorkflowTaskPageRootlyOnCallResponders
	err := ctx.ReadResource("rootly:index/workflowTaskPageRootlyOnCallResponders:WorkflowTaskPageRootlyOnCallResponders", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskPageRootlyOnCallResponders resources.
type workflowTaskPageRootlyOnCallRespondersState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskPageRootlyOnCallRespondersTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskPageRootlyOnCallRespondersState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskPageRootlyOnCallRespondersTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskPageRootlyOnCallRespondersState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskPageRootlyOnCallRespondersState)(nil)).Elem()
}

type workflowTaskPageRootlyOnCallRespondersArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskPageRootlyOnCallRespondersTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskPageRootlyOnCallResponders resource.
type WorkflowTaskPageRootlyOnCallRespondersArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskPageRootlyOnCallRespondersTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskPageRootlyOnCallRespondersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskPageRootlyOnCallRespondersArgs)(nil)).Elem()
}

type WorkflowTaskPageRootlyOnCallRespondersInput interface {
	pulumi.Input

	ToWorkflowTaskPageRootlyOnCallRespondersOutput() WorkflowTaskPageRootlyOnCallRespondersOutput
	ToWorkflowTaskPageRootlyOnCallRespondersOutputWithContext(ctx context.Context) WorkflowTaskPageRootlyOnCallRespondersOutput
}

func (*WorkflowTaskPageRootlyOnCallResponders) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPageRootlyOnCallResponders)(nil)).Elem()
}

func (i *WorkflowTaskPageRootlyOnCallResponders) ToWorkflowTaskPageRootlyOnCallRespondersOutput() WorkflowTaskPageRootlyOnCallRespondersOutput {
	return i.ToWorkflowTaskPageRootlyOnCallRespondersOutputWithContext(context.Background())
}

func (i *WorkflowTaskPageRootlyOnCallResponders) ToWorkflowTaskPageRootlyOnCallRespondersOutputWithContext(ctx context.Context) WorkflowTaskPageRootlyOnCallRespondersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageRootlyOnCallRespondersOutput)
}

// WorkflowTaskPageRootlyOnCallRespondersArrayInput is an input type that accepts WorkflowTaskPageRootlyOnCallRespondersArray and WorkflowTaskPageRootlyOnCallRespondersArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskPageRootlyOnCallRespondersArrayInput` via:
//
//	WorkflowTaskPageRootlyOnCallRespondersArray{ WorkflowTaskPageRootlyOnCallRespondersArgs{...} }
type WorkflowTaskPageRootlyOnCallRespondersArrayInput interface {
	pulumi.Input

	ToWorkflowTaskPageRootlyOnCallRespondersArrayOutput() WorkflowTaskPageRootlyOnCallRespondersArrayOutput
	ToWorkflowTaskPageRootlyOnCallRespondersArrayOutputWithContext(context.Context) WorkflowTaskPageRootlyOnCallRespondersArrayOutput
}

type WorkflowTaskPageRootlyOnCallRespondersArray []WorkflowTaskPageRootlyOnCallRespondersInput

func (WorkflowTaskPageRootlyOnCallRespondersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskPageRootlyOnCallResponders)(nil)).Elem()
}

func (i WorkflowTaskPageRootlyOnCallRespondersArray) ToWorkflowTaskPageRootlyOnCallRespondersArrayOutput() WorkflowTaskPageRootlyOnCallRespondersArrayOutput {
	return i.ToWorkflowTaskPageRootlyOnCallRespondersArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskPageRootlyOnCallRespondersArray) ToWorkflowTaskPageRootlyOnCallRespondersArrayOutputWithContext(ctx context.Context) WorkflowTaskPageRootlyOnCallRespondersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageRootlyOnCallRespondersArrayOutput)
}

// WorkflowTaskPageRootlyOnCallRespondersMapInput is an input type that accepts WorkflowTaskPageRootlyOnCallRespondersMap and WorkflowTaskPageRootlyOnCallRespondersMapOutput values.
// You can construct a concrete instance of `WorkflowTaskPageRootlyOnCallRespondersMapInput` via:
//
//	WorkflowTaskPageRootlyOnCallRespondersMap{ "key": WorkflowTaskPageRootlyOnCallRespondersArgs{...} }
type WorkflowTaskPageRootlyOnCallRespondersMapInput interface {
	pulumi.Input

	ToWorkflowTaskPageRootlyOnCallRespondersMapOutput() WorkflowTaskPageRootlyOnCallRespondersMapOutput
	ToWorkflowTaskPageRootlyOnCallRespondersMapOutputWithContext(context.Context) WorkflowTaskPageRootlyOnCallRespondersMapOutput
}

type WorkflowTaskPageRootlyOnCallRespondersMap map[string]WorkflowTaskPageRootlyOnCallRespondersInput

func (WorkflowTaskPageRootlyOnCallRespondersMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskPageRootlyOnCallResponders)(nil)).Elem()
}

func (i WorkflowTaskPageRootlyOnCallRespondersMap) ToWorkflowTaskPageRootlyOnCallRespondersMapOutput() WorkflowTaskPageRootlyOnCallRespondersMapOutput {
	return i.ToWorkflowTaskPageRootlyOnCallRespondersMapOutputWithContext(context.Background())
}

func (i WorkflowTaskPageRootlyOnCallRespondersMap) ToWorkflowTaskPageRootlyOnCallRespondersMapOutputWithContext(ctx context.Context) WorkflowTaskPageRootlyOnCallRespondersMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageRootlyOnCallRespondersMapOutput)
}

type WorkflowTaskPageRootlyOnCallRespondersOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageRootlyOnCallRespondersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPageRootlyOnCallResponders)(nil)).Elem()
}

func (o WorkflowTaskPageRootlyOnCallRespondersOutput) ToWorkflowTaskPageRootlyOnCallRespondersOutput() WorkflowTaskPageRootlyOnCallRespondersOutput {
	return o
}

func (o WorkflowTaskPageRootlyOnCallRespondersOutput) ToWorkflowTaskPageRootlyOnCallRespondersOutputWithContext(ctx context.Context) WorkflowTaskPageRootlyOnCallRespondersOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskPageRootlyOnCallRespondersOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageRootlyOnCallResponders) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskPageRootlyOnCallRespondersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskPageRootlyOnCallResponders) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskPageRootlyOnCallRespondersOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskPageRootlyOnCallResponders) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskPageRootlyOnCallRespondersOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageRootlyOnCallResponders) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskPageRootlyOnCallRespondersOutput) TaskParams() WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskPageRootlyOnCallResponders) WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskPageRootlyOnCallRespondersTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskPageRootlyOnCallRespondersOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskPageRootlyOnCallResponders) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskPageRootlyOnCallRespondersArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageRootlyOnCallRespondersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskPageRootlyOnCallResponders)(nil)).Elem()
}

func (o WorkflowTaskPageRootlyOnCallRespondersArrayOutput) ToWorkflowTaskPageRootlyOnCallRespondersArrayOutput() WorkflowTaskPageRootlyOnCallRespondersArrayOutput {
	return o
}

func (o WorkflowTaskPageRootlyOnCallRespondersArrayOutput) ToWorkflowTaskPageRootlyOnCallRespondersArrayOutputWithContext(ctx context.Context) WorkflowTaskPageRootlyOnCallRespondersArrayOutput {
	return o
}

func (o WorkflowTaskPageRootlyOnCallRespondersArrayOutput) Index(i pulumi.IntInput) WorkflowTaskPageRootlyOnCallRespondersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskPageRootlyOnCallResponders {
		return vs[0].([]*WorkflowTaskPageRootlyOnCallResponders)[vs[1].(int)]
	}).(WorkflowTaskPageRootlyOnCallRespondersOutput)
}

type WorkflowTaskPageRootlyOnCallRespondersMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageRootlyOnCallRespondersMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskPageRootlyOnCallResponders)(nil)).Elem()
}

func (o WorkflowTaskPageRootlyOnCallRespondersMapOutput) ToWorkflowTaskPageRootlyOnCallRespondersMapOutput() WorkflowTaskPageRootlyOnCallRespondersMapOutput {
	return o
}

func (o WorkflowTaskPageRootlyOnCallRespondersMapOutput) ToWorkflowTaskPageRootlyOnCallRespondersMapOutputWithContext(ctx context.Context) WorkflowTaskPageRootlyOnCallRespondersMapOutput {
	return o
}

func (o WorkflowTaskPageRootlyOnCallRespondersMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskPageRootlyOnCallRespondersOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskPageRootlyOnCallResponders {
		return vs[0].(map[string]*WorkflowTaskPageRootlyOnCallResponders)[vs[1].(string)]
	}).(WorkflowTaskPageRootlyOnCallRespondersOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageRootlyOnCallRespondersInput)(nil)).Elem(), &WorkflowTaskPageRootlyOnCallResponders{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageRootlyOnCallRespondersArrayInput)(nil)).Elem(), WorkflowTaskPageRootlyOnCallRespondersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageRootlyOnCallRespondersMapInput)(nil)).Elem(), WorkflowTaskPageRootlyOnCallRespondersMap{})
	pulumi.RegisterOutputType(WorkflowTaskPageRootlyOnCallRespondersOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageRootlyOnCallRespondersArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageRootlyOnCallRespondersMapOutput{})
}
