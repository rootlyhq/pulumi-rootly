// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow createGoToMeeting task.
type WorkflowTaskCreateGoToMeeting struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateGoToMeetingTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskCreateGoToMeeting registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskCreateGoToMeeting(ctx *pulumi.Context,
	name string, args *WorkflowTaskCreateGoToMeetingArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateGoToMeeting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskCreateGoToMeeting
	err := ctx.RegisterResource("rootly:index/workflowTaskCreateGoToMeeting:WorkflowTaskCreateGoToMeeting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskCreateGoToMeeting gets an existing WorkflowTaskCreateGoToMeeting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskCreateGoToMeeting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskCreateGoToMeetingState, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateGoToMeeting, error) {
	var resource WorkflowTaskCreateGoToMeeting
	err := ctx.ReadResource("rootly:index/workflowTaskCreateGoToMeeting:WorkflowTaskCreateGoToMeeting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskCreateGoToMeeting resources.
type workflowTaskCreateGoToMeetingState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskCreateGoToMeetingTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskCreateGoToMeetingState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateGoToMeetingTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskCreateGoToMeetingState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateGoToMeetingState)(nil)).Elem()
}

type workflowTaskCreateGoToMeetingArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateGoToMeetingTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskCreateGoToMeeting resource.
type WorkflowTaskCreateGoToMeetingArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateGoToMeetingTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskCreateGoToMeetingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateGoToMeetingArgs)(nil)).Elem()
}

type WorkflowTaskCreateGoToMeetingInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoToMeetingOutput() WorkflowTaskCreateGoToMeetingOutput
	ToWorkflowTaskCreateGoToMeetingOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingOutput
}

func (*WorkflowTaskCreateGoToMeeting) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGoToMeeting)(nil)).Elem()
}

func (i *WorkflowTaskCreateGoToMeeting) ToWorkflowTaskCreateGoToMeetingOutput() WorkflowTaskCreateGoToMeetingOutput {
	return i.ToWorkflowTaskCreateGoToMeetingOutputWithContext(context.Background())
}

func (i *WorkflowTaskCreateGoToMeeting) ToWorkflowTaskCreateGoToMeetingOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoToMeetingOutput)
}

// WorkflowTaskCreateGoToMeetingArrayInput is an input type that accepts WorkflowTaskCreateGoToMeetingArray and WorkflowTaskCreateGoToMeetingArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoToMeetingArrayInput` via:
//
//	WorkflowTaskCreateGoToMeetingArray{ WorkflowTaskCreateGoToMeetingArgs{...} }
type WorkflowTaskCreateGoToMeetingArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoToMeetingArrayOutput() WorkflowTaskCreateGoToMeetingArrayOutput
	ToWorkflowTaskCreateGoToMeetingArrayOutputWithContext(context.Context) WorkflowTaskCreateGoToMeetingArrayOutput
}

type WorkflowTaskCreateGoToMeetingArray []WorkflowTaskCreateGoToMeetingInput

func (WorkflowTaskCreateGoToMeetingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateGoToMeeting)(nil)).Elem()
}

func (i WorkflowTaskCreateGoToMeetingArray) ToWorkflowTaskCreateGoToMeetingArrayOutput() WorkflowTaskCreateGoToMeetingArrayOutput {
	return i.ToWorkflowTaskCreateGoToMeetingArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoToMeetingArray) ToWorkflowTaskCreateGoToMeetingArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoToMeetingArrayOutput)
}

// WorkflowTaskCreateGoToMeetingMapInput is an input type that accepts WorkflowTaskCreateGoToMeetingMap and WorkflowTaskCreateGoToMeetingMapOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoToMeetingMapInput` via:
//
//	WorkflowTaskCreateGoToMeetingMap{ "key": WorkflowTaskCreateGoToMeetingArgs{...} }
type WorkflowTaskCreateGoToMeetingMapInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoToMeetingMapOutput() WorkflowTaskCreateGoToMeetingMapOutput
	ToWorkflowTaskCreateGoToMeetingMapOutputWithContext(context.Context) WorkflowTaskCreateGoToMeetingMapOutput
}

type WorkflowTaskCreateGoToMeetingMap map[string]WorkflowTaskCreateGoToMeetingInput

func (WorkflowTaskCreateGoToMeetingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateGoToMeeting)(nil)).Elem()
}

func (i WorkflowTaskCreateGoToMeetingMap) ToWorkflowTaskCreateGoToMeetingMapOutput() WorkflowTaskCreateGoToMeetingMapOutput {
	return i.ToWorkflowTaskCreateGoToMeetingMapOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoToMeetingMap) ToWorkflowTaskCreateGoToMeetingMapOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoToMeetingMapOutput)
}

type WorkflowTaskCreateGoToMeetingOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoToMeetingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGoToMeeting)(nil)).Elem()
}

func (o WorkflowTaskCreateGoToMeetingOutput) ToWorkflowTaskCreateGoToMeetingOutput() WorkflowTaskCreateGoToMeetingOutput {
	return o
}

func (o WorkflowTaskCreateGoToMeetingOutput) ToWorkflowTaskCreateGoToMeetingOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskCreateGoToMeetingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoToMeeting) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskCreateGoToMeetingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoToMeeting) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskCreateGoToMeetingOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoToMeeting) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskCreateGoToMeetingOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoToMeeting) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskCreateGoToMeetingOutput) TaskParams() WorkflowTaskCreateGoToMeetingTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoToMeeting) WorkflowTaskCreateGoToMeetingTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskCreateGoToMeetingTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskCreateGoToMeetingOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoToMeeting) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskCreateGoToMeetingArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoToMeetingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateGoToMeeting)(nil)).Elem()
}

func (o WorkflowTaskCreateGoToMeetingArrayOutput) ToWorkflowTaskCreateGoToMeetingArrayOutput() WorkflowTaskCreateGoToMeetingArrayOutput {
	return o
}

func (o WorkflowTaskCreateGoToMeetingArrayOutput) ToWorkflowTaskCreateGoToMeetingArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingArrayOutput {
	return o
}

func (o WorkflowTaskCreateGoToMeetingArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateGoToMeetingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskCreateGoToMeeting {
		return vs[0].([]*WorkflowTaskCreateGoToMeeting)[vs[1].(int)]
	}).(WorkflowTaskCreateGoToMeetingOutput)
}

type WorkflowTaskCreateGoToMeetingMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoToMeetingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateGoToMeeting)(nil)).Elem()
}

func (o WorkflowTaskCreateGoToMeetingMapOutput) ToWorkflowTaskCreateGoToMeetingMapOutput() WorkflowTaskCreateGoToMeetingMapOutput {
	return o
}

func (o WorkflowTaskCreateGoToMeetingMapOutput) ToWorkflowTaskCreateGoToMeetingMapOutputWithContext(ctx context.Context) WorkflowTaskCreateGoToMeetingMapOutput {
	return o
}

func (o WorkflowTaskCreateGoToMeetingMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskCreateGoToMeetingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskCreateGoToMeeting {
		return vs[0].(map[string]*WorkflowTaskCreateGoToMeeting)[vs[1].(string)]
	}).(WorkflowTaskCreateGoToMeetingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoToMeetingInput)(nil)).Elem(), &WorkflowTaskCreateGoToMeeting{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoToMeetingArrayInput)(nil)).Elem(), WorkflowTaskCreateGoToMeetingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoToMeetingMapInput)(nil)).Elem(), WorkflowTaskCreateGoToMeetingMap{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoToMeetingOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoToMeetingArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoToMeetingMapOutput{})
}
