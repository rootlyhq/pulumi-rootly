// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow createDatadogNotebook task.
type WorkflowTaskCreateDatadogNotebook struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateDatadogNotebookTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskCreateDatadogNotebook registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskCreateDatadogNotebook(ctx *pulumi.Context,
	name string, args *WorkflowTaskCreateDatadogNotebookArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateDatadogNotebook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskCreateDatadogNotebook
	err := ctx.RegisterResource("rootly:index/workflowTaskCreateDatadogNotebook:WorkflowTaskCreateDatadogNotebook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskCreateDatadogNotebook gets an existing WorkflowTaskCreateDatadogNotebook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskCreateDatadogNotebook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskCreateDatadogNotebookState, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateDatadogNotebook, error) {
	var resource WorkflowTaskCreateDatadogNotebook
	err := ctx.ReadResource("rootly:index/workflowTaskCreateDatadogNotebook:WorkflowTaskCreateDatadogNotebook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskCreateDatadogNotebook resources.
type workflowTaskCreateDatadogNotebookState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskCreateDatadogNotebookTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskCreateDatadogNotebookState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateDatadogNotebookTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskCreateDatadogNotebookState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateDatadogNotebookState)(nil)).Elem()
}

type workflowTaskCreateDatadogNotebookArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateDatadogNotebookTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskCreateDatadogNotebook resource.
type WorkflowTaskCreateDatadogNotebookArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateDatadogNotebookTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskCreateDatadogNotebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateDatadogNotebookArgs)(nil)).Elem()
}

type WorkflowTaskCreateDatadogNotebookInput interface {
	pulumi.Input

	ToWorkflowTaskCreateDatadogNotebookOutput() WorkflowTaskCreateDatadogNotebookOutput
	ToWorkflowTaskCreateDatadogNotebookOutputWithContext(ctx context.Context) WorkflowTaskCreateDatadogNotebookOutput
}

func (*WorkflowTaskCreateDatadogNotebook) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateDatadogNotebook)(nil)).Elem()
}

func (i *WorkflowTaskCreateDatadogNotebook) ToWorkflowTaskCreateDatadogNotebookOutput() WorkflowTaskCreateDatadogNotebookOutput {
	return i.ToWorkflowTaskCreateDatadogNotebookOutputWithContext(context.Background())
}

func (i *WorkflowTaskCreateDatadogNotebook) ToWorkflowTaskCreateDatadogNotebookOutputWithContext(ctx context.Context) WorkflowTaskCreateDatadogNotebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateDatadogNotebookOutput)
}

// WorkflowTaskCreateDatadogNotebookArrayInput is an input type that accepts WorkflowTaskCreateDatadogNotebookArray and WorkflowTaskCreateDatadogNotebookArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateDatadogNotebookArrayInput` via:
//
//	WorkflowTaskCreateDatadogNotebookArray{ WorkflowTaskCreateDatadogNotebookArgs{...} }
type WorkflowTaskCreateDatadogNotebookArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateDatadogNotebookArrayOutput() WorkflowTaskCreateDatadogNotebookArrayOutput
	ToWorkflowTaskCreateDatadogNotebookArrayOutputWithContext(context.Context) WorkflowTaskCreateDatadogNotebookArrayOutput
}

type WorkflowTaskCreateDatadogNotebookArray []WorkflowTaskCreateDatadogNotebookInput

func (WorkflowTaskCreateDatadogNotebookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateDatadogNotebook)(nil)).Elem()
}

func (i WorkflowTaskCreateDatadogNotebookArray) ToWorkflowTaskCreateDatadogNotebookArrayOutput() WorkflowTaskCreateDatadogNotebookArrayOutput {
	return i.ToWorkflowTaskCreateDatadogNotebookArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateDatadogNotebookArray) ToWorkflowTaskCreateDatadogNotebookArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateDatadogNotebookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateDatadogNotebookArrayOutput)
}

// WorkflowTaskCreateDatadogNotebookMapInput is an input type that accepts WorkflowTaskCreateDatadogNotebookMap and WorkflowTaskCreateDatadogNotebookMapOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateDatadogNotebookMapInput` via:
//
//	WorkflowTaskCreateDatadogNotebookMap{ "key": WorkflowTaskCreateDatadogNotebookArgs{...} }
type WorkflowTaskCreateDatadogNotebookMapInput interface {
	pulumi.Input

	ToWorkflowTaskCreateDatadogNotebookMapOutput() WorkflowTaskCreateDatadogNotebookMapOutput
	ToWorkflowTaskCreateDatadogNotebookMapOutputWithContext(context.Context) WorkflowTaskCreateDatadogNotebookMapOutput
}

type WorkflowTaskCreateDatadogNotebookMap map[string]WorkflowTaskCreateDatadogNotebookInput

func (WorkflowTaskCreateDatadogNotebookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateDatadogNotebook)(nil)).Elem()
}

func (i WorkflowTaskCreateDatadogNotebookMap) ToWorkflowTaskCreateDatadogNotebookMapOutput() WorkflowTaskCreateDatadogNotebookMapOutput {
	return i.ToWorkflowTaskCreateDatadogNotebookMapOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateDatadogNotebookMap) ToWorkflowTaskCreateDatadogNotebookMapOutputWithContext(ctx context.Context) WorkflowTaskCreateDatadogNotebookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateDatadogNotebookMapOutput)
}

type WorkflowTaskCreateDatadogNotebookOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateDatadogNotebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateDatadogNotebook)(nil)).Elem()
}

func (o WorkflowTaskCreateDatadogNotebookOutput) ToWorkflowTaskCreateDatadogNotebookOutput() WorkflowTaskCreateDatadogNotebookOutput {
	return o
}

func (o WorkflowTaskCreateDatadogNotebookOutput) ToWorkflowTaskCreateDatadogNotebookOutputWithContext(ctx context.Context) WorkflowTaskCreateDatadogNotebookOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskCreateDatadogNotebookOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDatadogNotebook) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskCreateDatadogNotebookOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDatadogNotebook) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskCreateDatadogNotebookOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDatadogNotebook) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskCreateDatadogNotebookOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDatadogNotebook) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskCreateDatadogNotebookOutput) TaskParams() WorkflowTaskCreateDatadogNotebookTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDatadogNotebook) WorkflowTaskCreateDatadogNotebookTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskCreateDatadogNotebookTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskCreateDatadogNotebookOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateDatadogNotebook) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskCreateDatadogNotebookArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateDatadogNotebookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateDatadogNotebook)(nil)).Elem()
}

func (o WorkflowTaskCreateDatadogNotebookArrayOutput) ToWorkflowTaskCreateDatadogNotebookArrayOutput() WorkflowTaskCreateDatadogNotebookArrayOutput {
	return o
}

func (o WorkflowTaskCreateDatadogNotebookArrayOutput) ToWorkflowTaskCreateDatadogNotebookArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateDatadogNotebookArrayOutput {
	return o
}

func (o WorkflowTaskCreateDatadogNotebookArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateDatadogNotebookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskCreateDatadogNotebook {
		return vs[0].([]*WorkflowTaskCreateDatadogNotebook)[vs[1].(int)]
	}).(WorkflowTaskCreateDatadogNotebookOutput)
}

type WorkflowTaskCreateDatadogNotebookMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateDatadogNotebookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateDatadogNotebook)(nil)).Elem()
}

func (o WorkflowTaskCreateDatadogNotebookMapOutput) ToWorkflowTaskCreateDatadogNotebookMapOutput() WorkflowTaskCreateDatadogNotebookMapOutput {
	return o
}

func (o WorkflowTaskCreateDatadogNotebookMapOutput) ToWorkflowTaskCreateDatadogNotebookMapOutputWithContext(ctx context.Context) WorkflowTaskCreateDatadogNotebookMapOutput {
	return o
}

func (o WorkflowTaskCreateDatadogNotebookMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskCreateDatadogNotebookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskCreateDatadogNotebook {
		return vs[0].(map[string]*WorkflowTaskCreateDatadogNotebook)[vs[1].(string)]
	}).(WorkflowTaskCreateDatadogNotebookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateDatadogNotebookInput)(nil)).Elem(), &WorkflowTaskCreateDatadogNotebook{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateDatadogNotebookArrayInput)(nil)).Elem(), WorkflowTaskCreateDatadogNotebookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateDatadogNotebookMapInput)(nil)).Elem(), WorkflowTaskCreateDatadogNotebookMap{})
	pulumi.RegisterOutputType(WorkflowTaskCreateDatadogNotebookOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateDatadogNotebookArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateDatadogNotebookMapOutput{})
}
