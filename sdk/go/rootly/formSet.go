// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

type FormSet struct {
	pulumi.CustomResourceState

	// The forms included in the form set. Add custom forms using the custom form's `slug` field. Or choose a built-in form: `webNewIncidentForm`, `webUpdateIncidentForm`, `webIncidentPostMortemForm`, `webIncidentMitigationForm`, `webIncidentResolutionForm`, `webIncidentCancellationForm`, `webScheduledIncidentForm`, `webUpdateScheduledIncidentForm`, `slackNewIncidentForm`, `slackUpdateIncidentForm`, `slackUpdateIncidentStatusForm`, `slackIncidentMitigationForm`, `slackIncidentResolutionForm`, `slackIncidentCancellationForm`, `slackScheduledIncidentForm`, `slackUpdateScheduledIncidentForm`
	Forms pulumi.StringArrayOutput `pulumi:"forms"`
	// Whether the form set is default. Value must be one of true or false
	IsDefault pulumi.BoolOutput `pulumi:"isDefault"`
	// The name of the form set
	Name pulumi.StringOutput `pulumi:"name"`
	// The slug of the form set
	Slug pulumi.StringOutput `pulumi:"slug"`
}

// NewFormSet registers a new resource with the given unique name, arguments, and options.
func NewFormSet(ctx *pulumi.Context,
	name string, args *FormSetArgs, opts ...pulumi.ResourceOption) (*FormSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Forms == nil {
		return nil, errors.New("invalid value for required argument 'Forms'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FormSet
	err := ctx.RegisterResource("rootly:index/formSet:FormSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFormSet gets an existing FormSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFormSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FormSetState, opts ...pulumi.ResourceOption) (*FormSet, error) {
	var resource FormSet
	err := ctx.ReadResource("rootly:index/formSet:FormSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FormSet resources.
type formSetState struct {
	// The forms included in the form set. Add custom forms using the custom form's `slug` field. Or choose a built-in form: `webNewIncidentForm`, `webUpdateIncidentForm`, `webIncidentPostMortemForm`, `webIncidentMitigationForm`, `webIncidentResolutionForm`, `webIncidentCancellationForm`, `webScheduledIncidentForm`, `webUpdateScheduledIncidentForm`, `slackNewIncidentForm`, `slackUpdateIncidentForm`, `slackUpdateIncidentStatusForm`, `slackIncidentMitigationForm`, `slackIncidentResolutionForm`, `slackIncidentCancellationForm`, `slackScheduledIncidentForm`, `slackUpdateScheduledIncidentForm`
	Forms []string `pulumi:"forms"`
	// Whether the form set is default. Value must be one of true or false
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the form set
	Name *string `pulumi:"name"`
	// The slug of the form set
	Slug *string `pulumi:"slug"`
}

type FormSetState struct {
	// The forms included in the form set. Add custom forms using the custom form's `slug` field. Or choose a built-in form: `webNewIncidentForm`, `webUpdateIncidentForm`, `webIncidentPostMortemForm`, `webIncidentMitigationForm`, `webIncidentResolutionForm`, `webIncidentCancellationForm`, `webScheduledIncidentForm`, `webUpdateScheduledIncidentForm`, `slackNewIncidentForm`, `slackUpdateIncidentForm`, `slackUpdateIncidentStatusForm`, `slackIncidentMitigationForm`, `slackIncidentResolutionForm`, `slackIncidentCancellationForm`, `slackScheduledIncidentForm`, `slackUpdateScheduledIncidentForm`
	Forms pulumi.StringArrayInput
	// Whether the form set is default. Value must be one of true or false
	IsDefault pulumi.BoolPtrInput
	// The name of the form set
	Name pulumi.StringPtrInput
	// The slug of the form set
	Slug pulumi.StringPtrInput
}

func (FormSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*formSetState)(nil)).Elem()
}

type formSetArgs struct {
	// The forms included in the form set. Add custom forms using the custom form's `slug` field. Or choose a built-in form: `webNewIncidentForm`, `webUpdateIncidentForm`, `webIncidentPostMortemForm`, `webIncidentMitigationForm`, `webIncidentResolutionForm`, `webIncidentCancellationForm`, `webScheduledIncidentForm`, `webUpdateScheduledIncidentForm`, `slackNewIncidentForm`, `slackUpdateIncidentForm`, `slackUpdateIncidentStatusForm`, `slackIncidentMitigationForm`, `slackIncidentResolutionForm`, `slackIncidentCancellationForm`, `slackScheduledIncidentForm`, `slackUpdateScheduledIncidentForm`
	Forms []string `pulumi:"forms"`
	// Whether the form set is default. Value must be one of true or false
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the form set
	Name *string `pulumi:"name"`
	// The slug of the form set
	Slug *string `pulumi:"slug"`
}

// The set of arguments for constructing a FormSet resource.
type FormSetArgs struct {
	// The forms included in the form set. Add custom forms using the custom form's `slug` field. Or choose a built-in form: `webNewIncidentForm`, `webUpdateIncidentForm`, `webIncidentPostMortemForm`, `webIncidentMitigationForm`, `webIncidentResolutionForm`, `webIncidentCancellationForm`, `webScheduledIncidentForm`, `webUpdateScheduledIncidentForm`, `slackNewIncidentForm`, `slackUpdateIncidentForm`, `slackUpdateIncidentStatusForm`, `slackIncidentMitigationForm`, `slackIncidentResolutionForm`, `slackIncidentCancellationForm`, `slackScheduledIncidentForm`, `slackUpdateScheduledIncidentForm`
	Forms pulumi.StringArrayInput
	// Whether the form set is default. Value must be one of true or false
	IsDefault pulumi.BoolPtrInput
	// The name of the form set
	Name pulumi.StringPtrInput
	// The slug of the form set
	Slug pulumi.StringPtrInput
}

func (FormSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*formSetArgs)(nil)).Elem()
}

type FormSetInput interface {
	pulumi.Input

	ToFormSetOutput() FormSetOutput
	ToFormSetOutputWithContext(ctx context.Context) FormSetOutput
}

func (*FormSet) ElementType() reflect.Type {
	return reflect.TypeOf((**FormSet)(nil)).Elem()
}

func (i *FormSet) ToFormSetOutput() FormSetOutput {
	return i.ToFormSetOutputWithContext(context.Background())
}

func (i *FormSet) ToFormSetOutputWithContext(ctx context.Context) FormSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormSetOutput)
}

// FormSetArrayInput is an input type that accepts FormSetArray and FormSetArrayOutput values.
// You can construct a concrete instance of `FormSetArrayInput` via:
//
//	FormSetArray{ FormSetArgs{...} }
type FormSetArrayInput interface {
	pulumi.Input

	ToFormSetArrayOutput() FormSetArrayOutput
	ToFormSetArrayOutputWithContext(context.Context) FormSetArrayOutput
}

type FormSetArray []FormSetInput

func (FormSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FormSet)(nil)).Elem()
}

func (i FormSetArray) ToFormSetArrayOutput() FormSetArrayOutput {
	return i.ToFormSetArrayOutputWithContext(context.Background())
}

func (i FormSetArray) ToFormSetArrayOutputWithContext(ctx context.Context) FormSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormSetArrayOutput)
}

// FormSetMapInput is an input type that accepts FormSetMap and FormSetMapOutput values.
// You can construct a concrete instance of `FormSetMapInput` via:
//
//	FormSetMap{ "key": FormSetArgs{...} }
type FormSetMapInput interface {
	pulumi.Input

	ToFormSetMapOutput() FormSetMapOutput
	ToFormSetMapOutputWithContext(context.Context) FormSetMapOutput
}

type FormSetMap map[string]FormSetInput

func (FormSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FormSet)(nil)).Elem()
}

func (i FormSetMap) ToFormSetMapOutput() FormSetMapOutput {
	return i.ToFormSetMapOutputWithContext(context.Background())
}

func (i FormSetMap) ToFormSetMapOutputWithContext(ctx context.Context) FormSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormSetMapOutput)
}

type FormSetOutput struct{ *pulumi.OutputState }

func (FormSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FormSet)(nil)).Elem()
}

func (o FormSetOutput) ToFormSetOutput() FormSetOutput {
	return o
}

func (o FormSetOutput) ToFormSetOutputWithContext(ctx context.Context) FormSetOutput {
	return o
}

// The forms included in the form set. Add custom forms using the custom form's `slug` field. Or choose a built-in form: `webNewIncidentForm`, `webUpdateIncidentForm`, `webIncidentPostMortemForm`, `webIncidentMitigationForm`, `webIncidentResolutionForm`, `webIncidentCancellationForm`, `webScheduledIncidentForm`, `webUpdateScheduledIncidentForm`, `slackNewIncidentForm`, `slackUpdateIncidentForm`, `slackUpdateIncidentStatusForm`, `slackIncidentMitigationForm`, `slackIncidentResolutionForm`, `slackIncidentCancellationForm`, `slackScheduledIncidentForm`, `slackUpdateScheduledIncidentForm`
func (o FormSetOutput) Forms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FormSet) pulumi.StringArrayOutput { return v.Forms }).(pulumi.StringArrayOutput)
}

// Whether the form set is default. Value must be one of true or false
func (o FormSetOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v *FormSet) pulumi.BoolOutput { return v.IsDefault }).(pulumi.BoolOutput)
}

// The name of the form set
func (o FormSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FormSet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The slug of the form set
func (o FormSetOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v *FormSet) pulumi.StringOutput { return v.Slug }).(pulumi.StringOutput)
}

type FormSetArrayOutput struct{ *pulumi.OutputState }

func (FormSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FormSet)(nil)).Elem()
}

func (o FormSetArrayOutput) ToFormSetArrayOutput() FormSetArrayOutput {
	return o
}

func (o FormSetArrayOutput) ToFormSetArrayOutputWithContext(ctx context.Context) FormSetArrayOutput {
	return o
}

func (o FormSetArrayOutput) Index(i pulumi.IntInput) FormSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FormSet {
		return vs[0].([]*FormSet)[vs[1].(int)]
	}).(FormSetOutput)
}

type FormSetMapOutput struct{ *pulumi.OutputState }

func (FormSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FormSet)(nil)).Elem()
}

func (o FormSetMapOutput) ToFormSetMapOutput() FormSetMapOutput {
	return o
}

func (o FormSetMapOutput) ToFormSetMapOutputWithContext(ctx context.Context) FormSetMapOutput {
	return o
}

func (o FormSetMapOutput) MapIndex(k pulumi.StringInput) FormSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FormSet {
		return vs[0].(map[string]*FormSet)[vs[1].(string)]
	}).(FormSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FormSetInput)(nil)).Elem(), &FormSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*FormSetArrayInput)(nil)).Elem(), FormSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FormSetMapInput)(nil)).Elem(), FormSetMap{})
	pulumi.RegisterOutputType(FormSetOutput{})
	pulumi.RegisterOutputType(FormSetArrayOutput{})
	pulumi.RegisterOutputType(FormSetMapOutput{})
}
