// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow updateGoogleCalendarEvent task.
type WorkflowTaskUpdateGoogleCalendarEvent struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskUpdateGoogleCalendarEvent registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskUpdateGoogleCalendarEvent(ctx *pulumi.Context,
	name string, args *WorkflowTaskUpdateGoogleCalendarEventArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateGoogleCalendarEvent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskUpdateGoogleCalendarEvent
	err := ctx.RegisterResource("rootly:index/workflowTaskUpdateGoogleCalendarEvent:WorkflowTaskUpdateGoogleCalendarEvent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskUpdateGoogleCalendarEvent gets an existing WorkflowTaskUpdateGoogleCalendarEvent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskUpdateGoogleCalendarEvent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskUpdateGoogleCalendarEventState, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateGoogleCalendarEvent, error) {
	var resource WorkflowTaskUpdateGoogleCalendarEvent
	err := ctx.ReadResource("rootly:index/workflowTaskUpdateGoogleCalendarEvent:WorkflowTaskUpdateGoogleCalendarEvent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskUpdateGoogleCalendarEvent resources.
type workflowTaskUpdateGoogleCalendarEventState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskUpdateGoogleCalendarEventTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskUpdateGoogleCalendarEventState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateGoogleCalendarEventTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskUpdateGoogleCalendarEventState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateGoogleCalendarEventState)(nil)).Elem()
}

type workflowTaskUpdateGoogleCalendarEventArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateGoogleCalendarEventTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskUpdateGoogleCalendarEvent resource.
type WorkflowTaskUpdateGoogleCalendarEventArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateGoogleCalendarEventTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskUpdateGoogleCalendarEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateGoogleCalendarEventArgs)(nil)).Elem()
}

type WorkflowTaskUpdateGoogleCalendarEventInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateGoogleCalendarEventOutput() WorkflowTaskUpdateGoogleCalendarEventOutput
	ToWorkflowTaskUpdateGoogleCalendarEventOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventOutput
}

func (*WorkflowTaskUpdateGoogleCalendarEvent) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateGoogleCalendarEvent)(nil)).Elem()
}

func (i *WorkflowTaskUpdateGoogleCalendarEvent) ToWorkflowTaskUpdateGoogleCalendarEventOutput() WorkflowTaskUpdateGoogleCalendarEventOutput {
	return i.ToWorkflowTaskUpdateGoogleCalendarEventOutputWithContext(context.Background())
}

func (i *WorkflowTaskUpdateGoogleCalendarEvent) ToWorkflowTaskUpdateGoogleCalendarEventOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGoogleCalendarEventOutput)
}

// WorkflowTaskUpdateGoogleCalendarEventArrayInput is an input type that accepts WorkflowTaskUpdateGoogleCalendarEventArray and WorkflowTaskUpdateGoogleCalendarEventArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateGoogleCalendarEventArrayInput` via:
//
//	WorkflowTaskUpdateGoogleCalendarEventArray{ WorkflowTaskUpdateGoogleCalendarEventArgs{...} }
type WorkflowTaskUpdateGoogleCalendarEventArrayInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateGoogleCalendarEventArrayOutput() WorkflowTaskUpdateGoogleCalendarEventArrayOutput
	ToWorkflowTaskUpdateGoogleCalendarEventArrayOutputWithContext(context.Context) WorkflowTaskUpdateGoogleCalendarEventArrayOutput
}

type WorkflowTaskUpdateGoogleCalendarEventArray []WorkflowTaskUpdateGoogleCalendarEventInput

func (WorkflowTaskUpdateGoogleCalendarEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateGoogleCalendarEvent)(nil)).Elem()
}

func (i WorkflowTaskUpdateGoogleCalendarEventArray) ToWorkflowTaskUpdateGoogleCalendarEventArrayOutput() WorkflowTaskUpdateGoogleCalendarEventArrayOutput {
	return i.ToWorkflowTaskUpdateGoogleCalendarEventArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateGoogleCalendarEventArray) ToWorkflowTaskUpdateGoogleCalendarEventArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGoogleCalendarEventArrayOutput)
}

// WorkflowTaskUpdateGoogleCalendarEventMapInput is an input type that accepts WorkflowTaskUpdateGoogleCalendarEventMap and WorkflowTaskUpdateGoogleCalendarEventMapOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateGoogleCalendarEventMapInput` via:
//
//	WorkflowTaskUpdateGoogleCalendarEventMap{ "key": WorkflowTaskUpdateGoogleCalendarEventArgs{...} }
type WorkflowTaskUpdateGoogleCalendarEventMapInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateGoogleCalendarEventMapOutput() WorkflowTaskUpdateGoogleCalendarEventMapOutput
	ToWorkflowTaskUpdateGoogleCalendarEventMapOutputWithContext(context.Context) WorkflowTaskUpdateGoogleCalendarEventMapOutput
}

type WorkflowTaskUpdateGoogleCalendarEventMap map[string]WorkflowTaskUpdateGoogleCalendarEventInput

func (WorkflowTaskUpdateGoogleCalendarEventMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateGoogleCalendarEvent)(nil)).Elem()
}

func (i WorkflowTaskUpdateGoogleCalendarEventMap) ToWorkflowTaskUpdateGoogleCalendarEventMapOutput() WorkflowTaskUpdateGoogleCalendarEventMapOutput {
	return i.ToWorkflowTaskUpdateGoogleCalendarEventMapOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateGoogleCalendarEventMap) ToWorkflowTaskUpdateGoogleCalendarEventMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateGoogleCalendarEventMapOutput)
}

type WorkflowTaskUpdateGoogleCalendarEventOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateGoogleCalendarEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateGoogleCalendarEvent)(nil)).Elem()
}

func (o WorkflowTaskUpdateGoogleCalendarEventOutput) ToWorkflowTaskUpdateGoogleCalendarEventOutput() WorkflowTaskUpdateGoogleCalendarEventOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleCalendarEventOutput) ToWorkflowTaskUpdateGoogleCalendarEventOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskUpdateGoogleCalendarEventOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEvent) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskUpdateGoogleCalendarEventOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEvent) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskUpdateGoogleCalendarEventOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEvent) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskUpdateGoogleCalendarEventOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEvent) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskUpdateGoogleCalendarEventOutput) TaskParams() WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEvent) WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskUpdateGoogleCalendarEventTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskUpdateGoogleCalendarEventOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateGoogleCalendarEvent) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskUpdateGoogleCalendarEventArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateGoogleCalendarEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateGoogleCalendarEvent)(nil)).Elem()
}

func (o WorkflowTaskUpdateGoogleCalendarEventArrayOutput) ToWorkflowTaskUpdateGoogleCalendarEventArrayOutput() WorkflowTaskUpdateGoogleCalendarEventArrayOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleCalendarEventArrayOutput) ToWorkflowTaskUpdateGoogleCalendarEventArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventArrayOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleCalendarEventArrayOutput) Index(i pulumi.IntInput) WorkflowTaskUpdateGoogleCalendarEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateGoogleCalendarEvent {
		return vs[0].([]*WorkflowTaskUpdateGoogleCalendarEvent)[vs[1].(int)]
	}).(WorkflowTaskUpdateGoogleCalendarEventOutput)
}

type WorkflowTaskUpdateGoogleCalendarEventMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateGoogleCalendarEventMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateGoogleCalendarEvent)(nil)).Elem()
}

func (o WorkflowTaskUpdateGoogleCalendarEventMapOutput) ToWorkflowTaskUpdateGoogleCalendarEventMapOutput() WorkflowTaskUpdateGoogleCalendarEventMapOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleCalendarEventMapOutput) ToWorkflowTaskUpdateGoogleCalendarEventMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateGoogleCalendarEventMapOutput {
	return o
}

func (o WorkflowTaskUpdateGoogleCalendarEventMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskUpdateGoogleCalendarEventOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateGoogleCalendarEvent {
		return vs[0].(map[string]*WorkflowTaskUpdateGoogleCalendarEvent)[vs[1].(string)]
	}).(WorkflowTaskUpdateGoogleCalendarEventOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateGoogleCalendarEventInput)(nil)).Elem(), &WorkflowTaskUpdateGoogleCalendarEvent{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateGoogleCalendarEventArrayInput)(nil)).Elem(), WorkflowTaskUpdateGoogleCalendarEventArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateGoogleCalendarEventMapInput)(nil)).Elem(), WorkflowTaskUpdateGoogleCalendarEventMap{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateGoogleCalendarEventOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateGoogleCalendarEventArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateGoogleCalendarEventMapOutput{})
}
