// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow changeSlackChannelPrivacy task.
type WorkflowTaskChangeSlackChannelPrivacy struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskChangeSlackChannelPrivacy registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskChangeSlackChannelPrivacy(ctx *pulumi.Context,
	name string, args *WorkflowTaskChangeSlackChannelPrivacyArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskChangeSlackChannelPrivacy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskChangeSlackChannelPrivacy
	err := ctx.RegisterResource("rootly:index/workflowTaskChangeSlackChannelPrivacy:WorkflowTaskChangeSlackChannelPrivacy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskChangeSlackChannelPrivacy gets an existing WorkflowTaskChangeSlackChannelPrivacy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskChangeSlackChannelPrivacy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskChangeSlackChannelPrivacyState, opts ...pulumi.ResourceOption) (*WorkflowTaskChangeSlackChannelPrivacy, error) {
	var resource WorkflowTaskChangeSlackChannelPrivacy
	err := ctx.ReadResource("rootly:index/workflowTaskChangeSlackChannelPrivacy:WorkflowTaskChangeSlackChannelPrivacy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskChangeSlackChannelPrivacy resources.
type workflowTaskChangeSlackChannelPrivacyState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskChangeSlackChannelPrivacyTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskChangeSlackChannelPrivacyState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskChangeSlackChannelPrivacyTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskChangeSlackChannelPrivacyState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskChangeSlackChannelPrivacyState)(nil)).Elem()
}

type workflowTaskChangeSlackChannelPrivacyArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskChangeSlackChannelPrivacyTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskChangeSlackChannelPrivacy resource.
type WorkflowTaskChangeSlackChannelPrivacyArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskChangeSlackChannelPrivacyTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskChangeSlackChannelPrivacyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskChangeSlackChannelPrivacyArgs)(nil)).Elem()
}

type WorkflowTaskChangeSlackChannelPrivacyInput interface {
	pulumi.Input

	ToWorkflowTaskChangeSlackChannelPrivacyOutput() WorkflowTaskChangeSlackChannelPrivacyOutput
	ToWorkflowTaskChangeSlackChannelPrivacyOutputWithContext(ctx context.Context) WorkflowTaskChangeSlackChannelPrivacyOutput
}

func (*WorkflowTaskChangeSlackChannelPrivacy) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskChangeSlackChannelPrivacy)(nil)).Elem()
}

func (i *WorkflowTaskChangeSlackChannelPrivacy) ToWorkflowTaskChangeSlackChannelPrivacyOutput() WorkflowTaskChangeSlackChannelPrivacyOutput {
	return i.ToWorkflowTaskChangeSlackChannelPrivacyOutputWithContext(context.Background())
}

func (i *WorkflowTaskChangeSlackChannelPrivacy) ToWorkflowTaskChangeSlackChannelPrivacyOutputWithContext(ctx context.Context) WorkflowTaskChangeSlackChannelPrivacyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskChangeSlackChannelPrivacyOutput)
}

// WorkflowTaskChangeSlackChannelPrivacyArrayInput is an input type that accepts WorkflowTaskChangeSlackChannelPrivacyArray and WorkflowTaskChangeSlackChannelPrivacyArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskChangeSlackChannelPrivacyArrayInput` via:
//
//	WorkflowTaskChangeSlackChannelPrivacyArray{ WorkflowTaskChangeSlackChannelPrivacyArgs{...} }
type WorkflowTaskChangeSlackChannelPrivacyArrayInput interface {
	pulumi.Input

	ToWorkflowTaskChangeSlackChannelPrivacyArrayOutput() WorkflowTaskChangeSlackChannelPrivacyArrayOutput
	ToWorkflowTaskChangeSlackChannelPrivacyArrayOutputWithContext(context.Context) WorkflowTaskChangeSlackChannelPrivacyArrayOutput
}

type WorkflowTaskChangeSlackChannelPrivacyArray []WorkflowTaskChangeSlackChannelPrivacyInput

func (WorkflowTaskChangeSlackChannelPrivacyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskChangeSlackChannelPrivacy)(nil)).Elem()
}

func (i WorkflowTaskChangeSlackChannelPrivacyArray) ToWorkflowTaskChangeSlackChannelPrivacyArrayOutput() WorkflowTaskChangeSlackChannelPrivacyArrayOutput {
	return i.ToWorkflowTaskChangeSlackChannelPrivacyArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskChangeSlackChannelPrivacyArray) ToWorkflowTaskChangeSlackChannelPrivacyArrayOutputWithContext(ctx context.Context) WorkflowTaskChangeSlackChannelPrivacyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskChangeSlackChannelPrivacyArrayOutput)
}

// WorkflowTaskChangeSlackChannelPrivacyMapInput is an input type that accepts WorkflowTaskChangeSlackChannelPrivacyMap and WorkflowTaskChangeSlackChannelPrivacyMapOutput values.
// You can construct a concrete instance of `WorkflowTaskChangeSlackChannelPrivacyMapInput` via:
//
//	WorkflowTaskChangeSlackChannelPrivacyMap{ "key": WorkflowTaskChangeSlackChannelPrivacyArgs{...} }
type WorkflowTaskChangeSlackChannelPrivacyMapInput interface {
	pulumi.Input

	ToWorkflowTaskChangeSlackChannelPrivacyMapOutput() WorkflowTaskChangeSlackChannelPrivacyMapOutput
	ToWorkflowTaskChangeSlackChannelPrivacyMapOutputWithContext(context.Context) WorkflowTaskChangeSlackChannelPrivacyMapOutput
}

type WorkflowTaskChangeSlackChannelPrivacyMap map[string]WorkflowTaskChangeSlackChannelPrivacyInput

func (WorkflowTaskChangeSlackChannelPrivacyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskChangeSlackChannelPrivacy)(nil)).Elem()
}

func (i WorkflowTaskChangeSlackChannelPrivacyMap) ToWorkflowTaskChangeSlackChannelPrivacyMapOutput() WorkflowTaskChangeSlackChannelPrivacyMapOutput {
	return i.ToWorkflowTaskChangeSlackChannelPrivacyMapOutputWithContext(context.Background())
}

func (i WorkflowTaskChangeSlackChannelPrivacyMap) ToWorkflowTaskChangeSlackChannelPrivacyMapOutputWithContext(ctx context.Context) WorkflowTaskChangeSlackChannelPrivacyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskChangeSlackChannelPrivacyMapOutput)
}

type WorkflowTaskChangeSlackChannelPrivacyOutput struct{ *pulumi.OutputState }

func (WorkflowTaskChangeSlackChannelPrivacyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskChangeSlackChannelPrivacy)(nil)).Elem()
}

func (o WorkflowTaskChangeSlackChannelPrivacyOutput) ToWorkflowTaskChangeSlackChannelPrivacyOutput() WorkflowTaskChangeSlackChannelPrivacyOutput {
	return o
}

func (o WorkflowTaskChangeSlackChannelPrivacyOutput) ToWorkflowTaskChangeSlackChannelPrivacyOutputWithContext(ctx context.Context) WorkflowTaskChangeSlackChannelPrivacyOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskChangeSlackChannelPrivacyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskChangeSlackChannelPrivacy) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskChangeSlackChannelPrivacyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskChangeSlackChannelPrivacy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskChangeSlackChannelPrivacyOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskChangeSlackChannelPrivacy) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskChangeSlackChannelPrivacyOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskChangeSlackChannelPrivacy) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskChangeSlackChannelPrivacyOutput) TaskParams() WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskChangeSlackChannelPrivacy) WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskChangeSlackChannelPrivacyTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskChangeSlackChannelPrivacyOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskChangeSlackChannelPrivacy) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskChangeSlackChannelPrivacyArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskChangeSlackChannelPrivacyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskChangeSlackChannelPrivacy)(nil)).Elem()
}

func (o WorkflowTaskChangeSlackChannelPrivacyArrayOutput) ToWorkflowTaskChangeSlackChannelPrivacyArrayOutput() WorkflowTaskChangeSlackChannelPrivacyArrayOutput {
	return o
}

func (o WorkflowTaskChangeSlackChannelPrivacyArrayOutput) ToWorkflowTaskChangeSlackChannelPrivacyArrayOutputWithContext(ctx context.Context) WorkflowTaskChangeSlackChannelPrivacyArrayOutput {
	return o
}

func (o WorkflowTaskChangeSlackChannelPrivacyArrayOutput) Index(i pulumi.IntInput) WorkflowTaskChangeSlackChannelPrivacyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskChangeSlackChannelPrivacy {
		return vs[0].([]*WorkflowTaskChangeSlackChannelPrivacy)[vs[1].(int)]
	}).(WorkflowTaskChangeSlackChannelPrivacyOutput)
}

type WorkflowTaskChangeSlackChannelPrivacyMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskChangeSlackChannelPrivacyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskChangeSlackChannelPrivacy)(nil)).Elem()
}

func (o WorkflowTaskChangeSlackChannelPrivacyMapOutput) ToWorkflowTaskChangeSlackChannelPrivacyMapOutput() WorkflowTaskChangeSlackChannelPrivacyMapOutput {
	return o
}

func (o WorkflowTaskChangeSlackChannelPrivacyMapOutput) ToWorkflowTaskChangeSlackChannelPrivacyMapOutputWithContext(ctx context.Context) WorkflowTaskChangeSlackChannelPrivacyMapOutput {
	return o
}

func (o WorkflowTaskChangeSlackChannelPrivacyMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskChangeSlackChannelPrivacyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskChangeSlackChannelPrivacy {
		return vs[0].(map[string]*WorkflowTaskChangeSlackChannelPrivacy)[vs[1].(string)]
	}).(WorkflowTaskChangeSlackChannelPrivacyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskChangeSlackChannelPrivacyInput)(nil)).Elem(), &WorkflowTaskChangeSlackChannelPrivacy{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskChangeSlackChannelPrivacyArrayInput)(nil)).Elem(), WorkflowTaskChangeSlackChannelPrivacyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskChangeSlackChannelPrivacyMapInput)(nil)).Elem(), WorkflowTaskChangeSlackChannelPrivacyMap{})
	pulumi.RegisterOutputType(WorkflowTaskChangeSlackChannelPrivacyOutput{})
	pulumi.RegisterOutputType(WorkflowTaskChangeSlackChannelPrivacyArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskChangeSlackChannelPrivacyMapOutput{})
}
