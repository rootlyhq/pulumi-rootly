// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

type FormFieldPosition struct {
	pulumi.CustomResourceState

	// The form for the position. Value must be one of `webNewIncidentForm`, `webUpdateIncidentForm`, `webIncidentPostMortemForm`, `webIncidentMitigationForm`, `webIncidentResolutionForm`, `webIncidentCancellationForm`, `webScheduledIncidentForm`, `webUpdateScheduledIncidentForm`, `incidentPostMortem`, `slackNewIncidentForm`, `slackUpdateIncidentForm`, `slackUpdateIncidentStatusForm`, `slackIncidentMitigationForm`, `slackIncidentResolutionForm`, `slackIncidentCancellationForm`, `slackScheduledIncidentForm`, `slackUpdateScheduledIncidentForm`.
	Form pulumi.StringPtrOutput `pulumi:"form"`
	// The ID of the form field.
	FormFieldId pulumi.StringOutput `pulumi:"formFieldId"`
	// The position of the form*field*position
	Position pulumi.IntOutput `pulumi:"position"`
}

// NewFormFieldPosition registers a new resource with the given unique name, arguments, and options.
func NewFormFieldPosition(ctx *pulumi.Context,
	name string, args *FormFieldPositionArgs, opts ...pulumi.ResourceOption) (*FormFieldPosition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FormFieldId == nil {
		return nil, errors.New("invalid value for required argument 'FormFieldId'")
	}
	if args.Position == nil {
		return nil, errors.New("invalid value for required argument 'Position'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FormFieldPosition
	err := ctx.RegisterResource("rootly:index/formFieldPosition:FormFieldPosition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFormFieldPosition gets an existing FormFieldPosition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFormFieldPosition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FormFieldPositionState, opts ...pulumi.ResourceOption) (*FormFieldPosition, error) {
	var resource FormFieldPosition
	err := ctx.ReadResource("rootly:index/formFieldPosition:FormFieldPosition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FormFieldPosition resources.
type formFieldPositionState struct {
	// The form for the position. Value must be one of `webNewIncidentForm`, `webUpdateIncidentForm`, `webIncidentPostMortemForm`, `webIncidentMitigationForm`, `webIncidentResolutionForm`, `webIncidentCancellationForm`, `webScheduledIncidentForm`, `webUpdateScheduledIncidentForm`, `incidentPostMortem`, `slackNewIncidentForm`, `slackUpdateIncidentForm`, `slackUpdateIncidentStatusForm`, `slackIncidentMitigationForm`, `slackIncidentResolutionForm`, `slackIncidentCancellationForm`, `slackScheduledIncidentForm`, `slackUpdateScheduledIncidentForm`.
	Form *string `pulumi:"form"`
	// The ID of the form field.
	FormFieldId *string `pulumi:"formFieldId"`
	// The position of the form*field*position
	Position *int `pulumi:"position"`
}

type FormFieldPositionState struct {
	// The form for the position. Value must be one of `webNewIncidentForm`, `webUpdateIncidentForm`, `webIncidentPostMortemForm`, `webIncidentMitigationForm`, `webIncidentResolutionForm`, `webIncidentCancellationForm`, `webScheduledIncidentForm`, `webUpdateScheduledIncidentForm`, `incidentPostMortem`, `slackNewIncidentForm`, `slackUpdateIncidentForm`, `slackUpdateIncidentStatusForm`, `slackIncidentMitigationForm`, `slackIncidentResolutionForm`, `slackIncidentCancellationForm`, `slackScheduledIncidentForm`, `slackUpdateScheduledIncidentForm`.
	Form pulumi.StringPtrInput
	// The ID of the form field.
	FormFieldId pulumi.StringPtrInput
	// The position of the form*field*position
	Position pulumi.IntPtrInput
}

func (FormFieldPositionState) ElementType() reflect.Type {
	return reflect.TypeOf((*formFieldPositionState)(nil)).Elem()
}

type formFieldPositionArgs struct {
	// The form for the position. Value must be one of `webNewIncidentForm`, `webUpdateIncidentForm`, `webIncidentPostMortemForm`, `webIncidentMitigationForm`, `webIncidentResolutionForm`, `webIncidentCancellationForm`, `webScheduledIncidentForm`, `webUpdateScheduledIncidentForm`, `incidentPostMortem`, `slackNewIncidentForm`, `slackUpdateIncidentForm`, `slackUpdateIncidentStatusForm`, `slackIncidentMitigationForm`, `slackIncidentResolutionForm`, `slackIncidentCancellationForm`, `slackScheduledIncidentForm`, `slackUpdateScheduledIncidentForm`.
	Form *string `pulumi:"form"`
	// The ID of the form field.
	FormFieldId string `pulumi:"formFieldId"`
	// The position of the form*field*position
	Position int `pulumi:"position"`
}

// The set of arguments for constructing a FormFieldPosition resource.
type FormFieldPositionArgs struct {
	// The form for the position. Value must be one of `webNewIncidentForm`, `webUpdateIncidentForm`, `webIncidentPostMortemForm`, `webIncidentMitigationForm`, `webIncidentResolutionForm`, `webIncidentCancellationForm`, `webScheduledIncidentForm`, `webUpdateScheduledIncidentForm`, `incidentPostMortem`, `slackNewIncidentForm`, `slackUpdateIncidentForm`, `slackUpdateIncidentStatusForm`, `slackIncidentMitigationForm`, `slackIncidentResolutionForm`, `slackIncidentCancellationForm`, `slackScheduledIncidentForm`, `slackUpdateScheduledIncidentForm`.
	Form pulumi.StringPtrInput
	// The ID of the form field.
	FormFieldId pulumi.StringInput
	// The position of the form*field*position
	Position pulumi.IntInput
}

func (FormFieldPositionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*formFieldPositionArgs)(nil)).Elem()
}

type FormFieldPositionInput interface {
	pulumi.Input

	ToFormFieldPositionOutput() FormFieldPositionOutput
	ToFormFieldPositionOutputWithContext(ctx context.Context) FormFieldPositionOutput
}

func (*FormFieldPosition) ElementType() reflect.Type {
	return reflect.TypeOf((**FormFieldPosition)(nil)).Elem()
}

func (i *FormFieldPosition) ToFormFieldPositionOutput() FormFieldPositionOutput {
	return i.ToFormFieldPositionOutputWithContext(context.Background())
}

func (i *FormFieldPosition) ToFormFieldPositionOutputWithContext(ctx context.Context) FormFieldPositionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormFieldPositionOutput)
}

// FormFieldPositionArrayInput is an input type that accepts FormFieldPositionArray and FormFieldPositionArrayOutput values.
// You can construct a concrete instance of `FormFieldPositionArrayInput` via:
//
//	FormFieldPositionArray{ FormFieldPositionArgs{...} }
type FormFieldPositionArrayInput interface {
	pulumi.Input

	ToFormFieldPositionArrayOutput() FormFieldPositionArrayOutput
	ToFormFieldPositionArrayOutputWithContext(context.Context) FormFieldPositionArrayOutput
}

type FormFieldPositionArray []FormFieldPositionInput

func (FormFieldPositionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FormFieldPosition)(nil)).Elem()
}

func (i FormFieldPositionArray) ToFormFieldPositionArrayOutput() FormFieldPositionArrayOutput {
	return i.ToFormFieldPositionArrayOutputWithContext(context.Background())
}

func (i FormFieldPositionArray) ToFormFieldPositionArrayOutputWithContext(ctx context.Context) FormFieldPositionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormFieldPositionArrayOutput)
}

// FormFieldPositionMapInput is an input type that accepts FormFieldPositionMap and FormFieldPositionMapOutput values.
// You can construct a concrete instance of `FormFieldPositionMapInput` via:
//
//	FormFieldPositionMap{ "key": FormFieldPositionArgs{...} }
type FormFieldPositionMapInput interface {
	pulumi.Input

	ToFormFieldPositionMapOutput() FormFieldPositionMapOutput
	ToFormFieldPositionMapOutputWithContext(context.Context) FormFieldPositionMapOutput
}

type FormFieldPositionMap map[string]FormFieldPositionInput

func (FormFieldPositionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FormFieldPosition)(nil)).Elem()
}

func (i FormFieldPositionMap) ToFormFieldPositionMapOutput() FormFieldPositionMapOutput {
	return i.ToFormFieldPositionMapOutputWithContext(context.Background())
}

func (i FormFieldPositionMap) ToFormFieldPositionMapOutputWithContext(ctx context.Context) FormFieldPositionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormFieldPositionMapOutput)
}

type FormFieldPositionOutput struct{ *pulumi.OutputState }

func (FormFieldPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FormFieldPosition)(nil)).Elem()
}

func (o FormFieldPositionOutput) ToFormFieldPositionOutput() FormFieldPositionOutput {
	return o
}

func (o FormFieldPositionOutput) ToFormFieldPositionOutputWithContext(ctx context.Context) FormFieldPositionOutput {
	return o
}

// The form for the position. Value must be one of `webNewIncidentForm`, `webUpdateIncidentForm`, `webIncidentPostMortemForm`, `webIncidentMitigationForm`, `webIncidentResolutionForm`, `webIncidentCancellationForm`, `webScheduledIncidentForm`, `webUpdateScheduledIncidentForm`, `incidentPostMortem`, `slackNewIncidentForm`, `slackUpdateIncidentForm`, `slackUpdateIncidentStatusForm`, `slackIncidentMitigationForm`, `slackIncidentResolutionForm`, `slackIncidentCancellationForm`, `slackScheduledIncidentForm`, `slackUpdateScheduledIncidentForm`.
func (o FormFieldPositionOutput) Form() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FormFieldPosition) pulumi.StringPtrOutput { return v.Form }).(pulumi.StringPtrOutput)
}

// The ID of the form field.
func (o FormFieldPositionOutput) FormFieldId() pulumi.StringOutput {
	return o.ApplyT(func(v *FormFieldPosition) pulumi.StringOutput { return v.FormFieldId }).(pulumi.StringOutput)
}

// The position of the form*field*position
func (o FormFieldPositionOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *FormFieldPosition) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

type FormFieldPositionArrayOutput struct{ *pulumi.OutputState }

func (FormFieldPositionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FormFieldPosition)(nil)).Elem()
}

func (o FormFieldPositionArrayOutput) ToFormFieldPositionArrayOutput() FormFieldPositionArrayOutput {
	return o
}

func (o FormFieldPositionArrayOutput) ToFormFieldPositionArrayOutputWithContext(ctx context.Context) FormFieldPositionArrayOutput {
	return o
}

func (o FormFieldPositionArrayOutput) Index(i pulumi.IntInput) FormFieldPositionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FormFieldPosition {
		return vs[0].([]*FormFieldPosition)[vs[1].(int)]
	}).(FormFieldPositionOutput)
}

type FormFieldPositionMapOutput struct{ *pulumi.OutputState }

func (FormFieldPositionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FormFieldPosition)(nil)).Elem()
}

func (o FormFieldPositionMapOutput) ToFormFieldPositionMapOutput() FormFieldPositionMapOutput {
	return o
}

func (o FormFieldPositionMapOutput) ToFormFieldPositionMapOutputWithContext(ctx context.Context) FormFieldPositionMapOutput {
	return o
}

func (o FormFieldPositionMapOutput) MapIndex(k pulumi.StringInput) FormFieldPositionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FormFieldPosition {
		return vs[0].(map[string]*FormFieldPosition)[vs[1].(string)]
	}).(FormFieldPositionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FormFieldPositionInput)(nil)).Elem(), &FormFieldPosition{})
	pulumi.RegisterInputType(reflect.TypeOf((*FormFieldPositionArrayInput)(nil)).Elem(), FormFieldPositionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FormFieldPositionMapInput)(nil)).Elem(), FormFieldPositionMap{})
	pulumi.RegisterOutputType(FormFieldPositionOutput{})
	pulumi.RegisterOutputType(FormFieldPositionArrayOutput{})
	pulumi.RegisterOutputType(FormFieldPositionMapOutput{})
}
