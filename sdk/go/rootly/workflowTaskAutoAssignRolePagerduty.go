// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow autoAssignRolePagerduty task.
type WorkflowTaskAutoAssignRolePagerduty struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskAutoAssignRolePagerduty registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskAutoAssignRolePagerduty(ctx *pulumi.Context,
	name string, args *WorkflowTaskAutoAssignRolePagerdutyArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskAutoAssignRolePagerduty, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskAutoAssignRolePagerduty
	err := ctx.RegisterResource("rootly:index/workflowTaskAutoAssignRolePagerduty:WorkflowTaskAutoAssignRolePagerduty", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskAutoAssignRolePagerduty gets an existing WorkflowTaskAutoAssignRolePagerduty resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskAutoAssignRolePagerduty(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskAutoAssignRolePagerdutyState, opts ...pulumi.ResourceOption) (*WorkflowTaskAutoAssignRolePagerduty, error) {
	var resource WorkflowTaskAutoAssignRolePagerduty
	err := ctx.ReadResource("rootly:index/workflowTaskAutoAssignRolePagerduty:WorkflowTaskAutoAssignRolePagerduty", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskAutoAssignRolePagerduty resources.
type workflowTaskAutoAssignRolePagerdutyState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskAutoAssignRolePagerdutyTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskAutoAssignRolePagerdutyState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskAutoAssignRolePagerdutyTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskAutoAssignRolePagerdutyState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskAutoAssignRolePagerdutyState)(nil)).Elem()
}

type workflowTaskAutoAssignRolePagerdutyArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskAutoAssignRolePagerdutyTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskAutoAssignRolePagerduty resource.
type WorkflowTaskAutoAssignRolePagerdutyArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskAutoAssignRolePagerdutyTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskAutoAssignRolePagerdutyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskAutoAssignRolePagerdutyArgs)(nil)).Elem()
}

type WorkflowTaskAutoAssignRolePagerdutyInput interface {
	pulumi.Input

	ToWorkflowTaskAutoAssignRolePagerdutyOutput() WorkflowTaskAutoAssignRolePagerdutyOutput
	ToWorkflowTaskAutoAssignRolePagerdutyOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRolePagerdutyOutput
}

func (*WorkflowTaskAutoAssignRolePagerduty) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAutoAssignRolePagerduty)(nil)).Elem()
}

func (i *WorkflowTaskAutoAssignRolePagerduty) ToWorkflowTaskAutoAssignRolePagerdutyOutput() WorkflowTaskAutoAssignRolePagerdutyOutput {
	return i.ToWorkflowTaskAutoAssignRolePagerdutyOutputWithContext(context.Background())
}

func (i *WorkflowTaskAutoAssignRolePagerduty) ToWorkflowTaskAutoAssignRolePagerdutyOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRolePagerdutyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAutoAssignRolePagerdutyOutput)
}

// WorkflowTaskAutoAssignRolePagerdutyArrayInput is an input type that accepts WorkflowTaskAutoAssignRolePagerdutyArray and WorkflowTaskAutoAssignRolePagerdutyArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskAutoAssignRolePagerdutyArrayInput` via:
//
//	WorkflowTaskAutoAssignRolePagerdutyArray{ WorkflowTaskAutoAssignRolePagerdutyArgs{...} }
type WorkflowTaskAutoAssignRolePagerdutyArrayInput interface {
	pulumi.Input

	ToWorkflowTaskAutoAssignRolePagerdutyArrayOutput() WorkflowTaskAutoAssignRolePagerdutyArrayOutput
	ToWorkflowTaskAutoAssignRolePagerdutyArrayOutputWithContext(context.Context) WorkflowTaskAutoAssignRolePagerdutyArrayOutput
}

type WorkflowTaskAutoAssignRolePagerdutyArray []WorkflowTaskAutoAssignRolePagerdutyInput

func (WorkflowTaskAutoAssignRolePagerdutyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskAutoAssignRolePagerduty)(nil)).Elem()
}

func (i WorkflowTaskAutoAssignRolePagerdutyArray) ToWorkflowTaskAutoAssignRolePagerdutyArrayOutput() WorkflowTaskAutoAssignRolePagerdutyArrayOutput {
	return i.ToWorkflowTaskAutoAssignRolePagerdutyArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskAutoAssignRolePagerdutyArray) ToWorkflowTaskAutoAssignRolePagerdutyArrayOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRolePagerdutyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAutoAssignRolePagerdutyArrayOutput)
}

// WorkflowTaskAutoAssignRolePagerdutyMapInput is an input type that accepts WorkflowTaskAutoAssignRolePagerdutyMap and WorkflowTaskAutoAssignRolePagerdutyMapOutput values.
// You can construct a concrete instance of `WorkflowTaskAutoAssignRolePagerdutyMapInput` via:
//
//	WorkflowTaskAutoAssignRolePagerdutyMap{ "key": WorkflowTaskAutoAssignRolePagerdutyArgs{...} }
type WorkflowTaskAutoAssignRolePagerdutyMapInput interface {
	pulumi.Input

	ToWorkflowTaskAutoAssignRolePagerdutyMapOutput() WorkflowTaskAutoAssignRolePagerdutyMapOutput
	ToWorkflowTaskAutoAssignRolePagerdutyMapOutputWithContext(context.Context) WorkflowTaskAutoAssignRolePagerdutyMapOutput
}

type WorkflowTaskAutoAssignRolePagerdutyMap map[string]WorkflowTaskAutoAssignRolePagerdutyInput

func (WorkflowTaskAutoAssignRolePagerdutyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskAutoAssignRolePagerduty)(nil)).Elem()
}

func (i WorkflowTaskAutoAssignRolePagerdutyMap) ToWorkflowTaskAutoAssignRolePagerdutyMapOutput() WorkflowTaskAutoAssignRolePagerdutyMapOutput {
	return i.ToWorkflowTaskAutoAssignRolePagerdutyMapOutputWithContext(context.Background())
}

func (i WorkflowTaskAutoAssignRolePagerdutyMap) ToWorkflowTaskAutoAssignRolePagerdutyMapOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRolePagerdutyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAutoAssignRolePagerdutyMapOutput)
}

type WorkflowTaskAutoAssignRolePagerdutyOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAutoAssignRolePagerdutyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAutoAssignRolePagerduty)(nil)).Elem()
}

func (o WorkflowTaskAutoAssignRolePagerdutyOutput) ToWorkflowTaskAutoAssignRolePagerdutyOutput() WorkflowTaskAutoAssignRolePagerdutyOutput {
	return o
}

func (o WorkflowTaskAutoAssignRolePagerdutyOutput) ToWorkflowTaskAutoAssignRolePagerdutyOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRolePagerdutyOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskAutoAssignRolePagerdutyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRolePagerduty) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskAutoAssignRolePagerdutyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRolePagerduty) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskAutoAssignRolePagerdutyOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRolePagerduty) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskAutoAssignRolePagerdutyOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRolePagerduty) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskAutoAssignRolePagerdutyOutput) TaskParams() WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRolePagerduty) WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskAutoAssignRolePagerdutyTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskAutoAssignRolePagerdutyOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskAutoAssignRolePagerduty) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskAutoAssignRolePagerdutyArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAutoAssignRolePagerdutyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskAutoAssignRolePagerduty)(nil)).Elem()
}

func (o WorkflowTaskAutoAssignRolePagerdutyArrayOutput) ToWorkflowTaskAutoAssignRolePagerdutyArrayOutput() WorkflowTaskAutoAssignRolePagerdutyArrayOutput {
	return o
}

func (o WorkflowTaskAutoAssignRolePagerdutyArrayOutput) ToWorkflowTaskAutoAssignRolePagerdutyArrayOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRolePagerdutyArrayOutput {
	return o
}

func (o WorkflowTaskAutoAssignRolePagerdutyArrayOutput) Index(i pulumi.IntInput) WorkflowTaskAutoAssignRolePagerdutyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskAutoAssignRolePagerduty {
		return vs[0].([]*WorkflowTaskAutoAssignRolePagerduty)[vs[1].(int)]
	}).(WorkflowTaskAutoAssignRolePagerdutyOutput)
}

type WorkflowTaskAutoAssignRolePagerdutyMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAutoAssignRolePagerdutyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskAutoAssignRolePagerduty)(nil)).Elem()
}

func (o WorkflowTaskAutoAssignRolePagerdutyMapOutput) ToWorkflowTaskAutoAssignRolePagerdutyMapOutput() WorkflowTaskAutoAssignRolePagerdutyMapOutput {
	return o
}

func (o WorkflowTaskAutoAssignRolePagerdutyMapOutput) ToWorkflowTaskAutoAssignRolePagerdutyMapOutputWithContext(ctx context.Context) WorkflowTaskAutoAssignRolePagerdutyMapOutput {
	return o
}

func (o WorkflowTaskAutoAssignRolePagerdutyMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskAutoAssignRolePagerdutyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskAutoAssignRolePagerduty {
		return vs[0].(map[string]*WorkflowTaskAutoAssignRolePagerduty)[vs[1].(string)]
	}).(WorkflowTaskAutoAssignRolePagerdutyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAutoAssignRolePagerdutyInput)(nil)).Elem(), &WorkflowTaskAutoAssignRolePagerduty{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAutoAssignRolePagerdutyArrayInput)(nil)).Elem(), WorkflowTaskAutoAssignRolePagerdutyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAutoAssignRolePagerdutyMapInput)(nil)).Elem(), WorkflowTaskAutoAssignRolePagerdutyMap{})
	pulumi.RegisterOutputType(WorkflowTaskAutoAssignRolePagerdutyOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAutoAssignRolePagerdutyArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAutoAssignRolePagerdutyMapOutput{})
}
