// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

func LookupHeartbeat(ctx *pulumi.Context, args *LookupHeartbeatArgs, opts ...pulumi.InvokeOption) (*LookupHeartbeatResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupHeartbeatResult
	err := ctx.Invoke("rootly:index/getHeartbeat:getHeartbeat", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHeartbeat.
type LookupHeartbeatArgs struct {
	// Filter by date range using 'lt' and 'gt'.
	CreatedAt map[string]string `pulumi:"createdAt"`
	Name      *string           `pulumi:"name"`
}

// A collection of values returned by getHeartbeat.
type LookupHeartbeatResult struct {
	// Filter by date range using 'lt' and 'gt'.
	CreatedAt map[string]string `pulumi:"createdAt"`
	// The ID of this resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupHeartbeatOutput(ctx *pulumi.Context, args LookupHeartbeatOutputArgs, opts ...pulumi.InvokeOption) LookupHeartbeatResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupHeartbeatResult, error) {
			args := v.(LookupHeartbeatArgs)
			r, err := LookupHeartbeat(ctx, &args, opts...)
			var s LookupHeartbeatResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupHeartbeatResultOutput)
}

// A collection of arguments for invoking getHeartbeat.
type LookupHeartbeatOutputArgs struct {
	// Filter by date range using 'lt' and 'gt'.
	CreatedAt pulumi.StringMapInput `pulumi:"createdAt"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupHeartbeatOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHeartbeatArgs)(nil)).Elem()
}

// A collection of values returned by getHeartbeat.
type LookupHeartbeatResultOutput struct{ *pulumi.OutputState }

func (LookupHeartbeatResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHeartbeatResult)(nil)).Elem()
}

func (o LookupHeartbeatResultOutput) ToLookupHeartbeatResultOutput() LookupHeartbeatResultOutput {
	return o
}

func (o LookupHeartbeatResultOutput) ToLookupHeartbeatResultOutputWithContext(ctx context.Context) LookupHeartbeatResultOutput {
	return o
}

// Filter by date range using 'lt' and 'gt'.
func (o LookupHeartbeatResultOutput) CreatedAt() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupHeartbeatResult) map[string]string { return v.CreatedAt }).(pulumi.StringMapOutput)
}

// The ID of this resource.
func (o LookupHeartbeatResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHeartbeatResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupHeartbeatResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHeartbeatResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupHeartbeatResultOutput{})
}
