// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow updateShortcutStory task.
type WorkflowTaskUpdateShortcutStory struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateShortcutStoryTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskUpdateShortcutStory registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskUpdateShortcutStory(ctx *pulumi.Context,
	name string, args *WorkflowTaskUpdateShortcutStoryArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateShortcutStory, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskUpdateShortcutStory
	err := ctx.RegisterResource("rootly:index/workflowTaskUpdateShortcutStory:WorkflowTaskUpdateShortcutStory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskUpdateShortcutStory gets an existing WorkflowTaskUpdateShortcutStory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskUpdateShortcutStory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskUpdateShortcutStoryState, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateShortcutStory, error) {
	var resource WorkflowTaskUpdateShortcutStory
	err := ctx.ReadResource("rootly:index/workflowTaskUpdateShortcutStory:WorkflowTaskUpdateShortcutStory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskUpdateShortcutStory resources.
type workflowTaskUpdateShortcutStoryState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskUpdateShortcutStoryTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskUpdateShortcutStoryState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateShortcutStoryTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskUpdateShortcutStoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateShortcutStoryState)(nil)).Elem()
}

type workflowTaskUpdateShortcutStoryArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateShortcutStoryTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskUpdateShortcutStory resource.
type WorkflowTaskUpdateShortcutStoryArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateShortcutStoryTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskUpdateShortcutStoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateShortcutStoryArgs)(nil)).Elem()
}

type WorkflowTaskUpdateShortcutStoryInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateShortcutStoryOutput() WorkflowTaskUpdateShortcutStoryOutput
	ToWorkflowTaskUpdateShortcutStoryOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutStoryOutput
}

func (*WorkflowTaskUpdateShortcutStory) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateShortcutStory)(nil)).Elem()
}

func (i *WorkflowTaskUpdateShortcutStory) ToWorkflowTaskUpdateShortcutStoryOutput() WorkflowTaskUpdateShortcutStoryOutput {
	return i.ToWorkflowTaskUpdateShortcutStoryOutputWithContext(context.Background())
}

func (i *WorkflowTaskUpdateShortcutStory) ToWorkflowTaskUpdateShortcutStoryOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutStoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateShortcutStoryOutput)
}

// WorkflowTaskUpdateShortcutStoryArrayInput is an input type that accepts WorkflowTaskUpdateShortcutStoryArray and WorkflowTaskUpdateShortcutStoryArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateShortcutStoryArrayInput` via:
//
//	WorkflowTaskUpdateShortcutStoryArray{ WorkflowTaskUpdateShortcutStoryArgs{...} }
type WorkflowTaskUpdateShortcutStoryArrayInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateShortcutStoryArrayOutput() WorkflowTaskUpdateShortcutStoryArrayOutput
	ToWorkflowTaskUpdateShortcutStoryArrayOutputWithContext(context.Context) WorkflowTaskUpdateShortcutStoryArrayOutput
}

type WorkflowTaskUpdateShortcutStoryArray []WorkflowTaskUpdateShortcutStoryInput

func (WorkflowTaskUpdateShortcutStoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateShortcutStory)(nil)).Elem()
}

func (i WorkflowTaskUpdateShortcutStoryArray) ToWorkflowTaskUpdateShortcutStoryArrayOutput() WorkflowTaskUpdateShortcutStoryArrayOutput {
	return i.ToWorkflowTaskUpdateShortcutStoryArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateShortcutStoryArray) ToWorkflowTaskUpdateShortcutStoryArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutStoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateShortcutStoryArrayOutput)
}

// WorkflowTaskUpdateShortcutStoryMapInput is an input type that accepts WorkflowTaskUpdateShortcutStoryMap and WorkflowTaskUpdateShortcutStoryMapOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateShortcutStoryMapInput` via:
//
//	WorkflowTaskUpdateShortcutStoryMap{ "key": WorkflowTaskUpdateShortcutStoryArgs{...} }
type WorkflowTaskUpdateShortcutStoryMapInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateShortcutStoryMapOutput() WorkflowTaskUpdateShortcutStoryMapOutput
	ToWorkflowTaskUpdateShortcutStoryMapOutputWithContext(context.Context) WorkflowTaskUpdateShortcutStoryMapOutput
}

type WorkflowTaskUpdateShortcutStoryMap map[string]WorkflowTaskUpdateShortcutStoryInput

func (WorkflowTaskUpdateShortcutStoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateShortcutStory)(nil)).Elem()
}

func (i WorkflowTaskUpdateShortcutStoryMap) ToWorkflowTaskUpdateShortcutStoryMapOutput() WorkflowTaskUpdateShortcutStoryMapOutput {
	return i.ToWorkflowTaskUpdateShortcutStoryMapOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateShortcutStoryMap) ToWorkflowTaskUpdateShortcutStoryMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutStoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateShortcutStoryMapOutput)
}

type WorkflowTaskUpdateShortcutStoryOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateShortcutStoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateShortcutStory)(nil)).Elem()
}

func (o WorkflowTaskUpdateShortcutStoryOutput) ToWorkflowTaskUpdateShortcutStoryOutput() WorkflowTaskUpdateShortcutStoryOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutStoryOutput) ToWorkflowTaskUpdateShortcutStoryOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutStoryOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskUpdateShortcutStoryOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutStory) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskUpdateShortcutStoryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutStory) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskUpdateShortcutStoryOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutStory) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskUpdateShortcutStoryOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutStory) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskUpdateShortcutStoryOutput) TaskParams() WorkflowTaskUpdateShortcutStoryTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutStory) WorkflowTaskUpdateShortcutStoryTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskUpdateShortcutStoryTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskUpdateShortcutStoryOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutStory) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskUpdateShortcutStoryArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateShortcutStoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateShortcutStory)(nil)).Elem()
}

func (o WorkflowTaskUpdateShortcutStoryArrayOutput) ToWorkflowTaskUpdateShortcutStoryArrayOutput() WorkflowTaskUpdateShortcutStoryArrayOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutStoryArrayOutput) ToWorkflowTaskUpdateShortcutStoryArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutStoryArrayOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutStoryArrayOutput) Index(i pulumi.IntInput) WorkflowTaskUpdateShortcutStoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateShortcutStory {
		return vs[0].([]*WorkflowTaskUpdateShortcutStory)[vs[1].(int)]
	}).(WorkflowTaskUpdateShortcutStoryOutput)
}

type WorkflowTaskUpdateShortcutStoryMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateShortcutStoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateShortcutStory)(nil)).Elem()
}

func (o WorkflowTaskUpdateShortcutStoryMapOutput) ToWorkflowTaskUpdateShortcutStoryMapOutput() WorkflowTaskUpdateShortcutStoryMapOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutStoryMapOutput) ToWorkflowTaskUpdateShortcutStoryMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutStoryMapOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutStoryMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskUpdateShortcutStoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateShortcutStory {
		return vs[0].(map[string]*WorkflowTaskUpdateShortcutStory)[vs[1].(string)]
	}).(WorkflowTaskUpdateShortcutStoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateShortcutStoryInput)(nil)).Elem(), &WorkflowTaskUpdateShortcutStory{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateShortcutStoryArrayInput)(nil)).Elem(), WorkflowTaskUpdateShortcutStoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateShortcutStoryMapInput)(nil)).Elem(), WorkflowTaskUpdateShortcutStoryMap{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateShortcutStoryOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateShortcutStoryArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateShortcutStoryMapOutput{})
}
