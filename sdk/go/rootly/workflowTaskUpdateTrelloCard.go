// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow updateTrelloCard task.
type WorkflowTaskUpdateTrelloCard struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateTrelloCardTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskUpdateTrelloCard registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskUpdateTrelloCard(ctx *pulumi.Context,
	name string, args *WorkflowTaskUpdateTrelloCardArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateTrelloCard, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskUpdateTrelloCard
	err := ctx.RegisterResource("rootly:index/workflowTaskUpdateTrelloCard:WorkflowTaskUpdateTrelloCard", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskUpdateTrelloCard gets an existing WorkflowTaskUpdateTrelloCard resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskUpdateTrelloCard(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskUpdateTrelloCardState, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateTrelloCard, error) {
	var resource WorkflowTaskUpdateTrelloCard
	err := ctx.ReadResource("rootly:index/workflowTaskUpdateTrelloCard:WorkflowTaskUpdateTrelloCard", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskUpdateTrelloCard resources.
type workflowTaskUpdateTrelloCardState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskUpdateTrelloCardTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskUpdateTrelloCardState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateTrelloCardTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskUpdateTrelloCardState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateTrelloCardState)(nil)).Elem()
}

type workflowTaskUpdateTrelloCardArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateTrelloCardTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskUpdateTrelloCard resource.
type WorkflowTaskUpdateTrelloCardArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateTrelloCardTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskUpdateTrelloCardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateTrelloCardArgs)(nil)).Elem()
}

type WorkflowTaskUpdateTrelloCardInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateTrelloCardOutput() WorkflowTaskUpdateTrelloCardOutput
	ToWorkflowTaskUpdateTrelloCardOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardOutput
}

func (*WorkflowTaskUpdateTrelloCard) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateTrelloCard)(nil)).Elem()
}

func (i *WorkflowTaskUpdateTrelloCard) ToWorkflowTaskUpdateTrelloCardOutput() WorkflowTaskUpdateTrelloCardOutput {
	return i.ToWorkflowTaskUpdateTrelloCardOutputWithContext(context.Background())
}

func (i *WorkflowTaskUpdateTrelloCard) ToWorkflowTaskUpdateTrelloCardOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateTrelloCardOutput)
}

// WorkflowTaskUpdateTrelloCardArrayInput is an input type that accepts WorkflowTaskUpdateTrelloCardArray and WorkflowTaskUpdateTrelloCardArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateTrelloCardArrayInput` via:
//
//	WorkflowTaskUpdateTrelloCardArray{ WorkflowTaskUpdateTrelloCardArgs{...} }
type WorkflowTaskUpdateTrelloCardArrayInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateTrelloCardArrayOutput() WorkflowTaskUpdateTrelloCardArrayOutput
	ToWorkflowTaskUpdateTrelloCardArrayOutputWithContext(context.Context) WorkflowTaskUpdateTrelloCardArrayOutput
}

type WorkflowTaskUpdateTrelloCardArray []WorkflowTaskUpdateTrelloCardInput

func (WorkflowTaskUpdateTrelloCardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateTrelloCard)(nil)).Elem()
}

func (i WorkflowTaskUpdateTrelloCardArray) ToWorkflowTaskUpdateTrelloCardArrayOutput() WorkflowTaskUpdateTrelloCardArrayOutput {
	return i.ToWorkflowTaskUpdateTrelloCardArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateTrelloCardArray) ToWorkflowTaskUpdateTrelloCardArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateTrelloCardArrayOutput)
}

// WorkflowTaskUpdateTrelloCardMapInput is an input type that accepts WorkflowTaskUpdateTrelloCardMap and WorkflowTaskUpdateTrelloCardMapOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateTrelloCardMapInput` via:
//
//	WorkflowTaskUpdateTrelloCardMap{ "key": WorkflowTaskUpdateTrelloCardArgs{...} }
type WorkflowTaskUpdateTrelloCardMapInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateTrelloCardMapOutput() WorkflowTaskUpdateTrelloCardMapOutput
	ToWorkflowTaskUpdateTrelloCardMapOutputWithContext(context.Context) WorkflowTaskUpdateTrelloCardMapOutput
}

type WorkflowTaskUpdateTrelloCardMap map[string]WorkflowTaskUpdateTrelloCardInput

func (WorkflowTaskUpdateTrelloCardMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateTrelloCard)(nil)).Elem()
}

func (i WorkflowTaskUpdateTrelloCardMap) ToWorkflowTaskUpdateTrelloCardMapOutput() WorkflowTaskUpdateTrelloCardMapOutput {
	return i.ToWorkflowTaskUpdateTrelloCardMapOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateTrelloCardMap) ToWorkflowTaskUpdateTrelloCardMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateTrelloCardMapOutput)
}

type WorkflowTaskUpdateTrelloCardOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateTrelloCardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateTrelloCard)(nil)).Elem()
}

func (o WorkflowTaskUpdateTrelloCardOutput) ToWorkflowTaskUpdateTrelloCardOutput() WorkflowTaskUpdateTrelloCardOutput {
	return o
}

func (o WorkflowTaskUpdateTrelloCardOutput) ToWorkflowTaskUpdateTrelloCardOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskUpdateTrelloCardOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateTrelloCard) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskUpdateTrelloCardOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateTrelloCard) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskUpdateTrelloCardOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateTrelloCard) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskUpdateTrelloCardOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateTrelloCard) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskUpdateTrelloCardOutput) TaskParams() WorkflowTaskUpdateTrelloCardTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateTrelloCard) WorkflowTaskUpdateTrelloCardTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskUpdateTrelloCardTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskUpdateTrelloCardOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateTrelloCard) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskUpdateTrelloCardArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateTrelloCardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateTrelloCard)(nil)).Elem()
}

func (o WorkflowTaskUpdateTrelloCardArrayOutput) ToWorkflowTaskUpdateTrelloCardArrayOutput() WorkflowTaskUpdateTrelloCardArrayOutput {
	return o
}

func (o WorkflowTaskUpdateTrelloCardArrayOutput) ToWorkflowTaskUpdateTrelloCardArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardArrayOutput {
	return o
}

func (o WorkflowTaskUpdateTrelloCardArrayOutput) Index(i pulumi.IntInput) WorkflowTaskUpdateTrelloCardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateTrelloCard {
		return vs[0].([]*WorkflowTaskUpdateTrelloCard)[vs[1].(int)]
	}).(WorkflowTaskUpdateTrelloCardOutput)
}

type WorkflowTaskUpdateTrelloCardMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateTrelloCardMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateTrelloCard)(nil)).Elem()
}

func (o WorkflowTaskUpdateTrelloCardMapOutput) ToWorkflowTaskUpdateTrelloCardMapOutput() WorkflowTaskUpdateTrelloCardMapOutput {
	return o
}

func (o WorkflowTaskUpdateTrelloCardMapOutput) ToWorkflowTaskUpdateTrelloCardMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateTrelloCardMapOutput {
	return o
}

func (o WorkflowTaskUpdateTrelloCardMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskUpdateTrelloCardOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateTrelloCard {
		return vs[0].(map[string]*WorkflowTaskUpdateTrelloCard)[vs[1].(string)]
	}).(WorkflowTaskUpdateTrelloCardOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateTrelloCardInput)(nil)).Elem(), &WorkflowTaskUpdateTrelloCard{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateTrelloCardArrayInput)(nil)).Elem(), WorkflowTaskUpdateTrelloCardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateTrelloCardMapInput)(nil)).Elem(), WorkflowTaskUpdateTrelloCardMap{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateTrelloCardOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateTrelloCardArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateTrelloCardMapOutput{})
}
