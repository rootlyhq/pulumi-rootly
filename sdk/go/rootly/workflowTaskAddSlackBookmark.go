// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow addSlackBookmark task.
type WorkflowTaskAddSlackBookmark struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskAddSlackBookmarkTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskAddSlackBookmark registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskAddSlackBookmark(ctx *pulumi.Context,
	name string, args *WorkflowTaskAddSlackBookmarkArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskAddSlackBookmark, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskAddSlackBookmark
	err := ctx.RegisterResource("rootly:index/workflowTaskAddSlackBookmark:WorkflowTaskAddSlackBookmark", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskAddSlackBookmark gets an existing WorkflowTaskAddSlackBookmark resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskAddSlackBookmark(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskAddSlackBookmarkState, opts ...pulumi.ResourceOption) (*WorkflowTaskAddSlackBookmark, error) {
	var resource WorkflowTaskAddSlackBookmark
	err := ctx.ReadResource("rootly:index/workflowTaskAddSlackBookmark:WorkflowTaskAddSlackBookmark", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskAddSlackBookmark resources.
type workflowTaskAddSlackBookmarkState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskAddSlackBookmarkTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskAddSlackBookmarkState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskAddSlackBookmarkTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskAddSlackBookmarkState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskAddSlackBookmarkState)(nil)).Elem()
}

type workflowTaskAddSlackBookmarkArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskAddSlackBookmarkTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskAddSlackBookmark resource.
type WorkflowTaskAddSlackBookmarkArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskAddSlackBookmarkTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskAddSlackBookmarkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskAddSlackBookmarkArgs)(nil)).Elem()
}

type WorkflowTaskAddSlackBookmarkInput interface {
	pulumi.Input

	ToWorkflowTaskAddSlackBookmarkOutput() WorkflowTaskAddSlackBookmarkOutput
	ToWorkflowTaskAddSlackBookmarkOutputWithContext(ctx context.Context) WorkflowTaskAddSlackBookmarkOutput
}

func (*WorkflowTaskAddSlackBookmark) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAddSlackBookmark)(nil)).Elem()
}

func (i *WorkflowTaskAddSlackBookmark) ToWorkflowTaskAddSlackBookmarkOutput() WorkflowTaskAddSlackBookmarkOutput {
	return i.ToWorkflowTaskAddSlackBookmarkOutputWithContext(context.Background())
}

func (i *WorkflowTaskAddSlackBookmark) ToWorkflowTaskAddSlackBookmarkOutputWithContext(ctx context.Context) WorkflowTaskAddSlackBookmarkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddSlackBookmarkOutput)
}

// WorkflowTaskAddSlackBookmarkArrayInput is an input type that accepts WorkflowTaskAddSlackBookmarkArray and WorkflowTaskAddSlackBookmarkArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskAddSlackBookmarkArrayInput` via:
//
//	WorkflowTaskAddSlackBookmarkArray{ WorkflowTaskAddSlackBookmarkArgs{...} }
type WorkflowTaskAddSlackBookmarkArrayInput interface {
	pulumi.Input

	ToWorkflowTaskAddSlackBookmarkArrayOutput() WorkflowTaskAddSlackBookmarkArrayOutput
	ToWorkflowTaskAddSlackBookmarkArrayOutputWithContext(context.Context) WorkflowTaskAddSlackBookmarkArrayOutput
}

type WorkflowTaskAddSlackBookmarkArray []WorkflowTaskAddSlackBookmarkInput

func (WorkflowTaskAddSlackBookmarkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskAddSlackBookmark)(nil)).Elem()
}

func (i WorkflowTaskAddSlackBookmarkArray) ToWorkflowTaskAddSlackBookmarkArrayOutput() WorkflowTaskAddSlackBookmarkArrayOutput {
	return i.ToWorkflowTaskAddSlackBookmarkArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskAddSlackBookmarkArray) ToWorkflowTaskAddSlackBookmarkArrayOutputWithContext(ctx context.Context) WorkflowTaskAddSlackBookmarkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddSlackBookmarkArrayOutput)
}

// WorkflowTaskAddSlackBookmarkMapInput is an input type that accepts WorkflowTaskAddSlackBookmarkMap and WorkflowTaskAddSlackBookmarkMapOutput values.
// You can construct a concrete instance of `WorkflowTaskAddSlackBookmarkMapInput` via:
//
//	WorkflowTaskAddSlackBookmarkMap{ "key": WorkflowTaskAddSlackBookmarkArgs{...} }
type WorkflowTaskAddSlackBookmarkMapInput interface {
	pulumi.Input

	ToWorkflowTaskAddSlackBookmarkMapOutput() WorkflowTaskAddSlackBookmarkMapOutput
	ToWorkflowTaskAddSlackBookmarkMapOutputWithContext(context.Context) WorkflowTaskAddSlackBookmarkMapOutput
}

type WorkflowTaskAddSlackBookmarkMap map[string]WorkflowTaskAddSlackBookmarkInput

func (WorkflowTaskAddSlackBookmarkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskAddSlackBookmark)(nil)).Elem()
}

func (i WorkflowTaskAddSlackBookmarkMap) ToWorkflowTaskAddSlackBookmarkMapOutput() WorkflowTaskAddSlackBookmarkMapOutput {
	return i.ToWorkflowTaskAddSlackBookmarkMapOutputWithContext(context.Background())
}

func (i WorkflowTaskAddSlackBookmarkMap) ToWorkflowTaskAddSlackBookmarkMapOutputWithContext(ctx context.Context) WorkflowTaskAddSlackBookmarkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskAddSlackBookmarkMapOutput)
}

type WorkflowTaskAddSlackBookmarkOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddSlackBookmarkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskAddSlackBookmark)(nil)).Elem()
}

func (o WorkflowTaskAddSlackBookmarkOutput) ToWorkflowTaskAddSlackBookmarkOutput() WorkflowTaskAddSlackBookmarkOutput {
	return o
}

func (o WorkflowTaskAddSlackBookmarkOutput) ToWorkflowTaskAddSlackBookmarkOutputWithContext(ctx context.Context) WorkflowTaskAddSlackBookmarkOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskAddSlackBookmarkOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddSlackBookmark) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskAddSlackBookmarkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskAddSlackBookmark) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskAddSlackBookmarkOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskAddSlackBookmark) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskAddSlackBookmarkOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskAddSlackBookmark) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskAddSlackBookmarkOutput) TaskParams() WorkflowTaskAddSlackBookmarkTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskAddSlackBookmark) WorkflowTaskAddSlackBookmarkTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskAddSlackBookmarkTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskAddSlackBookmarkOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskAddSlackBookmark) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskAddSlackBookmarkArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddSlackBookmarkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskAddSlackBookmark)(nil)).Elem()
}

func (o WorkflowTaskAddSlackBookmarkArrayOutput) ToWorkflowTaskAddSlackBookmarkArrayOutput() WorkflowTaskAddSlackBookmarkArrayOutput {
	return o
}

func (o WorkflowTaskAddSlackBookmarkArrayOutput) ToWorkflowTaskAddSlackBookmarkArrayOutputWithContext(ctx context.Context) WorkflowTaskAddSlackBookmarkArrayOutput {
	return o
}

func (o WorkflowTaskAddSlackBookmarkArrayOutput) Index(i pulumi.IntInput) WorkflowTaskAddSlackBookmarkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskAddSlackBookmark {
		return vs[0].([]*WorkflowTaskAddSlackBookmark)[vs[1].(int)]
	}).(WorkflowTaskAddSlackBookmarkOutput)
}

type WorkflowTaskAddSlackBookmarkMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskAddSlackBookmarkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskAddSlackBookmark)(nil)).Elem()
}

func (o WorkflowTaskAddSlackBookmarkMapOutput) ToWorkflowTaskAddSlackBookmarkMapOutput() WorkflowTaskAddSlackBookmarkMapOutput {
	return o
}

func (o WorkflowTaskAddSlackBookmarkMapOutput) ToWorkflowTaskAddSlackBookmarkMapOutputWithContext(ctx context.Context) WorkflowTaskAddSlackBookmarkMapOutput {
	return o
}

func (o WorkflowTaskAddSlackBookmarkMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskAddSlackBookmarkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskAddSlackBookmark {
		return vs[0].(map[string]*WorkflowTaskAddSlackBookmark)[vs[1].(string)]
	}).(WorkflowTaskAddSlackBookmarkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddSlackBookmarkInput)(nil)).Elem(), &WorkflowTaskAddSlackBookmark{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddSlackBookmarkArrayInput)(nil)).Elem(), WorkflowTaskAddSlackBookmarkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskAddSlackBookmarkMapInput)(nil)).Elem(), WorkflowTaskAddSlackBookmarkMap{})
	pulumi.RegisterOutputType(WorkflowTaskAddSlackBookmarkOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAddSlackBookmarkArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskAddSlackBookmarkMapOutput{})
}
