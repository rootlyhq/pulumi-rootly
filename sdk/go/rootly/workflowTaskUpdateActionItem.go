// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow updateActionItem task.
type WorkflowTaskUpdateActionItem struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateActionItemTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskUpdateActionItem registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskUpdateActionItem(ctx *pulumi.Context,
	name string, args *WorkflowTaskUpdateActionItemArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateActionItem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskUpdateActionItem
	err := ctx.RegisterResource("rootly:index/workflowTaskUpdateActionItem:WorkflowTaskUpdateActionItem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskUpdateActionItem gets an existing WorkflowTaskUpdateActionItem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskUpdateActionItem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskUpdateActionItemState, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateActionItem, error) {
	var resource WorkflowTaskUpdateActionItem
	err := ctx.ReadResource("rootly:index/workflowTaskUpdateActionItem:WorkflowTaskUpdateActionItem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskUpdateActionItem resources.
type workflowTaskUpdateActionItemState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskUpdateActionItemTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskUpdateActionItemState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateActionItemTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskUpdateActionItemState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateActionItemState)(nil)).Elem()
}

type workflowTaskUpdateActionItemArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateActionItemTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskUpdateActionItem resource.
type WorkflowTaskUpdateActionItemArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateActionItemTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskUpdateActionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateActionItemArgs)(nil)).Elem()
}

type WorkflowTaskUpdateActionItemInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateActionItemOutput() WorkflowTaskUpdateActionItemOutput
	ToWorkflowTaskUpdateActionItemOutputWithContext(ctx context.Context) WorkflowTaskUpdateActionItemOutput
}

func (*WorkflowTaskUpdateActionItem) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateActionItem)(nil)).Elem()
}

func (i *WorkflowTaskUpdateActionItem) ToWorkflowTaskUpdateActionItemOutput() WorkflowTaskUpdateActionItemOutput {
	return i.ToWorkflowTaskUpdateActionItemOutputWithContext(context.Background())
}

func (i *WorkflowTaskUpdateActionItem) ToWorkflowTaskUpdateActionItemOutputWithContext(ctx context.Context) WorkflowTaskUpdateActionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateActionItemOutput)
}

// WorkflowTaskUpdateActionItemArrayInput is an input type that accepts WorkflowTaskUpdateActionItemArray and WorkflowTaskUpdateActionItemArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateActionItemArrayInput` via:
//
//	WorkflowTaskUpdateActionItemArray{ WorkflowTaskUpdateActionItemArgs{...} }
type WorkflowTaskUpdateActionItemArrayInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateActionItemArrayOutput() WorkflowTaskUpdateActionItemArrayOutput
	ToWorkflowTaskUpdateActionItemArrayOutputWithContext(context.Context) WorkflowTaskUpdateActionItemArrayOutput
}

type WorkflowTaskUpdateActionItemArray []WorkflowTaskUpdateActionItemInput

func (WorkflowTaskUpdateActionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateActionItem)(nil)).Elem()
}

func (i WorkflowTaskUpdateActionItemArray) ToWorkflowTaskUpdateActionItemArrayOutput() WorkflowTaskUpdateActionItemArrayOutput {
	return i.ToWorkflowTaskUpdateActionItemArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateActionItemArray) ToWorkflowTaskUpdateActionItemArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateActionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateActionItemArrayOutput)
}

// WorkflowTaskUpdateActionItemMapInput is an input type that accepts WorkflowTaskUpdateActionItemMap and WorkflowTaskUpdateActionItemMapOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateActionItemMapInput` via:
//
//	WorkflowTaskUpdateActionItemMap{ "key": WorkflowTaskUpdateActionItemArgs{...} }
type WorkflowTaskUpdateActionItemMapInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateActionItemMapOutput() WorkflowTaskUpdateActionItemMapOutput
	ToWorkflowTaskUpdateActionItemMapOutputWithContext(context.Context) WorkflowTaskUpdateActionItemMapOutput
}

type WorkflowTaskUpdateActionItemMap map[string]WorkflowTaskUpdateActionItemInput

func (WorkflowTaskUpdateActionItemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateActionItem)(nil)).Elem()
}

func (i WorkflowTaskUpdateActionItemMap) ToWorkflowTaskUpdateActionItemMapOutput() WorkflowTaskUpdateActionItemMapOutput {
	return i.ToWorkflowTaskUpdateActionItemMapOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateActionItemMap) ToWorkflowTaskUpdateActionItemMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateActionItemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateActionItemMapOutput)
}

type WorkflowTaskUpdateActionItemOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateActionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateActionItem)(nil)).Elem()
}

func (o WorkflowTaskUpdateActionItemOutput) ToWorkflowTaskUpdateActionItemOutput() WorkflowTaskUpdateActionItemOutput {
	return o
}

func (o WorkflowTaskUpdateActionItemOutput) ToWorkflowTaskUpdateActionItemOutputWithContext(ctx context.Context) WorkflowTaskUpdateActionItemOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskUpdateActionItemOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItem) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskUpdateActionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItem) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskUpdateActionItemOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItem) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskUpdateActionItemOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItem) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskUpdateActionItemOutput) TaskParams() WorkflowTaskUpdateActionItemTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItem) WorkflowTaskUpdateActionItemTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskUpdateActionItemTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskUpdateActionItemOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateActionItem) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskUpdateActionItemArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateActionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateActionItem)(nil)).Elem()
}

func (o WorkflowTaskUpdateActionItemArrayOutput) ToWorkflowTaskUpdateActionItemArrayOutput() WorkflowTaskUpdateActionItemArrayOutput {
	return o
}

func (o WorkflowTaskUpdateActionItemArrayOutput) ToWorkflowTaskUpdateActionItemArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateActionItemArrayOutput {
	return o
}

func (o WorkflowTaskUpdateActionItemArrayOutput) Index(i pulumi.IntInput) WorkflowTaskUpdateActionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateActionItem {
		return vs[0].([]*WorkflowTaskUpdateActionItem)[vs[1].(int)]
	}).(WorkflowTaskUpdateActionItemOutput)
}

type WorkflowTaskUpdateActionItemMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateActionItemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateActionItem)(nil)).Elem()
}

func (o WorkflowTaskUpdateActionItemMapOutput) ToWorkflowTaskUpdateActionItemMapOutput() WorkflowTaskUpdateActionItemMapOutput {
	return o
}

func (o WorkflowTaskUpdateActionItemMapOutput) ToWorkflowTaskUpdateActionItemMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateActionItemMapOutput {
	return o
}

func (o WorkflowTaskUpdateActionItemMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskUpdateActionItemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateActionItem {
		return vs[0].(map[string]*WorkflowTaskUpdateActionItem)[vs[1].(string)]
	}).(WorkflowTaskUpdateActionItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateActionItemInput)(nil)).Elem(), &WorkflowTaskUpdateActionItem{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateActionItemArrayInput)(nil)).Elem(), WorkflowTaskUpdateActionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateActionItemMapInput)(nil)).Elem(), WorkflowTaskUpdateActionItemMap{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateActionItemOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateActionItemArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateActionItemMapOutput{})
}
