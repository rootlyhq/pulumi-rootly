// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow pageOpsgenieOnCallResponders task.
type WorkflowTaskPageOpsgenieOnCallResponders struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskPageOpsgenieOnCallResponders registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskPageOpsgenieOnCallResponders(ctx *pulumi.Context,
	name string, args *WorkflowTaskPageOpsgenieOnCallRespondersArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskPageOpsgenieOnCallResponders, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskPageOpsgenieOnCallResponders
	err := ctx.RegisterResource("rootly:index/workflowTaskPageOpsgenieOnCallResponders:WorkflowTaskPageOpsgenieOnCallResponders", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskPageOpsgenieOnCallResponders gets an existing WorkflowTaskPageOpsgenieOnCallResponders resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskPageOpsgenieOnCallResponders(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskPageOpsgenieOnCallRespondersState, opts ...pulumi.ResourceOption) (*WorkflowTaskPageOpsgenieOnCallResponders, error) {
	var resource WorkflowTaskPageOpsgenieOnCallResponders
	err := ctx.ReadResource("rootly:index/workflowTaskPageOpsgenieOnCallResponders:WorkflowTaskPageOpsgenieOnCallResponders", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskPageOpsgenieOnCallResponders resources.
type workflowTaskPageOpsgenieOnCallRespondersState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskPageOpsgenieOnCallRespondersTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskPageOpsgenieOnCallRespondersState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskPageOpsgenieOnCallRespondersState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskPageOpsgenieOnCallRespondersState)(nil)).Elem()
}

type workflowTaskPageOpsgenieOnCallRespondersArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskPageOpsgenieOnCallRespondersTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskPageOpsgenieOnCallResponders resource.
type WorkflowTaskPageOpsgenieOnCallRespondersArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskPageOpsgenieOnCallRespondersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskPageOpsgenieOnCallRespondersArgs)(nil)).Elem()
}

type WorkflowTaskPageOpsgenieOnCallRespondersInput interface {
	pulumi.Input

	ToWorkflowTaskPageOpsgenieOnCallRespondersOutput() WorkflowTaskPageOpsgenieOnCallRespondersOutput
	ToWorkflowTaskPageOpsgenieOnCallRespondersOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersOutput
}

func (*WorkflowTaskPageOpsgenieOnCallResponders) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPageOpsgenieOnCallResponders)(nil)).Elem()
}

func (i *WorkflowTaskPageOpsgenieOnCallResponders) ToWorkflowTaskPageOpsgenieOnCallRespondersOutput() WorkflowTaskPageOpsgenieOnCallRespondersOutput {
	return i.ToWorkflowTaskPageOpsgenieOnCallRespondersOutputWithContext(context.Background())
}

func (i *WorkflowTaskPageOpsgenieOnCallResponders) ToWorkflowTaskPageOpsgenieOnCallRespondersOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageOpsgenieOnCallRespondersOutput)
}

// WorkflowTaskPageOpsgenieOnCallRespondersArrayInput is an input type that accepts WorkflowTaskPageOpsgenieOnCallRespondersArray and WorkflowTaskPageOpsgenieOnCallRespondersArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskPageOpsgenieOnCallRespondersArrayInput` via:
//
//	WorkflowTaskPageOpsgenieOnCallRespondersArray{ WorkflowTaskPageOpsgenieOnCallRespondersArgs{...} }
type WorkflowTaskPageOpsgenieOnCallRespondersArrayInput interface {
	pulumi.Input

	ToWorkflowTaskPageOpsgenieOnCallRespondersArrayOutput() WorkflowTaskPageOpsgenieOnCallRespondersArrayOutput
	ToWorkflowTaskPageOpsgenieOnCallRespondersArrayOutputWithContext(context.Context) WorkflowTaskPageOpsgenieOnCallRespondersArrayOutput
}

type WorkflowTaskPageOpsgenieOnCallRespondersArray []WorkflowTaskPageOpsgenieOnCallRespondersInput

func (WorkflowTaskPageOpsgenieOnCallRespondersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskPageOpsgenieOnCallResponders)(nil)).Elem()
}

func (i WorkflowTaskPageOpsgenieOnCallRespondersArray) ToWorkflowTaskPageOpsgenieOnCallRespondersArrayOutput() WorkflowTaskPageOpsgenieOnCallRespondersArrayOutput {
	return i.ToWorkflowTaskPageOpsgenieOnCallRespondersArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskPageOpsgenieOnCallRespondersArray) ToWorkflowTaskPageOpsgenieOnCallRespondersArrayOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageOpsgenieOnCallRespondersArrayOutput)
}

// WorkflowTaskPageOpsgenieOnCallRespondersMapInput is an input type that accepts WorkflowTaskPageOpsgenieOnCallRespondersMap and WorkflowTaskPageOpsgenieOnCallRespondersMapOutput values.
// You can construct a concrete instance of `WorkflowTaskPageOpsgenieOnCallRespondersMapInput` via:
//
//	WorkflowTaskPageOpsgenieOnCallRespondersMap{ "key": WorkflowTaskPageOpsgenieOnCallRespondersArgs{...} }
type WorkflowTaskPageOpsgenieOnCallRespondersMapInput interface {
	pulumi.Input

	ToWorkflowTaskPageOpsgenieOnCallRespondersMapOutput() WorkflowTaskPageOpsgenieOnCallRespondersMapOutput
	ToWorkflowTaskPageOpsgenieOnCallRespondersMapOutputWithContext(context.Context) WorkflowTaskPageOpsgenieOnCallRespondersMapOutput
}

type WorkflowTaskPageOpsgenieOnCallRespondersMap map[string]WorkflowTaskPageOpsgenieOnCallRespondersInput

func (WorkflowTaskPageOpsgenieOnCallRespondersMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskPageOpsgenieOnCallResponders)(nil)).Elem()
}

func (i WorkflowTaskPageOpsgenieOnCallRespondersMap) ToWorkflowTaskPageOpsgenieOnCallRespondersMapOutput() WorkflowTaskPageOpsgenieOnCallRespondersMapOutput {
	return i.ToWorkflowTaskPageOpsgenieOnCallRespondersMapOutputWithContext(context.Background())
}

func (i WorkflowTaskPageOpsgenieOnCallRespondersMap) ToWorkflowTaskPageOpsgenieOnCallRespondersMapOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskPageOpsgenieOnCallRespondersMapOutput)
}

type WorkflowTaskPageOpsgenieOnCallRespondersOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageOpsgenieOnCallRespondersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskPageOpsgenieOnCallResponders)(nil)).Elem()
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersOutput() WorkflowTaskPageOpsgenieOnCallRespondersOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskPageOpsgenieOnCallRespondersOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageOpsgenieOnCallResponders) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskPageOpsgenieOnCallRespondersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskPageOpsgenieOnCallResponders) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskPageOpsgenieOnCallRespondersOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskPageOpsgenieOnCallResponders) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskPageOpsgenieOnCallRespondersOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskPageOpsgenieOnCallResponders) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskPageOpsgenieOnCallRespondersOutput) TaskParams() WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskPageOpsgenieOnCallResponders) WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskPageOpsgenieOnCallRespondersTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskPageOpsgenieOnCallRespondersOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskPageOpsgenieOnCallResponders) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskPageOpsgenieOnCallRespondersArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageOpsgenieOnCallRespondersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskPageOpsgenieOnCallResponders)(nil)).Elem()
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersArrayOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersArrayOutput() WorkflowTaskPageOpsgenieOnCallRespondersArrayOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersArrayOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersArrayOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersArrayOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersArrayOutput) Index(i pulumi.IntInput) WorkflowTaskPageOpsgenieOnCallRespondersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskPageOpsgenieOnCallResponders {
		return vs[0].([]*WorkflowTaskPageOpsgenieOnCallResponders)[vs[1].(int)]
	}).(WorkflowTaskPageOpsgenieOnCallRespondersOutput)
}

type WorkflowTaskPageOpsgenieOnCallRespondersMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskPageOpsgenieOnCallRespondersMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskPageOpsgenieOnCallResponders)(nil)).Elem()
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersMapOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersMapOutput() WorkflowTaskPageOpsgenieOnCallRespondersMapOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersMapOutput) ToWorkflowTaskPageOpsgenieOnCallRespondersMapOutputWithContext(ctx context.Context) WorkflowTaskPageOpsgenieOnCallRespondersMapOutput {
	return o
}

func (o WorkflowTaskPageOpsgenieOnCallRespondersMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskPageOpsgenieOnCallRespondersOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskPageOpsgenieOnCallResponders {
		return vs[0].(map[string]*WorkflowTaskPageOpsgenieOnCallResponders)[vs[1].(string)]
	}).(WorkflowTaskPageOpsgenieOnCallRespondersOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageOpsgenieOnCallRespondersInput)(nil)).Elem(), &WorkflowTaskPageOpsgenieOnCallResponders{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageOpsgenieOnCallRespondersArrayInput)(nil)).Elem(), WorkflowTaskPageOpsgenieOnCallRespondersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskPageOpsgenieOnCallRespondersMapInput)(nil)).Elem(), WorkflowTaskPageOpsgenieOnCallRespondersMap{})
	pulumi.RegisterOutputType(WorkflowTaskPageOpsgenieOnCallRespondersOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageOpsgenieOnCallRespondersArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskPageOpsgenieOnCallRespondersMapOutput{})
}
