// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

type WorkflowCustomFieldSelection struct {
	pulumi.CustomResourceState

	// The custom field for this selection
	CustomFieldId pulumi.IntOutput `pulumi:"customFieldId"`
	// The trigger condition. Value must be one of `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentCondition pulumi.StringPtrOutput   `pulumi:"incidentCondition"`
	SelectedOptionIds pulumi.IntArrayOutput    `pulumi:"selectedOptionIds"`
	Values            pulumi.StringArrayOutput `pulumi:"values"`
	// The workflow for this selection
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowCustomFieldSelection registers a new resource with the given unique name, arguments, and options.
func NewWorkflowCustomFieldSelection(ctx *pulumi.Context,
	name string, args *WorkflowCustomFieldSelectionArgs, opts ...pulumi.ResourceOption) (*WorkflowCustomFieldSelection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomFieldId == nil {
		return nil, errors.New("invalid value for required argument 'CustomFieldId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowCustomFieldSelection
	err := ctx.RegisterResource("rootly:index/workflowCustomFieldSelection:WorkflowCustomFieldSelection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowCustomFieldSelection gets an existing WorkflowCustomFieldSelection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowCustomFieldSelection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowCustomFieldSelectionState, opts ...pulumi.ResourceOption) (*WorkflowCustomFieldSelection, error) {
	var resource WorkflowCustomFieldSelection
	err := ctx.ReadResource("rootly:index/workflowCustomFieldSelection:WorkflowCustomFieldSelection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowCustomFieldSelection resources.
type workflowCustomFieldSelectionState struct {
	// The custom field for this selection
	CustomFieldId *int `pulumi:"customFieldId"`
	// The trigger condition. Value must be one of `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentCondition *string  `pulumi:"incidentCondition"`
	SelectedOptionIds []int    `pulumi:"selectedOptionIds"`
	Values            []string `pulumi:"values"`
	// The workflow for this selection
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowCustomFieldSelectionState struct {
	// The custom field for this selection
	CustomFieldId pulumi.IntPtrInput
	// The trigger condition. Value must be one of `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentCondition pulumi.StringPtrInput
	SelectedOptionIds pulumi.IntArrayInput
	Values            pulumi.StringArrayInput
	// The workflow for this selection
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowCustomFieldSelectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowCustomFieldSelectionState)(nil)).Elem()
}

type workflowCustomFieldSelectionArgs struct {
	// The custom field for this selection
	CustomFieldId int `pulumi:"customFieldId"`
	// The trigger condition. Value must be one of `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentCondition *string  `pulumi:"incidentCondition"`
	SelectedOptionIds []int    `pulumi:"selectedOptionIds"`
	Values            []string `pulumi:"values"`
	// The workflow for this selection
	WorkflowId *string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowCustomFieldSelection resource.
type WorkflowCustomFieldSelectionArgs struct {
	// The custom field for this selection
	CustomFieldId pulumi.IntInput
	// The trigger condition. Value must be one of `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentCondition pulumi.StringPtrInput
	SelectedOptionIds pulumi.IntArrayInput
	Values            pulumi.StringArrayInput
	// The workflow for this selection
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowCustomFieldSelectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowCustomFieldSelectionArgs)(nil)).Elem()
}

type WorkflowCustomFieldSelectionInput interface {
	pulumi.Input

	ToWorkflowCustomFieldSelectionOutput() WorkflowCustomFieldSelectionOutput
	ToWorkflowCustomFieldSelectionOutputWithContext(ctx context.Context) WorkflowCustomFieldSelectionOutput
}

func (*WorkflowCustomFieldSelection) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowCustomFieldSelection)(nil)).Elem()
}

func (i *WorkflowCustomFieldSelection) ToWorkflowCustomFieldSelectionOutput() WorkflowCustomFieldSelectionOutput {
	return i.ToWorkflowCustomFieldSelectionOutputWithContext(context.Background())
}

func (i *WorkflowCustomFieldSelection) ToWorkflowCustomFieldSelectionOutputWithContext(ctx context.Context) WorkflowCustomFieldSelectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowCustomFieldSelectionOutput)
}

// WorkflowCustomFieldSelectionArrayInput is an input type that accepts WorkflowCustomFieldSelectionArray and WorkflowCustomFieldSelectionArrayOutput values.
// You can construct a concrete instance of `WorkflowCustomFieldSelectionArrayInput` via:
//
//	WorkflowCustomFieldSelectionArray{ WorkflowCustomFieldSelectionArgs{...} }
type WorkflowCustomFieldSelectionArrayInput interface {
	pulumi.Input

	ToWorkflowCustomFieldSelectionArrayOutput() WorkflowCustomFieldSelectionArrayOutput
	ToWorkflowCustomFieldSelectionArrayOutputWithContext(context.Context) WorkflowCustomFieldSelectionArrayOutput
}

type WorkflowCustomFieldSelectionArray []WorkflowCustomFieldSelectionInput

func (WorkflowCustomFieldSelectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowCustomFieldSelection)(nil)).Elem()
}

func (i WorkflowCustomFieldSelectionArray) ToWorkflowCustomFieldSelectionArrayOutput() WorkflowCustomFieldSelectionArrayOutput {
	return i.ToWorkflowCustomFieldSelectionArrayOutputWithContext(context.Background())
}

func (i WorkflowCustomFieldSelectionArray) ToWorkflowCustomFieldSelectionArrayOutputWithContext(ctx context.Context) WorkflowCustomFieldSelectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowCustomFieldSelectionArrayOutput)
}

// WorkflowCustomFieldSelectionMapInput is an input type that accepts WorkflowCustomFieldSelectionMap and WorkflowCustomFieldSelectionMapOutput values.
// You can construct a concrete instance of `WorkflowCustomFieldSelectionMapInput` via:
//
//	WorkflowCustomFieldSelectionMap{ "key": WorkflowCustomFieldSelectionArgs{...} }
type WorkflowCustomFieldSelectionMapInput interface {
	pulumi.Input

	ToWorkflowCustomFieldSelectionMapOutput() WorkflowCustomFieldSelectionMapOutput
	ToWorkflowCustomFieldSelectionMapOutputWithContext(context.Context) WorkflowCustomFieldSelectionMapOutput
}

type WorkflowCustomFieldSelectionMap map[string]WorkflowCustomFieldSelectionInput

func (WorkflowCustomFieldSelectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowCustomFieldSelection)(nil)).Elem()
}

func (i WorkflowCustomFieldSelectionMap) ToWorkflowCustomFieldSelectionMapOutput() WorkflowCustomFieldSelectionMapOutput {
	return i.ToWorkflowCustomFieldSelectionMapOutputWithContext(context.Background())
}

func (i WorkflowCustomFieldSelectionMap) ToWorkflowCustomFieldSelectionMapOutputWithContext(ctx context.Context) WorkflowCustomFieldSelectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowCustomFieldSelectionMapOutput)
}

type WorkflowCustomFieldSelectionOutput struct{ *pulumi.OutputState }

func (WorkflowCustomFieldSelectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowCustomFieldSelection)(nil)).Elem()
}

func (o WorkflowCustomFieldSelectionOutput) ToWorkflowCustomFieldSelectionOutput() WorkflowCustomFieldSelectionOutput {
	return o
}

func (o WorkflowCustomFieldSelectionOutput) ToWorkflowCustomFieldSelectionOutputWithContext(ctx context.Context) WorkflowCustomFieldSelectionOutput {
	return o
}

// The custom field for this selection
func (o WorkflowCustomFieldSelectionOutput) CustomFieldId() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowCustomFieldSelection) pulumi.IntOutput { return v.CustomFieldId }).(pulumi.IntOutput)
}

// The trigger condition. Value must be one of `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowCustomFieldSelectionOutput) IncidentCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowCustomFieldSelection) pulumi.StringPtrOutput { return v.IncidentCondition }).(pulumi.StringPtrOutput)
}

func (o WorkflowCustomFieldSelectionOutput) SelectedOptionIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *WorkflowCustomFieldSelection) pulumi.IntArrayOutput { return v.SelectedOptionIds }).(pulumi.IntArrayOutput)
}

func (o WorkflowCustomFieldSelectionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowCustomFieldSelection) pulumi.StringArrayOutput { return v.Values }).(pulumi.StringArrayOutput)
}

// The workflow for this selection
func (o WorkflowCustomFieldSelectionOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowCustomFieldSelection) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowCustomFieldSelectionArrayOutput struct{ *pulumi.OutputState }

func (WorkflowCustomFieldSelectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowCustomFieldSelection)(nil)).Elem()
}

func (o WorkflowCustomFieldSelectionArrayOutput) ToWorkflowCustomFieldSelectionArrayOutput() WorkflowCustomFieldSelectionArrayOutput {
	return o
}

func (o WorkflowCustomFieldSelectionArrayOutput) ToWorkflowCustomFieldSelectionArrayOutputWithContext(ctx context.Context) WorkflowCustomFieldSelectionArrayOutput {
	return o
}

func (o WorkflowCustomFieldSelectionArrayOutput) Index(i pulumi.IntInput) WorkflowCustomFieldSelectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowCustomFieldSelection {
		return vs[0].([]*WorkflowCustomFieldSelection)[vs[1].(int)]
	}).(WorkflowCustomFieldSelectionOutput)
}

type WorkflowCustomFieldSelectionMapOutput struct{ *pulumi.OutputState }

func (WorkflowCustomFieldSelectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowCustomFieldSelection)(nil)).Elem()
}

func (o WorkflowCustomFieldSelectionMapOutput) ToWorkflowCustomFieldSelectionMapOutput() WorkflowCustomFieldSelectionMapOutput {
	return o
}

func (o WorkflowCustomFieldSelectionMapOutput) ToWorkflowCustomFieldSelectionMapOutputWithContext(ctx context.Context) WorkflowCustomFieldSelectionMapOutput {
	return o
}

func (o WorkflowCustomFieldSelectionMapOutput) MapIndex(k pulumi.StringInput) WorkflowCustomFieldSelectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowCustomFieldSelection {
		return vs[0].(map[string]*WorkflowCustomFieldSelection)[vs[1].(string)]
	}).(WorkflowCustomFieldSelectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowCustomFieldSelectionInput)(nil)).Elem(), &WorkflowCustomFieldSelection{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowCustomFieldSelectionArrayInput)(nil)).Elem(), WorkflowCustomFieldSelectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowCustomFieldSelectionMapInput)(nil)).Elem(), WorkflowCustomFieldSelectionMap{})
	pulumi.RegisterOutputType(WorkflowCustomFieldSelectionOutput{})
	pulumi.RegisterOutputType(WorkflowCustomFieldSelectionArrayOutput{})
	pulumi.RegisterOutputType(WorkflowCustomFieldSelectionMapOutput{})
}
