// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow updateOpsgenieIncident task.
type WorkflowTaskUpdateOpsgenieIncident struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskUpdateOpsgenieIncident registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskUpdateOpsgenieIncident(ctx *pulumi.Context,
	name string, args *WorkflowTaskUpdateOpsgenieIncidentArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateOpsgenieIncident, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskUpdateOpsgenieIncident
	err := ctx.RegisterResource("rootly:index/workflowTaskUpdateOpsgenieIncident:WorkflowTaskUpdateOpsgenieIncident", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskUpdateOpsgenieIncident gets an existing WorkflowTaskUpdateOpsgenieIncident resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskUpdateOpsgenieIncident(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskUpdateOpsgenieIncidentState, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateOpsgenieIncident, error) {
	var resource WorkflowTaskUpdateOpsgenieIncident
	err := ctx.ReadResource("rootly:index/workflowTaskUpdateOpsgenieIncident:WorkflowTaskUpdateOpsgenieIncident", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskUpdateOpsgenieIncident resources.
type workflowTaskUpdateOpsgenieIncidentState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskUpdateOpsgenieIncidentTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskUpdateOpsgenieIncidentState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateOpsgenieIncidentTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskUpdateOpsgenieIncidentState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateOpsgenieIncidentState)(nil)).Elem()
}

type workflowTaskUpdateOpsgenieIncidentArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateOpsgenieIncidentTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskUpdateOpsgenieIncident resource.
type WorkflowTaskUpdateOpsgenieIncidentArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateOpsgenieIncidentTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskUpdateOpsgenieIncidentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateOpsgenieIncidentArgs)(nil)).Elem()
}

type WorkflowTaskUpdateOpsgenieIncidentInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateOpsgenieIncidentOutput() WorkflowTaskUpdateOpsgenieIncidentOutput
	ToWorkflowTaskUpdateOpsgenieIncidentOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieIncidentOutput
}

func (*WorkflowTaskUpdateOpsgenieIncident) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateOpsgenieIncident)(nil)).Elem()
}

func (i *WorkflowTaskUpdateOpsgenieIncident) ToWorkflowTaskUpdateOpsgenieIncidentOutput() WorkflowTaskUpdateOpsgenieIncidentOutput {
	return i.ToWorkflowTaskUpdateOpsgenieIncidentOutputWithContext(context.Background())
}

func (i *WorkflowTaskUpdateOpsgenieIncident) ToWorkflowTaskUpdateOpsgenieIncidentOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieIncidentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateOpsgenieIncidentOutput)
}

// WorkflowTaskUpdateOpsgenieIncidentArrayInput is an input type that accepts WorkflowTaskUpdateOpsgenieIncidentArray and WorkflowTaskUpdateOpsgenieIncidentArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateOpsgenieIncidentArrayInput` via:
//
//	WorkflowTaskUpdateOpsgenieIncidentArray{ WorkflowTaskUpdateOpsgenieIncidentArgs{...} }
type WorkflowTaskUpdateOpsgenieIncidentArrayInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateOpsgenieIncidentArrayOutput() WorkflowTaskUpdateOpsgenieIncidentArrayOutput
	ToWorkflowTaskUpdateOpsgenieIncidentArrayOutputWithContext(context.Context) WorkflowTaskUpdateOpsgenieIncidentArrayOutput
}

type WorkflowTaskUpdateOpsgenieIncidentArray []WorkflowTaskUpdateOpsgenieIncidentInput

func (WorkflowTaskUpdateOpsgenieIncidentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateOpsgenieIncident)(nil)).Elem()
}

func (i WorkflowTaskUpdateOpsgenieIncidentArray) ToWorkflowTaskUpdateOpsgenieIncidentArrayOutput() WorkflowTaskUpdateOpsgenieIncidentArrayOutput {
	return i.ToWorkflowTaskUpdateOpsgenieIncidentArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateOpsgenieIncidentArray) ToWorkflowTaskUpdateOpsgenieIncidentArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieIncidentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateOpsgenieIncidentArrayOutput)
}

// WorkflowTaskUpdateOpsgenieIncidentMapInput is an input type that accepts WorkflowTaskUpdateOpsgenieIncidentMap and WorkflowTaskUpdateOpsgenieIncidentMapOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateOpsgenieIncidentMapInput` via:
//
//	WorkflowTaskUpdateOpsgenieIncidentMap{ "key": WorkflowTaskUpdateOpsgenieIncidentArgs{...} }
type WorkflowTaskUpdateOpsgenieIncidentMapInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateOpsgenieIncidentMapOutput() WorkflowTaskUpdateOpsgenieIncidentMapOutput
	ToWorkflowTaskUpdateOpsgenieIncidentMapOutputWithContext(context.Context) WorkflowTaskUpdateOpsgenieIncidentMapOutput
}

type WorkflowTaskUpdateOpsgenieIncidentMap map[string]WorkflowTaskUpdateOpsgenieIncidentInput

func (WorkflowTaskUpdateOpsgenieIncidentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateOpsgenieIncident)(nil)).Elem()
}

func (i WorkflowTaskUpdateOpsgenieIncidentMap) ToWorkflowTaskUpdateOpsgenieIncidentMapOutput() WorkflowTaskUpdateOpsgenieIncidentMapOutput {
	return i.ToWorkflowTaskUpdateOpsgenieIncidentMapOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateOpsgenieIncidentMap) ToWorkflowTaskUpdateOpsgenieIncidentMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieIncidentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateOpsgenieIncidentMapOutput)
}

type WorkflowTaskUpdateOpsgenieIncidentOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateOpsgenieIncidentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateOpsgenieIncident)(nil)).Elem()
}

func (o WorkflowTaskUpdateOpsgenieIncidentOutput) ToWorkflowTaskUpdateOpsgenieIncidentOutput() WorkflowTaskUpdateOpsgenieIncidentOutput {
	return o
}

func (o WorkflowTaskUpdateOpsgenieIncidentOutput) ToWorkflowTaskUpdateOpsgenieIncidentOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieIncidentOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskUpdateOpsgenieIncidentOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieIncident) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskUpdateOpsgenieIncidentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieIncident) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskUpdateOpsgenieIncidentOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieIncident) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskUpdateOpsgenieIncidentOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieIncident) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskUpdateOpsgenieIncidentOutput) TaskParams() WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieIncident) WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskUpdateOpsgenieIncidentTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskUpdateOpsgenieIncidentOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateOpsgenieIncident) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskUpdateOpsgenieIncidentArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateOpsgenieIncidentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateOpsgenieIncident)(nil)).Elem()
}

func (o WorkflowTaskUpdateOpsgenieIncidentArrayOutput) ToWorkflowTaskUpdateOpsgenieIncidentArrayOutput() WorkflowTaskUpdateOpsgenieIncidentArrayOutput {
	return o
}

func (o WorkflowTaskUpdateOpsgenieIncidentArrayOutput) ToWorkflowTaskUpdateOpsgenieIncidentArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieIncidentArrayOutput {
	return o
}

func (o WorkflowTaskUpdateOpsgenieIncidentArrayOutput) Index(i pulumi.IntInput) WorkflowTaskUpdateOpsgenieIncidentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateOpsgenieIncident {
		return vs[0].([]*WorkflowTaskUpdateOpsgenieIncident)[vs[1].(int)]
	}).(WorkflowTaskUpdateOpsgenieIncidentOutput)
}

type WorkflowTaskUpdateOpsgenieIncidentMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateOpsgenieIncidentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateOpsgenieIncident)(nil)).Elem()
}

func (o WorkflowTaskUpdateOpsgenieIncidentMapOutput) ToWorkflowTaskUpdateOpsgenieIncidentMapOutput() WorkflowTaskUpdateOpsgenieIncidentMapOutput {
	return o
}

func (o WorkflowTaskUpdateOpsgenieIncidentMapOutput) ToWorkflowTaskUpdateOpsgenieIncidentMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateOpsgenieIncidentMapOutput {
	return o
}

func (o WorkflowTaskUpdateOpsgenieIncidentMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskUpdateOpsgenieIncidentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateOpsgenieIncident {
		return vs[0].(map[string]*WorkflowTaskUpdateOpsgenieIncident)[vs[1].(string)]
	}).(WorkflowTaskUpdateOpsgenieIncidentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateOpsgenieIncidentInput)(nil)).Elem(), &WorkflowTaskUpdateOpsgenieIncident{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateOpsgenieIncidentArrayInput)(nil)).Elem(), WorkflowTaskUpdateOpsgenieIncidentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateOpsgenieIncidentMapInput)(nil)).Elem(), WorkflowTaskUpdateOpsgenieIncidentMap{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateOpsgenieIncidentOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateOpsgenieIncidentArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateOpsgenieIncidentMapOutput{})
}
