// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow createServiceNowIncident task.
type WorkflowTaskCreateServiceNowIncident struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateServiceNowIncidentTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskCreateServiceNowIncident registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskCreateServiceNowIncident(ctx *pulumi.Context,
	name string, args *WorkflowTaskCreateServiceNowIncidentArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateServiceNowIncident, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskCreateServiceNowIncident
	err := ctx.RegisterResource("rootly:index/workflowTaskCreateServiceNowIncident:WorkflowTaskCreateServiceNowIncident", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskCreateServiceNowIncident gets an existing WorkflowTaskCreateServiceNowIncident resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskCreateServiceNowIncident(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskCreateServiceNowIncidentState, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateServiceNowIncident, error) {
	var resource WorkflowTaskCreateServiceNowIncident
	err := ctx.ReadResource("rootly:index/workflowTaskCreateServiceNowIncident:WorkflowTaskCreateServiceNowIncident", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskCreateServiceNowIncident resources.
type workflowTaskCreateServiceNowIncidentState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskCreateServiceNowIncidentTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskCreateServiceNowIncidentState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateServiceNowIncidentTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskCreateServiceNowIncidentState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateServiceNowIncidentState)(nil)).Elem()
}

type workflowTaskCreateServiceNowIncidentArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateServiceNowIncidentTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskCreateServiceNowIncident resource.
type WorkflowTaskCreateServiceNowIncidentArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateServiceNowIncidentTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskCreateServiceNowIncidentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateServiceNowIncidentArgs)(nil)).Elem()
}

type WorkflowTaskCreateServiceNowIncidentInput interface {
	pulumi.Input

	ToWorkflowTaskCreateServiceNowIncidentOutput() WorkflowTaskCreateServiceNowIncidentOutput
	ToWorkflowTaskCreateServiceNowIncidentOutputWithContext(ctx context.Context) WorkflowTaskCreateServiceNowIncidentOutput
}

func (*WorkflowTaskCreateServiceNowIncident) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateServiceNowIncident)(nil)).Elem()
}

func (i *WorkflowTaskCreateServiceNowIncident) ToWorkflowTaskCreateServiceNowIncidentOutput() WorkflowTaskCreateServiceNowIncidentOutput {
	return i.ToWorkflowTaskCreateServiceNowIncidentOutputWithContext(context.Background())
}

func (i *WorkflowTaskCreateServiceNowIncident) ToWorkflowTaskCreateServiceNowIncidentOutputWithContext(ctx context.Context) WorkflowTaskCreateServiceNowIncidentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateServiceNowIncidentOutput)
}

// WorkflowTaskCreateServiceNowIncidentArrayInput is an input type that accepts WorkflowTaskCreateServiceNowIncidentArray and WorkflowTaskCreateServiceNowIncidentArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateServiceNowIncidentArrayInput` via:
//
//	WorkflowTaskCreateServiceNowIncidentArray{ WorkflowTaskCreateServiceNowIncidentArgs{...} }
type WorkflowTaskCreateServiceNowIncidentArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateServiceNowIncidentArrayOutput() WorkflowTaskCreateServiceNowIncidentArrayOutput
	ToWorkflowTaskCreateServiceNowIncidentArrayOutputWithContext(context.Context) WorkflowTaskCreateServiceNowIncidentArrayOutput
}

type WorkflowTaskCreateServiceNowIncidentArray []WorkflowTaskCreateServiceNowIncidentInput

func (WorkflowTaskCreateServiceNowIncidentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateServiceNowIncident)(nil)).Elem()
}

func (i WorkflowTaskCreateServiceNowIncidentArray) ToWorkflowTaskCreateServiceNowIncidentArrayOutput() WorkflowTaskCreateServiceNowIncidentArrayOutput {
	return i.ToWorkflowTaskCreateServiceNowIncidentArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateServiceNowIncidentArray) ToWorkflowTaskCreateServiceNowIncidentArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateServiceNowIncidentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateServiceNowIncidentArrayOutput)
}

// WorkflowTaskCreateServiceNowIncidentMapInput is an input type that accepts WorkflowTaskCreateServiceNowIncidentMap and WorkflowTaskCreateServiceNowIncidentMapOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateServiceNowIncidentMapInput` via:
//
//	WorkflowTaskCreateServiceNowIncidentMap{ "key": WorkflowTaskCreateServiceNowIncidentArgs{...} }
type WorkflowTaskCreateServiceNowIncidentMapInput interface {
	pulumi.Input

	ToWorkflowTaskCreateServiceNowIncidentMapOutput() WorkflowTaskCreateServiceNowIncidentMapOutput
	ToWorkflowTaskCreateServiceNowIncidentMapOutputWithContext(context.Context) WorkflowTaskCreateServiceNowIncidentMapOutput
}

type WorkflowTaskCreateServiceNowIncidentMap map[string]WorkflowTaskCreateServiceNowIncidentInput

func (WorkflowTaskCreateServiceNowIncidentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateServiceNowIncident)(nil)).Elem()
}

func (i WorkflowTaskCreateServiceNowIncidentMap) ToWorkflowTaskCreateServiceNowIncidentMapOutput() WorkflowTaskCreateServiceNowIncidentMapOutput {
	return i.ToWorkflowTaskCreateServiceNowIncidentMapOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateServiceNowIncidentMap) ToWorkflowTaskCreateServiceNowIncidentMapOutputWithContext(ctx context.Context) WorkflowTaskCreateServiceNowIncidentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateServiceNowIncidentMapOutput)
}

type WorkflowTaskCreateServiceNowIncidentOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateServiceNowIncidentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateServiceNowIncident)(nil)).Elem()
}

func (o WorkflowTaskCreateServiceNowIncidentOutput) ToWorkflowTaskCreateServiceNowIncidentOutput() WorkflowTaskCreateServiceNowIncidentOutput {
	return o
}

func (o WorkflowTaskCreateServiceNowIncidentOutput) ToWorkflowTaskCreateServiceNowIncidentOutputWithContext(ctx context.Context) WorkflowTaskCreateServiceNowIncidentOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskCreateServiceNowIncidentOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateServiceNowIncident) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskCreateServiceNowIncidentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateServiceNowIncident) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskCreateServiceNowIncidentOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateServiceNowIncident) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskCreateServiceNowIncidentOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateServiceNowIncident) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskCreateServiceNowIncidentOutput) TaskParams() WorkflowTaskCreateServiceNowIncidentTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateServiceNowIncident) WorkflowTaskCreateServiceNowIncidentTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskCreateServiceNowIncidentTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskCreateServiceNowIncidentOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateServiceNowIncident) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskCreateServiceNowIncidentArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateServiceNowIncidentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateServiceNowIncident)(nil)).Elem()
}

func (o WorkflowTaskCreateServiceNowIncidentArrayOutput) ToWorkflowTaskCreateServiceNowIncidentArrayOutput() WorkflowTaskCreateServiceNowIncidentArrayOutput {
	return o
}

func (o WorkflowTaskCreateServiceNowIncidentArrayOutput) ToWorkflowTaskCreateServiceNowIncidentArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateServiceNowIncidentArrayOutput {
	return o
}

func (o WorkflowTaskCreateServiceNowIncidentArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateServiceNowIncidentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskCreateServiceNowIncident {
		return vs[0].([]*WorkflowTaskCreateServiceNowIncident)[vs[1].(int)]
	}).(WorkflowTaskCreateServiceNowIncidentOutput)
}

type WorkflowTaskCreateServiceNowIncidentMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateServiceNowIncidentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateServiceNowIncident)(nil)).Elem()
}

func (o WorkflowTaskCreateServiceNowIncidentMapOutput) ToWorkflowTaskCreateServiceNowIncidentMapOutput() WorkflowTaskCreateServiceNowIncidentMapOutput {
	return o
}

func (o WorkflowTaskCreateServiceNowIncidentMapOutput) ToWorkflowTaskCreateServiceNowIncidentMapOutputWithContext(ctx context.Context) WorkflowTaskCreateServiceNowIncidentMapOutput {
	return o
}

func (o WorkflowTaskCreateServiceNowIncidentMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskCreateServiceNowIncidentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskCreateServiceNowIncident {
		return vs[0].(map[string]*WorkflowTaskCreateServiceNowIncident)[vs[1].(string)]
	}).(WorkflowTaskCreateServiceNowIncidentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateServiceNowIncidentInput)(nil)).Elem(), &WorkflowTaskCreateServiceNowIncident{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateServiceNowIncidentArrayInput)(nil)).Elem(), WorkflowTaskCreateServiceNowIncidentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateServiceNowIncidentMapInput)(nil)).Elem(), WorkflowTaskCreateServiceNowIncidentMap{})
	pulumi.RegisterOutputType(WorkflowTaskCreateServiceNowIncidentOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateServiceNowIncidentArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateServiceNowIncidentMapOutput{})
}
