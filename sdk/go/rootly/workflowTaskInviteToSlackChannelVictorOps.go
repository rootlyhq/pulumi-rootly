// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow inviteToSlackChannelVictorOps task.
type WorkflowTaskInviteToSlackChannelVictorOps struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskInviteToSlackChannelVictorOps registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskInviteToSlackChannelVictorOps(ctx *pulumi.Context,
	name string, args *WorkflowTaskInviteToSlackChannelVictorOpsArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskInviteToSlackChannelVictorOps, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskInviteToSlackChannelVictorOps
	err := ctx.RegisterResource("rootly:index/workflowTaskInviteToSlackChannelVictorOps:WorkflowTaskInviteToSlackChannelVictorOps", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskInviteToSlackChannelVictorOps gets an existing WorkflowTaskInviteToSlackChannelVictorOps resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskInviteToSlackChannelVictorOps(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskInviteToSlackChannelVictorOpsState, opts ...pulumi.ResourceOption) (*WorkflowTaskInviteToSlackChannelVictorOps, error) {
	var resource WorkflowTaskInviteToSlackChannelVictorOps
	err := ctx.ReadResource("rootly:index/workflowTaskInviteToSlackChannelVictorOps:WorkflowTaskInviteToSlackChannelVictorOps", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskInviteToSlackChannelVictorOps resources.
type workflowTaskInviteToSlackChannelVictorOpsState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskInviteToSlackChannelVictorOpsTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskInviteToSlackChannelVictorOpsState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskInviteToSlackChannelVictorOpsState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskInviteToSlackChannelVictorOpsState)(nil)).Elem()
}

type workflowTaskInviteToSlackChannelVictorOpsArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskInviteToSlackChannelVictorOpsTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskInviteToSlackChannelVictorOps resource.
type WorkflowTaskInviteToSlackChannelVictorOpsArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskInviteToSlackChannelVictorOpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskInviteToSlackChannelVictorOpsArgs)(nil)).Elem()
}

type WorkflowTaskInviteToSlackChannelVictorOpsInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelVictorOpsOutput() WorkflowTaskInviteToSlackChannelVictorOpsOutput
	ToWorkflowTaskInviteToSlackChannelVictorOpsOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsOutput
}

func (*WorkflowTaskInviteToSlackChannelVictorOps) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskInviteToSlackChannelVictorOps)(nil)).Elem()
}

func (i *WorkflowTaskInviteToSlackChannelVictorOps) ToWorkflowTaskInviteToSlackChannelVictorOpsOutput() WorkflowTaskInviteToSlackChannelVictorOpsOutput {
	return i.ToWorkflowTaskInviteToSlackChannelVictorOpsOutputWithContext(context.Background())
}

func (i *WorkflowTaskInviteToSlackChannelVictorOps) ToWorkflowTaskInviteToSlackChannelVictorOpsOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelVictorOpsOutput)
}

// WorkflowTaskInviteToSlackChannelVictorOpsArrayInput is an input type that accepts WorkflowTaskInviteToSlackChannelVictorOpsArray and WorkflowTaskInviteToSlackChannelVictorOpsArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelVictorOpsArrayInput` via:
//
//	WorkflowTaskInviteToSlackChannelVictorOpsArray{ WorkflowTaskInviteToSlackChannelVictorOpsArgs{...} }
type WorkflowTaskInviteToSlackChannelVictorOpsArrayInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelVictorOpsArrayOutput() WorkflowTaskInviteToSlackChannelVictorOpsArrayOutput
	ToWorkflowTaskInviteToSlackChannelVictorOpsArrayOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelVictorOpsArrayOutput
}

type WorkflowTaskInviteToSlackChannelVictorOpsArray []WorkflowTaskInviteToSlackChannelVictorOpsInput

func (WorkflowTaskInviteToSlackChannelVictorOpsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskInviteToSlackChannelVictorOps)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelVictorOpsArray) ToWorkflowTaskInviteToSlackChannelVictorOpsArrayOutput() WorkflowTaskInviteToSlackChannelVictorOpsArrayOutput {
	return i.ToWorkflowTaskInviteToSlackChannelVictorOpsArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelVictorOpsArray) ToWorkflowTaskInviteToSlackChannelVictorOpsArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelVictorOpsArrayOutput)
}

// WorkflowTaskInviteToSlackChannelVictorOpsMapInput is an input type that accepts WorkflowTaskInviteToSlackChannelVictorOpsMap and WorkflowTaskInviteToSlackChannelVictorOpsMapOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelVictorOpsMapInput` via:
//
//	WorkflowTaskInviteToSlackChannelVictorOpsMap{ "key": WorkflowTaskInviteToSlackChannelVictorOpsArgs{...} }
type WorkflowTaskInviteToSlackChannelVictorOpsMapInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelVictorOpsMapOutput() WorkflowTaskInviteToSlackChannelVictorOpsMapOutput
	ToWorkflowTaskInviteToSlackChannelVictorOpsMapOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelVictorOpsMapOutput
}

type WorkflowTaskInviteToSlackChannelVictorOpsMap map[string]WorkflowTaskInviteToSlackChannelVictorOpsInput

func (WorkflowTaskInviteToSlackChannelVictorOpsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskInviteToSlackChannelVictorOps)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelVictorOpsMap) ToWorkflowTaskInviteToSlackChannelVictorOpsMapOutput() WorkflowTaskInviteToSlackChannelVictorOpsMapOutput {
	return i.ToWorkflowTaskInviteToSlackChannelVictorOpsMapOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelVictorOpsMap) ToWorkflowTaskInviteToSlackChannelVictorOpsMapOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelVictorOpsMapOutput)
}

type WorkflowTaskInviteToSlackChannelVictorOpsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelVictorOpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskInviteToSlackChannelVictorOps)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsOutput) ToWorkflowTaskInviteToSlackChannelVictorOpsOutput() WorkflowTaskInviteToSlackChannelVictorOpsOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsOutput) ToWorkflowTaskInviteToSlackChannelVictorOpsOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskInviteToSlackChannelVictorOpsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelVictorOps) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskInviteToSlackChannelVictorOpsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelVictorOps) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskInviteToSlackChannelVictorOpsOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelVictorOps) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskInviteToSlackChannelVictorOpsOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelVictorOps) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskInviteToSlackChannelVictorOpsOutput) TaskParams() WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelVictorOps) WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskInviteToSlackChannelVictorOpsTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskInviteToSlackChannelVictorOpsOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelVictorOps) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskInviteToSlackChannelVictorOpsArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelVictorOpsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskInviteToSlackChannelVictorOps)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsArrayOutput) ToWorkflowTaskInviteToSlackChannelVictorOpsArrayOutput() WorkflowTaskInviteToSlackChannelVictorOpsArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsArrayOutput) ToWorkflowTaskInviteToSlackChannelVictorOpsArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsArrayOutput) Index(i pulumi.IntInput) WorkflowTaskInviteToSlackChannelVictorOpsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskInviteToSlackChannelVictorOps {
		return vs[0].([]*WorkflowTaskInviteToSlackChannelVictorOps)[vs[1].(int)]
	}).(WorkflowTaskInviteToSlackChannelVictorOpsOutput)
}

type WorkflowTaskInviteToSlackChannelVictorOpsMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelVictorOpsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskInviteToSlackChannelVictorOps)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsMapOutput) ToWorkflowTaskInviteToSlackChannelVictorOpsMapOutput() WorkflowTaskInviteToSlackChannelVictorOpsMapOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsMapOutput) ToWorkflowTaskInviteToSlackChannelVictorOpsMapOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelVictorOpsMapOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelVictorOpsMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskInviteToSlackChannelVictorOpsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskInviteToSlackChannelVictorOps {
		return vs[0].(map[string]*WorkflowTaskInviteToSlackChannelVictorOps)[vs[1].(string)]
	}).(WorkflowTaskInviteToSlackChannelVictorOpsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelVictorOpsInput)(nil)).Elem(), &WorkflowTaskInviteToSlackChannelVictorOps{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelVictorOpsArrayInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelVictorOpsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelVictorOpsMapInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelVictorOpsMap{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelVictorOpsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelVictorOpsArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelVictorOpsMapOutput{})
}
