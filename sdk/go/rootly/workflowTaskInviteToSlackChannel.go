// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow inviteToSlackChannel task.
//
// ## Example Usage
type WorkflowTaskInviteToSlackChannel struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskInviteToSlackChannelTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskInviteToSlackChannel registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskInviteToSlackChannel(ctx *pulumi.Context,
	name string, args *WorkflowTaskInviteToSlackChannelArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskInviteToSlackChannel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskInviteToSlackChannel
	err := ctx.RegisterResource("rootly:index/workflowTaskInviteToSlackChannel:WorkflowTaskInviteToSlackChannel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskInviteToSlackChannel gets an existing WorkflowTaskInviteToSlackChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskInviteToSlackChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskInviteToSlackChannelState, opts ...pulumi.ResourceOption) (*WorkflowTaskInviteToSlackChannel, error) {
	var resource WorkflowTaskInviteToSlackChannel
	err := ctx.ReadResource("rootly:index/workflowTaskInviteToSlackChannel:WorkflowTaskInviteToSlackChannel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskInviteToSlackChannel resources.
type workflowTaskInviteToSlackChannelState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskInviteToSlackChannelTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskInviteToSlackChannelState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskInviteToSlackChannelTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskInviteToSlackChannelState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskInviteToSlackChannelState)(nil)).Elem()
}

type workflowTaskInviteToSlackChannelArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskInviteToSlackChannelTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskInviteToSlackChannel resource.
type WorkflowTaskInviteToSlackChannelArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskInviteToSlackChannelTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskInviteToSlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskInviteToSlackChannelArgs)(nil)).Elem()
}

type WorkflowTaskInviteToSlackChannelInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelOutput() WorkflowTaskInviteToSlackChannelOutput
	ToWorkflowTaskInviteToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOutput
}

func (*WorkflowTaskInviteToSlackChannel) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskInviteToSlackChannel)(nil)).Elem()
}

func (i *WorkflowTaskInviteToSlackChannel) ToWorkflowTaskInviteToSlackChannelOutput() WorkflowTaskInviteToSlackChannelOutput {
	return i.ToWorkflowTaskInviteToSlackChannelOutputWithContext(context.Background())
}

func (i *WorkflowTaskInviteToSlackChannel) ToWorkflowTaskInviteToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelOutput)
}

// WorkflowTaskInviteToSlackChannelArrayInput is an input type that accepts WorkflowTaskInviteToSlackChannelArray and WorkflowTaskInviteToSlackChannelArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelArrayInput` via:
//
//	WorkflowTaskInviteToSlackChannelArray{ WorkflowTaskInviteToSlackChannelArgs{...} }
type WorkflowTaskInviteToSlackChannelArrayInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelArrayOutput() WorkflowTaskInviteToSlackChannelArrayOutput
	ToWorkflowTaskInviteToSlackChannelArrayOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelArrayOutput
}

type WorkflowTaskInviteToSlackChannelArray []WorkflowTaskInviteToSlackChannelInput

func (WorkflowTaskInviteToSlackChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskInviteToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelArray) ToWorkflowTaskInviteToSlackChannelArrayOutput() WorkflowTaskInviteToSlackChannelArrayOutput {
	return i.ToWorkflowTaskInviteToSlackChannelArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelArray) ToWorkflowTaskInviteToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelArrayOutput)
}

// WorkflowTaskInviteToSlackChannelMapInput is an input type that accepts WorkflowTaskInviteToSlackChannelMap and WorkflowTaskInviteToSlackChannelMapOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelMapInput` via:
//
//	WorkflowTaskInviteToSlackChannelMap{ "key": WorkflowTaskInviteToSlackChannelArgs{...} }
type WorkflowTaskInviteToSlackChannelMapInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelMapOutput() WorkflowTaskInviteToSlackChannelMapOutput
	ToWorkflowTaskInviteToSlackChannelMapOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelMapOutput
}

type WorkflowTaskInviteToSlackChannelMap map[string]WorkflowTaskInviteToSlackChannelInput

func (WorkflowTaskInviteToSlackChannelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskInviteToSlackChannel)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelMap) ToWorkflowTaskInviteToSlackChannelMapOutput() WorkflowTaskInviteToSlackChannelMapOutput {
	return i.ToWorkflowTaskInviteToSlackChannelMapOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelMap) ToWorkflowTaskInviteToSlackChannelMapOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelMapOutput)
}

type WorkflowTaskInviteToSlackChannelOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskInviteToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelOutput) ToWorkflowTaskInviteToSlackChannelOutput() WorkflowTaskInviteToSlackChannelOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelOutput) ToWorkflowTaskInviteToSlackChannelOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskInviteToSlackChannelOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannel) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskInviteToSlackChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskInviteToSlackChannelOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannel) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskInviteToSlackChannelOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannel) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskInviteToSlackChannelOutput) TaskParams() WorkflowTaskInviteToSlackChannelTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannel) WorkflowTaskInviteToSlackChannelTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskInviteToSlackChannelTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskInviteToSlackChannelOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannel) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskInviteToSlackChannelArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskInviteToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelArrayOutput) ToWorkflowTaskInviteToSlackChannelArrayOutput() WorkflowTaskInviteToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelArrayOutput) ToWorkflowTaskInviteToSlackChannelArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelArrayOutput) Index(i pulumi.IntInput) WorkflowTaskInviteToSlackChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskInviteToSlackChannel {
		return vs[0].([]*WorkflowTaskInviteToSlackChannel)[vs[1].(int)]
	}).(WorkflowTaskInviteToSlackChannelOutput)
}

type WorkflowTaskInviteToSlackChannelMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskInviteToSlackChannel)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelMapOutput) ToWorkflowTaskInviteToSlackChannelMapOutput() WorkflowTaskInviteToSlackChannelMapOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelMapOutput) ToWorkflowTaskInviteToSlackChannelMapOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelMapOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskInviteToSlackChannelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskInviteToSlackChannel {
		return vs[0].(map[string]*WorkflowTaskInviteToSlackChannel)[vs[1].(string)]
	}).(WorkflowTaskInviteToSlackChannelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelInput)(nil)).Elem(), &WorkflowTaskInviteToSlackChannel{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelArrayInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelMapInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelMap{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelMapOutput{})
}
