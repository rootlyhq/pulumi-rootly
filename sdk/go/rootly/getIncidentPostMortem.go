// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// ## Example Usage
func GetIncidentPostMortem(ctx *pulumi.Context, args *GetIncidentPostMortemArgs, opts ...pulumi.InvokeOption) (*GetIncidentPostMortemResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIncidentPostMortemResult
	err := ctx.Invoke("rootly:index/getIncidentPostMortem:getIncidentPostMortem", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIncidentPostMortem.
type GetIncidentPostMortemArgs struct {
	// Filter by date range using 'lt' and 'gt'.
	CreatedAt map[string]string `pulumi:"createdAt"`
	// Filter by date range using 'lt' and 'gt'.
	MitigatedAt map[string]string `pulumi:"mitigatedAt"`
	// Filter by date range using 'lt' and 'gt'.
	ResolvedAt map[string]string `pulumi:"resolvedAt"`
	// Filter by date range using 'lt' and 'gt'.
	StartedAt map[string]string `pulumi:"startedAt"`
	Status    *string           `pulumi:"status"`
}

// A collection of values returned by getIncidentPostMortem.
type GetIncidentPostMortemResult struct {
	// Filter by date range using 'lt' and 'gt'.
	CreatedAt map[string]string `pulumi:"createdAt"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// Filter by date range using 'lt' and 'gt'.
	MitigatedAt map[string]string `pulumi:"mitigatedAt"`
	// Filter by date range using 'lt' and 'gt'.
	ResolvedAt map[string]string `pulumi:"resolvedAt"`
	// Filter by date range using 'lt' and 'gt'.
	StartedAt map[string]string `pulumi:"startedAt"`
	Status    string            `pulumi:"status"`
}

func GetIncidentPostMortemOutput(ctx *pulumi.Context, args GetIncidentPostMortemOutputArgs, opts ...pulumi.InvokeOption) GetIncidentPostMortemResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIncidentPostMortemResult, error) {
			args := v.(GetIncidentPostMortemArgs)
			r, err := GetIncidentPostMortem(ctx, &args, opts...)
			var s GetIncidentPostMortemResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIncidentPostMortemResultOutput)
}

// A collection of arguments for invoking getIncidentPostMortem.
type GetIncidentPostMortemOutputArgs struct {
	// Filter by date range using 'lt' and 'gt'.
	CreatedAt pulumi.StringMapInput `pulumi:"createdAt"`
	// Filter by date range using 'lt' and 'gt'.
	MitigatedAt pulumi.StringMapInput `pulumi:"mitigatedAt"`
	// Filter by date range using 'lt' and 'gt'.
	ResolvedAt pulumi.StringMapInput `pulumi:"resolvedAt"`
	// Filter by date range using 'lt' and 'gt'.
	StartedAt pulumi.StringMapInput `pulumi:"startedAt"`
	Status    pulumi.StringPtrInput `pulumi:"status"`
}

func (GetIncidentPostMortemOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIncidentPostMortemArgs)(nil)).Elem()
}

// A collection of values returned by getIncidentPostMortem.
type GetIncidentPostMortemResultOutput struct{ *pulumi.OutputState }

func (GetIncidentPostMortemResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIncidentPostMortemResult)(nil)).Elem()
}

func (o GetIncidentPostMortemResultOutput) ToGetIncidentPostMortemResultOutput() GetIncidentPostMortemResultOutput {
	return o
}

func (o GetIncidentPostMortemResultOutput) ToGetIncidentPostMortemResultOutputWithContext(ctx context.Context) GetIncidentPostMortemResultOutput {
	return o
}

// Filter by date range using 'lt' and 'gt'.
func (o GetIncidentPostMortemResultOutput) CreatedAt() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIncidentPostMortemResult) map[string]string { return v.CreatedAt }).(pulumi.StringMapOutput)
}

// The ID of this resource.
func (o GetIncidentPostMortemResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentPostMortemResult) string { return v.Id }).(pulumi.StringOutput)
}

// Filter by date range using 'lt' and 'gt'.
func (o GetIncidentPostMortemResultOutput) MitigatedAt() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIncidentPostMortemResult) map[string]string { return v.MitigatedAt }).(pulumi.StringMapOutput)
}

// Filter by date range using 'lt' and 'gt'.
func (o GetIncidentPostMortemResultOutput) ResolvedAt() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIncidentPostMortemResult) map[string]string { return v.ResolvedAt }).(pulumi.StringMapOutput)
}

// Filter by date range using 'lt' and 'gt'.
func (o GetIncidentPostMortemResultOutput) StartedAt() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIncidentPostMortemResult) map[string]string { return v.StartedAt }).(pulumi.StringMapOutput)
}

func (o GetIncidentPostMortemResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentPostMortemResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIncidentPostMortemResultOutput{})
}
