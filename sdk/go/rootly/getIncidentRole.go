// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// ## Example Usage
func LookupIncidentRole(ctx *pulumi.Context, args *LookupIncidentRoleArgs, opts ...pulumi.InvokeOption) (*LookupIncidentRoleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIncidentRoleResult
	err := ctx.Invoke("rootly:index/getIncidentRole:getIncidentRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIncidentRole.
type LookupIncidentRoleArgs struct {
	// Filter by date range using 'lt' and 'gt'.
	CreatedAt map[string]string `pulumi:"createdAt"`
	Enabled   *bool             `pulumi:"enabled"`
	Name      *string           `pulumi:"name"`
	Slug      *string           `pulumi:"slug"`
}

// A collection of values returned by getIncidentRole.
type LookupIncidentRoleResult struct {
	// Filter by date range using 'lt' and 'gt'.
	CreatedAt map[string]string `pulumi:"createdAt"`
	Enabled   *bool             `pulumi:"enabled"`
	// The ID of this resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	Slug string `pulumi:"slug"`
}

func LookupIncidentRoleOutput(ctx *pulumi.Context, args LookupIncidentRoleOutputArgs, opts ...pulumi.InvokeOption) LookupIncidentRoleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIncidentRoleResult, error) {
			args := v.(LookupIncidentRoleArgs)
			r, err := LookupIncidentRole(ctx, &args, opts...)
			var s LookupIncidentRoleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIncidentRoleResultOutput)
}

// A collection of arguments for invoking getIncidentRole.
type LookupIncidentRoleOutputArgs struct {
	// Filter by date range using 'lt' and 'gt'.
	CreatedAt pulumi.StringMapInput `pulumi:"createdAt"`
	Enabled   pulumi.BoolPtrInput   `pulumi:"enabled"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
	Slug      pulumi.StringPtrInput `pulumi:"slug"`
}

func (LookupIncidentRoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIncidentRoleArgs)(nil)).Elem()
}

// A collection of values returned by getIncidentRole.
type LookupIncidentRoleResultOutput struct{ *pulumi.OutputState }

func (LookupIncidentRoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIncidentRoleResult)(nil)).Elem()
}

func (o LookupIncidentRoleResultOutput) ToLookupIncidentRoleResultOutput() LookupIncidentRoleResultOutput {
	return o
}

func (o LookupIncidentRoleResultOutput) ToLookupIncidentRoleResultOutputWithContext(ctx context.Context) LookupIncidentRoleResultOutput {
	return o
}

// Filter by date range using 'lt' and 'gt'.
func (o LookupIncidentRoleResultOutput) CreatedAt() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupIncidentRoleResult) map[string]string { return v.CreatedAt }).(pulumi.StringMapOutput)
}

func (o LookupIncidentRoleResultOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupIncidentRoleResult) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The ID of this resource.
func (o LookupIncidentRoleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIncidentRoleResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupIncidentRoleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIncidentRoleResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupIncidentRoleResultOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIncidentRoleResult) string { return v.Slug }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIncidentRoleResultOutput{})
}
