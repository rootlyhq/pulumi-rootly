// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow createGoogleDocsPermissions task.
type WorkflowTaskCreateGoogleDocsPermissions struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskCreateGoogleDocsPermissions registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskCreateGoogleDocsPermissions(ctx *pulumi.Context,
	name string, args *WorkflowTaskCreateGoogleDocsPermissionsArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateGoogleDocsPermissions, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskCreateGoogleDocsPermissions
	err := ctx.RegisterResource("rootly:index/workflowTaskCreateGoogleDocsPermissions:WorkflowTaskCreateGoogleDocsPermissions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskCreateGoogleDocsPermissions gets an existing WorkflowTaskCreateGoogleDocsPermissions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskCreateGoogleDocsPermissions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskCreateGoogleDocsPermissionsState, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateGoogleDocsPermissions, error) {
	var resource WorkflowTaskCreateGoogleDocsPermissions
	err := ctx.ReadResource("rootly:index/workflowTaskCreateGoogleDocsPermissions:WorkflowTaskCreateGoogleDocsPermissions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskCreateGoogleDocsPermissions resources.
type workflowTaskCreateGoogleDocsPermissionsState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskCreateGoogleDocsPermissionsTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskCreateGoogleDocsPermissionsState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateGoogleDocsPermissionsTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskCreateGoogleDocsPermissionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateGoogleDocsPermissionsState)(nil)).Elem()
}

type workflowTaskCreateGoogleDocsPermissionsArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateGoogleDocsPermissionsTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskCreateGoogleDocsPermissions resource.
type WorkflowTaskCreateGoogleDocsPermissionsArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateGoogleDocsPermissionsTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskCreateGoogleDocsPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateGoogleDocsPermissionsArgs)(nil)).Elem()
}

type WorkflowTaskCreateGoogleDocsPermissionsInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleDocsPermissionsOutput() WorkflowTaskCreateGoogleDocsPermissionsOutput
	ToWorkflowTaskCreateGoogleDocsPermissionsOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPermissionsOutput
}

func (*WorkflowTaskCreateGoogleDocsPermissions) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGoogleDocsPermissions)(nil)).Elem()
}

func (i *WorkflowTaskCreateGoogleDocsPermissions) ToWorkflowTaskCreateGoogleDocsPermissionsOutput() WorkflowTaskCreateGoogleDocsPermissionsOutput {
	return i.ToWorkflowTaskCreateGoogleDocsPermissionsOutputWithContext(context.Background())
}

func (i *WorkflowTaskCreateGoogleDocsPermissions) ToWorkflowTaskCreateGoogleDocsPermissionsOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleDocsPermissionsOutput)
}

// WorkflowTaskCreateGoogleDocsPermissionsArrayInput is an input type that accepts WorkflowTaskCreateGoogleDocsPermissionsArray and WorkflowTaskCreateGoogleDocsPermissionsArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoogleDocsPermissionsArrayInput` via:
//
//	WorkflowTaskCreateGoogleDocsPermissionsArray{ WorkflowTaskCreateGoogleDocsPermissionsArgs{...} }
type WorkflowTaskCreateGoogleDocsPermissionsArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleDocsPermissionsArrayOutput() WorkflowTaskCreateGoogleDocsPermissionsArrayOutput
	ToWorkflowTaskCreateGoogleDocsPermissionsArrayOutputWithContext(context.Context) WorkflowTaskCreateGoogleDocsPermissionsArrayOutput
}

type WorkflowTaskCreateGoogleDocsPermissionsArray []WorkflowTaskCreateGoogleDocsPermissionsInput

func (WorkflowTaskCreateGoogleDocsPermissionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateGoogleDocsPermissions)(nil)).Elem()
}

func (i WorkflowTaskCreateGoogleDocsPermissionsArray) ToWorkflowTaskCreateGoogleDocsPermissionsArrayOutput() WorkflowTaskCreateGoogleDocsPermissionsArrayOutput {
	return i.ToWorkflowTaskCreateGoogleDocsPermissionsArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoogleDocsPermissionsArray) ToWorkflowTaskCreateGoogleDocsPermissionsArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPermissionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleDocsPermissionsArrayOutput)
}

// WorkflowTaskCreateGoogleDocsPermissionsMapInput is an input type that accepts WorkflowTaskCreateGoogleDocsPermissionsMap and WorkflowTaskCreateGoogleDocsPermissionsMapOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateGoogleDocsPermissionsMapInput` via:
//
//	WorkflowTaskCreateGoogleDocsPermissionsMap{ "key": WorkflowTaskCreateGoogleDocsPermissionsArgs{...} }
type WorkflowTaskCreateGoogleDocsPermissionsMapInput interface {
	pulumi.Input

	ToWorkflowTaskCreateGoogleDocsPermissionsMapOutput() WorkflowTaskCreateGoogleDocsPermissionsMapOutput
	ToWorkflowTaskCreateGoogleDocsPermissionsMapOutputWithContext(context.Context) WorkflowTaskCreateGoogleDocsPermissionsMapOutput
}

type WorkflowTaskCreateGoogleDocsPermissionsMap map[string]WorkflowTaskCreateGoogleDocsPermissionsInput

func (WorkflowTaskCreateGoogleDocsPermissionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateGoogleDocsPermissions)(nil)).Elem()
}

func (i WorkflowTaskCreateGoogleDocsPermissionsMap) ToWorkflowTaskCreateGoogleDocsPermissionsMapOutput() WorkflowTaskCreateGoogleDocsPermissionsMapOutput {
	return i.ToWorkflowTaskCreateGoogleDocsPermissionsMapOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateGoogleDocsPermissionsMap) ToWorkflowTaskCreateGoogleDocsPermissionsMapOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPermissionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateGoogleDocsPermissionsMapOutput)
}

type WorkflowTaskCreateGoogleDocsPermissionsOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleDocsPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateGoogleDocsPermissions)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleDocsPermissionsOutput) ToWorkflowTaskCreateGoogleDocsPermissionsOutput() WorkflowTaskCreateGoogleDocsPermissionsOutput {
	return o
}

func (o WorkflowTaskCreateGoogleDocsPermissionsOutput) ToWorkflowTaskCreateGoogleDocsPermissionsOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPermissionsOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskCreateGoogleDocsPermissionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPermissions) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskCreateGoogleDocsPermissionsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPermissions) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskCreateGoogleDocsPermissionsOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPermissions) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskCreateGoogleDocsPermissionsOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPermissions) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskCreateGoogleDocsPermissionsOutput) TaskParams() WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPermissions) WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskCreateGoogleDocsPermissionsTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskCreateGoogleDocsPermissionsOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateGoogleDocsPermissions) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskCreateGoogleDocsPermissionsArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleDocsPermissionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateGoogleDocsPermissions)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleDocsPermissionsArrayOutput) ToWorkflowTaskCreateGoogleDocsPermissionsArrayOutput() WorkflowTaskCreateGoogleDocsPermissionsArrayOutput {
	return o
}

func (o WorkflowTaskCreateGoogleDocsPermissionsArrayOutput) ToWorkflowTaskCreateGoogleDocsPermissionsArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPermissionsArrayOutput {
	return o
}

func (o WorkflowTaskCreateGoogleDocsPermissionsArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateGoogleDocsPermissionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskCreateGoogleDocsPermissions {
		return vs[0].([]*WorkflowTaskCreateGoogleDocsPermissions)[vs[1].(int)]
	}).(WorkflowTaskCreateGoogleDocsPermissionsOutput)
}

type WorkflowTaskCreateGoogleDocsPermissionsMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateGoogleDocsPermissionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateGoogleDocsPermissions)(nil)).Elem()
}

func (o WorkflowTaskCreateGoogleDocsPermissionsMapOutput) ToWorkflowTaskCreateGoogleDocsPermissionsMapOutput() WorkflowTaskCreateGoogleDocsPermissionsMapOutput {
	return o
}

func (o WorkflowTaskCreateGoogleDocsPermissionsMapOutput) ToWorkflowTaskCreateGoogleDocsPermissionsMapOutputWithContext(ctx context.Context) WorkflowTaskCreateGoogleDocsPermissionsMapOutput {
	return o
}

func (o WorkflowTaskCreateGoogleDocsPermissionsMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskCreateGoogleDocsPermissionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskCreateGoogleDocsPermissions {
		return vs[0].(map[string]*WorkflowTaskCreateGoogleDocsPermissions)[vs[1].(string)]
	}).(WorkflowTaskCreateGoogleDocsPermissionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleDocsPermissionsInput)(nil)).Elem(), &WorkflowTaskCreateGoogleDocsPermissions{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleDocsPermissionsArrayInput)(nil)).Elem(), WorkflowTaskCreateGoogleDocsPermissionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateGoogleDocsPermissionsMapInput)(nil)).Elem(), WorkflowTaskCreateGoogleDocsPermissionsMap{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleDocsPermissionsOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleDocsPermissionsArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateGoogleDocsPermissionsMapOutput{})
}
