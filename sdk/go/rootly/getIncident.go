// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// ## Example Usage
func GetIncident(ctx *pulumi.Context, args *GetIncidentArgs, opts ...pulumi.InvokeOption) (*GetIncidentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIncidentResult
	err := ctx.Invoke("rootly:index/getIncident:getIncident", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIncident.
type GetIncidentArgs struct {
	// Filter by date range using 'lt' and 'gt'.
	AcknowledgedAt map[string]string `pulumi:"acknowledgedAt"`
	// Filter by date range using 'lt' and 'gt'.
	CreatedAt map[string]string `pulumi:"createdAt"`
	// Filter by date range using 'lt' and 'gt'.
	DetectedAt      map[string]string `pulumi:"detectedAt"`
	Environments    *string           `pulumi:"environments"`
	Functionalities *string           `pulumi:"functionalities"`
	// Filter by date range using 'lt' and 'gt'.
	InTriageAt map[string]string `pulumi:"inTriageAt"`
	Kind       *string           `pulumi:"kind"`
	Labels     *string           `pulumi:"labels"`
	// Filter by date range using 'lt' and 'gt'.
	MitigatedAt map[string]string `pulumi:"mitigatedAt"`
	Private     *bool             `pulumi:"private"`
	// Filter by date range using 'lt' and 'gt'.
	ResolvedAt map[string]string `pulumi:"resolvedAt"`
	Services   *string           `pulumi:"services"`
	Severity   *string           `pulumi:"severity"`
	// Filter by date range using 'lt' and 'gt'.
	StartedAt map[string]string `pulumi:"startedAt"`
	// Filter by date range using 'lt' and 'gt'.
	UpdatedAt map[string]string `pulumi:"updatedAt"`
}

// A collection of values returned by getIncident.
type GetIncidentResult struct {
	// Filter by date range using 'lt' and 'gt'.
	AcknowledgedAt map[string]string `pulumi:"acknowledgedAt"`
	// Filter by date range using 'lt' and 'gt'.
	CreatedAt map[string]string `pulumi:"createdAt"`
	// Filter by date range using 'lt' and 'gt'.
	DetectedAt      map[string]string `pulumi:"detectedAt"`
	Environments    string            `pulumi:"environments"`
	Functionalities string            `pulumi:"functionalities"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// Filter by date range using 'lt' and 'gt'.
	InTriageAt map[string]string `pulumi:"inTriageAt"`
	Kind       string            `pulumi:"kind"`
	Labels     string            `pulumi:"labels"`
	// Filter by date range using 'lt' and 'gt'.
	MitigatedAt map[string]string `pulumi:"mitigatedAt"`
	Private     bool              `pulumi:"private"`
	// Filter by date range using 'lt' and 'gt'.
	ResolvedAt map[string]string `pulumi:"resolvedAt"`
	Services   string            `pulumi:"services"`
	Severity   string            `pulumi:"severity"`
	// Filter by date range using 'lt' and 'gt'.
	StartedAt map[string]string `pulumi:"startedAt"`
	// Filter by date range using 'lt' and 'gt'.
	UpdatedAt map[string]string `pulumi:"updatedAt"`
}

func GetIncidentOutput(ctx *pulumi.Context, args GetIncidentOutputArgs, opts ...pulumi.InvokeOption) GetIncidentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIncidentResult, error) {
			args := v.(GetIncidentArgs)
			r, err := GetIncident(ctx, &args, opts...)
			var s GetIncidentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIncidentResultOutput)
}

// A collection of arguments for invoking getIncident.
type GetIncidentOutputArgs struct {
	// Filter by date range using 'lt' and 'gt'.
	AcknowledgedAt pulumi.StringMapInput `pulumi:"acknowledgedAt"`
	// Filter by date range using 'lt' and 'gt'.
	CreatedAt pulumi.StringMapInput `pulumi:"createdAt"`
	// Filter by date range using 'lt' and 'gt'.
	DetectedAt      pulumi.StringMapInput `pulumi:"detectedAt"`
	Environments    pulumi.StringPtrInput `pulumi:"environments"`
	Functionalities pulumi.StringPtrInput `pulumi:"functionalities"`
	// Filter by date range using 'lt' and 'gt'.
	InTriageAt pulumi.StringMapInput `pulumi:"inTriageAt"`
	Kind       pulumi.StringPtrInput `pulumi:"kind"`
	Labels     pulumi.StringPtrInput `pulumi:"labels"`
	// Filter by date range using 'lt' and 'gt'.
	MitigatedAt pulumi.StringMapInput `pulumi:"mitigatedAt"`
	Private     pulumi.BoolPtrInput   `pulumi:"private"`
	// Filter by date range using 'lt' and 'gt'.
	ResolvedAt pulumi.StringMapInput `pulumi:"resolvedAt"`
	Services   pulumi.StringPtrInput `pulumi:"services"`
	Severity   pulumi.StringPtrInput `pulumi:"severity"`
	// Filter by date range using 'lt' and 'gt'.
	StartedAt pulumi.StringMapInput `pulumi:"startedAt"`
	// Filter by date range using 'lt' and 'gt'.
	UpdatedAt pulumi.StringMapInput `pulumi:"updatedAt"`
}

func (GetIncidentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIncidentArgs)(nil)).Elem()
}

// A collection of values returned by getIncident.
type GetIncidentResultOutput struct{ *pulumi.OutputState }

func (GetIncidentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIncidentResult)(nil)).Elem()
}

func (o GetIncidentResultOutput) ToGetIncidentResultOutput() GetIncidentResultOutput {
	return o
}

func (o GetIncidentResultOutput) ToGetIncidentResultOutputWithContext(ctx context.Context) GetIncidentResultOutput {
	return o
}

// Filter by date range using 'lt' and 'gt'.
func (o GetIncidentResultOutput) AcknowledgedAt() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIncidentResult) map[string]string { return v.AcknowledgedAt }).(pulumi.StringMapOutput)
}

// Filter by date range using 'lt' and 'gt'.
func (o GetIncidentResultOutput) CreatedAt() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIncidentResult) map[string]string { return v.CreatedAt }).(pulumi.StringMapOutput)
}

// Filter by date range using 'lt' and 'gt'.
func (o GetIncidentResultOutput) DetectedAt() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIncidentResult) map[string]string { return v.DetectedAt }).(pulumi.StringMapOutput)
}

func (o GetIncidentResultOutput) Environments() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentResult) string { return v.Environments }).(pulumi.StringOutput)
}

func (o GetIncidentResultOutput) Functionalities() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentResult) string { return v.Functionalities }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o GetIncidentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentResult) string { return v.Id }).(pulumi.StringOutput)
}

// Filter by date range using 'lt' and 'gt'.
func (o GetIncidentResultOutput) InTriageAt() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIncidentResult) map[string]string { return v.InTriageAt }).(pulumi.StringMapOutput)
}

func (o GetIncidentResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentResult) string { return v.Kind }).(pulumi.StringOutput)
}

func (o GetIncidentResultOutput) Labels() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentResult) string { return v.Labels }).(pulumi.StringOutput)
}

// Filter by date range using 'lt' and 'gt'.
func (o GetIncidentResultOutput) MitigatedAt() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIncidentResult) map[string]string { return v.MitigatedAt }).(pulumi.StringMapOutput)
}

func (o GetIncidentResultOutput) Private() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIncidentResult) bool { return v.Private }).(pulumi.BoolOutput)
}

// Filter by date range using 'lt' and 'gt'.
func (o GetIncidentResultOutput) ResolvedAt() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIncidentResult) map[string]string { return v.ResolvedAt }).(pulumi.StringMapOutput)
}

func (o GetIncidentResultOutput) Services() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentResult) string { return v.Services }).(pulumi.StringOutput)
}

func (o GetIncidentResultOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v GetIncidentResult) string { return v.Severity }).(pulumi.StringOutput)
}

// Filter by date range using 'lt' and 'gt'.
func (o GetIncidentResultOutput) StartedAt() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIncidentResult) map[string]string { return v.StartedAt }).(pulumi.StringMapOutput)
}

// Filter by date range using 'lt' and 'gt'.
func (o GetIncidentResultOutput) UpdatedAt() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIncidentResult) map[string]string { return v.UpdatedAt }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIncidentResultOutput{})
}
