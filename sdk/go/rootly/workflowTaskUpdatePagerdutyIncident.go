// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow updatePagerdutyIncident task.
type WorkflowTaskUpdatePagerdutyIncident struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskUpdatePagerdutyIncident registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskUpdatePagerdutyIncident(ctx *pulumi.Context,
	name string, args *WorkflowTaskUpdatePagerdutyIncidentArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdatePagerdutyIncident, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskUpdatePagerdutyIncident
	err := ctx.RegisterResource("rootly:index/workflowTaskUpdatePagerdutyIncident:WorkflowTaskUpdatePagerdutyIncident", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskUpdatePagerdutyIncident gets an existing WorkflowTaskUpdatePagerdutyIncident resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskUpdatePagerdutyIncident(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskUpdatePagerdutyIncidentState, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdatePagerdutyIncident, error) {
	var resource WorkflowTaskUpdatePagerdutyIncident
	err := ctx.ReadResource("rootly:index/workflowTaskUpdatePagerdutyIncident:WorkflowTaskUpdatePagerdutyIncident", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskUpdatePagerdutyIncident resources.
type workflowTaskUpdatePagerdutyIncidentState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskUpdatePagerdutyIncidentTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskUpdatePagerdutyIncidentState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdatePagerdutyIncidentTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskUpdatePagerdutyIncidentState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdatePagerdutyIncidentState)(nil)).Elem()
}

type workflowTaskUpdatePagerdutyIncidentArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdatePagerdutyIncidentTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskUpdatePagerdutyIncident resource.
type WorkflowTaskUpdatePagerdutyIncidentArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdatePagerdutyIncidentTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskUpdatePagerdutyIncidentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdatePagerdutyIncidentArgs)(nil)).Elem()
}

type WorkflowTaskUpdatePagerdutyIncidentInput interface {
	pulumi.Input

	ToWorkflowTaskUpdatePagerdutyIncidentOutput() WorkflowTaskUpdatePagerdutyIncidentOutput
	ToWorkflowTaskUpdatePagerdutyIncidentOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagerdutyIncidentOutput
}

func (*WorkflowTaskUpdatePagerdutyIncident) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdatePagerdutyIncident)(nil)).Elem()
}

func (i *WorkflowTaskUpdatePagerdutyIncident) ToWorkflowTaskUpdatePagerdutyIncidentOutput() WorkflowTaskUpdatePagerdutyIncidentOutput {
	return i.ToWorkflowTaskUpdatePagerdutyIncidentOutputWithContext(context.Background())
}

func (i *WorkflowTaskUpdatePagerdutyIncident) ToWorkflowTaskUpdatePagerdutyIncidentOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagerdutyIncidentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdatePagerdutyIncidentOutput)
}

// WorkflowTaskUpdatePagerdutyIncidentArrayInput is an input type that accepts WorkflowTaskUpdatePagerdutyIncidentArray and WorkflowTaskUpdatePagerdutyIncidentArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdatePagerdutyIncidentArrayInput` via:
//
//	WorkflowTaskUpdatePagerdutyIncidentArray{ WorkflowTaskUpdatePagerdutyIncidentArgs{...} }
type WorkflowTaskUpdatePagerdutyIncidentArrayInput interface {
	pulumi.Input

	ToWorkflowTaskUpdatePagerdutyIncidentArrayOutput() WorkflowTaskUpdatePagerdutyIncidentArrayOutput
	ToWorkflowTaskUpdatePagerdutyIncidentArrayOutputWithContext(context.Context) WorkflowTaskUpdatePagerdutyIncidentArrayOutput
}

type WorkflowTaskUpdatePagerdutyIncidentArray []WorkflowTaskUpdatePagerdutyIncidentInput

func (WorkflowTaskUpdatePagerdutyIncidentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdatePagerdutyIncident)(nil)).Elem()
}

func (i WorkflowTaskUpdatePagerdutyIncidentArray) ToWorkflowTaskUpdatePagerdutyIncidentArrayOutput() WorkflowTaskUpdatePagerdutyIncidentArrayOutput {
	return i.ToWorkflowTaskUpdatePagerdutyIncidentArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdatePagerdutyIncidentArray) ToWorkflowTaskUpdatePagerdutyIncidentArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagerdutyIncidentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdatePagerdutyIncidentArrayOutput)
}

// WorkflowTaskUpdatePagerdutyIncidentMapInput is an input type that accepts WorkflowTaskUpdatePagerdutyIncidentMap and WorkflowTaskUpdatePagerdutyIncidentMapOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdatePagerdutyIncidentMapInput` via:
//
//	WorkflowTaskUpdatePagerdutyIncidentMap{ "key": WorkflowTaskUpdatePagerdutyIncidentArgs{...} }
type WorkflowTaskUpdatePagerdutyIncidentMapInput interface {
	pulumi.Input

	ToWorkflowTaskUpdatePagerdutyIncidentMapOutput() WorkflowTaskUpdatePagerdutyIncidentMapOutput
	ToWorkflowTaskUpdatePagerdutyIncidentMapOutputWithContext(context.Context) WorkflowTaskUpdatePagerdutyIncidentMapOutput
}

type WorkflowTaskUpdatePagerdutyIncidentMap map[string]WorkflowTaskUpdatePagerdutyIncidentInput

func (WorkflowTaskUpdatePagerdutyIncidentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdatePagerdutyIncident)(nil)).Elem()
}

func (i WorkflowTaskUpdatePagerdutyIncidentMap) ToWorkflowTaskUpdatePagerdutyIncidentMapOutput() WorkflowTaskUpdatePagerdutyIncidentMapOutput {
	return i.ToWorkflowTaskUpdatePagerdutyIncidentMapOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdatePagerdutyIncidentMap) ToWorkflowTaskUpdatePagerdutyIncidentMapOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagerdutyIncidentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdatePagerdutyIncidentMapOutput)
}

type WorkflowTaskUpdatePagerdutyIncidentOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdatePagerdutyIncidentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdatePagerdutyIncident)(nil)).Elem()
}

func (o WorkflowTaskUpdatePagerdutyIncidentOutput) ToWorkflowTaskUpdatePagerdutyIncidentOutput() WorkflowTaskUpdatePagerdutyIncidentOutput {
	return o
}

func (o WorkflowTaskUpdatePagerdutyIncidentOutput) ToWorkflowTaskUpdatePagerdutyIncidentOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagerdutyIncidentOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskUpdatePagerdutyIncidentOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagerdutyIncident) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskUpdatePagerdutyIncidentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagerdutyIncident) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskUpdatePagerdutyIncidentOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagerdutyIncident) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskUpdatePagerdutyIncidentOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagerdutyIncident) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskUpdatePagerdutyIncidentOutput) TaskParams() WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagerdutyIncident) WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskUpdatePagerdutyIncidentTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskUpdatePagerdutyIncidentOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdatePagerdutyIncident) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskUpdatePagerdutyIncidentArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdatePagerdutyIncidentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdatePagerdutyIncident)(nil)).Elem()
}

func (o WorkflowTaskUpdatePagerdutyIncidentArrayOutput) ToWorkflowTaskUpdatePagerdutyIncidentArrayOutput() WorkflowTaskUpdatePagerdutyIncidentArrayOutput {
	return o
}

func (o WorkflowTaskUpdatePagerdutyIncidentArrayOutput) ToWorkflowTaskUpdatePagerdutyIncidentArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagerdutyIncidentArrayOutput {
	return o
}

func (o WorkflowTaskUpdatePagerdutyIncidentArrayOutput) Index(i pulumi.IntInput) WorkflowTaskUpdatePagerdutyIncidentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskUpdatePagerdutyIncident {
		return vs[0].([]*WorkflowTaskUpdatePagerdutyIncident)[vs[1].(int)]
	}).(WorkflowTaskUpdatePagerdutyIncidentOutput)
}

type WorkflowTaskUpdatePagerdutyIncidentMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdatePagerdutyIncidentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdatePagerdutyIncident)(nil)).Elem()
}

func (o WorkflowTaskUpdatePagerdutyIncidentMapOutput) ToWorkflowTaskUpdatePagerdutyIncidentMapOutput() WorkflowTaskUpdatePagerdutyIncidentMapOutput {
	return o
}

func (o WorkflowTaskUpdatePagerdutyIncidentMapOutput) ToWorkflowTaskUpdatePagerdutyIncidentMapOutputWithContext(ctx context.Context) WorkflowTaskUpdatePagerdutyIncidentMapOutput {
	return o
}

func (o WorkflowTaskUpdatePagerdutyIncidentMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskUpdatePagerdutyIncidentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskUpdatePagerdutyIncident {
		return vs[0].(map[string]*WorkflowTaskUpdatePagerdutyIncident)[vs[1].(string)]
	}).(WorkflowTaskUpdatePagerdutyIncidentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdatePagerdutyIncidentInput)(nil)).Elem(), &WorkflowTaskUpdatePagerdutyIncident{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdatePagerdutyIncidentArrayInput)(nil)).Elem(), WorkflowTaskUpdatePagerdutyIncidentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdatePagerdutyIncidentMapInput)(nil)).Elem(), WorkflowTaskUpdatePagerdutyIncidentMap{})
	pulumi.RegisterOutputType(WorkflowTaskUpdatePagerdutyIncidentOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdatePagerdutyIncidentArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdatePagerdutyIncidentMapOutput{})
}
