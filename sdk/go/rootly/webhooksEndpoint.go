// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

type WebhooksEndpoint struct {
	pulumi.CustomResourceState

	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Value must be one of `incident.created`, `incident.updated`, `incident.in_triage`, `incident.mitigated`, `incident.resolved`, `incident.cancelled`, `incident.deleted`, `incident.scheduled.created`, `incident.scheduled.updated`, `incident.scheduled.in_progress`, `incident.scheduled.completed`, `incident.scheduled.deleted`, `incident_post_mortem.created`, `incident_post_mortem.updated`, `incident_post_mortem.published`, `incident_post_mortem.deleted`, `alert.created`, `pulse.created`, `genius_workflow_run.queued`, `genius_workflow_run.started`, `genius_workflow_run.completed`, `genius_workflow_run.failed`, `genius_workflow_run.canceled`.
	EventTypes pulumi.StringArrayOutput `pulumi:"eventTypes"`
	// The name of the endpoint
	Name pulumi.StringOutput `pulumi:"name"`
	// The webhook signing secret used to verify webhook requests.
	Secret pulumi.StringOutput `pulumi:"secret"`
	// The slug of the endpoint
	Slug pulumi.StringOutput `pulumi:"slug"`
	// The URL of the endpoint.
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewWebhooksEndpoint registers a new resource with the given unique name, arguments, and options.
func NewWebhooksEndpoint(ctx *pulumi.Context,
	name string, args *WebhooksEndpointArgs, opts ...pulumi.ResourceOption) (*WebhooksEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebhooksEndpoint
	err := ctx.RegisterResource("rootly:index/webhooksEndpoint:WebhooksEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebhooksEndpoint gets an existing WebhooksEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebhooksEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebhooksEndpointState, opts ...pulumi.ResourceOption) (*WebhooksEndpoint, error) {
	var resource WebhooksEndpoint
	err := ctx.ReadResource("rootly:index/webhooksEndpoint:WebhooksEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebhooksEndpoint resources.
type webhooksEndpointState struct {
	Enabled *bool `pulumi:"enabled"`
	// Value must be one of `incident.created`, `incident.updated`, `incident.in_triage`, `incident.mitigated`, `incident.resolved`, `incident.cancelled`, `incident.deleted`, `incident.scheduled.created`, `incident.scheduled.updated`, `incident.scheduled.in_progress`, `incident.scheduled.completed`, `incident.scheduled.deleted`, `incident_post_mortem.created`, `incident_post_mortem.updated`, `incident_post_mortem.published`, `incident_post_mortem.deleted`, `alert.created`, `pulse.created`, `genius_workflow_run.queued`, `genius_workflow_run.started`, `genius_workflow_run.completed`, `genius_workflow_run.failed`, `genius_workflow_run.canceled`.
	EventTypes []string `pulumi:"eventTypes"`
	// The name of the endpoint
	Name *string `pulumi:"name"`
	// The webhook signing secret used to verify webhook requests.
	Secret *string `pulumi:"secret"`
	// The slug of the endpoint
	Slug *string `pulumi:"slug"`
	// The URL of the endpoint.
	Url *string `pulumi:"url"`
}

type WebhooksEndpointState struct {
	Enabled pulumi.BoolPtrInput
	// Value must be one of `incident.created`, `incident.updated`, `incident.in_triage`, `incident.mitigated`, `incident.resolved`, `incident.cancelled`, `incident.deleted`, `incident.scheduled.created`, `incident.scheduled.updated`, `incident.scheduled.in_progress`, `incident.scheduled.completed`, `incident.scheduled.deleted`, `incident_post_mortem.created`, `incident_post_mortem.updated`, `incident_post_mortem.published`, `incident_post_mortem.deleted`, `alert.created`, `pulse.created`, `genius_workflow_run.queued`, `genius_workflow_run.started`, `genius_workflow_run.completed`, `genius_workflow_run.failed`, `genius_workflow_run.canceled`.
	EventTypes pulumi.StringArrayInput
	// The name of the endpoint
	Name pulumi.StringPtrInput
	// The webhook signing secret used to verify webhook requests.
	Secret pulumi.StringPtrInput
	// The slug of the endpoint
	Slug pulumi.StringPtrInput
	// The URL of the endpoint.
	Url pulumi.StringPtrInput
}

func (WebhooksEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*webhooksEndpointState)(nil)).Elem()
}

type webhooksEndpointArgs struct {
	Enabled *bool `pulumi:"enabled"`
	// Value must be one of `incident.created`, `incident.updated`, `incident.in_triage`, `incident.mitigated`, `incident.resolved`, `incident.cancelled`, `incident.deleted`, `incident.scheduled.created`, `incident.scheduled.updated`, `incident.scheduled.in_progress`, `incident.scheduled.completed`, `incident.scheduled.deleted`, `incident_post_mortem.created`, `incident_post_mortem.updated`, `incident_post_mortem.published`, `incident_post_mortem.deleted`, `alert.created`, `pulse.created`, `genius_workflow_run.queued`, `genius_workflow_run.started`, `genius_workflow_run.completed`, `genius_workflow_run.failed`, `genius_workflow_run.canceled`.
	EventTypes []string `pulumi:"eventTypes"`
	// The name of the endpoint
	Name *string `pulumi:"name"`
	// The webhook signing secret used to verify webhook requests.
	Secret *string `pulumi:"secret"`
	// The slug of the endpoint
	Slug *string `pulumi:"slug"`
	// The URL of the endpoint.
	Url string `pulumi:"url"`
}

// The set of arguments for constructing a WebhooksEndpoint resource.
type WebhooksEndpointArgs struct {
	Enabled pulumi.BoolPtrInput
	// Value must be one of `incident.created`, `incident.updated`, `incident.in_triage`, `incident.mitigated`, `incident.resolved`, `incident.cancelled`, `incident.deleted`, `incident.scheduled.created`, `incident.scheduled.updated`, `incident.scheduled.in_progress`, `incident.scheduled.completed`, `incident.scheduled.deleted`, `incident_post_mortem.created`, `incident_post_mortem.updated`, `incident_post_mortem.published`, `incident_post_mortem.deleted`, `alert.created`, `pulse.created`, `genius_workflow_run.queued`, `genius_workflow_run.started`, `genius_workflow_run.completed`, `genius_workflow_run.failed`, `genius_workflow_run.canceled`.
	EventTypes pulumi.StringArrayInput
	// The name of the endpoint
	Name pulumi.StringPtrInput
	// The webhook signing secret used to verify webhook requests.
	Secret pulumi.StringPtrInput
	// The slug of the endpoint
	Slug pulumi.StringPtrInput
	// The URL of the endpoint.
	Url pulumi.StringInput
}

func (WebhooksEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webhooksEndpointArgs)(nil)).Elem()
}

type WebhooksEndpointInput interface {
	pulumi.Input

	ToWebhooksEndpointOutput() WebhooksEndpointOutput
	ToWebhooksEndpointOutputWithContext(ctx context.Context) WebhooksEndpointOutput
}

func (*WebhooksEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhooksEndpoint)(nil)).Elem()
}

func (i *WebhooksEndpoint) ToWebhooksEndpointOutput() WebhooksEndpointOutput {
	return i.ToWebhooksEndpointOutputWithContext(context.Background())
}

func (i *WebhooksEndpoint) ToWebhooksEndpointOutputWithContext(ctx context.Context) WebhooksEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhooksEndpointOutput)
}

// WebhooksEndpointArrayInput is an input type that accepts WebhooksEndpointArray and WebhooksEndpointArrayOutput values.
// You can construct a concrete instance of `WebhooksEndpointArrayInput` via:
//
//	WebhooksEndpointArray{ WebhooksEndpointArgs{...} }
type WebhooksEndpointArrayInput interface {
	pulumi.Input

	ToWebhooksEndpointArrayOutput() WebhooksEndpointArrayOutput
	ToWebhooksEndpointArrayOutputWithContext(context.Context) WebhooksEndpointArrayOutput
}

type WebhooksEndpointArray []WebhooksEndpointInput

func (WebhooksEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebhooksEndpoint)(nil)).Elem()
}

func (i WebhooksEndpointArray) ToWebhooksEndpointArrayOutput() WebhooksEndpointArrayOutput {
	return i.ToWebhooksEndpointArrayOutputWithContext(context.Background())
}

func (i WebhooksEndpointArray) ToWebhooksEndpointArrayOutputWithContext(ctx context.Context) WebhooksEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhooksEndpointArrayOutput)
}

// WebhooksEndpointMapInput is an input type that accepts WebhooksEndpointMap and WebhooksEndpointMapOutput values.
// You can construct a concrete instance of `WebhooksEndpointMapInput` via:
//
//	WebhooksEndpointMap{ "key": WebhooksEndpointArgs{...} }
type WebhooksEndpointMapInput interface {
	pulumi.Input

	ToWebhooksEndpointMapOutput() WebhooksEndpointMapOutput
	ToWebhooksEndpointMapOutputWithContext(context.Context) WebhooksEndpointMapOutput
}

type WebhooksEndpointMap map[string]WebhooksEndpointInput

func (WebhooksEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebhooksEndpoint)(nil)).Elem()
}

func (i WebhooksEndpointMap) ToWebhooksEndpointMapOutput() WebhooksEndpointMapOutput {
	return i.ToWebhooksEndpointMapOutputWithContext(context.Background())
}

func (i WebhooksEndpointMap) ToWebhooksEndpointMapOutputWithContext(ctx context.Context) WebhooksEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhooksEndpointMapOutput)
}

type WebhooksEndpointOutput struct{ *pulumi.OutputState }

func (WebhooksEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhooksEndpoint)(nil)).Elem()
}

func (o WebhooksEndpointOutput) ToWebhooksEndpointOutput() WebhooksEndpointOutput {
	return o
}

func (o WebhooksEndpointOutput) ToWebhooksEndpointOutputWithContext(ctx context.Context) WebhooksEndpointOutput {
	return o
}

func (o WebhooksEndpointOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebhooksEndpoint) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Value must be one of `incident.created`, `incident.updated`, `incident.in_triage`, `incident.mitigated`, `incident.resolved`, `incident.cancelled`, `incident.deleted`, `incident.scheduled.created`, `incident.scheduled.updated`, `incident.scheduled.in_progress`, `incident.scheduled.completed`, `incident.scheduled.deleted`, `incident_post_mortem.created`, `incident_post_mortem.updated`, `incident_post_mortem.published`, `incident_post_mortem.deleted`, `alert.created`, `pulse.created`, `genius_workflow_run.queued`, `genius_workflow_run.started`, `genius_workflow_run.completed`, `genius_workflow_run.failed`, `genius_workflow_run.canceled`.
func (o WebhooksEndpointOutput) EventTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebhooksEndpoint) pulumi.StringArrayOutput { return v.EventTypes }).(pulumi.StringArrayOutput)
}

// The name of the endpoint
func (o WebhooksEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WebhooksEndpoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The webhook signing secret used to verify webhook requests.
func (o WebhooksEndpointOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v *WebhooksEndpoint) pulumi.StringOutput { return v.Secret }).(pulumi.StringOutput)
}

// The slug of the endpoint
func (o WebhooksEndpointOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v *WebhooksEndpoint) pulumi.StringOutput { return v.Slug }).(pulumi.StringOutput)
}

// The URL of the endpoint.
func (o WebhooksEndpointOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *WebhooksEndpoint) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type WebhooksEndpointArrayOutput struct{ *pulumi.OutputState }

func (WebhooksEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebhooksEndpoint)(nil)).Elem()
}

func (o WebhooksEndpointArrayOutput) ToWebhooksEndpointArrayOutput() WebhooksEndpointArrayOutput {
	return o
}

func (o WebhooksEndpointArrayOutput) ToWebhooksEndpointArrayOutputWithContext(ctx context.Context) WebhooksEndpointArrayOutput {
	return o
}

func (o WebhooksEndpointArrayOutput) Index(i pulumi.IntInput) WebhooksEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebhooksEndpoint {
		return vs[0].([]*WebhooksEndpoint)[vs[1].(int)]
	}).(WebhooksEndpointOutput)
}

type WebhooksEndpointMapOutput struct{ *pulumi.OutputState }

func (WebhooksEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebhooksEndpoint)(nil)).Elem()
}

func (o WebhooksEndpointMapOutput) ToWebhooksEndpointMapOutput() WebhooksEndpointMapOutput {
	return o
}

func (o WebhooksEndpointMapOutput) ToWebhooksEndpointMapOutputWithContext(ctx context.Context) WebhooksEndpointMapOutput {
	return o
}

func (o WebhooksEndpointMapOutput) MapIndex(k pulumi.StringInput) WebhooksEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebhooksEndpoint {
		return vs[0].(map[string]*WebhooksEndpoint)[vs[1].(string)]
	}).(WebhooksEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebhooksEndpointInput)(nil)).Elem(), &WebhooksEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhooksEndpointArrayInput)(nil)).Elem(), WebhooksEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhooksEndpointMapInput)(nil)).Elem(), WebhooksEndpointMap{})
	pulumi.RegisterOutputType(WebhooksEndpointOutput{})
	pulumi.RegisterOutputType(WebhooksEndpointArrayOutput{})
	pulumi.RegisterOutputType(WebhooksEndpointMapOutput{})
}
