// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "rootly:index/authorization:Authorization":
		r = &Authorization{}
	case "rootly:index/cause:Cause":
		r = &Cause{}
	case "rootly:index/customField:CustomField":
		r = &CustomField{}
	case "rootly:index/customFieldOption:CustomFieldOption":
		r = &CustomFieldOption{}
	case "rootly:index/customForm:CustomForm":
		r = &CustomForm{}
	case "rootly:index/dashboard:Dashboard":
		r = &Dashboard{}
	case "rootly:index/dashboardPanel:DashboardPanel":
		r = &DashboardPanel{}
	case "rootly:index/environment:Environment":
		r = &Environment{}
	case "rootly:index/escalationLevel:EscalationLevel":
		r = &EscalationLevel{}
	case "rootly:index/escalationPolicy:EscalationPolicy":
		r = &EscalationPolicy{}
	case "rootly:index/formField:FormField":
		r = &FormField{}
	case "rootly:index/formFieldOption:FormFieldOption":
		r = &FormFieldOption{}
	case "rootly:index/formFieldPlacement:FormFieldPlacement":
		r = &FormFieldPlacement{}
	case "rootly:index/formFieldPlacementCondition:FormFieldPlacementCondition":
		r = &FormFieldPlacementCondition{}
	case "rootly:index/formFieldPosition:FormFieldPosition":
		r = &FormFieldPosition{}
	case "rootly:index/formSet:FormSet":
		r = &FormSet{}
	case "rootly:index/formSetCondition:FormSetCondition":
		r = &FormSetCondition{}
	case "rootly:index/functionality:Functionality":
		r = &Functionality{}
	case "rootly:index/heartbeat:Heartbeat":
		r = &Heartbeat{}
	case "rootly:index/incidentPermissionSet:IncidentPermissionSet":
		r = &IncidentPermissionSet{}
	case "rootly:index/incidentPermissionSetBoolean:IncidentPermissionSetBoolean":
		r = &IncidentPermissionSetBoolean{}
	case "rootly:index/incidentPermissionSetResource:IncidentPermissionSetResource":
		r = &IncidentPermissionSetResource{}
	case "rootly:index/incidentRole:IncidentRole":
		r = &IncidentRole{}
	case "rootly:index/incidentRoleTask:IncidentRoleTask":
		r = &IncidentRoleTask{}
	case "rootly:index/incidentType:IncidentType":
		r = &IncidentType{}
	case "rootly:index/onCallShadow:OnCallShadow":
		r = &OnCallShadow{}
	case "rootly:index/overrideShift:OverrideShift":
		r = &OverrideShift{}
	case "rootly:index/playbook:Playbook":
		r = &Playbook{}
	case "rootly:index/playbookTask:PlaybookTask":
		r = &PlaybookTask{}
	case "rootly:index/postMortemTemplate:PostMortemTemplate":
		r = &PostMortemTemplate{}
	case "rootly:index/retrospectiveConfiguration:RetrospectiveConfiguration":
		r = &RetrospectiveConfiguration{}
	case "rootly:index/retrospectiveProcess:RetrospectiveProcess":
		r = &RetrospectiveProcess{}
	case "rootly:index/retrospectiveStep:RetrospectiveStep":
		r = &RetrospectiveStep{}
	case "rootly:index/role:Role":
		r = &Role{}
	case "rootly:index/schedule:Schedule":
		r = &Schedule{}
	case "rootly:index/scheduleRotation:ScheduleRotation":
		r = &ScheduleRotation{}
	case "rootly:index/scheduleRotationActiveDay:ScheduleRotationActiveDay":
		r = &ScheduleRotationActiveDay{}
	case "rootly:index/scheduleRotationUser:ScheduleRotationUser":
		r = &ScheduleRotationUser{}
	case "rootly:index/secret:Secret":
		r = &Secret{}
	case "rootly:index/service:Service":
		r = &Service{}
	case "rootly:index/severity:Severity":
		r = &Severity{}
	case "rootly:index/statusPage:StatusPage":
		r = &StatusPage{}
	case "rootly:index/statusPageTemplate:StatusPageTemplate":
		r = &StatusPageTemplate{}
	case "rootly:index/team:Team":
		r = &Team{}
	case "rootly:index/webhooksEndpoint:WebhooksEndpoint":
		r = &WebhooksEndpoint{}
	case "rootly:index/workflowActionItem:WorkflowActionItem":
		r = &WorkflowActionItem{}
	case "rootly:index/workflowAlert:WorkflowAlert":
		r = &WorkflowAlert{}
	case "rootly:index/workflowCustomFieldSelection:WorkflowCustomFieldSelection":
		r = &WorkflowCustomFieldSelection{}
	case "rootly:index/workflowFormFieldCondition:WorkflowFormFieldCondition":
		r = &WorkflowFormFieldCondition{}
	case "rootly:index/workflowGroup:WorkflowGroup":
		r = &WorkflowGroup{}
	case "rootly:index/workflowIncident:WorkflowIncident":
		r = &WorkflowIncident{}
	case "rootly:index/workflowPostMortem:WorkflowPostMortem":
		r = &WorkflowPostMortem{}
	case "rootly:index/workflowPulse:WorkflowPulse":
		r = &WorkflowPulse{}
	case "rootly:index/workflowSimple:WorkflowSimple":
		r = &WorkflowSimple{}
	case "rootly:index/workflowTaskAddActionItem:WorkflowTaskAddActionItem":
		r = &WorkflowTaskAddActionItem{}
	case "rootly:index/workflowTaskAddRole:WorkflowTaskAddRole":
		r = &WorkflowTaskAddRole{}
	case "rootly:index/workflowTaskAddSlackBookmark:WorkflowTaskAddSlackBookmark":
		r = &WorkflowTaskAddSlackBookmark{}
	case "rootly:index/workflowTaskAddTeam:WorkflowTaskAddTeam":
		r = &WorkflowTaskAddTeam{}
	case "rootly:index/workflowTaskAddToTimeline:WorkflowTaskAddToTimeline":
		r = &WorkflowTaskAddToTimeline{}
	case "rootly:index/workflowTaskArchiveSlackChannels:WorkflowTaskArchiveSlackChannels":
		r = &WorkflowTaskArchiveSlackChannels{}
	case "rootly:index/workflowTaskAttachDatadogDashboards:WorkflowTaskAttachDatadogDashboards":
		r = &WorkflowTaskAttachDatadogDashboards{}
	case "rootly:index/workflowTaskAutoAssignRoleOpsgenie:WorkflowTaskAutoAssignRoleOpsgenie":
		r = &WorkflowTaskAutoAssignRoleOpsgenie{}
	case "rootly:index/workflowTaskAutoAssignRolePagerduty:WorkflowTaskAutoAssignRolePagerduty":
		r = &WorkflowTaskAutoAssignRolePagerduty{}
	case "rootly:index/workflowTaskAutoAssignRoleRootly:WorkflowTaskAutoAssignRoleRootly":
		r = &WorkflowTaskAutoAssignRoleRootly{}
	case "rootly:index/workflowTaskAutoAssignRoleVictorOps:WorkflowTaskAutoAssignRoleVictorOps":
		r = &WorkflowTaskAutoAssignRoleVictorOps{}
	case "rootly:index/workflowTaskCallPeople:WorkflowTaskCallPeople":
		r = &WorkflowTaskCallPeople{}
	case "rootly:index/workflowTaskChangeSlackChannelPrivacy:WorkflowTaskChangeSlackChannelPrivacy":
		r = &WorkflowTaskChangeSlackChannelPrivacy{}
	case "rootly:index/workflowTaskCreateAirtableTableRecord:WorkflowTaskCreateAirtableTableRecord":
		r = &WorkflowTaskCreateAirtableTableRecord{}
	case "rootly:index/workflowTaskCreateAsanaSubtask:WorkflowTaskCreateAsanaSubtask":
		r = &WorkflowTaskCreateAsanaSubtask{}
	case "rootly:index/workflowTaskCreateAsanaTask:WorkflowTaskCreateAsanaTask":
		r = &WorkflowTaskCreateAsanaTask{}
	case "rootly:index/workflowTaskCreateClickupTask:WorkflowTaskCreateClickupTask":
		r = &WorkflowTaskCreateClickupTask{}
	case "rootly:index/workflowTaskCreateConfluencePage:WorkflowTaskCreateConfluencePage":
		r = &WorkflowTaskCreateConfluencePage{}
	case "rootly:index/workflowTaskCreateDatadogNotebook:WorkflowTaskCreateDatadogNotebook":
		r = &WorkflowTaskCreateDatadogNotebook{}
	case "rootly:index/workflowTaskCreateDropboxPaperPage:WorkflowTaskCreateDropboxPaperPage":
		r = &WorkflowTaskCreateDropboxPaperPage{}
	case "rootly:index/workflowTaskCreateGithubIssue:WorkflowTaskCreateGithubIssue":
		r = &WorkflowTaskCreateGithubIssue{}
	case "rootly:index/workflowTaskCreateGitlabIssue:WorkflowTaskCreateGitlabIssue":
		r = &WorkflowTaskCreateGitlabIssue{}
	case "rootly:index/workflowTaskCreateGoToMeeting:WorkflowTaskCreateGoToMeeting":
		r = &WorkflowTaskCreateGoToMeeting{}
	case "rootly:index/workflowTaskCreateGoogleCalendarEvent:WorkflowTaskCreateGoogleCalendarEvent":
		r = &WorkflowTaskCreateGoogleCalendarEvent{}
	case "rootly:index/workflowTaskCreateGoogleDocsPage:WorkflowTaskCreateGoogleDocsPage":
		r = &WorkflowTaskCreateGoogleDocsPage{}
	case "rootly:index/workflowTaskCreateGoogleDocsPermissions:WorkflowTaskCreateGoogleDocsPermissions":
		r = &WorkflowTaskCreateGoogleDocsPermissions{}
	case "rootly:index/workflowTaskCreateGoogleMeeting:WorkflowTaskCreateGoogleMeeting":
		r = &WorkflowTaskCreateGoogleMeeting{}
	case "rootly:index/workflowTaskCreateIncident:WorkflowTaskCreateIncident":
		r = &WorkflowTaskCreateIncident{}
	case "rootly:index/workflowTaskCreateIncidentPostmortem:WorkflowTaskCreateIncidentPostmortem":
		r = &WorkflowTaskCreateIncidentPostmortem{}
	case "rootly:index/workflowTaskCreateJiraIssue:WorkflowTaskCreateJiraIssue":
		r = &WorkflowTaskCreateJiraIssue{}
	case "rootly:index/workflowTaskCreateJiraSubtask:WorkflowTaskCreateJiraSubtask":
		r = &WorkflowTaskCreateJiraSubtask{}
	case "rootly:index/workflowTaskCreateLinearIssue:WorkflowTaskCreateLinearIssue":
		r = &WorkflowTaskCreateLinearIssue{}
	case "rootly:index/workflowTaskCreateLinearIssueComment:WorkflowTaskCreateLinearIssueComment":
		r = &WorkflowTaskCreateLinearIssueComment{}
	case "rootly:index/workflowTaskCreateLinearSubtaskIssue:WorkflowTaskCreateLinearSubtaskIssue":
		r = &WorkflowTaskCreateLinearSubtaskIssue{}
	case "rootly:index/workflowTaskCreateMicrosoftTeamsMeeting:WorkflowTaskCreateMicrosoftTeamsMeeting":
		r = &WorkflowTaskCreateMicrosoftTeamsMeeting{}
	case "rootly:index/workflowTaskCreateNotionPage:WorkflowTaskCreateNotionPage":
		r = &WorkflowTaskCreateNotionPage{}
	case "rootly:index/workflowTaskCreateOpsgenieAlert:WorkflowTaskCreateOpsgenieAlert":
		r = &WorkflowTaskCreateOpsgenieAlert{}
	case "rootly:index/workflowTaskCreateOutlookEvent:WorkflowTaskCreateOutlookEvent":
		r = &WorkflowTaskCreateOutlookEvent{}
	case "rootly:index/workflowTaskCreatePagerdutyStatusUpdate:WorkflowTaskCreatePagerdutyStatusUpdate":
		r = &WorkflowTaskCreatePagerdutyStatusUpdate{}
	case "rootly:index/workflowTaskCreatePagertreeAlert:WorkflowTaskCreatePagertreeAlert":
		r = &WorkflowTaskCreatePagertreeAlert{}
	case "rootly:index/workflowTaskCreateQuipPage:WorkflowTaskCreateQuipPage":
		r = &WorkflowTaskCreateQuipPage{}
	case "rootly:index/workflowTaskCreateServiceNowIncident:WorkflowTaskCreateServiceNowIncident":
		r = &WorkflowTaskCreateServiceNowIncident{}
	case "rootly:index/workflowTaskCreateSharepointPage:WorkflowTaskCreateSharepointPage":
		r = &WorkflowTaskCreateSharepointPage{}
	case "rootly:index/workflowTaskCreateShortcutStory:WorkflowTaskCreateShortcutStory":
		r = &WorkflowTaskCreateShortcutStory{}
	case "rootly:index/workflowTaskCreateShortcutTask:WorkflowTaskCreateShortcutTask":
		r = &WorkflowTaskCreateShortcutTask{}
	case "rootly:index/workflowTaskCreateSlackChannel:WorkflowTaskCreateSlackChannel":
		r = &WorkflowTaskCreateSlackChannel{}
	case "rootly:index/workflowTaskCreateTrelloCard:WorkflowTaskCreateTrelloCard":
		r = &WorkflowTaskCreateTrelloCard{}
	case "rootly:index/workflowTaskCreateWebexMeeting:WorkflowTaskCreateWebexMeeting":
		r = &WorkflowTaskCreateWebexMeeting{}
	case "rootly:index/workflowTaskCreateZendeskJiraLink:WorkflowTaskCreateZendeskJiraLink":
		r = &WorkflowTaskCreateZendeskJiraLink{}
	case "rootly:index/workflowTaskCreateZendeskTicket:WorkflowTaskCreateZendeskTicket":
		r = &WorkflowTaskCreateZendeskTicket{}
	case "rootly:index/workflowTaskCreateZoomMeeting:WorkflowTaskCreateZoomMeeting":
		r = &WorkflowTaskCreateZoomMeeting{}
	case "rootly:index/workflowTaskGetAlerts:WorkflowTaskGetAlerts":
		r = &WorkflowTaskGetAlerts{}
	case "rootly:index/workflowTaskGetGithubCommits:WorkflowTaskGetGithubCommits":
		r = &WorkflowTaskGetGithubCommits{}
	case "rootly:index/workflowTaskGetGitlabCommits:WorkflowTaskGetGitlabCommits":
		r = &WorkflowTaskGetGitlabCommits{}
	case "rootly:index/workflowTaskGetPulses:WorkflowTaskGetPulses":
		r = &WorkflowTaskGetPulses{}
	case "rootly:index/workflowTaskHttpClient:WorkflowTaskHttpClient":
		r = &WorkflowTaskHttpClient{}
	case "rootly:index/workflowTaskInviteToSlackChannel:WorkflowTaskInviteToSlackChannel":
		r = &WorkflowTaskInviteToSlackChannel{}
	case "rootly:index/workflowTaskInviteToSlackChannelOpsgenie:WorkflowTaskInviteToSlackChannelOpsgenie":
		r = &WorkflowTaskInviteToSlackChannelOpsgenie{}
	case "rootly:index/workflowTaskInviteToSlackChannelPagerduty:WorkflowTaskInviteToSlackChannelPagerduty":
		r = &WorkflowTaskInviteToSlackChannelPagerduty{}
	case "rootly:index/workflowTaskInviteToSlackChannelRootly:WorkflowTaskInviteToSlackChannelRootly":
		r = &WorkflowTaskInviteToSlackChannelRootly{}
	case "rootly:index/workflowTaskInviteToSlackChannelVictorOps:WorkflowTaskInviteToSlackChannelVictorOps":
		r = &WorkflowTaskInviteToSlackChannelVictorOps{}
	case "rootly:index/workflowTaskPageOpsgenieOnCallResponders:WorkflowTaskPageOpsgenieOnCallResponders":
		r = &WorkflowTaskPageOpsgenieOnCallResponders{}
	case "rootly:index/workflowTaskPagePagerdutyOnCallResponders:WorkflowTaskPagePagerdutyOnCallResponders":
		r = &WorkflowTaskPagePagerdutyOnCallResponders{}
	case "rootly:index/workflowTaskPageRootlyOnCallResponders:WorkflowTaskPageRootlyOnCallResponders":
		r = &WorkflowTaskPageRootlyOnCallResponders{}
	case "rootly:index/workflowTaskPageVictorOpsOnCallResponders:WorkflowTaskPageVictorOpsOnCallResponders":
		r = &WorkflowTaskPageVictorOpsOnCallResponders{}
	case "rootly:index/workflowTaskPrint:WorkflowTaskPrint":
		r = &WorkflowTaskPrint{}
	case "rootly:index/workflowTaskPublishIncident:WorkflowTaskPublishIncident":
		r = &WorkflowTaskPublishIncident{}
	case "rootly:index/workflowTaskRedisClient:WorkflowTaskRedisClient":
		r = &WorkflowTaskRedisClient{}
	case "rootly:index/workflowTaskRemoveGoogleDocsPermissions:WorkflowTaskRemoveGoogleDocsPermissions":
		r = &WorkflowTaskRemoveGoogleDocsPermissions{}
	case "rootly:index/workflowTaskRenameSlackChannel:WorkflowTaskRenameSlackChannel":
		r = &WorkflowTaskRenameSlackChannel{}
	case "rootly:index/workflowTaskRunCommandHeroku:WorkflowTaskRunCommandHeroku":
		r = &WorkflowTaskRunCommandHeroku{}
	case "rootly:index/workflowTaskSendDashboardReport:WorkflowTaskSendDashboardReport":
		r = &WorkflowTaskSendDashboardReport{}
	case "rootly:index/workflowTaskSendEmail:WorkflowTaskSendEmail":
		r = &WorkflowTaskSendEmail{}
	case "rootly:index/workflowTaskSendSlackBlocks:WorkflowTaskSendSlackBlocks":
		r = &WorkflowTaskSendSlackBlocks{}
	case "rootly:index/workflowTaskSendSlackMessage:WorkflowTaskSendSlackMessage":
		r = &WorkflowTaskSendSlackMessage{}
	case "rootly:index/workflowTaskSendSms:WorkflowTaskSendSms":
		r = &WorkflowTaskSendSms{}
	case "rootly:index/workflowTaskSendWhatsappMessage:WorkflowTaskSendWhatsappMessage":
		r = &WorkflowTaskSendWhatsappMessage{}
	case "rootly:index/workflowTaskSnapshotDatadogGraph:WorkflowTaskSnapshotDatadogGraph":
		r = &WorkflowTaskSnapshotDatadogGraph{}
	case "rootly:index/workflowTaskSnapshotGrafanaDashboard:WorkflowTaskSnapshotGrafanaDashboard":
		r = &WorkflowTaskSnapshotGrafanaDashboard{}
	case "rootly:index/workflowTaskSnapshotLookerLook:WorkflowTaskSnapshotLookerLook":
		r = &WorkflowTaskSnapshotLookerLook{}
	case "rootly:index/workflowTaskSnapshotNewRelicGraph:WorkflowTaskSnapshotNewRelicGraph":
		r = &WorkflowTaskSnapshotNewRelicGraph{}
	case "rootly:index/workflowTaskTriggerWorkflow:WorkflowTaskTriggerWorkflow":
		r = &WorkflowTaskTriggerWorkflow{}
	case "rootly:index/workflowTaskTweetTwitterMessage:WorkflowTaskTweetTwitterMessage":
		r = &WorkflowTaskTweetTwitterMessage{}
	case "rootly:index/workflowTaskUpdateActionItem:WorkflowTaskUpdateActionItem":
		r = &WorkflowTaskUpdateActionItem{}
	case "rootly:index/workflowTaskUpdateAirtableTableRecord:WorkflowTaskUpdateAirtableTableRecord":
		r = &WorkflowTaskUpdateAirtableTableRecord{}
	case "rootly:index/workflowTaskUpdateAsanaTask:WorkflowTaskUpdateAsanaTask":
		r = &WorkflowTaskUpdateAsanaTask{}
	case "rootly:index/workflowTaskUpdateAttachedAlerts:WorkflowTaskUpdateAttachedAlerts":
		r = &WorkflowTaskUpdateAttachedAlerts{}
	case "rootly:index/workflowTaskUpdateClickupTask:WorkflowTaskUpdateClickupTask":
		r = &WorkflowTaskUpdateClickupTask{}
	case "rootly:index/workflowTaskUpdateGithubIssue:WorkflowTaskUpdateGithubIssue":
		r = &WorkflowTaskUpdateGithubIssue{}
	case "rootly:index/workflowTaskUpdateGitlabIssue:WorkflowTaskUpdateGitlabIssue":
		r = &WorkflowTaskUpdateGitlabIssue{}
	case "rootly:index/workflowTaskUpdateGoogleCalendarEvent:WorkflowTaskUpdateGoogleCalendarEvent":
		r = &WorkflowTaskUpdateGoogleCalendarEvent{}
	case "rootly:index/workflowTaskUpdateGoogleDocsPage:WorkflowTaskUpdateGoogleDocsPage":
		r = &WorkflowTaskUpdateGoogleDocsPage{}
	case "rootly:index/workflowTaskUpdateIncident:WorkflowTaskUpdateIncident":
		r = &WorkflowTaskUpdateIncident{}
	case "rootly:index/workflowTaskUpdateIncidentPostmortem:WorkflowTaskUpdateIncidentPostmortem":
		r = &WorkflowTaskUpdateIncidentPostmortem{}
	case "rootly:index/workflowTaskUpdateJiraIssue:WorkflowTaskUpdateJiraIssue":
		r = &WorkflowTaskUpdateJiraIssue{}
	case "rootly:index/workflowTaskUpdateLinearIssue:WorkflowTaskUpdateLinearIssue":
		r = &WorkflowTaskUpdateLinearIssue{}
	case "rootly:index/workflowTaskUpdateNotionPage:WorkflowTaskUpdateNotionPage":
		r = &WorkflowTaskUpdateNotionPage{}
	case "rootly:index/workflowTaskUpdateOpsgenieAlert:WorkflowTaskUpdateOpsgenieAlert":
		r = &WorkflowTaskUpdateOpsgenieAlert{}
	case "rootly:index/workflowTaskUpdateOpsgenieIncident:WorkflowTaskUpdateOpsgenieIncident":
		r = &WorkflowTaskUpdateOpsgenieIncident{}
	case "rootly:index/workflowTaskUpdatePagerdutyIncident:WorkflowTaskUpdatePagerdutyIncident":
		r = &WorkflowTaskUpdatePagerdutyIncident{}
	case "rootly:index/workflowTaskUpdatePagertreeAlert:WorkflowTaskUpdatePagertreeAlert":
		r = &WorkflowTaskUpdatePagertreeAlert{}
	case "rootly:index/workflowTaskUpdateServiceNowIncident:WorkflowTaskUpdateServiceNowIncident":
		r = &WorkflowTaskUpdateServiceNowIncident{}
	case "rootly:index/workflowTaskUpdateShortcutStory:WorkflowTaskUpdateShortcutStory":
		r = &WorkflowTaskUpdateShortcutStory{}
	case "rootly:index/workflowTaskUpdateShortcutTask:WorkflowTaskUpdateShortcutTask":
		r = &WorkflowTaskUpdateShortcutTask{}
	case "rootly:index/workflowTaskUpdateSlackChannelTopic:WorkflowTaskUpdateSlackChannelTopic":
		r = &WorkflowTaskUpdateSlackChannelTopic{}
	case "rootly:index/workflowTaskUpdateStatus:WorkflowTaskUpdateStatus":
		r = &WorkflowTaskUpdateStatus{}
	case "rootly:index/workflowTaskUpdateTrelloCard:WorkflowTaskUpdateTrelloCard":
		r = &WorkflowTaskUpdateTrelloCard{}
	case "rootly:index/workflowTaskUpdateVictorOpsIncident:WorkflowTaskUpdateVictorOpsIncident":
		r = &WorkflowTaskUpdateVictorOpsIncident{}
	case "rootly:index/workflowTaskUpdateZendeskTicket:WorkflowTaskUpdateZendeskTicket":
		r = &WorkflowTaskUpdateZendeskTicket{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:rootly" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"rootly",
		"index/authorization",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/cause",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/customField",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/customFieldOption",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/customForm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/dashboard",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/dashboardPanel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/environment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/escalationLevel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/escalationPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/formField",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/formFieldOption",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/formFieldPlacement",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/formFieldPlacementCondition",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/formFieldPosition",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/formSet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/formSetCondition",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/functionality",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/heartbeat",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/incidentPermissionSet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/incidentPermissionSetBoolean",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/incidentPermissionSetResource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/incidentRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/incidentRoleTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/incidentType",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/onCallShadow",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/overrideShift",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/playbook",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/playbookTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/postMortemTemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/retrospectiveConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/retrospectiveProcess",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/retrospectiveStep",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/role",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/schedule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/scheduleRotation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/scheduleRotationActiveDay",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/scheduleRotationUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/secret",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/service",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/severity",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/statusPage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/statusPageTemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/team",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/webhooksEndpoint",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowActionItem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowAlert",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowCustomFieldSelection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowFormFieldCondition",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowIncident",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowPostMortem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowPulse",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowSimple",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskAddActionItem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskAddRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskAddSlackBookmark",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskAddTeam",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskAddToTimeline",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskArchiveSlackChannels",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskAttachDatadogDashboards",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskAutoAssignRoleOpsgenie",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskAutoAssignRolePagerduty",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskAutoAssignRoleRootly",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskAutoAssignRoleVictorOps",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCallPeople",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskChangeSlackChannelPrivacy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateAirtableTableRecord",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateAsanaSubtask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateAsanaTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateClickupTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateConfluencePage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateDatadogNotebook",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateDropboxPaperPage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateGithubIssue",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateGitlabIssue",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateGoToMeeting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateGoogleCalendarEvent",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateGoogleDocsPage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateGoogleDocsPermissions",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateGoogleMeeting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateIncident",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateIncidentPostmortem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateJiraIssue",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateJiraSubtask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateLinearIssue",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateLinearIssueComment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateLinearSubtaskIssue",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateMicrosoftTeamsMeeting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateNotionPage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateOpsgenieAlert",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateOutlookEvent",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreatePagerdutyStatusUpdate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreatePagertreeAlert",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateQuipPage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateServiceNowIncident",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateSharepointPage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateShortcutStory",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateShortcutTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateSlackChannel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateTrelloCard",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateWebexMeeting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateZendeskJiraLink",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateZendeskTicket",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskCreateZoomMeeting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskGetAlerts",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskGetGithubCommits",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskGetGitlabCommits",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskGetPulses",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskHttpClient",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskInviteToSlackChannel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskInviteToSlackChannelOpsgenie",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskInviteToSlackChannelPagerduty",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskInviteToSlackChannelRootly",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskInviteToSlackChannelVictorOps",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskPageOpsgenieOnCallResponders",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskPagePagerdutyOnCallResponders",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskPageRootlyOnCallResponders",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskPageVictorOpsOnCallResponders",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskPrint",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskPublishIncident",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskRedisClient",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskRemoveGoogleDocsPermissions",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskRenameSlackChannel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskRunCommandHeroku",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskSendDashboardReport",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskSendEmail",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskSendSlackBlocks",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskSendSlackMessage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskSendSms",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskSendWhatsappMessage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskSnapshotDatadogGraph",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskSnapshotGrafanaDashboard",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskSnapshotLookerLook",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskSnapshotNewRelicGraph",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskTriggerWorkflow",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskTweetTwitterMessage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateActionItem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateAirtableTableRecord",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateAsanaTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateAttachedAlerts",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateClickupTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateGithubIssue",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateGitlabIssue",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateGoogleCalendarEvent",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateGoogleDocsPage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateIncident",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateIncidentPostmortem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateJiraIssue",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateLinearIssue",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateNotionPage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateOpsgenieAlert",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateOpsgenieIncident",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdatePagerdutyIncident",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdatePagertreeAlert",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateServiceNowIncident",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateShortcutStory",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateShortcutTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateSlackChannelTopic",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateStatus",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateTrelloCard",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateVictorOpsIncident",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"rootly",
		"index/workflowTaskUpdateZendeskTicket",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"rootly",
		&pkg{version},
	)
}
