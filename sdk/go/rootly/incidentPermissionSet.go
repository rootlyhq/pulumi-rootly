// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

type IncidentPermissionSet struct {
	pulumi.CustomResourceState

	// The incident permission set description.
	Description pulumi.StringOutput `pulumi:"description"`
	// The incident permission set name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Value must be one of `create`, `read`, `update`, `delete`.
	PrivateIncidentPermissions pulumi.StringArrayOutput `pulumi:"privateIncidentPermissions"`
	// Value must be one of `create`, `read`, `update`, `delete`.
	PublicIncidentPermissions pulumi.StringArrayOutput `pulumi:"publicIncidentPermissions"`
	// The incident permission set slug.
	Slug pulumi.StringOutput `pulumi:"slug"`
}

// NewIncidentPermissionSet registers a new resource with the given unique name, arguments, and options.
func NewIncidentPermissionSet(ctx *pulumi.Context,
	name string, args *IncidentPermissionSetArgs, opts ...pulumi.ResourceOption) (*IncidentPermissionSet, error) {
	if args == nil {
		args = &IncidentPermissionSetArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IncidentPermissionSet
	err := ctx.RegisterResource("rootly:index/incidentPermissionSet:IncidentPermissionSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIncidentPermissionSet gets an existing IncidentPermissionSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIncidentPermissionSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IncidentPermissionSetState, opts ...pulumi.ResourceOption) (*IncidentPermissionSet, error) {
	var resource IncidentPermissionSet
	err := ctx.ReadResource("rootly:index/incidentPermissionSet:IncidentPermissionSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IncidentPermissionSet resources.
type incidentPermissionSetState struct {
	// The incident permission set description.
	Description *string `pulumi:"description"`
	// The incident permission set name.
	Name *string `pulumi:"name"`
	// Value must be one of `create`, `read`, `update`, `delete`.
	PrivateIncidentPermissions []string `pulumi:"privateIncidentPermissions"`
	// Value must be one of `create`, `read`, `update`, `delete`.
	PublicIncidentPermissions []string `pulumi:"publicIncidentPermissions"`
	// The incident permission set slug.
	Slug *string `pulumi:"slug"`
}

type IncidentPermissionSetState struct {
	// The incident permission set description.
	Description pulumi.StringPtrInput
	// The incident permission set name.
	Name pulumi.StringPtrInput
	// Value must be one of `create`, `read`, `update`, `delete`.
	PrivateIncidentPermissions pulumi.StringArrayInput
	// Value must be one of `create`, `read`, `update`, `delete`.
	PublicIncidentPermissions pulumi.StringArrayInput
	// The incident permission set slug.
	Slug pulumi.StringPtrInput
}

func (IncidentPermissionSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*incidentPermissionSetState)(nil)).Elem()
}

type incidentPermissionSetArgs struct {
	// The incident permission set description.
	Description *string `pulumi:"description"`
	// The incident permission set name.
	Name *string `pulumi:"name"`
	// Value must be one of `create`, `read`, `update`, `delete`.
	PrivateIncidentPermissions []string `pulumi:"privateIncidentPermissions"`
	// Value must be one of `create`, `read`, `update`, `delete`.
	PublicIncidentPermissions []string `pulumi:"publicIncidentPermissions"`
	// The incident permission set slug.
	Slug *string `pulumi:"slug"`
}

// The set of arguments for constructing a IncidentPermissionSet resource.
type IncidentPermissionSetArgs struct {
	// The incident permission set description.
	Description pulumi.StringPtrInput
	// The incident permission set name.
	Name pulumi.StringPtrInput
	// Value must be one of `create`, `read`, `update`, `delete`.
	PrivateIncidentPermissions pulumi.StringArrayInput
	// Value must be one of `create`, `read`, `update`, `delete`.
	PublicIncidentPermissions pulumi.StringArrayInput
	// The incident permission set slug.
	Slug pulumi.StringPtrInput
}

func (IncidentPermissionSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*incidentPermissionSetArgs)(nil)).Elem()
}

type IncidentPermissionSetInput interface {
	pulumi.Input

	ToIncidentPermissionSetOutput() IncidentPermissionSetOutput
	ToIncidentPermissionSetOutputWithContext(ctx context.Context) IncidentPermissionSetOutput
}

func (*IncidentPermissionSet) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentPermissionSet)(nil)).Elem()
}

func (i *IncidentPermissionSet) ToIncidentPermissionSetOutput() IncidentPermissionSetOutput {
	return i.ToIncidentPermissionSetOutputWithContext(context.Background())
}

func (i *IncidentPermissionSet) ToIncidentPermissionSetOutputWithContext(ctx context.Context) IncidentPermissionSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentPermissionSetOutput)
}

// IncidentPermissionSetArrayInput is an input type that accepts IncidentPermissionSetArray and IncidentPermissionSetArrayOutput values.
// You can construct a concrete instance of `IncidentPermissionSetArrayInput` via:
//
//	IncidentPermissionSetArray{ IncidentPermissionSetArgs{...} }
type IncidentPermissionSetArrayInput interface {
	pulumi.Input

	ToIncidentPermissionSetArrayOutput() IncidentPermissionSetArrayOutput
	ToIncidentPermissionSetArrayOutputWithContext(context.Context) IncidentPermissionSetArrayOutput
}

type IncidentPermissionSetArray []IncidentPermissionSetInput

func (IncidentPermissionSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IncidentPermissionSet)(nil)).Elem()
}

func (i IncidentPermissionSetArray) ToIncidentPermissionSetArrayOutput() IncidentPermissionSetArrayOutput {
	return i.ToIncidentPermissionSetArrayOutputWithContext(context.Background())
}

func (i IncidentPermissionSetArray) ToIncidentPermissionSetArrayOutputWithContext(ctx context.Context) IncidentPermissionSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentPermissionSetArrayOutput)
}

// IncidentPermissionSetMapInput is an input type that accepts IncidentPermissionSetMap and IncidentPermissionSetMapOutput values.
// You can construct a concrete instance of `IncidentPermissionSetMapInput` via:
//
//	IncidentPermissionSetMap{ "key": IncidentPermissionSetArgs{...} }
type IncidentPermissionSetMapInput interface {
	pulumi.Input

	ToIncidentPermissionSetMapOutput() IncidentPermissionSetMapOutput
	ToIncidentPermissionSetMapOutputWithContext(context.Context) IncidentPermissionSetMapOutput
}

type IncidentPermissionSetMap map[string]IncidentPermissionSetInput

func (IncidentPermissionSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IncidentPermissionSet)(nil)).Elem()
}

func (i IncidentPermissionSetMap) ToIncidentPermissionSetMapOutput() IncidentPermissionSetMapOutput {
	return i.ToIncidentPermissionSetMapOutputWithContext(context.Background())
}

func (i IncidentPermissionSetMap) ToIncidentPermissionSetMapOutputWithContext(ctx context.Context) IncidentPermissionSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentPermissionSetMapOutput)
}

type IncidentPermissionSetOutput struct{ *pulumi.OutputState }

func (IncidentPermissionSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentPermissionSet)(nil)).Elem()
}

func (o IncidentPermissionSetOutput) ToIncidentPermissionSetOutput() IncidentPermissionSetOutput {
	return o
}

func (o IncidentPermissionSetOutput) ToIncidentPermissionSetOutputWithContext(ctx context.Context) IncidentPermissionSetOutput {
	return o
}

// The incident permission set description.
func (o IncidentPermissionSetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *IncidentPermissionSet) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The incident permission set name.
func (o IncidentPermissionSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IncidentPermissionSet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Value must be one of `create`, `read`, `update`, `delete`.
func (o IncidentPermissionSetOutput) PrivateIncidentPermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IncidentPermissionSet) pulumi.StringArrayOutput { return v.PrivateIncidentPermissions }).(pulumi.StringArrayOutput)
}

// Value must be one of `create`, `read`, `update`, `delete`.
func (o IncidentPermissionSetOutput) PublicIncidentPermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IncidentPermissionSet) pulumi.StringArrayOutput { return v.PublicIncidentPermissions }).(pulumi.StringArrayOutput)
}

// The incident permission set slug.
func (o IncidentPermissionSetOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v *IncidentPermissionSet) pulumi.StringOutput { return v.Slug }).(pulumi.StringOutput)
}

type IncidentPermissionSetArrayOutput struct{ *pulumi.OutputState }

func (IncidentPermissionSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IncidentPermissionSet)(nil)).Elem()
}

func (o IncidentPermissionSetArrayOutput) ToIncidentPermissionSetArrayOutput() IncidentPermissionSetArrayOutput {
	return o
}

func (o IncidentPermissionSetArrayOutput) ToIncidentPermissionSetArrayOutputWithContext(ctx context.Context) IncidentPermissionSetArrayOutput {
	return o
}

func (o IncidentPermissionSetArrayOutput) Index(i pulumi.IntInput) IncidentPermissionSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IncidentPermissionSet {
		return vs[0].([]*IncidentPermissionSet)[vs[1].(int)]
	}).(IncidentPermissionSetOutput)
}

type IncidentPermissionSetMapOutput struct{ *pulumi.OutputState }

func (IncidentPermissionSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IncidentPermissionSet)(nil)).Elem()
}

func (o IncidentPermissionSetMapOutput) ToIncidentPermissionSetMapOutput() IncidentPermissionSetMapOutput {
	return o
}

func (o IncidentPermissionSetMapOutput) ToIncidentPermissionSetMapOutputWithContext(ctx context.Context) IncidentPermissionSetMapOutput {
	return o
}

func (o IncidentPermissionSetMapOutput) MapIndex(k pulumi.StringInput) IncidentPermissionSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IncidentPermissionSet {
		return vs[0].(map[string]*IncidentPermissionSet)[vs[1].(string)]
	}).(IncidentPermissionSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IncidentPermissionSetInput)(nil)).Elem(), &IncidentPermissionSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*IncidentPermissionSetArrayInput)(nil)).Elem(), IncidentPermissionSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IncidentPermissionSetMapInput)(nil)).Elem(), IncidentPermissionSetMap{})
	pulumi.RegisterOutputType(IncidentPermissionSetOutput{})
	pulumi.RegisterOutputType(IncidentPermissionSetArrayOutput{})
	pulumi.RegisterOutputType(IncidentPermissionSetMapOutput{})
}
