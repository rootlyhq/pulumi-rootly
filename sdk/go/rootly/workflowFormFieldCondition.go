// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

type WorkflowFormFieldCondition struct {
	pulumi.CustomResourceState

	// The custom field for this condition
	FormFieldId pulumi.StringOutput `pulumi:"formFieldId"`
	// The trigger condition. Value must be one of `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentCondition pulumi.StringPtrOutput   `pulumi:"incidentCondition"`
	SelectedOptionIds pulumi.StringArrayOutput `pulumi:"selectedOptionIds"`
	SelectedUserIds   pulumi.IntArrayOutput    `pulumi:"selectedUserIds"`
	Values            pulumi.StringArrayOutput `pulumi:"values"`
	// The workflow for this condition
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowFormFieldCondition registers a new resource with the given unique name, arguments, and options.
func NewWorkflowFormFieldCondition(ctx *pulumi.Context,
	name string, args *WorkflowFormFieldConditionArgs, opts ...pulumi.ResourceOption) (*WorkflowFormFieldCondition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FormFieldId == nil {
		return nil, errors.New("invalid value for required argument 'FormFieldId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowFormFieldCondition
	err := ctx.RegisterResource("rootly:index/workflowFormFieldCondition:WorkflowFormFieldCondition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowFormFieldCondition gets an existing WorkflowFormFieldCondition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowFormFieldCondition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowFormFieldConditionState, opts ...pulumi.ResourceOption) (*WorkflowFormFieldCondition, error) {
	var resource WorkflowFormFieldCondition
	err := ctx.ReadResource("rootly:index/workflowFormFieldCondition:WorkflowFormFieldCondition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowFormFieldCondition resources.
type workflowFormFieldConditionState struct {
	// The custom field for this condition
	FormFieldId *string `pulumi:"formFieldId"`
	// The trigger condition. Value must be one of `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentCondition *string  `pulumi:"incidentCondition"`
	SelectedOptionIds []string `pulumi:"selectedOptionIds"`
	SelectedUserIds   []int    `pulumi:"selectedUserIds"`
	Values            []string `pulumi:"values"`
	// The workflow for this condition
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowFormFieldConditionState struct {
	// The custom field for this condition
	FormFieldId pulumi.StringPtrInput
	// The trigger condition. Value must be one of `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentCondition pulumi.StringPtrInput
	SelectedOptionIds pulumi.StringArrayInput
	SelectedUserIds   pulumi.IntArrayInput
	Values            pulumi.StringArrayInput
	// The workflow for this condition
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowFormFieldConditionState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowFormFieldConditionState)(nil)).Elem()
}

type workflowFormFieldConditionArgs struct {
	// The custom field for this condition
	FormFieldId string `pulumi:"formFieldId"`
	// The trigger condition. Value must be one of `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentCondition *string  `pulumi:"incidentCondition"`
	SelectedOptionIds []string `pulumi:"selectedOptionIds"`
	SelectedUserIds   []int    `pulumi:"selectedUserIds"`
	Values            []string `pulumi:"values"`
	// The workflow for this condition
	WorkflowId *string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowFormFieldCondition resource.
type WorkflowFormFieldConditionArgs struct {
	// The custom field for this condition
	FormFieldId pulumi.StringInput
	// The trigger condition. Value must be one of `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
	IncidentCondition pulumi.StringPtrInput
	SelectedOptionIds pulumi.StringArrayInput
	SelectedUserIds   pulumi.IntArrayInput
	Values            pulumi.StringArrayInput
	// The workflow for this condition
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowFormFieldConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowFormFieldConditionArgs)(nil)).Elem()
}

type WorkflowFormFieldConditionInput interface {
	pulumi.Input

	ToWorkflowFormFieldConditionOutput() WorkflowFormFieldConditionOutput
	ToWorkflowFormFieldConditionOutputWithContext(ctx context.Context) WorkflowFormFieldConditionOutput
}

func (*WorkflowFormFieldCondition) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowFormFieldCondition)(nil)).Elem()
}

func (i *WorkflowFormFieldCondition) ToWorkflowFormFieldConditionOutput() WorkflowFormFieldConditionOutput {
	return i.ToWorkflowFormFieldConditionOutputWithContext(context.Background())
}

func (i *WorkflowFormFieldCondition) ToWorkflowFormFieldConditionOutputWithContext(ctx context.Context) WorkflowFormFieldConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowFormFieldConditionOutput)
}

// WorkflowFormFieldConditionArrayInput is an input type that accepts WorkflowFormFieldConditionArray and WorkflowFormFieldConditionArrayOutput values.
// You can construct a concrete instance of `WorkflowFormFieldConditionArrayInput` via:
//
//	WorkflowFormFieldConditionArray{ WorkflowFormFieldConditionArgs{...} }
type WorkflowFormFieldConditionArrayInput interface {
	pulumi.Input

	ToWorkflowFormFieldConditionArrayOutput() WorkflowFormFieldConditionArrayOutput
	ToWorkflowFormFieldConditionArrayOutputWithContext(context.Context) WorkflowFormFieldConditionArrayOutput
}

type WorkflowFormFieldConditionArray []WorkflowFormFieldConditionInput

func (WorkflowFormFieldConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowFormFieldCondition)(nil)).Elem()
}

func (i WorkflowFormFieldConditionArray) ToWorkflowFormFieldConditionArrayOutput() WorkflowFormFieldConditionArrayOutput {
	return i.ToWorkflowFormFieldConditionArrayOutputWithContext(context.Background())
}

func (i WorkflowFormFieldConditionArray) ToWorkflowFormFieldConditionArrayOutputWithContext(ctx context.Context) WorkflowFormFieldConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowFormFieldConditionArrayOutput)
}

// WorkflowFormFieldConditionMapInput is an input type that accepts WorkflowFormFieldConditionMap and WorkflowFormFieldConditionMapOutput values.
// You can construct a concrete instance of `WorkflowFormFieldConditionMapInput` via:
//
//	WorkflowFormFieldConditionMap{ "key": WorkflowFormFieldConditionArgs{...} }
type WorkflowFormFieldConditionMapInput interface {
	pulumi.Input

	ToWorkflowFormFieldConditionMapOutput() WorkflowFormFieldConditionMapOutput
	ToWorkflowFormFieldConditionMapOutputWithContext(context.Context) WorkflowFormFieldConditionMapOutput
}

type WorkflowFormFieldConditionMap map[string]WorkflowFormFieldConditionInput

func (WorkflowFormFieldConditionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowFormFieldCondition)(nil)).Elem()
}

func (i WorkflowFormFieldConditionMap) ToWorkflowFormFieldConditionMapOutput() WorkflowFormFieldConditionMapOutput {
	return i.ToWorkflowFormFieldConditionMapOutputWithContext(context.Background())
}

func (i WorkflowFormFieldConditionMap) ToWorkflowFormFieldConditionMapOutputWithContext(ctx context.Context) WorkflowFormFieldConditionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowFormFieldConditionMapOutput)
}

type WorkflowFormFieldConditionOutput struct{ *pulumi.OutputState }

func (WorkflowFormFieldConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowFormFieldCondition)(nil)).Elem()
}

func (o WorkflowFormFieldConditionOutput) ToWorkflowFormFieldConditionOutput() WorkflowFormFieldConditionOutput {
	return o
}

func (o WorkflowFormFieldConditionOutput) ToWorkflowFormFieldConditionOutputWithContext(ctx context.Context) WorkflowFormFieldConditionOutput {
	return o
}

// The custom field for this condition
func (o WorkflowFormFieldConditionOutput) FormFieldId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowFormFieldCondition) pulumi.StringOutput { return v.FormFieldId }).(pulumi.StringOutput)
}

// The trigger condition. Value must be one of `IS`, `ANY`, `CONTAINS`, `CONTAINS_ALL`, `CONTAINS_NONE`, `NONE`, `SET`, `UNSET`.
func (o WorkflowFormFieldConditionOutput) IncidentCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowFormFieldCondition) pulumi.StringPtrOutput { return v.IncidentCondition }).(pulumi.StringPtrOutput)
}

func (o WorkflowFormFieldConditionOutput) SelectedOptionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowFormFieldCondition) pulumi.StringArrayOutput { return v.SelectedOptionIds }).(pulumi.StringArrayOutput)
}

func (o WorkflowFormFieldConditionOutput) SelectedUserIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *WorkflowFormFieldCondition) pulumi.IntArrayOutput { return v.SelectedUserIds }).(pulumi.IntArrayOutput)
}

func (o WorkflowFormFieldConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowFormFieldCondition) pulumi.StringArrayOutput { return v.Values }).(pulumi.StringArrayOutput)
}

// The workflow for this condition
func (o WorkflowFormFieldConditionOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowFormFieldCondition) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowFormFieldConditionArrayOutput struct{ *pulumi.OutputState }

func (WorkflowFormFieldConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowFormFieldCondition)(nil)).Elem()
}

func (o WorkflowFormFieldConditionArrayOutput) ToWorkflowFormFieldConditionArrayOutput() WorkflowFormFieldConditionArrayOutput {
	return o
}

func (o WorkflowFormFieldConditionArrayOutput) ToWorkflowFormFieldConditionArrayOutputWithContext(ctx context.Context) WorkflowFormFieldConditionArrayOutput {
	return o
}

func (o WorkflowFormFieldConditionArrayOutput) Index(i pulumi.IntInput) WorkflowFormFieldConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowFormFieldCondition {
		return vs[0].([]*WorkflowFormFieldCondition)[vs[1].(int)]
	}).(WorkflowFormFieldConditionOutput)
}

type WorkflowFormFieldConditionMapOutput struct{ *pulumi.OutputState }

func (WorkflowFormFieldConditionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowFormFieldCondition)(nil)).Elem()
}

func (o WorkflowFormFieldConditionMapOutput) ToWorkflowFormFieldConditionMapOutput() WorkflowFormFieldConditionMapOutput {
	return o
}

func (o WorkflowFormFieldConditionMapOutput) ToWorkflowFormFieldConditionMapOutputWithContext(ctx context.Context) WorkflowFormFieldConditionMapOutput {
	return o
}

func (o WorkflowFormFieldConditionMapOutput) MapIndex(k pulumi.StringInput) WorkflowFormFieldConditionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowFormFieldCondition {
		return vs[0].(map[string]*WorkflowFormFieldCondition)[vs[1].(string)]
	}).(WorkflowFormFieldConditionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowFormFieldConditionInput)(nil)).Elem(), &WorkflowFormFieldCondition{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowFormFieldConditionArrayInput)(nil)).Elem(), WorkflowFormFieldConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowFormFieldConditionMapInput)(nil)).Elem(), WorkflowFormFieldConditionMap{})
	pulumi.RegisterOutputType(WorkflowFormFieldConditionOutput{})
	pulumi.RegisterOutputType(WorkflowFormFieldConditionArrayOutput{})
	pulumi.RegisterOutputType(WorkflowFormFieldConditionMapOutput{})
}
