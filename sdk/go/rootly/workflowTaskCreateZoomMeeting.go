// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow createZoomMeeting task.
type WorkflowTaskCreateZoomMeeting struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateZoomMeetingTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskCreateZoomMeeting registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskCreateZoomMeeting(ctx *pulumi.Context,
	name string, args *WorkflowTaskCreateZoomMeetingArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateZoomMeeting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskCreateZoomMeeting
	err := ctx.RegisterResource("rootly:index/workflowTaskCreateZoomMeeting:WorkflowTaskCreateZoomMeeting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskCreateZoomMeeting gets an existing WorkflowTaskCreateZoomMeeting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskCreateZoomMeeting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskCreateZoomMeetingState, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateZoomMeeting, error) {
	var resource WorkflowTaskCreateZoomMeeting
	err := ctx.ReadResource("rootly:index/workflowTaskCreateZoomMeeting:WorkflowTaskCreateZoomMeeting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskCreateZoomMeeting resources.
type workflowTaskCreateZoomMeetingState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskCreateZoomMeetingTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskCreateZoomMeetingState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateZoomMeetingTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskCreateZoomMeetingState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateZoomMeetingState)(nil)).Elem()
}

type workflowTaskCreateZoomMeetingArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateZoomMeetingTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskCreateZoomMeeting resource.
type WorkflowTaskCreateZoomMeetingArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateZoomMeetingTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskCreateZoomMeetingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateZoomMeetingArgs)(nil)).Elem()
}

type WorkflowTaskCreateZoomMeetingInput interface {
	pulumi.Input

	ToWorkflowTaskCreateZoomMeetingOutput() WorkflowTaskCreateZoomMeetingOutput
	ToWorkflowTaskCreateZoomMeetingOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingOutput
}

func (*WorkflowTaskCreateZoomMeeting) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateZoomMeeting)(nil)).Elem()
}

func (i *WorkflowTaskCreateZoomMeeting) ToWorkflowTaskCreateZoomMeetingOutput() WorkflowTaskCreateZoomMeetingOutput {
	return i.ToWorkflowTaskCreateZoomMeetingOutputWithContext(context.Background())
}

func (i *WorkflowTaskCreateZoomMeeting) ToWorkflowTaskCreateZoomMeetingOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateZoomMeetingOutput)
}

// WorkflowTaskCreateZoomMeetingArrayInput is an input type that accepts WorkflowTaskCreateZoomMeetingArray and WorkflowTaskCreateZoomMeetingArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateZoomMeetingArrayInput` via:
//
//	WorkflowTaskCreateZoomMeetingArray{ WorkflowTaskCreateZoomMeetingArgs{...} }
type WorkflowTaskCreateZoomMeetingArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateZoomMeetingArrayOutput() WorkflowTaskCreateZoomMeetingArrayOutput
	ToWorkflowTaskCreateZoomMeetingArrayOutputWithContext(context.Context) WorkflowTaskCreateZoomMeetingArrayOutput
}

type WorkflowTaskCreateZoomMeetingArray []WorkflowTaskCreateZoomMeetingInput

func (WorkflowTaskCreateZoomMeetingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateZoomMeeting)(nil)).Elem()
}

func (i WorkflowTaskCreateZoomMeetingArray) ToWorkflowTaskCreateZoomMeetingArrayOutput() WorkflowTaskCreateZoomMeetingArrayOutput {
	return i.ToWorkflowTaskCreateZoomMeetingArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateZoomMeetingArray) ToWorkflowTaskCreateZoomMeetingArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateZoomMeetingArrayOutput)
}

// WorkflowTaskCreateZoomMeetingMapInput is an input type that accepts WorkflowTaskCreateZoomMeetingMap and WorkflowTaskCreateZoomMeetingMapOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateZoomMeetingMapInput` via:
//
//	WorkflowTaskCreateZoomMeetingMap{ "key": WorkflowTaskCreateZoomMeetingArgs{...} }
type WorkflowTaskCreateZoomMeetingMapInput interface {
	pulumi.Input

	ToWorkflowTaskCreateZoomMeetingMapOutput() WorkflowTaskCreateZoomMeetingMapOutput
	ToWorkflowTaskCreateZoomMeetingMapOutputWithContext(context.Context) WorkflowTaskCreateZoomMeetingMapOutput
}

type WorkflowTaskCreateZoomMeetingMap map[string]WorkflowTaskCreateZoomMeetingInput

func (WorkflowTaskCreateZoomMeetingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateZoomMeeting)(nil)).Elem()
}

func (i WorkflowTaskCreateZoomMeetingMap) ToWorkflowTaskCreateZoomMeetingMapOutput() WorkflowTaskCreateZoomMeetingMapOutput {
	return i.ToWorkflowTaskCreateZoomMeetingMapOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateZoomMeetingMap) ToWorkflowTaskCreateZoomMeetingMapOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateZoomMeetingMapOutput)
}

type WorkflowTaskCreateZoomMeetingOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateZoomMeetingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateZoomMeeting)(nil)).Elem()
}

func (o WorkflowTaskCreateZoomMeetingOutput) ToWorkflowTaskCreateZoomMeetingOutput() WorkflowTaskCreateZoomMeetingOutput {
	return o
}

func (o WorkflowTaskCreateZoomMeetingOutput) ToWorkflowTaskCreateZoomMeetingOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskCreateZoomMeetingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZoomMeeting) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskCreateZoomMeetingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZoomMeeting) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskCreateZoomMeetingOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZoomMeeting) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskCreateZoomMeetingOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZoomMeeting) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskCreateZoomMeetingOutput) TaskParams() WorkflowTaskCreateZoomMeetingTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZoomMeeting) WorkflowTaskCreateZoomMeetingTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskCreateZoomMeetingTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskCreateZoomMeetingOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateZoomMeeting) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskCreateZoomMeetingArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateZoomMeetingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateZoomMeeting)(nil)).Elem()
}

func (o WorkflowTaskCreateZoomMeetingArrayOutput) ToWorkflowTaskCreateZoomMeetingArrayOutput() WorkflowTaskCreateZoomMeetingArrayOutput {
	return o
}

func (o WorkflowTaskCreateZoomMeetingArrayOutput) ToWorkflowTaskCreateZoomMeetingArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingArrayOutput {
	return o
}

func (o WorkflowTaskCreateZoomMeetingArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateZoomMeetingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskCreateZoomMeeting {
		return vs[0].([]*WorkflowTaskCreateZoomMeeting)[vs[1].(int)]
	}).(WorkflowTaskCreateZoomMeetingOutput)
}

type WorkflowTaskCreateZoomMeetingMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateZoomMeetingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateZoomMeeting)(nil)).Elem()
}

func (o WorkflowTaskCreateZoomMeetingMapOutput) ToWorkflowTaskCreateZoomMeetingMapOutput() WorkflowTaskCreateZoomMeetingMapOutput {
	return o
}

func (o WorkflowTaskCreateZoomMeetingMapOutput) ToWorkflowTaskCreateZoomMeetingMapOutputWithContext(ctx context.Context) WorkflowTaskCreateZoomMeetingMapOutput {
	return o
}

func (o WorkflowTaskCreateZoomMeetingMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskCreateZoomMeetingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskCreateZoomMeeting {
		return vs[0].(map[string]*WorkflowTaskCreateZoomMeeting)[vs[1].(string)]
	}).(WorkflowTaskCreateZoomMeetingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateZoomMeetingInput)(nil)).Elem(), &WorkflowTaskCreateZoomMeeting{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateZoomMeetingArrayInput)(nil)).Elem(), WorkflowTaskCreateZoomMeetingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateZoomMeetingMapInput)(nil)).Elem(), WorkflowTaskCreateZoomMeetingMap{})
	pulumi.RegisterOutputType(WorkflowTaskCreateZoomMeetingOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateZoomMeetingArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateZoomMeetingMapOutput{})
}
