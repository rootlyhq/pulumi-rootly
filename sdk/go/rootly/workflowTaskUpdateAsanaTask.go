// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow updateAsanaTask task.
type WorkflowTaskUpdateAsanaTask struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateAsanaTaskTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskUpdateAsanaTask registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskUpdateAsanaTask(ctx *pulumi.Context,
	name string, args *WorkflowTaskUpdateAsanaTaskArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateAsanaTask, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskUpdateAsanaTask
	err := ctx.RegisterResource("rootly:index/workflowTaskUpdateAsanaTask:WorkflowTaskUpdateAsanaTask", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskUpdateAsanaTask gets an existing WorkflowTaskUpdateAsanaTask resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskUpdateAsanaTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskUpdateAsanaTaskState, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateAsanaTask, error) {
	var resource WorkflowTaskUpdateAsanaTask
	err := ctx.ReadResource("rootly:index/workflowTaskUpdateAsanaTask:WorkflowTaskUpdateAsanaTask", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskUpdateAsanaTask resources.
type workflowTaskUpdateAsanaTaskState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskUpdateAsanaTaskTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskUpdateAsanaTaskState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateAsanaTaskTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskUpdateAsanaTaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateAsanaTaskState)(nil)).Elem()
}

type workflowTaskUpdateAsanaTaskArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateAsanaTaskTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskUpdateAsanaTask resource.
type WorkflowTaskUpdateAsanaTaskArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateAsanaTaskTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskUpdateAsanaTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateAsanaTaskArgs)(nil)).Elem()
}

type WorkflowTaskUpdateAsanaTaskInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateAsanaTaskOutput() WorkflowTaskUpdateAsanaTaskOutput
	ToWorkflowTaskUpdateAsanaTaskOutputWithContext(ctx context.Context) WorkflowTaskUpdateAsanaTaskOutput
}

func (*WorkflowTaskUpdateAsanaTask) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateAsanaTask)(nil)).Elem()
}

func (i *WorkflowTaskUpdateAsanaTask) ToWorkflowTaskUpdateAsanaTaskOutput() WorkflowTaskUpdateAsanaTaskOutput {
	return i.ToWorkflowTaskUpdateAsanaTaskOutputWithContext(context.Background())
}

func (i *WorkflowTaskUpdateAsanaTask) ToWorkflowTaskUpdateAsanaTaskOutputWithContext(ctx context.Context) WorkflowTaskUpdateAsanaTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateAsanaTaskOutput)
}

// WorkflowTaskUpdateAsanaTaskArrayInput is an input type that accepts WorkflowTaskUpdateAsanaTaskArray and WorkflowTaskUpdateAsanaTaskArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateAsanaTaskArrayInput` via:
//
//	WorkflowTaskUpdateAsanaTaskArray{ WorkflowTaskUpdateAsanaTaskArgs{...} }
type WorkflowTaskUpdateAsanaTaskArrayInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateAsanaTaskArrayOutput() WorkflowTaskUpdateAsanaTaskArrayOutput
	ToWorkflowTaskUpdateAsanaTaskArrayOutputWithContext(context.Context) WorkflowTaskUpdateAsanaTaskArrayOutput
}

type WorkflowTaskUpdateAsanaTaskArray []WorkflowTaskUpdateAsanaTaskInput

func (WorkflowTaskUpdateAsanaTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateAsanaTask)(nil)).Elem()
}

func (i WorkflowTaskUpdateAsanaTaskArray) ToWorkflowTaskUpdateAsanaTaskArrayOutput() WorkflowTaskUpdateAsanaTaskArrayOutput {
	return i.ToWorkflowTaskUpdateAsanaTaskArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateAsanaTaskArray) ToWorkflowTaskUpdateAsanaTaskArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateAsanaTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateAsanaTaskArrayOutput)
}

// WorkflowTaskUpdateAsanaTaskMapInput is an input type that accepts WorkflowTaskUpdateAsanaTaskMap and WorkflowTaskUpdateAsanaTaskMapOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateAsanaTaskMapInput` via:
//
//	WorkflowTaskUpdateAsanaTaskMap{ "key": WorkflowTaskUpdateAsanaTaskArgs{...} }
type WorkflowTaskUpdateAsanaTaskMapInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateAsanaTaskMapOutput() WorkflowTaskUpdateAsanaTaskMapOutput
	ToWorkflowTaskUpdateAsanaTaskMapOutputWithContext(context.Context) WorkflowTaskUpdateAsanaTaskMapOutput
}

type WorkflowTaskUpdateAsanaTaskMap map[string]WorkflowTaskUpdateAsanaTaskInput

func (WorkflowTaskUpdateAsanaTaskMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateAsanaTask)(nil)).Elem()
}

func (i WorkflowTaskUpdateAsanaTaskMap) ToWorkflowTaskUpdateAsanaTaskMapOutput() WorkflowTaskUpdateAsanaTaskMapOutput {
	return i.ToWorkflowTaskUpdateAsanaTaskMapOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateAsanaTaskMap) ToWorkflowTaskUpdateAsanaTaskMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateAsanaTaskMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateAsanaTaskMapOutput)
}

type WorkflowTaskUpdateAsanaTaskOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateAsanaTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateAsanaTask)(nil)).Elem()
}

func (o WorkflowTaskUpdateAsanaTaskOutput) ToWorkflowTaskUpdateAsanaTaskOutput() WorkflowTaskUpdateAsanaTaskOutput {
	return o
}

func (o WorkflowTaskUpdateAsanaTaskOutput) ToWorkflowTaskUpdateAsanaTaskOutputWithContext(ctx context.Context) WorkflowTaskUpdateAsanaTaskOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskUpdateAsanaTaskOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTask) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskUpdateAsanaTaskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTask) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskUpdateAsanaTaskOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTask) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskUpdateAsanaTaskOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTask) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskUpdateAsanaTaskOutput) TaskParams() WorkflowTaskUpdateAsanaTaskTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTask) WorkflowTaskUpdateAsanaTaskTaskParamsOutput { return v.TaskParams }).(WorkflowTaskUpdateAsanaTaskTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskUpdateAsanaTaskOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateAsanaTask) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskUpdateAsanaTaskArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateAsanaTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateAsanaTask)(nil)).Elem()
}

func (o WorkflowTaskUpdateAsanaTaskArrayOutput) ToWorkflowTaskUpdateAsanaTaskArrayOutput() WorkflowTaskUpdateAsanaTaskArrayOutput {
	return o
}

func (o WorkflowTaskUpdateAsanaTaskArrayOutput) ToWorkflowTaskUpdateAsanaTaskArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateAsanaTaskArrayOutput {
	return o
}

func (o WorkflowTaskUpdateAsanaTaskArrayOutput) Index(i pulumi.IntInput) WorkflowTaskUpdateAsanaTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateAsanaTask {
		return vs[0].([]*WorkflowTaskUpdateAsanaTask)[vs[1].(int)]
	}).(WorkflowTaskUpdateAsanaTaskOutput)
}

type WorkflowTaskUpdateAsanaTaskMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateAsanaTaskMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateAsanaTask)(nil)).Elem()
}

func (o WorkflowTaskUpdateAsanaTaskMapOutput) ToWorkflowTaskUpdateAsanaTaskMapOutput() WorkflowTaskUpdateAsanaTaskMapOutput {
	return o
}

func (o WorkflowTaskUpdateAsanaTaskMapOutput) ToWorkflowTaskUpdateAsanaTaskMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateAsanaTaskMapOutput {
	return o
}

func (o WorkflowTaskUpdateAsanaTaskMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskUpdateAsanaTaskOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateAsanaTask {
		return vs[0].(map[string]*WorkflowTaskUpdateAsanaTask)[vs[1].(string)]
	}).(WorkflowTaskUpdateAsanaTaskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateAsanaTaskInput)(nil)).Elem(), &WorkflowTaskUpdateAsanaTask{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateAsanaTaskArrayInput)(nil)).Elem(), WorkflowTaskUpdateAsanaTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateAsanaTaskMapInput)(nil)).Elem(), WorkflowTaskUpdateAsanaTaskMap{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateAsanaTaskOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateAsanaTaskArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateAsanaTaskMapOutput{})
}
