// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow updateShortcutTask task.
type WorkflowTaskUpdateShortcutTask struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateShortcutTaskTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskUpdateShortcutTask registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskUpdateShortcutTask(ctx *pulumi.Context,
	name string, args *WorkflowTaskUpdateShortcutTaskArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateShortcutTask, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskUpdateShortcutTask
	err := ctx.RegisterResource("rootly:index/workflowTaskUpdateShortcutTask:WorkflowTaskUpdateShortcutTask", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskUpdateShortcutTask gets an existing WorkflowTaskUpdateShortcutTask resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskUpdateShortcutTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskUpdateShortcutTaskState, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateShortcutTask, error) {
	var resource WorkflowTaskUpdateShortcutTask
	err := ctx.ReadResource("rootly:index/workflowTaskUpdateShortcutTask:WorkflowTaskUpdateShortcutTask", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskUpdateShortcutTask resources.
type workflowTaskUpdateShortcutTaskState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskUpdateShortcutTaskTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskUpdateShortcutTaskState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateShortcutTaskTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskUpdateShortcutTaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateShortcutTaskState)(nil)).Elem()
}

type workflowTaskUpdateShortcutTaskArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateShortcutTaskTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskUpdateShortcutTask resource.
type WorkflowTaskUpdateShortcutTaskArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateShortcutTaskTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskUpdateShortcutTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateShortcutTaskArgs)(nil)).Elem()
}

type WorkflowTaskUpdateShortcutTaskInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateShortcutTaskOutput() WorkflowTaskUpdateShortcutTaskOutput
	ToWorkflowTaskUpdateShortcutTaskOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutTaskOutput
}

func (*WorkflowTaskUpdateShortcutTask) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateShortcutTask)(nil)).Elem()
}

func (i *WorkflowTaskUpdateShortcutTask) ToWorkflowTaskUpdateShortcutTaskOutput() WorkflowTaskUpdateShortcutTaskOutput {
	return i.ToWorkflowTaskUpdateShortcutTaskOutputWithContext(context.Background())
}

func (i *WorkflowTaskUpdateShortcutTask) ToWorkflowTaskUpdateShortcutTaskOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateShortcutTaskOutput)
}

// WorkflowTaskUpdateShortcutTaskArrayInput is an input type that accepts WorkflowTaskUpdateShortcutTaskArray and WorkflowTaskUpdateShortcutTaskArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateShortcutTaskArrayInput` via:
//
//	WorkflowTaskUpdateShortcutTaskArray{ WorkflowTaskUpdateShortcutTaskArgs{...} }
type WorkflowTaskUpdateShortcutTaskArrayInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateShortcutTaskArrayOutput() WorkflowTaskUpdateShortcutTaskArrayOutput
	ToWorkflowTaskUpdateShortcutTaskArrayOutputWithContext(context.Context) WorkflowTaskUpdateShortcutTaskArrayOutput
}

type WorkflowTaskUpdateShortcutTaskArray []WorkflowTaskUpdateShortcutTaskInput

func (WorkflowTaskUpdateShortcutTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateShortcutTask)(nil)).Elem()
}

func (i WorkflowTaskUpdateShortcutTaskArray) ToWorkflowTaskUpdateShortcutTaskArrayOutput() WorkflowTaskUpdateShortcutTaskArrayOutput {
	return i.ToWorkflowTaskUpdateShortcutTaskArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateShortcutTaskArray) ToWorkflowTaskUpdateShortcutTaskArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateShortcutTaskArrayOutput)
}

// WorkflowTaskUpdateShortcutTaskMapInput is an input type that accepts WorkflowTaskUpdateShortcutTaskMap and WorkflowTaskUpdateShortcutTaskMapOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateShortcutTaskMapInput` via:
//
//	WorkflowTaskUpdateShortcutTaskMap{ "key": WorkflowTaskUpdateShortcutTaskArgs{...} }
type WorkflowTaskUpdateShortcutTaskMapInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateShortcutTaskMapOutput() WorkflowTaskUpdateShortcutTaskMapOutput
	ToWorkflowTaskUpdateShortcutTaskMapOutputWithContext(context.Context) WorkflowTaskUpdateShortcutTaskMapOutput
}

type WorkflowTaskUpdateShortcutTaskMap map[string]WorkflowTaskUpdateShortcutTaskInput

func (WorkflowTaskUpdateShortcutTaskMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateShortcutTask)(nil)).Elem()
}

func (i WorkflowTaskUpdateShortcutTaskMap) ToWorkflowTaskUpdateShortcutTaskMapOutput() WorkflowTaskUpdateShortcutTaskMapOutput {
	return i.ToWorkflowTaskUpdateShortcutTaskMapOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateShortcutTaskMap) ToWorkflowTaskUpdateShortcutTaskMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutTaskMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateShortcutTaskMapOutput)
}

type WorkflowTaskUpdateShortcutTaskOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateShortcutTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateShortcutTask)(nil)).Elem()
}

func (o WorkflowTaskUpdateShortcutTaskOutput) ToWorkflowTaskUpdateShortcutTaskOutput() WorkflowTaskUpdateShortcutTaskOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutTaskOutput) ToWorkflowTaskUpdateShortcutTaskOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutTaskOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskUpdateShortcutTaskOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutTask) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskUpdateShortcutTaskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutTask) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskUpdateShortcutTaskOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutTask) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskUpdateShortcutTaskOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutTask) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskUpdateShortcutTaskOutput) TaskParams() WorkflowTaskUpdateShortcutTaskTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutTask) WorkflowTaskUpdateShortcutTaskTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskUpdateShortcutTaskTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskUpdateShortcutTaskOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateShortcutTask) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskUpdateShortcutTaskArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateShortcutTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateShortcutTask)(nil)).Elem()
}

func (o WorkflowTaskUpdateShortcutTaskArrayOutput) ToWorkflowTaskUpdateShortcutTaskArrayOutput() WorkflowTaskUpdateShortcutTaskArrayOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutTaskArrayOutput) ToWorkflowTaskUpdateShortcutTaskArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutTaskArrayOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutTaskArrayOutput) Index(i pulumi.IntInput) WorkflowTaskUpdateShortcutTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateShortcutTask {
		return vs[0].([]*WorkflowTaskUpdateShortcutTask)[vs[1].(int)]
	}).(WorkflowTaskUpdateShortcutTaskOutput)
}

type WorkflowTaskUpdateShortcutTaskMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateShortcutTaskMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateShortcutTask)(nil)).Elem()
}

func (o WorkflowTaskUpdateShortcutTaskMapOutput) ToWorkflowTaskUpdateShortcutTaskMapOutput() WorkflowTaskUpdateShortcutTaskMapOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutTaskMapOutput) ToWorkflowTaskUpdateShortcutTaskMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateShortcutTaskMapOutput {
	return o
}

func (o WorkflowTaskUpdateShortcutTaskMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskUpdateShortcutTaskOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateShortcutTask {
		return vs[0].(map[string]*WorkflowTaskUpdateShortcutTask)[vs[1].(string)]
	}).(WorkflowTaskUpdateShortcutTaskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateShortcutTaskInput)(nil)).Elem(), &WorkflowTaskUpdateShortcutTask{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateShortcutTaskArrayInput)(nil)).Elem(), WorkflowTaskUpdateShortcutTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateShortcutTaskMapInput)(nil)).Elem(), WorkflowTaskUpdateShortcutTaskMap{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateShortcutTaskOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateShortcutTaskArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateShortcutTaskMapOutput{})
}
