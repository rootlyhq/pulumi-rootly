// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow createIncidentPostmortem task.
type WorkflowTaskCreateIncidentPostmortem struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateIncidentPostmortemTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskCreateIncidentPostmortem registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskCreateIncidentPostmortem(ctx *pulumi.Context,
	name string, args *WorkflowTaskCreateIncidentPostmortemArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateIncidentPostmortem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskCreateIncidentPostmortem
	err := ctx.RegisterResource("rootly:index/workflowTaskCreateIncidentPostmortem:WorkflowTaskCreateIncidentPostmortem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskCreateIncidentPostmortem gets an existing WorkflowTaskCreateIncidentPostmortem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskCreateIncidentPostmortem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskCreateIncidentPostmortemState, opts ...pulumi.ResourceOption) (*WorkflowTaskCreateIncidentPostmortem, error) {
	var resource WorkflowTaskCreateIncidentPostmortem
	err := ctx.ReadResource("rootly:index/workflowTaskCreateIncidentPostmortem:WorkflowTaskCreateIncidentPostmortem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskCreateIncidentPostmortem resources.
type workflowTaskCreateIncidentPostmortemState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskCreateIncidentPostmortemTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskCreateIncidentPostmortemState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateIncidentPostmortemTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskCreateIncidentPostmortemState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateIncidentPostmortemState)(nil)).Elem()
}

type workflowTaskCreateIncidentPostmortemArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateIncidentPostmortemTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskCreateIncidentPostmortem resource.
type WorkflowTaskCreateIncidentPostmortemArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreateIncidentPostmortemTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskCreateIncidentPostmortemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreateIncidentPostmortemArgs)(nil)).Elem()
}

type WorkflowTaskCreateIncidentPostmortemInput interface {
	pulumi.Input

	ToWorkflowTaskCreateIncidentPostmortemOutput() WorkflowTaskCreateIncidentPostmortemOutput
	ToWorkflowTaskCreateIncidentPostmortemOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentPostmortemOutput
}

func (*WorkflowTaskCreateIncidentPostmortem) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateIncidentPostmortem)(nil)).Elem()
}

func (i *WorkflowTaskCreateIncidentPostmortem) ToWorkflowTaskCreateIncidentPostmortemOutput() WorkflowTaskCreateIncidentPostmortemOutput {
	return i.ToWorkflowTaskCreateIncidentPostmortemOutputWithContext(context.Background())
}

func (i *WorkflowTaskCreateIncidentPostmortem) ToWorkflowTaskCreateIncidentPostmortemOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentPostmortemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateIncidentPostmortemOutput)
}

// WorkflowTaskCreateIncidentPostmortemArrayInput is an input type that accepts WorkflowTaskCreateIncidentPostmortemArray and WorkflowTaskCreateIncidentPostmortemArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateIncidentPostmortemArrayInput` via:
//
//	WorkflowTaskCreateIncidentPostmortemArray{ WorkflowTaskCreateIncidentPostmortemArgs{...} }
type WorkflowTaskCreateIncidentPostmortemArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreateIncidentPostmortemArrayOutput() WorkflowTaskCreateIncidentPostmortemArrayOutput
	ToWorkflowTaskCreateIncidentPostmortemArrayOutputWithContext(context.Context) WorkflowTaskCreateIncidentPostmortemArrayOutput
}

type WorkflowTaskCreateIncidentPostmortemArray []WorkflowTaskCreateIncidentPostmortemInput

func (WorkflowTaskCreateIncidentPostmortemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateIncidentPostmortem)(nil)).Elem()
}

func (i WorkflowTaskCreateIncidentPostmortemArray) ToWorkflowTaskCreateIncidentPostmortemArrayOutput() WorkflowTaskCreateIncidentPostmortemArrayOutput {
	return i.ToWorkflowTaskCreateIncidentPostmortemArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateIncidentPostmortemArray) ToWorkflowTaskCreateIncidentPostmortemArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentPostmortemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateIncidentPostmortemArrayOutput)
}

// WorkflowTaskCreateIncidentPostmortemMapInput is an input type that accepts WorkflowTaskCreateIncidentPostmortemMap and WorkflowTaskCreateIncidentPostmortemMapOutput values.
// You can construct a concrete instance of `WorkflowTaskCreateIncidentPostmortemMapInput` via:
//
//	WorkflowTaskCreateIncidentPostmortemMap{ "key": WorkflowTaskCreateIncidentPostmortemArgs{...} }
type WorkflowTaskCreateIncidentPostmortemMapInput interface {
	pulumi.Input

	ToWorkflowTaskCreateIncidentPostmortemMapOutput() WorkflowTaskCreateIncidentPostmortemMapOutput
	ToWorkflowTaskCreateIncidentPostmortemMapOutputWithContext(context.Context) WorkflowTaskCreateIncidentPostmortemMapOutput
}

type WorkflowTaskCreateIncidentPostmortemMap map[string]WorkflowTaskCreateIncidentPostmortemInput

func (WorkflowTaskCreateIncidentPostmortemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateIncidentPostmortem)(nil)).Elem()
}

func (i WorkflowTaskCreateIncidentPostmortemMap) ToWorkflowTaskCreateIncidentPostmortemMapOutput() WorkflowTaskCreateIncidentPostmortemMapOutput {
	return i.ToWorkflowTaskCreateIncidentPostmortemMapOutputWithContext(context.Background())
}

func (i WorkflowTaskCreateIncidentPostmortemMap) ToWorkflowTaskCreateIncidentPostmortemMapOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentPostmortemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreateIncidentPostmortemMapOutput)
}

type WorkflowTaskCreateIncidentPostmortemOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateIncidentPostmortemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreateIncidentPostmortem)(nil)).Elem()
}

func (o WorkflowTaskCreateIncidentPostmortemOutput) ToWorkflowTaskCreateIncidentPostmortemOutput() WorkflowTaskCreateIncidentPostmortemOutput {
	return o
}

func (o WorkflowTaskCreateIncidentPostmortemOutput) ToWorkflowTaskCreateIncidentPostmortemOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentPostmortemOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskCreateIncidentPostmortemOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentPostmortem) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskCreateIncidentPostmortemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentPostmortem) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskCreateIncidentPostmortemOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentPostmortem) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskCreateIncidentPostmortemOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentPostmortem) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskCreateIncidentPostmortemOutput) TaskParams() WorkflowTaskCreateIncidentPostmortemTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentPostmortem) WorkflowTaskCreateIncidentPostmortemTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskCreateIncidentPostmortemTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskCreateIncidentPostmortemOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreateIncidentPostmortem) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskCreateIncidentPostmortemArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateIncidentPostmortemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreateIncidentPostmortem)(nil)).Elem()
}

func (o WorkflowTaskCreateIncidentPostmortemArrayOutput) ToWorkflowTaskCreateIncidentPostmortemArrayOutput() WorkflowTaskCreateIncidentPostmortemArrayOutput {
	return o
}

func (o WorkflowTaskCreateIncidentPostmortemArrayOutput) ToWorkflowTaskCreateIncidentPostmortemArrayOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentPostmortemArrayOutput {
	return o
}

func (o WorkflowTaskCreateIncidentPostmortemArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreateIncidentPostmortemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskCreateIncidentPostmortem {
		return vs[0].([]*WorkflowTaskCreateIncidentPostmortem)[vs[1].(int)]
	}).(WorkflowTaskCreateIncidentPostmortemOutput)
}

type WorkflowTaskCreateIncidentPostmortemMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreateIncidentPostmortemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreateIncidentPostmortem)(nil)).Elem()
}

func (o WorkflowTaskCreateIncidentPostmortemMapOutput) ToWorkflowTaskCreateIncidentPostmortemMapOutput() WorkflowTaskCreateIncidentPostmortemMapOutput {
	return o
}

func (o WorkflowTaskCreateIncidentPostmortemMapOutput) ToWorkflowTaskCreateIncidentPostmortemMapOutputWithContext(ctx context.Context) WorkflowTaskCreateIncidentPostmortemMapOutput {
	return o
}

func (o WorkflowTaskCreateIncidentPostmortemMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskCreateIncidentPostmortemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskCreateIncidentPostmortem {
		return vs[0].(map[string]*WorkflowTaskCreateIncidentPostmortem)[vs[1].(string)]
	}).(WorkflowTaskCreateIncidentPostmortemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateIncidentPostmortemInput)(nil)).Elem(), &WorkflowTaskCreateIncidentPostmortem{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateIncidentPostmortemArrayInput)(nil)).Elem(), WorkflowTaskCreateIncidentPostmortemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreateIncidentPostmortemMapInput)(nil)).Elem(), WorkflowTaskCreateIncidentPostmortemMap{})
	pulumi.RegisterOutputType(WorkflowTaskCreateIncidentPostmortemOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateIncidentPostmortemArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreateIncidentPostmortemMapOutput{})
}
