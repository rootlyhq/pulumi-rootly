// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow httpClient task.
type WorkflowTaskHttpClient struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskHttpClientTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskHttpClient registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskHttpClient(ctx *pulumi.Context,
	name string, args *WorkflowTaskHttpClientArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskHttpClient, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskHttpClient
	err := ctx.RegisterResource("rootly:index/workflowTaskHttpClient:WorkflowTaskHttpClient", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskHttpClient gets an existing WorkflowTaskHttpClient resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskHttpClient(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskHttpClientState, opts ...pulumi.ResourceOption) (*WorkflowTaskHttpClient, error) {
	var resource WorkflowTaskHttpClient
	err := ctx.ReadResource("rootly:index/workflowTaskHttpClient:WorkflowTaskHttpClient", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskHttpClient resources.
type workflowTaskHttpClientState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskHttpClientTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskHttpClientState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskHttpClientTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskHttpClientState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskHttpClientState)(nil)).Elem()
}

type workflowTaskHttpClientArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskHttpClientTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskHttpClient resource.
type WorkflowTaskHttpClientArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskHttpClientTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskHttpClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskHttpClientArgs)(nil)).Elem()
}

type WorkflowTaskHttpClientInput interface {
	pulumi.Input

	ToWorkflowTaskHttpClientOutput() WorkflowTaskHttpClientOutput
	ToWorkflowTaskHttpClientOutputWithContext(ctx context.Context) WorkflowTaskHttpClientOutput
}

func (*WorkflowTaskHttpClient) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskHttpClient)(nil)).Elem()
}

func (i *WorkflowTaskHttpClient) ToWorkflowTaskHttpClientOutput() WorkflowTaskHttpClientOutput {
	return i.ToWorkflowTaskHttpClientOutputWithContext(context.Background())
}

func (i *WorkflowTaskHttpClient) ToWorkflowTaskHttpClientOutputWithContext(ctx context.Context) WorkflowTaskHttpClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskHttpClientOutput)
}

// WorkflowTaskHttpClientArrayInput is an input type that accepts WorkflowTaskHttpClientArray and WorkflowTaskHttpClientArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskHttpClientArrayInput` via:
//
//	WorkflowTaskHttpClientArray{ WorkflowTaskHttpClientArgs{...} }
type WorkflowTaskHttpClientArrayInput interface {
	pulumi.Input

	ToWorkflowTaskHttpClientArrayOutput() WorkflowTaskHttpClientArrayOutput
	ToWorkflowTaskHttpClientArrayOutputWithContext(context.Context) WorkflowTaskHttpClientArrayOutput
}

type WorkflowTaskHttpClientArray []WorkflowTaskHttpClientInput

func (WorkflowTaskHttpClientArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskHttpClient)(nil)).Elem()
}

func (i WorkflowTaskHttpClientArray) ToWorkflowTaskHttpClientArrayOutput() WorkflowTaskHttpClientArrayOutput {
	return i.ToWorkflowTaskHttpClientArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskHttpClientArray) ToWorkflowTaskHttpClientArrayOutputWithContext(ctx context.Context) WorkflowTaskHttpClientArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskHttpClientArrayOutput)
}

// WorkflowTaskHttpClientMapInput is an input type that accepts WorkflowTaskHttpClientMap and WorkflowTaskHttpClientMapOutput values.
// You can construct a concrete instance of `WorkflowTaskHttpClientMapInput` via:
//
//	WorkflowTaskHttpClientMap{ "key": WorkflowTaskHttpClientArgs{...} }
type WorkflowTaskHttpClientMapInput interface {
	pulumi.Input

	ToWorkflowTaskHttpClientMapOutput() WorkflowTaskHttpClientMapOutput
	ToWorkflowTaskHttpClientMapOutputWithContext(context.Context) WorkflowTaskHttpClientMapOutput
}

type WorkflowTaskHttpClientMap map[string]WorkflowTaskHttpClientInput

func (WorkflowTaskHttpClientMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskHttpClient)(nil)).Elem()
}

func (i WorkflowTaskHttpClientMap) ToWorkflowTaskHttpClientMapOutput() WorkflowTaskHttpClientMapOutput {
	return i.ToWorkflowTaskHttpClientMapOutputWithContext(context.Background())
}

func (i WorkflowTaskHttpClientMap) ToWorkflowTaskHttpClientMapOutputWithContext(ctx context.Context) WorkflowTaskHttpClientMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskHttpClientMapOutput)
}

type WorkflowTaskHttpClientOutput struct{ *pulumi.OutputState }

func (WorkflowTaskHttpClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskHttpClient)(nil)).Elem()
}

func (o WorkflowTaskHttpClientOutput) ToWorkflowTaskHttpClientOutput() WorkflowTaskHttpClientOutput {
	return o
}

func (o WorkflowTaskHttpClientOutput) ToWorkflowTaskHttpClientOutputWithContext(ctx context.Context) WorkflowTaskHttpClientOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskHttpClientOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClient) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskHttpClientOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClient) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskHttpClientOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClient) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskHttpClientOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClient) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskHttpClientOutput) TaskParams() WorkflowTaskHttpClientTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClient) WorkflowTaskHttpClientTaskParamsOutput { return v.TaskParams }).(WorkflowTaskHttpClientTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskHttpClientOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskHttpClient) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskHttpClientArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskHttpClientArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskHttpClient)(nil)).Elem()
}

func (o WorkflowTaskHttpClientArrayOutput) ToWorkflowTaskHttpClientArrayOutput() WorkflowTaskHttpClientArrayOutput {
	return o
}

func (o WorkflowTaskHttpClientArrayOutput) ToWorkflowTaskHttpClientArrayOutputWithContext(ctx context.Context) WorkflowTaskHttpClientArrayOutput {
	return o
}

func (o WorkflowTaskHttpClientArrayOutput) Index(i pulumi.IntInput) WorkflowTaskHttpClientOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskHttpClient {
		return vs[0].([]*WorkflowTaskHttpClient)[vs[1].(int)]
	}).(WorkflowTaskHttpClientOutput)
}

type WorkflowTaskHttpClientMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskHttpClientMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskHttpClient)(nil)).Elem()
}

func (o WorkflowTaskHttpClientMapOutput) ToWorkflowTaskHttpClientMapOutput() WorkflowTaskHttpClientMapOutput {
	return o
}

func (o WorkflowTaskHttpClientMapOutput) ToWorkflowTaskHttpClientMapOutputWithContext(ctx context.Context) WorkflowTaskHttpClientMapOutput {
	return o
}

func (o WorkflowTaskHttpClientMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskHttpClientOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskHttpClient {
		return vs[0].(map[string]*WorkflowTaskHttpClient)[vs[1].(string)]
	}).(WorkflowTaskHttpClientOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskHttpClientInput)(nil)).Elem(), &WorkflowTaskHttpClient{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskHttpClientArrayInput)(nil)).Elem(), WorkflowTaskHttpClientArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskHttpClientMapInput)(nil)).Elem(), WorkflowTaskHttpClientMap{})
	pulumi.RegisterOutputType(WorkflowTaskHttpClientOutput{})
	pulumi.RegisterOutputType(WorkflowTaskHttpClientArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskHttpClientMapOutput{})
}
