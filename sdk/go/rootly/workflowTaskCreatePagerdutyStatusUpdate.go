// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow createPagerdutyStatusUpdate task.
type WorkflowTaskCreatePagerdutyStatusUpdate struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskCreatePagerdutyStatusUpdate registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskCreatePagerdutyStatusUpdate(ctx *pulumi.Context,
	name string, args *WorkflowTaskCreatePagerdutyStatusUpdateArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskCreatePagerdutyStatusUpdate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskCreatePagerdutyStatusUpdate
	err := ctx.RegisterResource("rootly:index/workflowTaskCreatePagerdutyStatusUpdate:WorkflowTaskCreatePagerdutyStatusUpdate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskCreatePagerdutyStatusUpdate gets an existing WorkflowTaskCreatePagerdutyStatusUpdate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskCreatePagerdutyStatusUpdate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskCreatePagerdutyStatusUpdateState, opts ...pulumi.ResourceOption) (*WorkflowTaskCreatePagerdutyStatusUpdate, error) {
	var resource WorkflowTaskCreatePagerdutyStatusUpdate
	err := ctx.ReadResource("rootly:index/workflowTaskCreatePagerdutyStatusUpdate:WorkflowTaskCreatePagerdutyStatusUpdate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskCreatePagerdutyStatusUpdate resources.
type workflowTaskCreatePagerdutyStatusUpdateState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskCreatePagerdutyStatusUpdateTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskCreatePagerdutyStatusUpdateState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskCreatePagerdutyStatusUpdateState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreatePagerdutyStatusUpdateState)(nil)).Elem()
}

type workflowTaskCreatePagerdutyStatusUpdateArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreatePagerdutyStatusUpdateTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskCreatePagerdutyStatusUpdate resource.
type WorkflowTaskCreatePagerdutyStatusUpdateArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskCreatePagerdutyStatusUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskCreatePagerdutyStatusUpdateArgs)(nil)).Elem()
}

type WorkflowTaskCreatePagerdutyStatusUpdateInput interface {
	pulumi.Input

	ToWorkflowTaskCreatePagerdutyStatusUpdateOutput() WorkflowTaskCreatePagerdutyStatusUpdateOutput
	ToWorkflowTaskCreatePagerdutyStatusUpdateOutputWithContext(ctx context.Context) WorkflowTaskCreatePagerdutyStatusUpdateOutput
}

func (*WorkflowTaskCreatePagerdutyStatusUpdate) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreatePagerdutyStatusUpdate)(nil)).Elem()
}

func (i *WorkflowTaskCreatePagerdutyStatusUpdate) ToWorkflowTaskCreatePagerdutyStatusUpdateOutput() WorkflowTaskCreatePagerdutyStatusUpdateOutput {
	return i.ToWorkflowTaskCreatePagerdutyStatusUpdateOutputWithContext(context.Background())
}

func (i *WorkflowTaskCreatePagerdutyStatusUpdate) ToWorkflowTaskCreatePagerdutyStatusUpdateOutputWithContext(ctx context.Context) WorkflowTaskCreatePagerdutyStatusUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreatePagerdutyStatusUpdateOutput)
}

// WorkflowTaskCreatePagerdutyStatusUpdateArrayInput is an input type that accepts WorkflowTaskCreatePagerdutyStatusUpdateArray and WorkflowTaskCreatePagerdutyStatusUpdateArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskCreatePagerdutyStatusUpdateArrayInput` via:
//
//	WorkflowTaskCreatePagerdutyStatusUpdateArray{ WorkflowTaskCreatePagerdutyStatusUpdateArgs{...} }
type WorkflowTaskCreatePagerdutyStatusUpdateArrayInput interface {
	pulumi.Input

	ToWorkflowTaskCreatePagerdutyStatusUpdateArrayOutput() WorkflowTaskCreatePagerdutyStatusUpdateArrayOutput
	ToWorkflowTaskCreatePagerdutyStatusUpdateArrayOutputWithContext(context.Context) WorkflowTaskCreatePagerdutyStatusUpdateArrayOutput
}

type WorkflowTaskCreatePagerdutyStatusUpdateArray []WorkflowTaskCreatePagerdutyStatusUpdateInput

func (WorkflowTaskCreatePagerdutyStatusUpdateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreatePagerdutyStatusUpdate)(nil)).Elem()
}

func (i WorkflowTaskCreatePagerdutyStatusUpdateArray) ToWorkflowTaskCreatePagerdutyStatusUpdateArrayOutput() WorkflowTaskCreatePagerdutyStatusUpdateArrayOutput {
	return i.ToWorkflowTaskCreatePagerdutyStatusUpdateArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskCreatePagerdutyStatusUpdateArray) ToWorkflowTaskCreatePagerdutyStatusUpdateArrayOutputWithContext(ctx context.Context) WorkflowTaskCreatePagerdutyStatusUpdateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreatePagerdutyStatusUpdateArrayOutput)
}

// WorkflowTaskCreatePagerdutyStatusUpdateMapInput is an input type that accepts WorkflowTaskCreatePagerdutyStatusUpdateMap and WorkflowTaskCreatePagerdutyStatusUpdateMapOutput values.
// You can construct a concrete instance of `WorkflowTaskCreatePagerdutyStatusUpdateMapInput` via:
//
//	WorkflowTaskCreatePagerdutyStatusUpdateMap{ "key": WorkflowTaskCreatePagerdutyStatusUpdateArgs{...} }
type WorkflowTaskCreatePagerdutyStatusUpdateMapInput interface {
	pulumi.Input

	ToWorkflowTaskCreatePagerdutyStatusUpdateMapOutput() WorkflowTaskCreatePagerdutyStatusUpdateMapOutput
	ToWorkflowTaskCreatePagerdutyStatusUpdateMapOutputWithContext(context.Context) WorkflowTaskCreatePagerdutyStatusUpdateMapOutput
}

type WorkflowTaskCreatePagerdutyStatusUpdateMap map[string]WorkflowTaskCreatePagerdutyStatusUpdateInput

func (WorkflowTaskCreatePagerdutyStatusUpdateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreatePagerdutyStatusUpdate)(nil)).Elem()
}

func (i WorkflowTaskCreatePagerdutyStatusUpdateMap) ToWorkflowTaskCreatePagerdutyStatusUpdateMapOutput() WorkflowTaskCreatePagerdutyStatusUpdateMapOutput {
	return i.ToWorkflowTaskCreatePagerdutyStatusUpdateMapOutputWithContext(context.Background())
}

func (i WorkflowTaskCreatePagerdutyStatusUpdateMap) ToWorkflowTaskCreatePagerdutyStatusUpdateMapOutputWithContext(ctx context.Context) WorkflowTaskCreatePagerdutyStatusUpdateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskCreatePagerdutyStatusUpdateMapOutput)
}

type WorkflowTaskCreatePagerdutyStatusUpdateOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreatePagerdutyStatusUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskCreatePagerdutyStatusUpdate)(nil)).Elem()
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateOutput) ToWorkflowTaskCreatePagerdutyStatusUpdateOutput() WorkflowTaskCreatePagerdutyStatusUpdateOutput {
	return o
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateOutput) ToWorkflowTaskCreatePagerdutyStatusUpdateOutputWithContext(ctx context.Context) WorkflowTaskCreatePagerdutyStatusUpdateOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskCreatePagerdutyStatusUpdateOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagerdutyStatusUpdate) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskCreatePagerdutyStatusUpdateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagerdutyStatusUpdate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskCreatePagerdutyStatusUpdateOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagerdutyStatusUpdate) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskCreatePagerdutyStatusUpdateOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagerdutyStatusUpdate) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskCreatePagerdutyStatusUpdateOutput) TaskParams() WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagerdutyStatusUpdate) WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskCreatePagerdutyStatusUpdateTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskCreatePagerdutyStatusUpdateOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskCreatePagerdutyStatusUpdate) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskCreatePagerdutyStatusUpdateArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreatePagerdutyStatusUpdateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskCreatePagerdutyStatusUpdate)(nil)).Elem()
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateArrayOutput) ToWorkflowTaskCreatePagerdutyStatusUpdateArrayOutput() WorkflowTaskCreatePagerdutyStatusUpdateArrayOutput {
	return o
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateArrayOutput) ToWorkflowTaskCreatePagerdutyStatusUpdateArrayOutputWithContext(ctx context.Context) WorkflowTaskCreatePagerdutyStatusUpdateArrayOutput {
	return o
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateArrayOutput) Index(i pulumi.IntInput) WorkflowTaskCreatePagerdutyStatusUpdateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskCreatePagerdutyStatusUpdate {
		return vs[0].([]*WorkflowTaskCreatePagerdutyStatusUpdate)[vs[1].(int)]
	}).(WorkflowTaskCreatePagerdutyStatusUpdateOutput)
}

type WorkflowTaskCreatePagerdutyStatusUpdateMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskCreatePagerdutyStatusUpdateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskCreatePagerdutyStatusUpdate)(nil)).Elem()
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateMapOutput) ToWorkflowTaskCreatePagerdutyStatusUpdateMapOutput() WorkflowTaskCreatePagerdutyStatusUpdateMapOutput {
	return o
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateMapOutput) ToWorkflowTaskCreatePagerdutyStatusUpdateMapOutputWithContext(ctx context.Context) WorkflowTaskCreatePagerdutyStatusUpdateMapOutput {
	return o
}

func (o WorkflowTaskCreatePagerdutyStatusUpdateMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskCreatePagerdutyStatusUpdateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskCreatePagerdutyStatusUpdate {
		return vs[0].(map[string]*WorkflowTaskCreatePagerdutyStatusUpdate)[vs[1].(string)]
	}).(WorkflowTaskCreatePagerdutyStatusUpdateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreatePagerdutyStatusUpdateInput)(nil)).Elem(), &WorkflowTaskCreatePagerdutyStatusUpdate{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreatePagerdutyStatusUpdateArrayInput)(nil)).Elem(), WorkflowTaskCreatePagerdutyStatusUpdateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskCreatePagerdutyStatusUpdateMapInput)(nil)).Elem(), WorkflowTaskCreatePagerdutyStatusUpdateMap{})
	pulumi.RegisterOutputType(WorkflowTaskCreatePagerdutyStatusUpdateOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreatePagerdutyStatusUpdateArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskCreatePagerdutyStatusUpdateMapOutput{})
}
