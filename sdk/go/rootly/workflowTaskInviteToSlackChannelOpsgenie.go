// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow inviteToSlackChannelOpsgenie task.
type WorkflowTaskInviteToSlackChannelOpsgenie struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskInviteToSlackChannelOpsgenie registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskInviteToSlackChannelOpsgenie(ctx *pulumi.Context,
	name string, args *WorkflowTaskInviteToSlackChannelOpsgenieArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskInviteToSlackChannelOpsgenie, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskInviteToSlackChannelOpsgenie
	err := ctx.RegisterResource("rootly:index/workflowTaskInviteToSlackChannelOpsgenie:WorkflowTaskInviteToSlackChannelOpsgenie", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskInviteToSlackChannelOpsgenie gets an existing WorkflowTaskInviteToSlackChannelOpsgenie resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskInviteToSlackChannelOpsgenie(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskInviteToSlackChannelOpsgenieState, opts ...pulumi.ResourceOption) (*WorkflowTaskInviteToSlackChannelOpsgenie, error) {
	var resource WorkflowTaskInviteToSlackChannelOpsgenie
	err := ctx.ReadResource("rootly:index/workflowTaskInviteToSlackChannelOpsgenie:WorkflowTaskInviteToSlackChannelOpsgenie", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskInviteToSlackChannelOpsgenie resources.
type workflowTaskInviteToSlackChannelOpsgenieState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskInviteToSlackChannelOpsgenieTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskInviteToSlackChannelOpsgenieState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskInviteToSlackChannelOpsgenieState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskInviteToSlackChannelOpsgenieState)(nil)).Elem()
}

type workflowTaskInviteToSlackChannelOpsgenieArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskInviteToSlackChannelOpsgenieTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskInviteToSlackChannelOpsgenie resource.
type WorkflowTaskInviteToSlackChannelOpsgenieArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskInviteToSlackChannelOpsgenieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskInviteToSlackChannelOpsgenieArgs)(nil)).Elem()
}

type WorkflowTaskInviteToSlackChannelOpsgenieInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelOpsgenieOutput() WorkflowTaskInviteToSlackChannelOpsgenieOutput
	ToWorkflowTaskInviteToSlackChannelOpsgenieOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieOutput
}

func (*WorkflowTaskInviteToSlackChannelOpsgenie) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskInviteToSlackChannelOpsgenie)(nil)).Elem()
}

func (i *WorkflowTaskInviteToSlackChannelOpsgenie) ToWorkflowTaskInviteToSlackChannelOpsgenieOutput() WorkflowTaskInviteToSlackChannelOpsgenieOutput {
	return i.ToWorkflowTaskInviteToSlackChannelOpsgenieOutputWithContext(context.Background())
}

func (i *WorkflowTaskInviteToSlackChannelOpsgenie) ToWorkflowTaskInviteToSlackChannelOpsgenieOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelOpsgenieOutput)
}

// WorkflowTaskInviteToSlackChannelOpsgenieArrayInput is an input type that accepts WorkflowTaskInviteToSlackChannelOpsgenieArray and WorkflowTaskInviteToSlackChannelOpsgenieArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelOpsgenieArrayInput` via:
//
//	WorkflowTaskInviteToSlackChannelOpsgenieArray{ WorkflowTaskInviteToSlackChannelOpsgenieArgs{...} }
type WorkflowTaskInviteToSlackChannelOpsgenieArrayInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelOpsgenieArrayOutput() WorkflowTaskInviteToSlackChannelOpsgenieArrayOutput
	ToWorkflowTaskInviteToSlackChannelOpsgenieArrayOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelOpsgenieArrayOutput
}

type WorkflowTaskInviteToSlackChannelOpsgenieArray []WorkflowTaskInviteToSlackChannelOpsgenieInput

func (WorkflowTaskInviteToSlackChannelOpsgenieArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskInviteToSlackChannelOpsgenie)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelOpsgenieArray) ToWorkflowTaskInviteToSlackChannelOpsgenieArrayOutput() WorkflowTaskInviteToSlackChannelOpsgenieArrayOutput {
	return i.ToWorkflowTaskInviteToSlackChannelOpsgenieArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelOpsgenieArray) ToWorkflowTaskInviteToSlackChannelOpsgenieArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelOpsgenieArrayOutput)
}

// WorkflowTaskInviteToSlackChannelOpsgenieMapInput is an input type that accepts WorkflowTaskInviteToSlackChannelOpsgenieMap and WorkflowTaskInviteToSlackChannelOpsgenieMapOutput values.
// You can construct a concrete instance of `WorkflowTaskInviteToSlackChannelOpsgenieMapInput` via:
//
//	WorkflowTaskInviteToSlackChannelOpsgenieMap{ "key": WorkflowTaskInviteToSlackChannelOpsgenieArgs{...} }
type WorkflowTaskInviteToSlackChannelOpsgenieMapInput interface {
	pulumi.Input

	ToWorkflowTaskInviteToSlackChannelOpsgenieMapOutput() WorkflowTaskInviteToSlackChannelOpsgenieMapOutput
	ToWorkflowTaskInviteToSlackChannelOpsgenieMapOutputWithContext(context.Context) WorkflowTaskInviteToSlackChannelOpsgenieMapOutput
}

type WorkflowTaskInviteToSlackChannelOpsgenieMap map[string]WorkflowTaskInviteToSlackChannelOpsgenieInput

func (WorkflowTaskInviteToSlackChannelOpsgenieMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskInviteToSlackChannelOpsgenie)(nil)).Elem()
}

func (i WorkflowTaskInviteToSlackChannelOpsgenieMap) ToWorkflowTaskInviteToSlackChannelOpsgenieMapOutput() WorkflowTaskInviteToSlackChannelOpsgenieMapOutput {
	return i.ToWorkflowTaskInviteToSlackChannelOpsgenieMapOutputWithContext(context.Background())
}

func (i WorkflowTaskInviteToSlackChannelOpsgenieMap) ToWorkflowTaskInviteToSlackChannelOpsgenieMapOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskInviteToSlackChannelOpsgenieMapOutput)
}

type WorkflowTaskInviteToSlackChannelOpsgenieOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelOpsgenieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskInviteToSlackChannelOpsgenie)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieOutput) ToWorkflowTaskInviteToSlackChannelOpsgenieOutput() WorkflowTaskInviteToSlackChannelOpsgenieOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieOutput) ToWorkflowTaskInviteToSlackChannelOpsgenieOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskInviteToSlackChannelOpsgenieOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelOpsgenie) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskInviteToSlackChannelOpsgenieOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelOpsgenie) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskInviteToSlackChannelOpsgenieOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelOpsgenie) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskInviteToSlackChannelOpsgenieOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelOpsgenie) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskInviteToSlackChannelOpsgenieOutput) TaskParams() WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelOpsgenie) WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskInviteToSlackChannelOpsgenieTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskInviteToSlackChannelOpsgenieOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskInviteToSlackChannelOpsgenie) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskInviteToSlackChannelOpsgenieArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelOpsgenieArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskInviteToSlackChannelOpsgenie)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieArrayOutput) ToWorkflowTaskInviteToSlackChannelOpsgenieArrayOutput() WorkflowTaskInviteToSlackChannelOpsgenieArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieArrayOutput) ToWorkflowTaskInviteToSlackChannelOpsgenieArrayOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieArrayOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieArrayOutput) Index(i pulumi.IntInput) WorkflowTaskInviteToSlackChannelOpsgenieOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskInviteToSlackChannelOpsgenie {
		return vs[0].([]*WorkflowTaskInviteToSlackChannelOpsgenie)[vs[1].(int)]
	}).(WorkflowTaskInviteToSlackChannelOpsgenieOutput)
}

type WorkflowTaskInviteToSlackChannelOpsgenieMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskInviteToSlackChannelOpsgenieMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskInviteToSlackChannelOpsgenie)(nil)).Elem()
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieMapOutput) ToWorkflowTaskInviteToSlackChannelOpsgenieMapOutput() WorkflowTaskInviteToSlackChannelOpsgenieMapOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieMapOutput) ToWorkflowTaskInviteToSlackChannelOpsgenieMapOutputWithContext(ctx context.Context) WorkflowTaskInviteToSlackChannelOpsgenieMapOutput {
	return o
}

func (o WorkflowTaskInviteToSlackChannelOpsgenieMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskInviteToSlackChannelOpsgenieOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskInviteToSlackChannelOpsgenie {
		return vs[0].(map[string]*WorkflowTaskInviteToSlackChannelOpsgenie)[vs[1].(string)]
	}).(WorkflowTaskInviteToSlackChannelOpsgenieOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelOpsgenieInput)(nil)).Elem(), &WorkflowTaskInviteToSlackChannelOpsgenie{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelOpsgenieArrayInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelOpsgenieArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskInviteToSlackChannelOpsgenieMapInput)(nil)).Elem(), WorkflowTaskInviteToSlackChannelOpsgenieMap{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelOpsgenieOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelOpsgenieArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskInviteToSlackChannelOpsgenieMapOutput{})
}
