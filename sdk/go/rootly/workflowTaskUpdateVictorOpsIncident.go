// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// Manages workflow updateVictorOpsIncident task.
type WorkflowTaskUpdateVictorOpsIncident struct {
	pulumi.CustomResourceState

	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Name of the workflow task
	Name pulumi.StringOutput `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntOutput `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrOutput `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowTaskUpdateVictorOpsIncident registers a new resource with the given unique name, arguments, and options.
func NewWorkflowTaskUpdateVictorOpsIncident(ctx *pulumi.Context,
	name string, args *WorkflowTaskUpdateVictorOpsIncidentArgs, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateVictorOpsIncident, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TaskParams == nil {
		return nil, errors.New("invalid value for required argument 'TaskParams'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowTaskUpdateVictorOpsIncident
	err := ctx.RegisterResource("rootly:index/workflowTaskUpdateVictorOpsIncident:WorkflowTaskUpdateVictorOpsIncident", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowTaskUpdateVictorOpsIncident gets an existing WorkflowTaskUpdateVictorOpsIncident resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowTaskUpdateVictorOpsIncident(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowTaskUpdateVictorOpsIncidentState, opts ...pulumi.ResourceOption) (*WorkflowTaskUpdateVictorOpsIncident, error) {
	var resource WorkflowTaskUpdateVictorOpsIncident
	err := ctx.ReadResource("rootly:index/workflowTaskUpdateVictorOpsIncident:WorkflowTaskUpdateVictorOpsIncident", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowTaskUpdateVictorOpsIncident resources.
type workflowTaskUpdateVictorOpsIncidentState struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams *WorkflowTaskUpdateVictorOpsIncidentTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowTaskUpdateVictorOpsIncidentState struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateVictorOpsIncidentTaskParamsPtrInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowTaskUpdateVictorOpsIncidentState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateVictorOpsIncidentState)(nil)).Elem()
}

type workflowTaskUpdateVictorOpsIncidentArgs struct {
	// Enable/disable this workflow task
	Enabled *bool `pulumi:"enabled"`
	// Name of the workflow task
	Name *string `pulumi:"name"`
	// The position of the workflow task (1 being top of list)
	Position *int `pulumi:"position"`
	// Skip workflow task if any failures
	SkipOnFailure *bool `pulumi:"skipOnFailure"`
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateVictorOpsIncidentTaskParams `pulumi:"taskParams"`
	// The ID of the parent workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowTaskUpdateVictorOpsIncident resource.
type WorkflowTaskUpdateVictorOpsIncidentArgs struct {
	// Enable/disable this workflow task
	Enabled pulumi.BoolPtrInput
	// Name of the workflow task
	Name pulumi.StringPtrInput
	// The position of the workflow task (1 being top of list)
	Position pulumi.IntPtrInput
	// Skip workflow task if any failures
	SkipOnFailure pulumi.BoolPtrInput
	// The parameters for this workflow task.
	TaskParams WorkflowTaskUpdateVictorOpsIncidentTaskParamsInput
	// The ID of the parent workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowTaskUpdateVictorOpsIncidentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowTaskUpdateVictorOpsIncidentArgs)(nil)).Elem()
}

type WorkflowTaskUpdateVictorOpsIncidentInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateVictorOpsIncidentOutput() WorkflowTaskUpdateVictorOpsIncidentOutput
	ToWorkflowTaskUpdateVictorOpsIncidentOutputWithContext(ctx context.Context) WorkflowTaskUpdateVictorOpsIncidentOutput
}

func (*WorkflowTaskUpdateVictorOpsIncident) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateVictorOpsIncident)(nil)).Elem()
}

func (i *WorkflowTaskUpdateVictorOpsIncident) ToWorkflowTaskUpdateVictorOpsIncidentOutput() WorkflowTaskUpdateVictorOpsIncidentOutput {
	return i.ToWorkflowTaskUpdateVictorOpsIncidentOutputWithContext(context.Background())
}

func (i *WorkflowTaskUpdateVictorOpsIncident) ToWorkflowTaskUpdateVictorOpsIncidentOutputWithContext(ctx context.Context) WorkflowTaskUpdateVictorOpsIncidentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateVictorOpsIncidentOutput)
}

// WorkflowTaskUpdateVictorOpsIncidentArrayInput is an input type that accepts WorkflowTaskUpdateVictorOpsIncidentArray and WorkflowTaskUpdateVictorOpsIncidentArrayOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateVictorOpsIncidentArrayInput` via:
//
//	WorkflowTaskUpdateVictorOpsIncidentArray{ WorkflowTaskUpdateVictorOpsIncidentArgs{...} }
type WorkflowTaskUpdateVictorOpsIncidentArrayInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateVictorOpsIncidentArrayOutput() WorkflowTaskUpdateVictorOpsIncidentArrayOutput
	ToWorkflowTaskUpdateVictorOpsIncidentArrayOutputWithContext(context.Context) WorkflowTaskUpdateVictorOpsIncidentArrayOutput
}

type WorkflowTaskUpdateVictorOpsIncidentArray []WorkflowTaskUpdateVictorOpsIncidentInput

func (WorkflowTaskUpdateVictorOpsIncidentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateVictorOpsIncident)(nil)).Elem()
}

func (i WorkflowTaskUpdateVictorOpsIncidentArray) ToWorkflowTaskUpdateVictorOpsIncidentArrayOutput() WorkflowTaskUpdateVictorOpsIncidentArrayOutput {
	return i.ToWorkflowTaskUpdateVictorOpsIncidentArrayOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateVictorOpsIncidentArray) ToWorkflowTaskUpdateVictorOpsIncidentArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateVictorOpsIncidentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateVictorOpsIncidentArrayOutput)
}

// WorkflowTaskUpdateVictorOpsIncidentMapInput is an input type that accepts WorkflowTaskUpdateVictorOpsIncidentMap and WorkflowTaskUpdateVictorOpsIncidentMapOutput values.
// You can construct a concrete instance of `WorkflowTaskUpdateVictorOpsIncidentMapInput` via:
//
//	WorkflowTaskUpdateVictorOpsIncidentMap{ "key": WorkflowTaskUpdateVictorOpsIncidentArgs{...} }
type WorkflowTaskUpdateVictorOpsIncidentMapInput interface {
	pulumi.Input

	ToWorkflowTaskUpdateVictorOpsIncidentMapOutput() WorkflowTaskUpdateVictorOpsIncidentMapOutput
	ToWorkflowTaskUpdateVictorOpsIncidentMapOutputWithContext(context.Context) WorkflowTaskUpdateVictorOpsIncidentMapOutput
}

type WorkflowTaskUpdateVictorOpsIncidentMap map[string]WorkflowTaskUpdateVictorOpsIncidentInput

func (WorkflowTaskUpdateVictorOpsIncidentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateVictorOpsIncident)(nil)).Elem()
}

func (i WorkflowTaskUpdateVictorOpsIncidentMap) ToWorkflowTaskUpdateVictorOpsIncidentMapOutput() WorkflowTaskUpdateVictorOpsIncidentMapOutput {
	return i.ToWorkflowTaskUpdateVictorOpsIncidentMapOutputWithContext(context.Background())
}

func (i WorkflowTaskUpdateVictorOpsIncidentMap) ToWorkflowTaskUpdateVictorOpsIncidentMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateVictorOpsIncidentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTaskUpdateVictorOpsIncidentMapOutput)
}

type WorkflowTaskUpdateVictorOpsIncidentOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateVictorOpsIncidentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTaskUpdateVictorOpsIncident)(nil)).Elem()
}

func (o WorkflowTaskUpdateVictorOpsIncidentOutput) ToWorkflowTaskUpdateVictorOpsIncidentOutput() WorkflowTaskUpdateVictorOpsIncidentOutput {
	return o
}

func (o WorkflowTaskUpdateVictorOpsIncidentOutput) ToWorkflowTaskUpdateVictorOpsIncidentOutputWithContext(ctx context.Context) WorkflowTaskUpdateVictorOpsIncidentOutput {
	return o
}

// Enable/disable this workflow task
func (o WorkflowTaskUpdateVictorOpsIncidentOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateVictorOpsIncident) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of the workflow task
func (o WorkflowTaskUpdateVictorOpsIncidentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateVictorOpsIncident) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The position of the workflow task (1 being top of list)
func (o WorkflowTaskUpdateVictorOpsIncidentOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateVictorOpsIncident) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// Skip workflow task if any failures
func (o WorkflowTaskUpdateVictorOpsIncidentOutput) SkipOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateVictorOpsIncident) pulumi.BoolPtrOutput { return v.SkipOnFailure }).(pulumi.BoolPtrOutput)
}

// The parameters for this workflow task.
func (o WorkflowTaskUpdateVictorOpsIncidentOutput) TaskParams() WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateVictorOpsIncident) WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput {
		return v.TaskParams
	}).(WorkflowTaskUpdateVictorOpsIncidentTaskParamsOutput)
}

// The ID of the parent workflow
func (o WorkflowTaskUpdateVictorOpsIncidentOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowTaskUpdateVictorOpsIncident) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowTaskUpdateVictorOpsIncidentArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateVictorOpsIncidentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowTaskUpdateVictorOpsIncident)(nil)).Elem()
}

func (o WorkflowTaskUpdateVictorOpsIncidentArrayOutput) ToWorkflowTaskUpdateVictorOpsIncidentArrayOutput() WorkflowTaskUpdateVictorOpsIncidentArrayOutput {
	return o
}

func (o WorkflowTaskUpdateVictorOpsIncidentArrayOutput) ToWorkflowTaskUpdateVictorOpsIncidentArrayOutputWithContext(ctx context.Context) WorkflowTaskUpdateVictorOpsIncidentArrayOutput {
	return o
}

func (o WorkflowTaskUpdateVictorOpsIncidentArrayOutput) Index(i pulumi.IntInput) WorkflowTaskUpdateVictorOpsIncidentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateVictorOpsIncident {
		return vs[0].([]*WorkflowTaskUpdateVictorOpsIncident)[vs[1].(int)]
	}).(WorkflowTaskUpdateVictorOpsIncidentOutput)
}

type WorkflowTaskUpdateVictorOpsIncidentMapOutput struct{ *pulumi.OutputState }

func (WorkflowTaskUpdateVictorOpsIncidentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowTaskUpdateVictorOpsIncident)(nil)).Elem()
}

func (o WorkflowTaskUpdateVictorOpsIncidentMapOutput) ToWorkflowTaskUpdateVictorOpsIncidentMapOutput() WorkflowTaskUpdateVictorOpsIncidentMapOutput {
	return o
}

func (o WorkflowTaskUpdateVictorOpsIncidentMapOutput) ToWorkflowTaskUpdateVictorOpsIncidentMapOutputWithContext(ctx context.Context) WorkflowTaskUpdateVictorOpsIncidentMapOutput {
	return o
}

func (o WorkflowTaskUpdateVictorOpsIncidentMapOutput) MapIndex(k pulumi.StringInput) WorkflowTaskUpdateVictorOpsIncidentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowTaskUpdateVictorOpsIncident {
		return vs[0].(map[string]*WorkflowTaskUpdateVictorOpsIncident)[vs[1].(string)]
	}).(WorkflowTaskUpdateVictorOpsIncidentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateVictorOpsIncidentInput)(nil)).Elem(), &WorkflowTaskUpdateVictorOpsIncident{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateVictorOpsIncidentArrayInput)(nil)).Elem(), WorkflowTaskUpdateVictorOpsIncidentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTaskUpdateVictorOpsIncidentMapInput)(nil)).Elem(), WorkflowTaskUpdateVictorOpsIncidentMap{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateVictorOpsIncidentOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateVictorOpsIncidentArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTaskUpdateVictorOpsIncidentMapOutput{})
}
