// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rootly

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/rootlyhq/pulumi-rootly/sdk/go/rootly/internal"
)

// ## Example Usage
type FormFieldOption struct {
	pulumi.CustomResourceState

	// The hex color of the form*field*option
	Color pulumi.StringOutput `pulumi:"color"`
	// Value must be one of true or false
	Default pulumi.BoolOutput `pulumi:"default"`
	// The ID of the parent custom field
	FormFieldId pulumi.StringOutput `pulumi:"formFieldId"`
	// The position of the form*field*option
	Position pulumi.IntOutput `pulumi:"position"`
	// The value of the form*field*option
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewFormFieldOption registers a new resource with the given unique name, arguments, and options.
func NewFormFieldOption(ctx *pulumi.Context,
	name string, args *FormFieldOptionArgs, opts ...pulumi.ResourceOption) (*FormFieldOption, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FormFieldId == nil {
		return nil, errors.New("invalid value for required argument 'FormFieldId'")
	}
	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FormFieldOption
	err := ctx.RegisterResource("rootly:index/formFieldOption:FormFieldOption", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFormFieldOption gets an existing FormFieldOption resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFormFieldOption(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FormFieldOptionState, opts ...pulumi.ResourceOption) (*FormFieldOption, error) {
	var resource FormFieldOption
	err := ctx.ReadResource("rootly:index/formFieldOption:FormFieldOption", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FormFieldOption resources.
type formFieldOptionState struct {
	// The hex color of the form*field*option
	Color *string `pulumi:"color"`
	// Value must be one of true or false
	Default *bool `pulumi:"default"`
	// The ID of the parent custom field
	FormFieldId *string `pulumi:"formFieldId"`
	// The position of the form*field*option
	Position *int `pulumi:"position"`
	// The value of the form*field*option
	Value *string `pulumi:"value"`
}

type FormFieldOptionState struct {
	// The hex color of the form*field*option
	Color pulumi.StringPtrInput
	// Value must be one of true or false
	Default pulumi.BoolPtrInput
	// The ID of the parent custom field
	FormFieldId pulumi.StringPtrInput
	// The position of the form*field*option
	Position pulumi.IntPtrInput
	// The value of the form*field*option
	Value pulumi.StringPtrInput
}

func (FormFieldOptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*formFieldOptionState)(nil)).Elem()
}

type formFieldOptionArgs struct {
	// The hex color of the form*field*option
	Color *string `pulumi:"color"`
	// Value must be one of true or false
	Default *bool `pulumi:"default"`
	// The ID of the parent custom field
	FormFieldId string `pulumi:"formFieldId"`
	// The position of the form*field*option
	Position *int `pulumi:"position"`
	// The value of the form*field*option
	Value string `pulumi:"value"`
}

// The set of arguments for constructing a FormFieldOption resource.
type FormFieldOptionArgs struct {
	// The hex color of the form*field*option
	Color pulumi.StringPtrInput
	// Value must be one of true or false
	Default pulumi.BoolPtrInput
	// The ID of the parent custom field
	FormFieldId pulumi.StringInput
	// The position of the form*field*option
	Position pulumi.IntPtrInput
	// The value of the form*field*option
	Value pulumi.StringInput
}

func (FormFieldOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*formFieldOptionArgs)(nil)).Elem()
}

type FormFieldOptionInput interface {
	pulumi.Input

	ToFormFieldOptionOutput() FormFieldOptionOutput
	ToFormFieldOptionOutputWithContext(ctx context.Context) FormFieldOptionOutput
}

func (*FormFieldOption) ElementType() reflect.Type {
	return reflect.TypeOf((**FormFieldOption)(nil)).Elem()
}

func (i *FormFieldOption) ToFormFieldOptionOutput() FormFieldOptionOutput {
	return i.ToFormFieldOptionOutputWithContext(context.Background())
}

func (i *FormFieldOption) ToFormFieldOptionOutputWithContext(ctx context.Context) FormFieldOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormFieldOptionOutput)
}

// FormFieldOptionArrayInput is an input type that accepts FormFieldOptionArray and FormFieldOptionArrayOutput values.
// You can construct a concrete instance of `FormFieldOptionArrayInput` via:
//
//	FormFieldOptionArray{ FormFieldOptionArgs{...} }
type FormFieldOptionArrayInput interface {
	pulumi.Input

	ToFormFieldOptionArrayOutput() FormFieldOptionArrayOutput
	ToFormFieldOptionArrayOutputWithContext(context.Context) FormFieldOptionArrayOutput
}

type FormFieldOptionArray []FormFieldOptionInput

func (FormFieldOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FormFieldOption)(nil)).Elem()
}

func (i FormFieldOptionArray) ToFormFieldOptionArrayOutput() FormFieldOptionArrayOutput {
	return i.ToFormFieldOptionArrayOutputWithContext(context.Background())
}

func (i FormFieldOptionArray) ToFormFieldOptionArrayOutputWithContext(ctx context.Context) FormFieldOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormFieldOptionArrayOutput)
}

// FormFieldOptionMapInput is an input type that accepts FormFieldOptionMap and FormFieldOptionMapOutput values.
// You can construct a concrete instance of `FormFieldOptionMapInput` via:
//
//	FormFieldOptionMap{ "key": FormFieldOptionArgs{...} }
type FormFieldOptionMapInput interface {
	pulumi.Input

	ToFormFieldOptionMapOutput() FormFieldOptionMapOutput
	ToFormFieldOptionMapOutputWithContext(context.Context) FormFieldOptionMapOutput
}

type FormFieldOptionMap map[string]FormFieldOptionInput

func (FormFieldOptionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FormFieldOption)(nil)).Elem()
}

func (i FormFieldOptionMap) ToFormFieldOptionMapOutput() FormFieldOptionMapOutput {
	return i.ToFormFieldOptionMapOutputWithContext(context.Background())
}

func (i FormFieldOptionMap) ToFormFieldOptionMapOutputWithContext(ctx context.Context) FormFieldOptionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormFieldOptionMapOutput)
}

type FormFieldOptionOutput struct{ *pulumi.OutputState }

func (FormFieldOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FormFieldOption)(nil)).Elem()
}

func (o FormFieldOptionOutput) ToFormFieldOptionOutput() FormFieldOptionOutput {
	return o
}

func (o FormFieldOptionOutput) ToFormFieldOptionOutputWithContext(ctx context.Context) FormFieldOptionOutput {
	return o
}

// The hex color of the form*field*option
func (o FormFieldOptionOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v *FormFieldOption) pulumi.StringOutput { return v.Color }).(pulumi.StringOutput)
}

// Value must be one of true or false
func (o FormFieldOptionOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v *FormFieldOption) pulumi.BoolOutput { return v.Default }).(pulumi.BoolOutput)
}

// The ID of the parent custom field
func (o FormFieldOptionOutput) FormFieldId() pulumi.StringOutput {
	return o.ApplyT(func(v *FormFieldOption) pulumi.StringOutput { return v.FormFieldId }).(pulumi.StringOutput)
}

// The position of the form*field*option
func (o FormFieldOptionOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *FormFieldOption) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

// The value of the form*field*option
func (o FormFieldOptionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *FormFieldOption) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

type FormFieldOptionArrayOutput struct{ *pulumi.OutputState }

func (FormFieldOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FormFieldOption)(nil)).Elem()
}

func (o FormFieldOptionArrayOutput) ToFormFieldOptionArrayOutput() FormFieldOptionArrayOutput {
	return o
}

func (o FormFieldOptionArrayOutput) ToFormFieldOptionArrayOutputWithContext(ctx context.Context) FormFieldOptionArrayOutput {
	return o
}

func (o FormFieldOptionArrayOutput) Index(i pulumi.IntInput) FormFieldOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FormFieldOption {
		return vs[0].([]*FormFieldOption)[vs[1].(int)]
	}).(FormFieldOptionOutput)
}

type FormFieldOptionMapOutput struct{ *pulumi.OutputState }

func (FormFieldOptionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FormFieldOption)(nil)).Elem()
}

func (o FormFieldOptionMapOutput) ToFormFieldOptionMapOutput() FormFieldOptionMapOutput {
	return o
}

func (o FormFieldOptionMapOutput) ToFormFieldOptionMapOutputWithContext(ctx context.Context) FormFieldOptionMapOutput {
	return o
}

func (o FormFieldOptionMapOutput) MapIndex(k pulumi.StringInput) FormFieldOptionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FormFieldOption {
		return vs[0].(map[string]*FormFieldOption)[vs[1].(string)]
	}).(FormFieldOptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FormFieldOptionInput)(nil)).Elem(), &FormFieldOption{})
	pulumi.RegisterInputType(reflect.TypeOf((*FormFieldOptionArrayInput)(nil)).Elem(), FormFieldOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FormFieldOptionMapInput)(nil)).Elem(), FormFieldOptionMap{})
	pulumi.RegisterOutputType(FormFieldOptionOutput{})
	pulumi.RegisterOutputType(FormFieldOptionArrayOutput{})
	pulumi.RegisterOutputType(FormFieldOptionMapOutput{})
}
