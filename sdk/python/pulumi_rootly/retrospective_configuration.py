# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['RetrospectiveConfigurationArgs', 'RetrospectiveConfiguration']

@pulumi.input_type
class RetrospectiveConfigurationArgs:
    def __init__(__self__, *,
                 group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_type_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 kind: Optional[pulumi.Input[str]] = None,
                 severity_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a RetrospectiveConfiguration resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] group_ids: Teams associated with the retrospective configuration.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_type_ids: Incident types associated with the retrospective configuration.
        :param pulumi.Input[str] kind: The kind of the retrospective configuration.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] severity_ids: Severities associated with the retrospective configuration.
        """
        if group_ids is not None:
            pulumi.set(__self__, "group_ids", group_ids)
        if incident_type_ids is not None:
            pulumi.set(__self__, "incident_type_ids", incident_type_ids)
        if kind is not None:
            pulumi.set(__self__, "kind", kind)
        if severity_ids is not None:
            pulumi.set(__self__, "severity_ids", severity_ids)

    @property
    @pulumi.getter(name="groupIds")
    def group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Teams associated with the retrospective configuration.
        """
        return pulumi.get(self, "group_ids")

    @group_ids.setter
    def group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "group_ids", value)

    @property
    @pulumi.getter(name="incidentTypeIds")
    def incident_type_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Incident types associated with the retrospective configuration.
        """
        return pulumi.get(self, "incident_type_ids")

    @incident_type_ids.setter
    def incident_type_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "incident_type_ids", value)

    @property
    @pulumi.getter
    def kind(self) -> Optional[pulumi.Input[str]]:
        """
        The kind of the retrospective configuration.
        """
        return pulumi.get(self, "kind")

    @kind.setter
    def kind(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "kind", value)

    @property
    @pulumi.getter(name="severityIds")
    def severity_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Severities associated with the retrospective configuration.
        """
        return pulumi.get(self, "severity_ids")

    @severity_ids.setter
    def severity_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "severity_ids", value)


@pulumi.input_type
class _RetrospectiveConfigurationState:
    def __init__(__self__, *,
                 group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_type_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 kind: Optional[pulumi.Input[str]] = None,
                 severity_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        Input properties used for looking up and filtering RetrospectiveConfiguration resources.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] group_ids: Teams associated with the retrospective configuration.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_type_ids: Incident types associated with the retrospective configuration.
        :param pulumi.Input[str] kind: The kind of the retrospective configuration.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] severity_ids: Severities associated with the retrospective configuration.
        """
        if group_ids is not None:
            pulumi.set(__self__, "group_ids", group_ids)
        if incident_type_ids is not None:
            pulumi.set(__self__, "incident_type_ids", incident_type_ids)
        if kind is not None:
            pulumi.set(__self__, "kind", kind)
        if severity_ids is not None:
            pulumi.set(__self__, "severity_ids", severity_ids)

    @property
    @pulumi.getter(name="groupIds")
    def group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Teams associated with the retrospective configuration.
        """
        return pulumi.get(self, "group_ids")

    @group_ids.setter
    def group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "group_ids", value)

    @property
    @pulumi.getter(name="incidentTypeIds")
    def incident_type_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Incident types associated with the retrospective configuration.
        """
        return pulumi.get(self, "incident_type_ids")

    @incident_type_ids.setter
    def incident_type_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "incident_type_ids", value)

    @property
    @pulumi.getter
    def kind(self) -> Optional[pulumi.Input[str]]:
        """
        The kind of the retrospective configuration.
        """
        return pulumi.get(self, "kind")

    @kind.setter
    def kind(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "kind", value)

    @property
    @pulumi.getter(name="severityIds")
    def severity_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Severities associated with the retrospective configuration.
        """
        return pulumi.get(self, "severity_ids")

    @severity_ids.setter
    def severity_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "severity_ids", value)


class RetrospectiveConfiguration(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_type_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 kind: Optional[pulumi.Input[str]] = None,
                 severity_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        Create a RetrospectiveConfiguration resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] group_ids: Teams associated with the retrospective configuration.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_type_ids: Incident types associated with the retrospective configuration.
        :param pulumi.Input[str] kind: The kind of the retrospective configuration.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] severity_ids: Severities associated with the retrospective configuration.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[RetrospectiveConfigurationArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a RetrospectiveConfiguration resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param RetrospectiveConfigurationArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RetrospectiveConfigurationArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_type_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 kind: Optional[pulumi.Input[str]] = None,
                 severity_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RetrospectiveConfigurationArgs.__new__(RetrospectiveConfigurationArgs)

            __props__.__dict__["group_ids"] = group_ids
            __props__.__dict__["incident_type_ids"] = incident_type_ids
            __props__.__dict__["kind"] = kind
            __props__.__dict__["severity_ids"] = severity_ids
        super(RetrospectiveConfiguration, __self__).__init__(
            'rootly:index/retrospectiveConfiguration:RetrospectiveConfiguration',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            incident_type_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            kind: Optional[pulumi.Input[str]] = None,
            severity_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None) -> 'RetrospectiveConfiguration':
        """
        Get an existing RetrospectiveConfiguration resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] group_ids: Teams associated with the retrospective configuration.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_type_ids: Incident types associated with the retrospective configuration.
        :param pulumi.Input[str] kind: The kind of the retrospective configuration.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] severity_ids: Severities associated with the retrospective configuration.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RetrospectiveConfigurationState.__new__(_RetrospectiveConfigurationState)

        __props__.__dict__["group_ids"] = group_ids
        __props__.__dict__["incident_type_ids"] = incident_type_ids
        __props__.__dict__["kind"] = kind
        __props__.__dict__["severity_ids"] = severity_ids
        return RetrospectiveConfiguration(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="groupIds")
    def group_ids(self) -> pulumi.Output[Sequence[str]]:
        """
        Teams associated with the retrospective configuration.
        """
        return pulumi.get(self, "group_ids")

    @property
    @pulumi.getter(name="incidentTypeIds")
    def incident_type_ids(self) -> pulumi.Output[Sequence[str]]:
        """
        Incident types associated with the retrospective configuration.
        """
        return pulumi.get(self, "incident_type_ids")

    @property
    @pulumi.getter
    def kind(self) -> pulumi.Output[str]:
        """
        The kind of the retrospective configuration.
        """
        return pulumi.get(self, "kind")

    @property
    @pulumi.getter(name="severityIds")
    def severity_ids(self) -> pulumi.Output[Sequence[str]]:
        """
        Severities associated with the retrospective configuration.
        """
        return pulumi.get(self, "severity_ids")

