# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['RoleArgs', 'Role']

@pulumi.input_type
class RoleArgs:
    def __init__(__self__, *,
                 api_keys_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 audits_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 billing_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 environments_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 form_fields_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 functionalities_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 groups_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_causes_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_feedbacks_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_permission_set_id: Optional[pulumi.Input[str]] = None,
                 incident_roles_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_types_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incidents_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 invitations_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 is_deletable: Optional[pulumi.Input[bool]] = None,
                 is_editable: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 playbooks_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 private_incidents_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 retrospective_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 roles_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 secrets_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 services_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 severities_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 slug: Optional[pulumi.Input[str]] = None,
                 status_pages_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 webhooks_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 workflows_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a Role resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] api_keys_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] audits_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] billing_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] environments_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] form_fields_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] functionalities_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] groups_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_causes_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_feedbacks_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[str] incident_permission_set_id: Associated incident permissions set.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_roles_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_types_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incidents_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] invitations_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[bool] is_deletable: Whether the role can be deleted.. Value must be one of true or false
        :param pulumi.Input[bool] is_editable: Whether the role can be edited.. Value must be one of true or false
        :param pulumi.Input[str] name: The role name.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] playbooks_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] private_incidents_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] retrospective_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] roles_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] secrets_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] services_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] severities_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[str] slug: The role slug.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] status_pages_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] webhooks_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] workflows_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        """
        if api_keys_permissions is not None:
            pulumi.set(__self__, "api_keys_permissions", api_keys_permissions)
        if audits_permissions is not None:
            pulumi.set(__self__, "audits_permissions", audits_permissions)
        if billing_permissions is not None:
            pulumi.set(__self__, "billing_permissions", billing_permissions)
        if environments_permissions is not None:
            pulumi.set(__self__, "environments_permissions", environments_permissions)
        if form_fields_permissions is not None:
            pulumi.set(__self__, "form_fields_permissions", form_fields_permissions)
        if functionalities_permissions is not None:
            pulumi.set(__self__, "functionalities_permissions", functionalities_permissions)
        if groups_permissions is not None:
            pulumi.set(__self__, "groups_permissions", groups_permissions)
        if incident_causes_permissions is not None:
            pulumi.set(__self__, "incident_causes_permissions", incident_causes_permissions)
        if incident_feedbacks_permissions is not None:
            pulumi.set(__self__, "incident_feedbacks_permissions", incident_feedbacks_permissions)
        if incident_permission_set_id is not None:
            pulumi.set(__self__, "incident_permission_set_id", incident_permission_set_id)
        if incident_roles_permissions is not None:
            pulumi.set(__self__, "incident_roles_permissions", incident_roles_permissions)
        if incident_types_permissions is not None:
            pulumi.set(__self__, "incident_types_permissions", incident_types_permissions)
        if incidents_permissions is not None:
            pulumi.set(__self__, "incidents_permissions", incidents_permissions)
        if invitations_permissions is not None:
            pulumi.set(__self__, "invitations_permissions", invitations_permissions)
        if is_deletable is not None:
            pulumi.set(__self__, "is_deletable", is_deletable)
        if is_editable is not None:
            pulumi.set(__self__, "is_editable", is_editable)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if playbooks_permissions is not None:
            pulumi.set(__self__, "playbooks_permissions", playbooks_permissions)
        if private_incidents_permissions is not None:
            pulumi.set(__self__, "private_incidents_permissions", private_incidents_permissions)
        if retrospective_permissions is not None:
            pulumi.set(__self__, "retrospective_permissions", retrospective_permissions)
        if roles_permissions is not None:
            pulumi.set(__self__, "roles_permissions", roles_permissions)
        if secrets_permissions is not None:
            pulumi.set(__self__, "secrets_permissions", secrets_permissions)
        if services_permissions is not None:
            pulumi.set(__self__, "services_permissions", services_permissions)
        if severities_permissions is not None:
            pulumi.set(__self__, "severities_permissions", severities_permissions)
        if slug is not None:
            pulumi.set(__self__, "slug", slug)
        if status_pages_permissions is not None:
            pulumi.set(__self__, "status_pages_permissions", status_pages_permissions)
        if webhooks_permissions is not None:
            pulumi.set(__self__, "webhooks_permissions", webhooks_permissions)
        if workflows_permissions is not None:
            pulumi.set(__self__, "workflows_permissions", workflows_permissions)

    @property
    @pulumi.getter(name="apiKeysPermissions")
    def api_keys_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "api_keys_permissions")

    @api_keys_permissions.setter
    def api_keys_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "api_keys_permissions", value)

    @property
    @pulumi.getter(name="auditsPermissions")
    def audits_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "audits_permissions")

    @audits_permissions.setter
    def audits_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "audits_permissions", value)

    @property
    @pulumi.getter(name="billingPermissions")
    def billing_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "billing_permissions")

    @billing_permissions.setter
    def billing_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "billing_permissions", value)

    @property
    @pulumi.getter(name="environmentsPermissions")
    def environments_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "environments_permissions")

    @environments_permissions.setter
    def environments_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "environments_permissions", value)

    @property
    @pulumi.getter(name="formFieldsPermissions")
    def form_fields_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "form_fields_permissions")

    @form_fields_permissions.setter
    def form_fields_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "form_fields_permissions", value)

    @property
    @pulumi.getter(name="functionalitiesPermissions")
    def functionalities_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "functionalities_permissions")

    @functionalities_permissions.setter
    def functionalities_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "functionalities_permissions", value)

    @property
    @pulumi.getter(name="groupsPermissions")
    def groups_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "groups_permissions")

    @groups_permissions.setter
    def groups_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "groups_permissions", value)

    @property
    @pulumi.getter(name="incidentCausesPermissions")
    def incident_causes_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "incident_causes_permissions")

    @incident_causes_permissions.setter
    def incident_causes_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "incident_causes_permissions", value)

    @property
    @pulumi.getter(name="incidentFeedbacksPermissions")
    def incident_feedbacks_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "incident_feedbacks_permissions")

    @incident_feedbacks_permissions.setter
    def incident_feedbacks_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "incident_feedbacks_permissions", value)

    @property
    @pulumi.getter(name="incidentPermissionSetId")
    def incident_permission_set_id(self) -> Optional[pulumi.Input[str]]:
        """
        Associated incident permissions set.
        """
        return pulumi.get(self, "incident_permission_set_id")

    @incident_permission_set_id.setter
    def incident_permission_set_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "incident_permission_set_id", value)

    @property
    @pulumi.getter(name="incidentRolesPermissions")
    def incident_roles_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "incident_roles_permissions")

    @incident_roles_permissions.setter
    def incident_roles_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "incident_roles_permissions", value)

    @property
    @pulumi.getter(name="incidentTypesPermissions")
    def incident_types_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "incident_types_permissions")

    @incident_types_permissions.setter
    def incident_types_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "incident_types_permissions", value)

    @property
    @pulumi.getter(name="incidentsPermissions")
    def incidents_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "incidents_permissions")

    @incidents_permissions.setter
    def incidents_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "incidents_permissions", value)

    @property
    @pulumi.getter(name="invitationsPermissions")
    def invitations_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "invitations_permissions")

    @invitations_permissions.setter
    def invitations_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "invitations_permissions", value)

    @property
    @pulumi.getter(name="isDeletable")
    def is_deletable(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether the role can be deleted.. Value must be one of true or false
        """
        return pulumi.get(self, "is_deletable")

    @is_deletable.setter
    def is_deletable(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_deletable", value)

    @property
    @pulumi.getter(name="isEditable")
    def is_editable(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether the role can be edited.. Value must be one of true or false
        """
        return pulumi.get(self, "is_editable")

    @is_editable.setter
    def is_editable(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_editable", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The role name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="playbooksPermissions")
    def playbooks_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "playbooks_permissions")

    @playbooks_permissions.setter
    def playbooks_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "playbooks_permissions", value)

    @property
    @pulumi.getter(name="privateIncidentsPermissions")
    def private_incidents_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "private_incidents_permissions")

    @private_incidents_permissions.setter
    def private_incidents_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "private_incidents_permissions", value)

    @property
    @pulumi.getter(name="retrospectivePermissions")
    def retrospective_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "retrospective_permissions")

    @retrospective_permissions.setter
    def retrospective_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "retrospective_permissions", value)

    @property
    @pulumi.getter(name="rolesPermissions")
    def roles_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "roles_permissions")

    @roles_permissions.setter
    def roles_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "roles_permissions", value)

    @property
    @pulumi.getter(name="secretsPermissions")
    def secrets_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "secrets_permissions")

    @secrets_permissions.setter
    def secrets_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "secrets_permissions", value)

    @property
    @pulumi.getter(name="servicesPermissions")
    def services_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "services_permissions")

    @services_permissions.setter
    def services_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "services_permissions", value)

    @property
    @pulumi.getter(name="severitiesPermissions")
    def severities_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "severities_permissions")

    @severities_permissions.setter
    def severities_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "severities_permissions", value)

    @property
    @pulumi.getter
    def slug(self) -> Optional[pulumi.Input[str]]:
        """
        The role slug.
        """
        return pulumi.get(self, "slug")

    @slug.setter
    def slug(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "slug", value)

    @property
    @pulumi.getter(name="statusPagesPermissions")
    def status_pages_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "status_pages_permissions")

    @status_pages_permissions.setter
    def status_pages_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "status_pages_permissions", value)

    @property
    @pulumi.getter(name="webhooksPermissions")
    def webhooks_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "webhooks_permissions")

    @webhooks_permissions.setter
    def webhooks_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "webhooks_permissions", value)

    @property
    @pulumi.getter(name="workflowsPermissions")
    def workflows_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "workflows_permissions")

    @workflows_permissions.setter
    def workflows_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "workflows_permissions", value)


@pulumi.input_type
class _RoleState:
    def __init__(__self__, *,
                 api_keys_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 audits_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 billing_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 environments_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 form_fields_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 functionalities_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 groups_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_causes_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_feedbacks_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_permission_set_id: Optional[pulumi.Input[str]] = None,
                 incident_roles_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_types_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incidents_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 invitations_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 is_deletable: Optional[pulumi.Input[bool]] = None,
                 is_editable: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 playbooks_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 private_incidents_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 retrospective_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 roles_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 secrets_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 services_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 severities_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 slug: Optional[pulumi.Input[str]] = None,
                 status_pages_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 webhooks_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 workflows_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        Input properties used for looking up and filtering Role resources.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] api_keys_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] audits_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] billing_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] environments_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] form_fields_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] functionalities_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] groups_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_causes_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_feedbacks_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[str] incident_permission_set_id: Associated incident permissions set.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_roles_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_types_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incidents_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] invitations_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[bool] is_deletable: Whether the role can be deleted.. Value must be one of true or false
        :param pulumi.Input[bool] is_editable: Whether the role can be edited.. Value must be one of true or false
        :param pulumi.Input[str] name: The role name.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] playbooks_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] private_incidents_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] retrospective_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] roles_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] secrets_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] services_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] severities_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[str] slug: The role slug.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] status_pages_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] webhooks_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] workflows_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        """
        if api_keys_permissions is not None:
            pulumi.set(__self__, "api_keys_permissions", api_keys_permissions)
        if audits_permissions is not None:
            pulumi.set(__self__, "audits_permissions", audits_permissions)
        if billing_permissions is not None:
            pulumi.set(__self__, "billing_permissions", billing_permissions)
        if environments_permissions is not None:
            pulumi.set(__self__, "environments_permissions", environments_permissions)
        if form_fields_permissions is not None:
            pulumi.set(__self__, "form_fields_permissions", form_fields_permissions)
        if functionalities_permissions is not None:
            pulumi.set(__self__, "functionalities_permissions", functionalities_permissions)
        if groups_permissions is not None:
            pulumi.set(__self__, "groups_permissions", groups_permissions)
        if incident_causes_permissions is not None:
            pulumi.set(__self__, "incident_causes_permissions", incident_causes_permissions)
        if incident_feedbacks_permissions is not None:
            pulumi.set(__self__, "incident_feedbacks_permissions", incident_feedbacks_permissions)
        if incident_permission_set_id is not None:
            pulumi.set(__self__, "incident_permission_set_id", incident_permission_set_id)
        if incident_roles_permissions is not None:
            pulumi.set(__self__, "incident_roles_permissions", incident_roles_permissions)
        if incident_types_permissions is not None:
            pulumi.set(__self__, "incident_types_permissions", incident_types_permissions)
        if incidents_permissions is not None:
            pulumi.set(__self__, "incidents_permissions", incidents_permissions)
        if invitations_permissions is not None:
            pulumi.set(__self__, "invitations_permissions", invitations_permissions)
        if is_deletable is not None:
            pulumi.set(__self__, "is_deletable", is_deletable)
        if is_editable is not None:
            pulumi.set(__self__, "is_editable", is_editable)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if playbooks_permissions is not None:
            pulumi.set(__self__, "playbooks_permissions", playbooks_permissions)
        if private_incidents_permissions is not None:
            pulumi.set(__self__, "private_incidents_permissions", private_incidents_permissions)
        if retrospective_permissions is not None:
            pulumi.set(__self__, "retrospective_permissions", retrospective_permissions)
        if roles_permissions is not None:
            pulumi.set(__self__, "roles_permissions", roles_permissions)
        if secrets_permissions is not None:
            pulumi.set(__self__, "secrets_permissions", secrets_permissions)
        if services_permissions is not None:
            pulumi.set(__self__, "services_permissions", services_permissions)
        if severities_permissions is not None:
            pulumi.set(__self__, "severities_permissions", severities_permissions)
        if slug is not None:
            pulumi.set(__self__, "slug", slug)
        if status_pages_permissions is not None:
            pulumi.set(__self__, "status_pages_permissions", status_pages_permissions)
        if webhooks_permissions is not None:
            pulumi.set(__self__, "webhooks_permissions", webhooks_permissions)
        if workflows_permissions is not None:
            pulumi.set(__self__, "workflows_permissions", workflows_permissions)

    @property
    @pulumi.getter(name="apiKeysPermissions")
    def api_keys_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "api_keys_permissions")

    @api_keys_permissions.setter
    def api_keys_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "api_keys_permissions", value)

    @property
    @pulumi.getter(name="auditsPermissions")
    def audits_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "audits_permissions")

    @audits_permissions.setter
    def audits_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "audits_permissions", value)

    @property
    @pulumi.getter(name="billingPermissions")
    def billing_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "billing_permissions")

    @billing_permissions.setter
    def billing_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "billing_permissions", value)

    @property
    @pulumi.getter(name="environmentsPermissions")
    def environments_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "environments_permissions")

    @environments_permissions.setter
    def environments_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "environments_permissions", value)

    @property
    @pulumi.getter(name="formFieldsPermissions")
    def form_fields_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "form_fields_permissions")

    @form_fields_permissions.setter
    def form_fields_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "form_fields_permissions", value)

    @property
    @pulumi.getter(name="functionalitiesPermissions")
    def functionalities_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "functionalities_permissions")

    @functionalities_permissions.setter
    def functionalities_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "functionalities_permissions", value)

    @property
    @pulumi.getter(name="groupsPermissions")
    def groups_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "groups_permissions")

    @groups_permissions.setter
    def groups_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "groups_permissions", value)

    @property
    @pulumi.getter(name="incidentCausesPermissions")
    def incident_causes_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "incident_causes_permissions")

    @incident_causes_permissions.setter
    def incident_causes_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "incident_causes_permissions", value)

    @property
    @pulumi.getter(name="incidentFeedbacksPermissions")
    def incident_feedbacks_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "incident_feedbacks_permissions")

    @incident_feedbacks_permissions.setter
    def incident_feedbacks_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "incident_feedbacks_permissions", value)

    @property
    @pulumi.getter(name="incidentPermissionSetId")
    def incident_permission_set_id(self) -> Optional[pulumi.Input[str]]:
        """
        Associated incident permissions set.
        """
        return pulumi.get(self, "incident_permission_set_id")

    @incident_permission_set_id.setter
    def incident_permission_set_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "incident_permission_set_id", value)

    @property
    @pulumi.getter(name="incidentRolesPermissions")
    def incident_roles_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "incident_roles_permissions")

    @incident_roles_permissions.setter
    def incident_roles_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "incident_roles_permissions", value)

    @property
    @pulumi.getter(name="incidentTypesPermissions")
    def incident_types_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "incident_types_permissions")

    @incident_types_permissions.setter
    def incident_types_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "incident_types_permissions", value)

    @property
    @pulumi.getter(name="incidentsPermissions")
    def incidents_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "incidents_permissions")

    @incidents_permissions.setter
    def incidents_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "incidents_permissions", value)

    @property
    @pulumi.getter(name="invitationsPermissions")
    def invitations_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "invitations_permissions")

    @invitations_permissions.setter
    def invitations_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "invitations_permissions", value)

    @property
    @pulumi.getter(name="isDeletable")
    def is_deletable(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether the role can be deleted.. Value must be one of true or false
        """
        return pulumi.get(self, "is_deletable")

    @is_deletable.setter
    def is_deletable(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_deletable", value)

    @property
    @pulumi.getter(name="isEditable")
    def is_editable(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether the role can be edited.. Value must be one of true or false
        """
        return pulumi.get(self, "is_editable")

    @is_editable.setter
    def is_editable(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_editable", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The role name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="playbooksPermissions")
    def playbooks_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "playbooks_permissions")

    @playbooks_permissions.setter
    def playbooks_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "playbooks_permissions", value)

    @property
    @pulumi.getter(name="privateIncidentsPermissions")
    def private_incidents_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "private_incidents_permissions")

    @private_incidents_permissions.setter
    def private_incidents_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "private_incidents_permissions", value)

    @property
    @pulumi.getter(name="retrospectivePermissions")
    def retrospective_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "retrospective_permissions")

    @retrospective_permissions.setter
    def retrospective_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "retrospective_permissions", value)

    @property
    @pulumi.getter(name="rolesPermissions")
    def roles_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "roles_permissions")

    @roles_permissions.setter
    def roles_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "roles_permissions", value)

    @property
    @pulumi.getter(name="secretsPermissions")
    def secrets_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "secrets_permissions")

    @secrets_permissions.setter
    def secrets_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "secrets_permissions", value)

    @property
    @pulumi.getter(name="servicesPermissions")
    def services_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "services_permissions")

    @services_permissions.setter
    def services_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "services_permissions", value)

    @property
    @pulumi.getter(name="severitiesPermissions")
    def severities_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "severities_permissions")

    @severities_permissions.setter
    def severities_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "severities_permissions", value)

    @property
    @pulumi.getter
    def slug(self) -> Optional[pulumi.Input[str]]:
        """
        The role slug.
        """
        return pulumi.get(self, "slug")

    @slug.setter
    def slug(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "slug", value)

    @property
    @pulumi.getter(name="statusPagesPermissions")
    def status_pages_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "status_pages_permissions")

    @status_pages_permissions.setter
    def status_pages_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "status_pages_permissions", value)

    @property
    @pulumi.getter(name="webhooksPermissions")
    def webhooks_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "webhooks_permissions")

    @webhooks_permissions.setter
    def webhooks_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "webhooks_permissions", value)

    @property
    @pulumi.getter(name="workflowsPermissions")
    def workflows_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "workflows_permissions")

    @workflows_permissions.setter
    def workflows_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "workflows_permissions", value)


class Role(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 api_keys_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 audits_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 billing_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 environments_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 form_fields_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 functionalities_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 groups_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_causes_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_feedbacks_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_permission_set_id: Optional[pulumi.Input[str]] = None,
                 incident_roles_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_types_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incidents_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 invitations_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 is_deletable: Optional[pulumi.Input[bool]] = None,
                 is_editable: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 playbooks_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 private_incidents_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 retrospective_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 roles_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 secrets_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 services_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 severities_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 slug: Optional[pulumi.Input[str]] = None,
                 status_pages_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 webhooks_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 workflows_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        Create a Role resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] api_keys_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] audits_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] billing_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] environments_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] form_fields_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] functionalities_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] groups_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_causes_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_feedbacks_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[str] incident_permission_set_id: Associated incident permissions set.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_roles_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_types_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incidents_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] invitations_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[bool] is_deletable: Whether the role can be deleted.. Value must be one of true or false
        :param pulumi.Input[bool] is_editable: Whether the role can be edited.. Value must be one of true or false
        :param pulumi.Input[str] name: The role name.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] playbooks_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] private_incidents_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] retrospective_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] roles_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] secrets_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] services_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] severities_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[str] slug: The role slug.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] status_pages_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] webhooks_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] workflows_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[RoleArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a Role resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param RoleArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RoleArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 api_keys_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 audits_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 billing_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 environments_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 form_fields_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 functionalities_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 groups_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_causes_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_feedbacks_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_permission_set_id: Optional[pulumi.Input[str]] = None,
                 incident_roles_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incident_types_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 incidents_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 invitations_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 is_deletable: Optional[pulumi.Input[bool]] = None,
                 is_editable: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 playbooks_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 private_incidents_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 retrospective_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 roles_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 secrets_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 services_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 severities_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 slug: Optional[pulumi.Input[str]] = None,
                 status_pages_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 webhooks_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 workflows_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RoleArgs.__new__(RoleArgs)

            __props__.__dict__["api_keys_permissions"] = api_keys_permissions
            __props__.__dict__["audits_permissions"] = audits_permissions
            __props__.__dict__["billing_permissions"] = billing_permissions
            __props__.__dict__["environments_permissions"] = environments_permissions
            __props__.__dict__["form_fields_permissions"] = form_fields_permissions
            __props__.__dict__["functionalities_permissions"] = functionalities_permissions
            __props__.__dict__["groups_permissions"] = groups_permissions
            __props__.__dict__["incident_causes_permissions"] = incident_causes_permissions
            __props__.__dict__["incident_feedbacks_permissions"] = incident_feedbacks_permissions
            __props__.__dict__["incident_permission_set_id"] = incident_permission_set_id
            __props__.__dict__["incident_roles_permissions"] = incident_roles_permissions
            __props__.__dict__["incident_types_permissions"] = incident_types_permissions
            __props__.__dict__["incidents_permissions"] = incidents_permissions
            __props__.__dict__["invitations_permissions"] = invitations_permissions
            __props__.__dict__["is_deletable"] = is_deletable
            __props__.__dict__["is_editable"] = is_editable
            __props__.__dict__["name"] = name
            __props__.__dict__["playbooks_permissions"] = playbooks_permissions
            __props__.__dict__["private_incidents_permissions"] = private_incidents_permissions
            __props__.__dict__["retrospective_permissions"] = retrospective_permissions
            __props__.__dict__["roles_permissions"] = roles_permissions
            __props__.__dict__["secrets_permissions"] = secrets_permissions
            __props__.__dict__["services_permissions"] = services_permissions
            __props__.__dict__["severities_permissions"] = severities_permissions
            __props__.__dict__["slug"] = slug
            __props__.__dict__["status_pages_permissions"] = status_pages_permissions
            __props__.__dict__["webhooks_permissions"] = webhooks_permissions
            __props__.__dict__["workflows_permissions"] = workflows_permissions
        super(Role, __self__).__init__(
            'rootly:index/role:Role',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            api_keys_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            audits_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            billing_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            environments_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            form_fields_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            functionalities_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            groups_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            incident_causes_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            incident_feedbacks_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            incident_permission_set_id: Optional[pulumi.Input[str]] = None,
            incident_roles_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            incident_types_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            incidents_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            invitations_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            is_deletable: Optional[pulumi.Input[bool]] = None,
            is_editable: Optional[pulumi.Input[bool]] = None,
            name: Optional[pulumi.Input[str]] = None,
            playbooks_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            private_incidents_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            retrospective_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            roles_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            secrets_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            services_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            severities_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            slug: Optional[pulumi.Input[str]] = None,
            status_pages_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            webhooks_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            workflows_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None) -> 'Role':
        """
        Get an existing Role resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] api_keys_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] audits_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] billing_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] environments_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] form_fields_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] functionalities_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] groups_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_causes_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_feedbacks_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[str] incident_permission_set_id: Associated incident permissions set.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_roles_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incident_types_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] incidents_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] invitations_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[bool] is_deletable: Whether the role can be deleted.. Value must be one of true or false
        :param pulumi.Input[bool] is_editable: Whether the role can be edited.. Value must be one of true or false
        :param pulumi.Input[str] name: The role name.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] playbooks_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] private_incidents_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] retrospective_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] roles_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] secrets_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] services_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] severities_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[str] slug: The role slug.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] status_pages_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] webhooks_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] workflows_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RoleState.__new__(_RoleState)

        __props__.__dict__["api_keys_permissions"] = api_keys_permissions
        __props__.__dict__["audits_permissions"] = audits_permissions
        __props__.__dict__["billing_permissions"] = billing_permissions
        __props__.__dict__["environments_permissions"] = environments_permissions
        __props__.__dict__["form_fields_permissions"] = form_fields_permissions
        __props__.__dict__["functionalities_permissions"] = functionalities_permissions
        __props__.__dict__["groups_permissions"] = groups_permissions
        __props__.__dict__["incident_causes_permissions"] = incident_causes_permissions
        __props__.__dict__["incident_feedbacks_permissions"] = incident_feedbacks_permissions
        __props__.__dict__["incident_permission_set_id"] = incident_permission_set_id
        __props__.__dict__["incident_roles_permissions"] = incident_roles_permissions
        __props__.__dict__["incident_types_permissions"] = incident_types_permissions
        __props__.__dict__["incidents_permissions"] = incidents_permissions
        __props__.__dict__["invitations_permissions"] = invitations_permissions
        __props__.__dict__["is_deletable"] = is_deletable
        __props__.__dict__["is_editable"] = is_editable
        __props__.__dict__["name"] = name
        __props__.__dict__["playbooks_permissions"] = playbooks_permissions
        __props__.__dict__["private_incidents_permissions"] = private_incidents_permissions
        __props__.__dict__["retrospective_permissions"] = retrospective_permissions
        __props__.__dict__["roles_permissions"] = roles_permissions
        __props__.__dict__["secrets_permissions"] = secrets_permissions
        __props__.__dict__["services_permissions"] = services_permissions
        __props__.__dict__["severities_permissions"] = severities_permissions
        __props__.__dict__["slug"] = slug
        __props__.__dict__["status_pages_permissions"] = status_pages_permissions
        __props__.__dict__["webhooks_permissions"] = webhooks_permissions
        __props__.__dict__["workflows_permissions"] = workflows_permissions
        return Role(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="apiKeysPermissions")
    def api_keys_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "api_keys_permissions")

    @property
    @pulumi.getter(name="auditsPermissions")
    def audits_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "audits_permissions")

    @property
    @pulumi.getter(name="billingPermissions")
    def billing_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "billing_permissions")

    @property
    @pulumi.getter(name="environmentsPermissions")
    def environments_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "environments_permissions")

    @property
    @pulumi.getter(name="formFieldsPermissions")
    def form_fields_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "form_fields_permissions")

    @property
    @pulumi.getter(name="functionalitiesPermissions")
    def functionalities_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "functionalities_permissions")

    @property
    @pulumi.getter(name="groupsPermissions")
    def groups_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "groups_permissions")

    @property
    @pulumi.getter(name="incidentCausesPermissions")
    def incident_causes_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "incident_causes_permissions")

    @property
    @pulumi.getter(name="incidentFeedbacksPermissions")
    def incident_feedbacks_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "incident_feedbacks_permissions")

    @property
    @pulumi.getter(name="incidentPermissionSetId")
    def incident_permission_set_id(self) -> pulumi.Output[str]:
        """
        Associated incident permissions set.
        """
        return pulumi.get(self, "incident_permission_set_id")

    @property
    @pulumi.getter(name="incidentRolesPermissions")
    def incident_roles_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "incident_roles_permissions")

    @property
    @pulumi.getter(name="incidentTypesPermissions")
    def incident_types_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "incident_types_permissions")

    @property
    @pulumi.getter(name="incidentsPermissions")
    def incidents_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "incidents_permissions")

    @property
    @pulumi.getter(name="invitationsPermissions")
    def invitations_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "invitations_permissions")

    @property
    @pulumi.getter(name="isDeletable")
    def is_deletable(self) -> pulumi.Output[bool]:
        """
        Whether the role can be deleted.. Value must be one of true or false
        """
        return pulumi.get(self, "is_deletable")

    @property
    @pulumi.getter(name="isEditable")
    def is_editable(self) -> pulumi.Output[bool]:
        """
        Whether the role can be edited.. Value must be one of true or false
        """
        return pulumi.get(self, "is_editable")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The role name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="playbooksPermissions")
    def playbooks_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "playbooks_permissions")

    @property
    @pulumi.getter(name="privateIncidentsPermissions")
    def private_incidents_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "private_incidents_permissions")

    @property
    @pulumi.getter(name="retrospectivePermissions")
    def retrospective_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "retrospective_permissions")

    @property
    @pulumi.getter(name="rolesPermissions")
    def roles_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "roles_permissions")

    @property
    @pulumi.getter(name="secretsPermissions")
    def secrets_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "secrets_permissions")

    @property
    @pulumi.getter(name="servicesPermissions")
    def services_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "services_permissions")

    @property
    @pulumi.getter(name="severitiesPermissions")
    def severities_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "severities_permissions")

    @property
    @pulumi.getter
    def slug(self) -> pulumi.Output[str]:
        """
        The role slug.
        """
        return pulumi.get(self, "slug")

    @property
    @pulumi.getter(name="statusPagesPermissions")
    def status_pages_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "status_pages_permissions")

    @property
    @pulumi.getter(name="webhooksPermissions")
    def webhooks_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "webhooks_permissions")

    @property
    @pulumi.getter(name="workflowsPermissions")
    def workflows_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "workflows_permissions")

