# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetFormSetConditionResult',
    'AwaitableGetFormSetConditionResult',
    'get_form_set_condition',
    'get_form_set_condition_output',
]

@pulumi.output_type
class GetFormSetConditionResult:
    """
    A collection of values returned by getFormSetCondition.
    """
    def __init__(__self__, form_field_id=None, id=None):
        if form_field_id and not isinstance(form_field_id, str):
            raise TypeError("Expected argument 'form_field_id' to be a str")
        pulumi.set(__self__, "form_field_id", form_field_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="formFieldId")
    def form_field_id(self) -> str:
        return pulumi.get(self, "form_field_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetFormSetConditionResult(GetFormSetConditionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetFormSetConditionResult(
            form_field_id=self.form_field_id,
            id=self.id)


def get_form_set_condition(form_field_id: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetFormSetConditionResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['formFieldId'] = form_field_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('rootly:index/getFormSetCondition:getFormSetCondition', __args__, opts=opts, typ=GetFormSetConditionResult).value

    return AwaitableGetFormSetConditionResult(
        form_field_id=pulumi.get(__ret__, 'form_field_id'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_form_set_condition)
def get_form_set_condition_output(form_field_id: Optional[pulumi.Input[Optional[str]]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetFormSetConditionResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
