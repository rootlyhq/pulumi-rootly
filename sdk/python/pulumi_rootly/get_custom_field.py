# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetCustomFieldResult',
    'AwaitableGetCustomFieldResult',
    'get_custom_field',
    'get_custom_field_output',
]

@pulumi.output_type
class GetCustomFieldResult:
    """
    A collection of values returned by getCustomField.
    """
    def __init__(__self__, created_at=None, enabled=None, id=None, kind=None, label=None, slug=None):
        if created_at and not isinstance(created_at, dict):
            raise TypeError("Expected argument 'created_at' to be a dict")
        pulumi.set(__self__, "created_at", created_at)
        if enabled and not isinstance(enabled, bool):
            raise TypeError("Expected argument 'enabled' to be a bool")
        pulumi.set(__self__, "enabled", enabled)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if kind and not isinstance(kind, str):
            raise TypeError("Expected argument 'kind' to be a str")
        pulumi.set(__self__, "kind", kind)
        if label and not isinstance(label, str):
            raise TypeError("Expected argument 'label' to be a str")
        pulumi.set(__self__, "label", label)
        if slug and not isinstance(slug, str):
            raise TypeError("Expected argument 'slug' to be a str")
        pulumi.set(__self__, "slug", slug)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[Mapping[str, str]]:
        """
        Filter by date range using 'lt' and 'gt'.
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter
    def enabled(self) -> Optional[bool]:
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def kind(self) -> str:
        return pulumi.get(self, "kind")

    @property
    @pulumi.getter
    def label(self) -> str:
        return pulumi.get(self, "label")

    @property
    @pulumi.getter
    def slug(self) -> str:
        return pulumi.get(self, "slug")


class AwaitableGetCustomFieldResult(GetCustomFieldResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCustomFieldResult(
            created_at=self.created_at,
            enabled=self.enabled,
            id=self.id,
            kind=self.kind,
            label=self.label,
            slug=self.slug)


def get_custom_field(created_at: Optional[Mapping[str, str]] = None,
                     enabled: Optional[bool] = None,
                     kind: Optional[str] = None,
                     label: Optional[str] = None,
                     slug: Optional[str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCustomFieldResult:
    """
    DEPRECATED: Please use `form_field` data source instead.

    ## Example Usage


    :param Mapping[str, str] created_at: Filter by date range using 'lt' and 'gt'.
    """
    __args__ = dict()
    __args__['createdAt'] = created_at
    __args__['enabled'] = enabled
    __args__['kind'] = kind
    __args__['label'] = label
    __args__['slug'] = slug
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('rootly:index/getCustomField:getCustomField', __args__, opts=opts, typ=GetCustomFieldResult).value

    return AwaitableGetCustomFieldResult(
        created_at=pulumi.get(__ret__, 'created_at'),
        enabled=pulumi.get(__ret__, 'enabled'),
        id=pulumi.get(__ret__, 'id'),
        kind=pulumi.get(__ret__, 'kind'),
        label=pulumi.get(__ret__, 'label'),
        slug=pulumi.get(__ret__, 'slug'))


@_utilities.lift_output_func(get_custom_field)
def get_custom_field_output(created_at: Optional[pulumi.Input[Optional[Mapping[str, str]]]] = None,
                            enabled: Optional[pulumi.Input[Optional[bool]]] = None,
                            kind: Optional[pulumi.Input[Optional[str]]] = None,
                            label: Optional[pulumi.Input[Optional[str]]] = None,
                            slug: Optional[pulumi.Input[Optional[str]]] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetCustomFieldResult]:
    """
    DEPRECATED: Please use `form_field` data source instead.

    ## Example Usage


    :param Mapping[str, str] created_at: Filter by date range using 'lt' and 'gt'.
    """
    ...
