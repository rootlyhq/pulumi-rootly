# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['CustomFieldArgs', 'CustomField']

@pulumi.input_type
class CustomFieldArgs:
    def __init__(__self__, *,
                 label: pulumi.Input[str],
                 default: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 enabled: Optional[pulumi.Input[bool]] = None,
                 kind: Optional[pulumi.Input[str]] = None,
                 position: Optional[pulumi.Input[int]] = None,
                 requireds: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 showns: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 slug: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a CustomField resource.
        :param pulumi.Input[str] label: The name of the custom_field
        :param pulumi.Input[str] default: The default value for text field kinds.
        :param pulumi.Input[str] description: The description of the custom_field
        :param pulumi.Input[str] kind: The kind of the custom_field
        :param pulumi.Input[int] position: The position of the custom_field
        :param pulumi.Input[str] slug: The slug of the custom_field
        """
        pulumi.set(__self__, "label", label)
        if default is not None:
            pulumi.set(__self__, "default", default)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enabled is not None:
            pulumi.set(__self__, "enabled", enabled)
        if kind is not None:
            pulumi.set(__self__, "kind", kind)
        if position is not None:
            pulumi.set(__self__, "position", position)
        if requireds is not None:
            pulumi.set(__self__, "requireds", requireds)
        if showns is not None:
            pulumi.set(__self__, "showns", showns)
        if slug is not None:
            pulumi.set(__self__, "slug", slug)

    @property
    @pulumi.getter
    def label(self) -> pulumi.Input[str]:
        """
        The name of the custom_field
        """
        return pulumi.get(self, "label")

    @label.setter
    def label(self, value: pulumi.Input[str]):
        pulumi.set(self, "label", value)

    @property
    @pulumi.getter
    def default(self) -> Optional[pulumi.Input[str]]:
        """
        The default value for text field kinds.
        """
        return pulumi.get(self, "default")

    @default.setter
    def default(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "default", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the custom_field
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def enabled(self) -> Optional[pulumi.Input[bool]]:
        return pulumi.get(self, "enabled")

    @enabled.setter
    def enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enabled", value)

    @property
    @pulumi.getter
    def kind(self) -> Optional[pulumi.Input[str]]:
        """
        The kind of the custom_field
        """
        return pulumi.get(self, "kind")

    @kind.setter
    def kind(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "kind", value)

    @property
    @pulumi.getter
    def position(self) -> Optional[pulumi.Input[int]]:
        """
        The position of the custom_field
        """
        return pulumi.get(self, "position")

    @position.setter
    def position(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "position", value)

    @property
    @pulumi.getter
    def requireds(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "requireds")

    @requireds.setter
    def requireds(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "requireds", value)

    @property
    @pulumi.getter
    def showns(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "showns")

    @showns.setter
    def showns(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "showns", value)

    @property
    @pulumi.getter
    def slug(self) -> Optional[pulumi.Input[str]]:
        """
        The slug of the custom_field
        """
        return pulumi.get(self, "slug")

    @slug.setter
    def slug(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "slug", value)


@pulumi.input_type
class _CustomFieldState:
    def __init__(__self__, *,
                 default: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 enabled: Optional[pulumi.Input[bool]] = None,
                 kind: Optional[pulumi.Input[str]] = None,
                 label: Optional[pulumi.Input[str]] = None,
                 position: Optional[pulumi.Input[int]] = None,
                 requireds: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 showns: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 slug: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering CustomField resources.
        :param pulumi.Input[str] default: The default value for text field kinds.
        :param pulumi.Input[str] description: The description of the custom_field
        :param pulumi.Input[str] kind: The kind of the custom_field
        :param pulumi.Input[str] label: The name of the custom_field
        :param pulumi.Input[int] position: The position of the custom_field
        :param pulumi.Input[str] slug: The slug of the custom_field
        """
        if default is not None:
            pulumi.set(__self__, "default", default)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enabled is not None:
            pulumi.set(__self__, "enabled", enabled)
        if kind is not None:
            pulumi.set(__self__, "kind", kind)
        if label is not None:
            pulumi.set(__self__, "label", label)
        if position is not None:
            pulumi.set(__self__, "position", position)
        if requireds is not None:
            pulumi.set(__self__, "requireds", requireds)
        if showns is not None:
            pulumi.set(__self__, "showns", showns)
        if slug is not None:
            pulumi.set(__self__, "slug", slug)

    @property
    @pulumi.getter
    def default(self) -> Optional[pulumi.Input[str]]:
        """
        The default value for text field kinds.
        """
        return pulumi.get(self, "default")

    @default.setter
    def default(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "default", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the custom_field
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def enabled(self) -> Optional[pulumi.Input[bool]]:
        return pulumi.get(self, "enabled")

    @enabled.setter
    def enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enabled", value)

    @property
    @pulumi.getter
    def kind(self) -> Optional[pulumi.Input[str]]:
        """
        The kind of the custom_field
        """
        return pulumi.get(self, "kind")

    @kind.setter
    def kind(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "kind", value)

    @property
    @pulumi.getter
    def label(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the custom_field
        """
        return pulumi.get(self, "label")

    @label.setter
    def label(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "label", value)

    @property
    @pulumi.getter
    def position(self) -> Optional[pulumi.Input[int]]:
        """
        The position of the custom_field
        """
        return pulumi.get(self, "position")

    @position.setter
    def position(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "position", value)

    @property
    @pulumi.getter
    def requireds(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "requireds")

    @requireds.setter
    def requireds(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "requireds", value)

    @property
    @pulumi.getter
    def showns(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "showns")

    @showns.setter
    def showns(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "showns", value)

    @property
    @pulumi.getter
    def slug(self) -> Optional[pulumi.Input[str]]:
        """
        The slug of the custom_field
        """
        return pulumi.get(self, "slug")

    @slug.setter
    def slug(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "slug", value)


class CustomField(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 default: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 enabled: Optional[pulumi.Input[bool]] = None,
                 kind: Optional[pulumi.Input[str]] = None,
                 label: Optional[pulumi.Input[str]] = None,
                 position: Optional[pulumi.Input[int]] = None,
                 requireds: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 showns: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 slug: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        DEPRECATED: Please use `FormField` resource instead.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] default: The default value for text field kinds.
        :param pulumi.Input[str] description: The description of the custom_field
        :param pulumi.Input[str] kind: The kind of the custom_field
        :param pulumi.Input[str] label: The name of the custom_field
        :param pulumi.Input[int] position: The position of the custom_field
        :param pulumi.Input[str] slug: The slug of the custom_field
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CustomFieldArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        DEPRECATED: Please use `FormField` resource instead.

        :param str resource_name: The name of the resource.
        :param CustomFieldArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CustomFieldArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 default: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 enabled: Optional[pulumi.Input[bool]] = None,
                 kind: Optional[pulumi.Input[str]] = None,
                 label: Optional[pulumi.Input[str]] = None,
                 position: Optional[pulumi.Input[int]] = None,
                 requireds: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 showns: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 slug: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CustomFieldArgs.__new__(CustomFieldArgs)

            __props__.__dict__["default"] = default
            __props__.__dict__["description"] = description
            __props__.__dict__["enabled"] = enabled
            __props__.__dict__["kind"] = kind
            if label is None and not opts.urn:
                raise TypeError("Missing required property 'label'")
            __props__.__dict__["label"] = label
            __props__.__dict__["position"] = position
            __props__.__dict__["requireds"] = requireds
            __props__.__dict__["showns"] = showns
            __props__.__dict__["slug"] = slug
        super(CustomField, __self__).__init__(
            'rootly:index/customField:CustomField',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            default: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            enabled: Optional[pulumi.Input[bool]] = None,
            kind: Optional[pulumi.Input[str]] = None,
            label: Optional[pulumi.Input[str]] = None,
            position: Optional[pulumi.Input[int]] = None,
            requireds: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            showns: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            slug: Optional[pulumi.Input[str]] = None) -> 'CustomField':
        """
        Get an existing CustomField resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] default: The default value for text field kinds.
        :param pulumi.Input[str] description: The description of the custom_field
        :param pulumi.Input[str] kind: The kind of the custom_field
        :param pulumi.Input[str] label: The name of the custom_field
        :param pulumi.Input[int] position: The position of the custom_field
        :param pulumi.Input[str] slug: The slug of the custom_field
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CustomFieldState.__new__(_CustomFieldState)

        __props__.__dict__["default"] = default
        __props__.__dict__["description"] = description
        __props__.__dict__["enabled"] = enabled
        __props__.__dict__["kind"] = kind
        __props__.__dict__["label"] = label
        __props__.__dict__["position"] = position
        __props__.__dict__["requireds"] = requireds
        __props__.__dict__["showns"] = showns
        __props__.__dict__["slug"] = slug
        return CustomField(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def default(self) -> pulumi.Output[str]:
        """
        The default value for text field kinds.
        """
        return pulumi.get(self, "default")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[str]:
        """
        The description of the custom_field
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def enabled(self) -> pulumi.Output[Optional[bool]]:
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter
    def kind(self) -> pulumi.Output[str]:
        """
        The kind of the custom_field
        """
        return pulumi.get(self, "kind")

    @property
    @pulumi.getter
    def label(self) -> pulumi.Output[str]:
        """
        The name of the custom_field
        """
        return pulumi.get(self, "label")

    @property
    @pulumi.getter
    def position(self) -> pulumi.Output[int]:
        """
        The position of the custom_field
        """
        return pulumi.get(self, "position")

    @property
    @pulumi.getter
    def requireds(self) -> pulumi.Output[Sequence[str]]:
        return pulumi.get(self, "requireds")

    @property
    @pulumi.getter
    def showns(self) -> pulumi.Output[Sequence[str]]:
        return pulumi.get(self, "showns")

    @property
    @pulumi.getter
    def slug(self) -> pulumi.Output[str]:
        """
        The slug of the custom_field
        """
        return pulumi.get(self, "slug")

