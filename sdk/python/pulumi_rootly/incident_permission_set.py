# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['IncidentPermissionSetArgs', 'IncidentPermissionSet']

@pulumi.input_type
class IncidentPermissionSetArgs:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 private_incident_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 public_incident_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 slug: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a IncidentPermissionSet resource.
        :param pulumi.Input[str] description: The incident permission set description.
        :param pulumi.Input[str] name: The incident permission set name.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] private_incident_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] public_incident_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[str] slug: The incident permission set slug.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if private_incident_permissions is not None:
            pulumi.set(__self__, "private_incident_permissions", private_incident_permissions)
        if public_incident_permissions is not None:
            pulumi.set(__self__, "public_incident_permissions", public_incident_permissions)
        if slug is not None:
            pulumi.set(__self__, "slug", slug)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The incident permission set description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The incident permission set name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="privateIncidentPermissions")
    def private_incident_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "private_incident_permissions")

    @private_incident_permissions.setter
    def private_incident_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "private_incident_permissions", value)

    @property
    @pulumi.getter(name="publicIncidentPermissions")
    def public_incident_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "public_incident_permissions")

    @public_incident_permissions.setter
    def public_incident_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "public_incident_permissions", value)

    @property
    @pulumi.getter
    def slug(self) -> Optional[pulumi.Input[str]]:
        """
        The incident permission set slug.
        """
        return pulumi.get(self, "slug")

    @slug.setter
    def slug(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "slug", value)


@pulumi.input_type
class _IncidentPermissionSetState:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 private_incident_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 public_incident_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 slug: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering IncidentPermissionSet resources.
        :param pulumi.Input[str] description: The incident permission set description.
        :param pulumi.Input[str] name: The incident permission set name.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] private_incident_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] public_incident_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[str] slug: The incident permission set slug.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if private_incident_permissions is not None:
            pulumi.set(__self__, "private_incident_permissions", private_incident_permissions)
        if public_incident_permissions is not None:
            pulumi.set(__self__, "public_incident_permissions", public_incident_permissions)
        if slug is not None:
            pulumi.set(__self__, "slug", slug)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The incident permission set description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The incident permission set name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="privateIncidentPermissions")
    def private_incident_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "private_incident_permissions")

    @private_incident_permissions.setter
    def private_incident_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "private_incident_permissions", value)

    @property
    @pulumi.getter(name="publicIncidentPermissions")
    def public_incident_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "public_incident_permissions")

    @public_incident_permissions.setter
    def public_incident_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "public_incident_permissions", value)

    @property
    @pulumi.getter
    def slug(self) -> Optional[pulumi.Input[str]]:
        """
        The incident permission set slug.
        """
        return pulumi.get(self, "slug")

    @slug.setter
    def slug(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "slug", value)


class IncidentPermissionSet(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 private_incident_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 public_incident_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 slug: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a IncidentPermissionSet resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The incident permission set description.
        :param pulumi.Input[str] name: The incident permission set name.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] private_incident_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] public_incident_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[str] slug: The incident permission set slug.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[IncidentPermissionSetArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a IncidentPermissionSet resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param IncidentPermissionSetArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IncidentPermissionSetArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 private_incident_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 public_incident_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 slug: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IncidentPermissionSetArgs.__new__(IncidentPermissionSetArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["name"] = name
            __props__.__dict__["private_incident_permissions"] = private_incident_permissions
            __props__.__dict__["public_incident_permissions"] = public_incident_permissions
            __props__.__dict__["slug"] = slug
        super(IncidentPermissionSet, __self__).__init__(
            'rootly:index/incidentPermissionSet:IncidentPermissionSet',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            description: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            private_incident_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            public_incident_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            slug: Optional[pulumi.Input[str]] = None) -> 'IncidentPermissionSet':
        """
        Get an existing IncidentPermissionSet resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The incident permission set description.
        :param pulumi.Input[str] name: The incident permission set name.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] private_incident_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] public_incident_permissions: Value must be one of `create`, `read`, `update`, `delete`.
        :param pulumi.Input[str] slug: The incident permission set slug.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IncidentPermissionSetState.__new__(_IncidentPermissionSetState)

        __props__.__dict__["description"] = description
        __props__.__dict__["name"] = name
        __props__.__dict__["private_incident_permissions"] = private_incident_permissions
        __props__.__dict__["public_incident_permissions"] = public_incident_permissions
        __props__.__dict__["slug"] = slug
        return IncidentPermissionSet(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[str]:
        """
        The incident permission set description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The incident permission set name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="privateIncidentPermissions")
    def private_incident_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "private_incident_permissions")

    @property
    @pulumi.getter(name="publicIncidentPermissions")
    def public_incident_permissions(self) -> pulumi.Output[Sequence[str]]:
        """
        Value must be one of `create`, `read`, `update`, `delete`.
        """
        return pulumi.get(self, "public_incident_permissions")

    @property
    @pulumi.getter
    def slug(self) -> pulumi.Output[str]:
        """
        The incident permission set slug.
        """
        return pulumi.get(self, "slug")

